{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stemmer"]},"docs":[{"location":"","title":"\ud83c\udf78 TODO","text":""},{"location":"#blog","title":"Blog","text":"<ul> <li> \u5b57\u4f53\u538b\u7f29\u7ec8\u6781\u65b9\u6cd5</li> <li> \u6574\u7406Fancybox\u8df3\u8fc7\u56fe\u7247\u6e32\u67d3</li> <li> \u52a0\u5165\u8bc4\u8bba\u7cfb\u7edf</li> <li> \u66f4\u65b0\u4e2a\u4eba\u4ecb\u7ecd</li> <li> \u56fa\u6001\u786c\u76d8</li> </ul> <p>Artemllo</p>"},{"location":"#note","title":"Note","text":"<ul> <li> material\u914d\u7f6e</li> <li> \u6574\u7406Fancybox\u8df3\u8fc7\u56fe\u7247\u6e32\u67d3</li> <li> \u5b57\u4f53\u538b\u7f29\u65b9\u6cd5\u79fb\u5230\u524d\u7aef</li> <li> \u5206\u7c7b\u95ee\u9898\u3001\u56de\u5f52\u95ee\u9898\u8bc4\u4ef7\u6307\u6807</li> <li> refind\u5f00\u673a\u7cfb\u7edf\u9009\u62e9</li> <li> Typora\u6837\u5f0f</li> </ul>"},{"location":"#gallery","title":"Gallery","text":"<ul> <li> gallery\u56fe\u7247\u4f7f\u7528gitee\u4e0a\u4f20\uff0c\u53cc\u7ebf\u90e8\u7f72</li> </ul> <p>\u535a\u5ba2\u4e3b\u9898\uff1a</p> <ol> <li>note\uff1a\u5305\u542b\u7b14\u8bb0\u3001\u603b\u7ed3\u3001\u5f00\u53d1\uff08\u57fa\u4e8e\u5feb\u901f\u68c0\u7d22\uff0c\u7528\u4e8e\u65e5\u5e38\u4f7f\u7528\uff09</li> <li>blog\uff1a\u5305\u542b\u603b\u7ed3\u3001\u5f00\u6e90\u9879\u76ee\uff08\u7528\u4e8e\u80fd\u529b\u5c55\u793a\uff0c\u4ec5\u5305\u542b\u6280\u672f\uff0cblog\u2208note\uff09</li> <li>\u516c\u4f17\u53f7\uff1a\u5305\u542b\u751f\u6d3b\u3001\u7231\u597d\u3001\u5f00\u53d1\uff08\u7528\u4e8e\u5c55\u793a\uff0c\u516c\u4f17\u53f7=blog+\u751f\u6d3b\uff09</li> <li>Gallery\uff1a\u5305\u542b\u56fe\u7247\u5c55\u793a\u3001\u65c5\u884c\u3001\u751f\u6d3b\u3001\u7231\u597d\uff08\u7528\u4e8e\u5c55\u793a\u6444\u5f71\u4f5c\u54c1\uff0c\u4ec5\u5305\u542b\u751f\u6d3b\uff09</li> </ol>"},{"location":"blog/2022/20220529/","title":"auto_bash\uff1a\u81ea\u52a8\u8bad\u7ec3\u4e0d\u540c\u53c2\u6570\u6a21\u578b","text":""},{"location":"blog/2022/20220529/#_1","title":"\u89e3\u51b3\u65b9\u6848","text":"<p>\u76ee\u6807\u6587\u4ef6<code>test.py</code>\u4e2d\uff0c\u4f7f\u7528<code>argparse</code>\u63a5\u53d7\u5916\u90e8\u53c2\u6570\uff0c\u5728\u6267\u884c\u6587\u4ef6<code>auto_bash.py</code>\u4e2d\u4f20\u5165\u53c2\u6570\u5e76\u6267\u884c<code>test.py</code></p> test.pyauto_bash.py\u6267\u884c\u7ed3\u679c <pre><code>import argparse\nfrom loguru import logger\n\n\ndef main(param):\n    logger.info(param)\n\n\nif __name__ == '__main__':\n    parser = argparse.ArgumentParser()\n    parser.add_argument('--type', type=str, default='train', help='\u6570\u636e\u7c7b\u578b')\n    arg = parser.parse_args()\n    main(arg.type)\n</code></pre> <pre><code>import itertools\nimport multiprocessing\nimport os\nimport sys\n\nfrom loguru import logger\n\n\ndef __cmd(cmd):\n    os.system(cmd)\n\n\ndef auto_bash(py_path: str,\n              args: dict,\n              py_executable: str = sys.executable\n              ):\n    \"\"\"\u81ea\u52a8\u6267\u884c\u811a\u672c\n\n    Parameters\n    ----------\n    py_path : str\n        Python\u811a\u672c\u8def\u5f84\n    args : dict\n        \u8f93\u5165\u53c2\u6570\u5b57\u5178\n    py_executable : str\n        Python\u89e3\u91ca\u5668\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u4e0e\u5f53\u524d\u89e3\u91ca\u5668\u76f8\u540c\n\n    Returns\n    -------\n    None\n    \"\"\"\n    assert isinstance(args, dict), 'args \u9700\u8981\u4f20\u5165\u5b57\u5178\u7c7b\u578b'\n    cmds = []\n    keys = list(args.keys())\n    values = list(args.values())\n    combinations = list(itertools.product(*values))\n\n    for combination in combinations:\n        res = [f'--{keys[i]} {item} ' for i, item in enumerate(combination)]\n        tmp = f'{py_executable} {py_path} ' + ''.join(res)\n        cmds.append(tmp)\n\n    for cmd in cmds:\n        logger.info(f'{cmd=}')\n        process = multiprocessing.Process(target=__cmd, args=(cmd,))\n        process.start()\n\n\nif __name__ == '__main__':\n    param = {'type': ['Train', 'Test', 'Val']}\n    auto_bash('./test.py', param)\n</code></pre> <pre><code>2024-09-17 16:30:19.843 | INFO     | __main__:auto_bash:56 - cmd='C:\\\\Users\\\\Artmallo\\\\PycharmProjects\\\\koko-learn\\\\.venv\\\\Scripts\\\\python.exe ./test.py --type Train '\n2024-09-17 16:30:19.846 | INFO     | __main__:auto_bash:56 - cmd='C:\\\\Users\\\\Artmallo\\\\PycharmProjects\\\\koko-learn\\\\.venv\\\\Scripts\\\\python.exe ./test.py --type Test '\n2024-09-17 16:30:19.848 | INFO     | __main__:auto_bash:56 - cmd='C:\\\\Users\\\\Artmallo\\\\PycharmProjects\\\\koko-learn\\\\.venv\\\\Scripts\\\\python.exe ./test.py --type Val '\n2024-09-17 16:30:20.994 | INFO     | __main__:main:18 - Train\n2024-09-17 16:30:21.053 | INFO     | __main__:main:18 - Test\n2024-09-17 16:30:21.053 | INFO     | __main__:main:18 - Val\n</code></pre>"},{"location":"blog/2022/20220529/#_2","title":"\u53c2\u8003","text":"<p>[1] \u535a\u5ba2\u56ed\uff0c@\u5025\u506c\u65f6\u5149\uff0cpython\u57fa\u7840\u4e4bos.system\u51fd\u6570</p> <p>[2] \u535a\u5ba2\u56ed\uff0c@\u82cd\u9752\u6d6a\uff0c\u8c03\u7528\u7cfb\u7edf\u547d\u4ee4 os.system()\u548cos.popen()</p> <p>[3] \u535a\u5ba2\u56ed\uff0c@\u4e00\u4e00\u98ce\u548c\u6a58\uff0cPython argparse\u6a21\u5757</p> <p>[4] Python\u5b98\u65b9\u6587\u6863</p>"},{"location":"blog/2023/20231012/","title":"\u5bcc\u58ebRAF\u91cd\u547d\u540d","text":""},{"location":"blog/2023/20231012/#1-exiftool","title":"1. \u4e0b\u8f7dExifTool","text":"<p>\u5b98\u7f51\uff1aExifTool  by Phil Harvey</p> <p>\u4e0b\u8f7d Windows Executable \u7248\u672c\uff0c\u89e3\u538b\u5373\u53ef\u5f97\u5230<code>exiftool(-k).exe</code> </p> <p>\u547d\u4ee4\u884c\u4f7f\u7528<sup>1</sup></p> <pre><code>exiftool(-k).exe $FILE_PATH$\n</code></pre>"},{"location":"blog/2023/20231012/#2","title":"2. \u8bfb\u53d6\u62cd\u6444\u65e5\u671f","text":"<p>\u4f7f\u7528<code>os.popen()</code>\u8bfb\u53d6<code>.RAF</code>\u6587\u4ef6\u4fe1\u606f\uff1a</p> <pre><code>terminal_message = os.popen(rf'.\\exiftool.exe {raf_path}').read()\n</code></pre>"},{"location":"blog/2023/20231012/#3","title":"3. \u6279\u91cf\u91cd\u547d\u540d\u811a\u672c","text":"<pre><code>import os\nfrom concurrent.futures import ThreadPoolExecutor\nfrom concurrent.futures import as_completed\n\nimport tqdm\n\nfrom koko_learn._base import ENV\n\n\ndef __run(file, path_src, path_dst, aim_model):\n    raf_path = os.path.abspath(f'{path_src}/{file}')\n    if aim_model:\n        cmd = (f'{ENV.PATH_EXIFTOOL} '\n               f'\"-Model={aim_model}\" '\n               f'\"-FileName&lt;CreateDate\" -d \"{path_dst}/%Y%m%d/%Y%m%d_%%f.%%e\" '\n               f'\"{raf_path}\"')\n    else:\n        cmd = (f'{ENV.PATH_EXIFTOOL} '\n               f'\"-FileName&lt;CreateDate\" -d \"{path_dst}/%Y%m%d/%Y%m%d_%%f.%%e\" '\n               f'\"{raf_path}\"')\n    os.popen(cmd)\n\n\ndef raf_renamer(path_src: str,\n                path_dst: str,\n                aim_model: str,\n                max_workers: int = ENV.MAX_WORKERS\n                ) -&gt; None:\n    \"\"\"RAF\u6587\u4ef6\u91cd\u547d\u540d\u548c\u5f52\u6863\n\n    Parameters\n    ----------\n    path_src : str\n        \u6e90\u8def\u5f84\n    path_dst : str\n        \u76ee\u6807\u8def\u5f84\n    aim_model : str\n        \u76ee\u6807\u76f8\u673a\u578b\u53f7\n    max_workers : int\n        \u6700\u5927\u5de5\u4f5c\u7ebf\u7a0b\uff0c\u9ed8\u8ba412\n\n    Returns\n    -------\n    None\n\n    \"\"\"\n    assert os.path.exists(ENV.PATH_EXIFTOOL), 'exiftool.exe is not found'\n\n    if not os.path.exists(path_dst):\n        os.mkdir(path_dst)\n\n    files = os.listdir(path_src)\n    t_file_list = tqdm.tqdm(files)\n\n    with ThreadPoolExecutor(max_workers=max_workers) as t:\n        futures = [t.submit(__run, file, path_src, path_dst, aim_model) for file in files if file != 'Desktop.ini']\n        for future in as_completed(futures):\n            t_file_list.update(1)\n            t_file_list.set_description(future.result())\n\n\nif __name__ == '__main__':\n    src = r'C:\\Users\\Artmallo\\Desktop\\xxx'\n    dst = r'C:\\Users\\Artmallo\\Desktop\\test'\n    raf_renamer(src, dst, aim_model='X-T50')\n</code></pre> <ol> <li> <p>\u77e5\u4e4e\uff0c@\u5468\u5fb7\u851a\uff0c\u8bfb\u53d6RAW\u56fe\u50cf\u7684metadata \u21a9</p> </li> </ol>"},{"location":"blog/2024/20240706/","title":"\u5bcc\u58ebRAF\u89e3\u9501\u80f6\u7247\u6a21\u62df","text":""},{"location":"blog/2024/20240706/#_1","title":"\u58f9\u4e28\u5f15\u8a00","text":"<p>\u5bcc\u58eb\u76f8\u673a\u4ee5\u5176\u72ec\u7279\u7684\u80f6\u7247\u6a21\u62df\u6ee4\u955c\u95fb\u540d\uff0c\u4e3a\u6444\u5f71\u5e08\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u540e\u671f\u5904\u7406\u98ce\u683c\u9009\u62e9\u3002\u7136\u800c\uff0c\u65e7\u673a\u578b\u4e0d\u652f\u6301\u6700\u65b0\u7684\u80f6\u7247\u6a21\u62df\u3002\u6bd4\u5982\u6211\u7684X-T30\u4e0d\u652f\u6301CLASSIC Neg\u3001NOSTALGIC Neg\u7b49\uff0c\u867d\u7136\u53ef\u4ee5\u901a\u8fc7Capture One\u89e3\u9501\u90e8\u5206\uff0c\u4f46\u8fd8\u662f\u65e0\u6cd5\u7528\u5230\u6700\u65b0\u6ee4\u955c\uff0c\u5982X-T50\u4e0a\u7684REALA ACE</p> <p>\u672c\u6587\u4ecb\u7ecd\u4e00\u79cd\u901a\u8fc7\u4fee\u6539EXIF\u89e3\u9501\u80f6\u7247\u6a21\u62df\u7684\u65b9\u6cd5</p> <p>\u5de5\u5177\uff1aExifTool by Phil Harvey </p> <p><code>exifread</code>\u3001<code>pyexiv2</code>\u7b49Python\u6269\u5c55\u5e93\u4e0d\u652f\u6301\u4fee\u6539\u5bcc\u58ebRAF</p>"},{"location":"blog/2024/20240706/#exiftoolrafexif","title":"\u8d30\u4e28ExifTool\u4fee\u6539RAF\u7684Exif\u4fe1\u606f","text":"<p>\u67e5\u770bRAF\u6587\u4ef6\u7684Exif\u4fe1\u606f\uff1a</p> <pre><code>.\\exiftool.exe .\\DSCF9285.RAF\n</code></pre> <p>\u4e0b\u9762\u6458\u6284\u90e8\u5206\uff1a</p> <pre><code>ExifTool Version Number         : 12.62\nFile Name                       : DSCF9285.RAF\nDirectory                       : .\nFile Size                       : 59 MB\nFile Modification Date/Time     : 2024:05:26 15:03:46+08:00\nFile Access Date/Time           : 2024:07:06 19:19:14+08:00\nFile Creation Date/Time         : 2024:07:06 17:47:54+08:00\nFile Permissions                : -rw-rw-rw-\nFile Type                       : RAF\nFile Type Extension             : raf\nMIME Type                       : image/x-fujifilm-raf\nRAF Version                     : 0201\nExif Byte Order                 : Little-endian (Intel, II)\nMake                            : FUJIFILM\nCamera Model Name               : X-T30\nResolution Unit                 : inches\nSoftware                        : Digital Camera X-T30 Ver2.01\nModify Date                     : 2024:05:26 15:03:46\n...\n</code></pre> <p>\u5176\u4e2d\uff0c<code>Camera Model Name</code>\u4ee3\u8868\u76f8\u673a\u578b\u53f7\uff0c\u4f46\u4f7f\u7528\u4e0b\u9762\u7684EXIF\u4fee\u6539\u65b9\u6cd5\u5e76\u4e0d\u80fd\u771f\u6b63\u7684\u4fee\u6539\u76f8\u673a\u578b\u53f7\uff0c\u56e0\u4e3a\u5b9e\u9645\u76f8\u673a\u578b\u53f7\u6807\u7b7e\u540d\u662f<code>Model</code>\u3002\uff08\u76f2\u731cExifTool\u5c55\u793a\u7684EXIF\u6807\u7b7e\u540d\u505a\u4e86\u8f6c\u4e49\uff09</p> <pre><code>exiftool.exe \"-Camera Model Name=X-T50\" \".\\DSCF9285.RAF\"\n</code></pre> <p>\u56e0\u6b64\uff0c\u8981\u4fee\u6539\u76f8\u673a\u578b\u53f7\uff0c\u9700\u8981\u4f7f\u7528\uff1a</p> <pre><code>exiftool.exe \"-Model=X-T50\" \".\\DSCF9285.RAF\"\n</code></pre> <p>\u4f7f\u7528Honeyview\u67e5\u770b\u76f8\u673a\u578b\u53f7\u5df2\u7ecf\u4fee\u6539\u6210\u529f</p> <p></p> <p></p> <p>\u6700\u540e\uff0c\u5bfc\u5165Capture One\uff0c\u4fee\u6539\u540e\u7684RAF\u53ef\u9009NOSTALGIC Neg\u548cREALA-ACE</p> <p></p>"},{"location":"blog/2024/20240706/#_2","title":"\u53c1\u4e28\u91cd\u547d\u540d\u811a\u672c","text":"<p>\u53c2\u8003\uff1a\u5bcc\u58ebRAF\u91cd\u547d\u540d</p>"},{"location":"blog/2024/20240706/#_3","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>X\u7cfb\u5217\u76f8\u673a\u4e0d\u8981\u4fee\u6539\u6210GFX\u578b\u53f7\uff0c\u5426 \u5219\u989c\u8272\u4f1a\u51fa\u73b0\u6df7\u4e71</li> <li>Capture One\u7528\u6700\u65b0\u7248\uff0c\u5426\u5219\u65e0\u6cd5\u8bc6\u522b\u65b0\u7684\u76f8\u673a\u578b\u53f7\uff0c\u5bfc\u81f4\u4fee\u6539\u540e\u7684RAF\u65e0\u6cd5\u5bfc\u5165</li> <li>\u9644\uff1aX\u7cfb\u5217\u76f8\u673a\u80f6\u7247\u6a21\u62df\u6570\u91cf</li> </ol> \u76f8\u673a\u578b\u53f7 \u80f6\u7247\u6a21\u62df\u6570 \u72ec\u7279\u652f\u6301 X100VI 20 CLASSIC Neg\u3001NOSTALGIC Neg\u3001ETERNA BLEACH BYPASS\u3001REALA ACE X-T50 20 CLASSIC Neg\u3001NOSTALGIC Neg\u3001ETERNA BLEACH BYPASS\u3001REALA ACE X-T5 19 CLASSIC Neg\u3001NOSTALGIC Neg\u3001ETERNA BLEACH BYPASS X-H2 19 CLASSIC Neg\u3001NOSTALGIC Neg\u3001ETERNA BLEACH BYPASS X-H2s 19 CLASSIC Neg\u3001NOSTALGIC Neg\u3001ETERNA BLEACH BYPASS X-S20 19 CLASSIC Neg\u3001NOSTALGIC Neg\u3001ETERNA BLEACH BYPASS X-T30II 18 CLASSIC Neg\u3001ETERNA BLEACH BYPASS X-E4 18 CLASSIC Neg\u3001ETERNA BLEACH BYPASS X-Pro3 17 CLASSIC Neg"},{"location":"blog/2024/20240818/","title":"Auto-Mkdocs\u5de5\u5177","text":"<p>\u9700\u6c42\uff1a\u56fe\u50cf\u538b\u7f29\u5230\u6307\u5b9a\u5927\u5c0f\uff0c\u81ea\u52a8\u751f\u6210mkdocs\u6587\u6863</p> <p></p> <p>\u61d2\u5f97\u5199\u4e86\uff0c\u5927\u6982\u5c31\u662f\u8fd9\u4e48\u4e2a\u610f\u601d\u2191</p>"},{"location":"blog/2024/20240819/","title":"\u68b3\u7406\u4e86\u4e00\u4e0b\u535a\u5ba2\u548cgithub\u4ed3\u5e93","text":"<p>\u5f53\u524d\u75db\u70b9\uff1a</p> <ol> <li>GitHub\u548cGitee\u6258\u7ba1\u6df7\u4e71\uff1a</li> <li>\u4e00\u4e9b\u4ed3\u5e93\u91c7\u7528\u53cc\u7ebf\u90e8\u7f72\uff08\u5982myblog\uff09\uff0c\u4e00\u4e9b\u4ed3\u5e93\u91c7\u7528\u4ed3\u5e93\u540c\u6b65\uff08\u5982picbed\uff09</li> <li>\u76f8\u540c\u7684\u4ed3\u5e93\u5728\u4e24\u4e2a\u7f51\u7ad9\u7684\u540d\u79f0\u4e0d\u4e00\u6837</li> <li>\u4ee3\u7801\u5e93\u547d\u540d\u6df7\u4e71\uff0c\u6bd4\u5982\u4e00\u4e9b\u5947\u602a\u7684\u547d\u540d\uff1a<code>ForeverBBLY</code>\u3001<code>myblog</code>\u3001<code>onav</code>\u3001<code>my-notebook-waline</code>\u7b49</li> <li>\u7f51\u9875\u90e8\u7f72\u6df7\u4e71</li> </ol>"},{"location":"blog/2024/20240819/#1","title":"1. \u660e\u786e\u535a\u5ba2\u5206\u5de5\uff1a","text":"\u540d\u79f0 \u94fe\u63a5 \u6846\u67b6 \u4ee3\u7801\u4ed3 \u5185\u5bb9 Note note.mastermao.cn mkdocs opus-note \u7b14\u8bb0\uff0c\u603b\u7ed3\uff0c\u5f00\u53d1 Gallery gallery.mastermao.cn mkdocs opus-gallery \u6444\u5f71\uff0c\u753b\u5eca ONav onav.mastermao.cn hexo opus-onav \u5bfc\u822a\u9875 Blog blog.mastermao.cn hexo opus-blog \u535a\u5ba2\uff0c\u751f\u6d3b\uff0c\u7231\u597d"},{"location":"blog/2024/20240819/#2","title":"2. \u5408\u5e76\u5e93\uff1a","text":"<p>\u5982<code>foreverbbly</code>\u3001<code>gallerymusic</code>\u5408\u5e76</p>"},{"location":"blog/2024/20240819/#3","title":"3. \u524d\u7aef\u529f\u80fd\u6027\u7ec4\u4ef6\uff1a","text":"\u540d\u79f0 \u4ee3\u7801\u4ed3 \u5185\u5bb9 \u7ed8\u56fe\u5b57\u4f53 aqua-fonts \u65e5\u5e38\u4f7f\u7528\u7684\u4e00\u4e9b\u5408\u5e76\u5b57\u4f53 \u56fe\u5e8a aqua-picbed \u6258\u7ba1Gallery\u56fe\u7247 \u8bc4\u8bba aqua-waline \u6258\u7ba1\u8bc4\u8bba\u7cfb\u7edf Typora\u4e3b\u9898 aqua-typora-theme Typora\u4e3b\u9898"},{"location":"blog/2024/20240819/#4-python","title":"4. Python\u5de5\u5177\u5e93","text":"\u540d\u79f0 \u4ee3\u7801\u4ed3 \u5185\u5bb9 Film koko-film \u6444\u5f71\u540e\u671f\u5904\u7406\u5e93 Learn koko-learn \u65e5\u5e38\u4f7f\u7528\u7b97\u6cd5\u5e93"},{"location":"blog/2024/20241020/","title":"\u68b3\u7406\u4e86\u4e00\u5957\u5de5\u7a0b\u6587\u4ef6\u7ba1\u7406\u65b9\u6cd5","text":""},{"location":"blog/2024/20241020/#_1","title":"\u58f9\u4e28\u80cc\u666f","text":"<p>\u5de5\u4f5c\u65e5\u5e38\u6d89\u53ca\u8bb8\u591a\u7b97\u6cd5\u548c\u6570\u636e\uff0c\u5982\u4f55\u9ad8\u6548\u7684\u7ba1\u7406\u8fd9\u4e9b\u5de5\u7a0b\u6587\u4ef6\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u95ee\u9898\u3002</p> \u75db\u70b9 \u4ee5\u524d\u7684\u505a\u6cd5 \u95ee\u9898 \u89e3\u51b3\u601d\u8def \u4e00\u4e9b\u51fd\u6570\u6216\u65b9\u6cd5\u4f1a\u53cd\u590d\u4f7f\u7528\uff0c\u5982\u6ee4\u6ce2\u3001\u7ed8\u56fe\u7b49 <code>Ctrl+C</code>\uff0c<code>Ctrl+V</code> \u7d2f \u5efa\u7acb\u4e00\u5957\u7b97\u6cd5\u5e93<code>koko-learn</code>\uff0c\u8bbe\u8ba1\u6210\u901a\u7528\u51fd\u6570 \u4e0d\u540c\u7b97\u6cd5\u3001\u6570\u636e\u7684\u9879\u76ee\u6587\u4ef6\u653e\u5728\u4e00\u8d77\u6df7\u4e71 \u5efa\u7acb\u4e0d\u540c\u9879\u76ee\uff0c\u94fe\u63a5\u540c\u4e00\u4e2a<code>Conda</code>\u73af\u5883 \u865a\u62df\u73af\u5883\u4e71 \u6539\u7528<code>rye</code>\u505a\u9879\u76ee\u548c\u865a\u62df\u73af\u5883\u7ba1\u7406 \u4e0d\u540c\u7684<code>rye</code>\u9879\u76ee\u90fd\u9700\u8981\u4f7f\u7528\u7b97\u6cd5\u5e93 <code>rye build</code>\u6253\u5305\uff0c\u7136\u540e\u5b89\u88c5\u5728\u4e0d\u540c\u9879\u76ee \u7d2f \u4e0d\u540c\u9879\u76ee\u8dd1\u5728<code>koko-learn</code>\u9879\u76ee\u4e0b \u8ba1\u7b97\u4e91\u9700\u8981\u4f7f\u7528\u7b97\u6cd5\u5e93 \u540c\u4e0a\uff0c\u9047\u5230\u7b97\u6cd5\u5e93\u5c0f\u95ee\u9898\u4e0d\u65b9\u4fbf\u66f4\u65b0 \u7d2f <code>git</code>\u540c\u6b65\u7b97\u6cd5\u5e93\uff0c\u8ba1\u7b97\u4e91\u5f3a\u5236\u540c\u6b65 <p>\u4e0a\u8ff0\u505a\u6cd5\u53d7\u5230\u516c\u53f8\u5f00\u53d1\u73af\u5883\u7684\u9650\u5236\uff0c\u56e0\u6b64\u5728\u5916\u90e8\u4e0d\u4e00\u5b9a\u662f\u6700\u4f18\u89e3\u3002\u5982\uff1a</p> <ol> <li>\u7b97\u6cd5\u5e93\u65e0\u6cd5\u6253\u5305\u4e0a\u4f20\uff0c\u53ea\u80fd\u5728\u672c\u5730\u4f20\u6765\u4f20\u53bb</li> <li>Anaconda\u6536\u8d39\uff0c\u867d\u7136MiniForge\u53ef\u7528\uff0c\u4f46\u5df2\u7ecf\u538c\u5026\u4e86<code>conda</code>\u5de5\u5177\u53d1\u751f\u7684\u5404\u79cd\u5e93\u517c\u5bb9\u95ee\u9898</li> <li>\u65e0\u6cd5\u5b8c\u5168\u8fdc\u7a0b\u5f00\u53d1\u6216\u672c\u5730\u5f00\u53d1\u3002\u672c\u5730\u7ecf\u5e38\u5904\u7406\u4e00\u4e9b\u5c0f\u6279\u91cf\u6570\u636e\uff0c\u6bd5\u7adf\u6570\u636e\u4e0a\u4f20\u8ba1\u7b97\u4e91\u9700\u8981\u4e0d\u5c11\u65f6\u95f4\u5f00\u652f\uff1b\u5927\u578b\u6570\u636e\u8fd8\u5fc5\u987b\u4f9d\u9760\u8ba1\u7b97\u4e91</li> </ol>"},{"location":"blog/2024/20241020/#_2","title":"\u8d30\u4e28\u4e3e\u4f8b","text":"<p>\u5047\u8bbe\uff1a</p> <ul> <li> <p>\u7b97\u6cd5\u5e93\u547d\u540d\uff1a<code>koko-learn</code></p> </li> <li> <p>\u5de5\u7a0b\u6587\u4ef6\u547d\u540d\uff1a<code>1017_KAN_104</code>\uff08<code>1017</code>\u2014\u2014\u65e5\u671f\uff0c<code>KAN</code>\u2014\u2014\u7b97\u6cd5\uff0c<code>104</code>\u2014\u2014\u6570\u636e\u96c6\u7f16\u53f7\uff09</p> </li> </ul> <p>\u9644\uff1a<code>rye</code>\u7b80\u5355\u7528\u6cd5</p> \u7528\u6cd5 \u547d\u4ee4 \u7528\u6cd5 \u547d\u4ee4 \u65b0\u5efa\u9879\u76ee <code>rye init xx</code> \u6dfb\u52a0\u5e93 <code>rye add xx</code> \u8bbe\u7f6e<code>python</code>\u7248\u672c <code>rye pin 3.11</code> \u5220\u9664\u5e93 <code>rye remove xx</code> \u540c\u6b65\u8bbe\u7f6e <code>rye sync</code> \u66f4\u65b0<code>rye</code> <code>rye self update</code> \u66f4\u65b0\u5e93 <code>rye sync --update-all</code> <p>\u547d\u4ee4\u884c\u6fc0\u6d3b\u865a\u62df\u73af\u5883\uff1a</p> WindowsLinux <pre><code>. .\\.venv\\Scripts\\activate\n</code></pre> <pre><code>. .venv/bin/activate\n</code></pre>"},{"location":"blog/2024/20241020/#_3","title":"\u7b2c\u4e00\u6b65\uff0c\u521b\u5efa\u9879\u76ee\u6587\u4ef6","text":"<pre><code>mao@pekshcsitd33451:~$ rye init koko-learn\nsuccess: Initialized project in /home/mao/koko-learn\n  Run `rye sync` to get started\n</code></pre> <p>\u81ea\u52a8\u751f\u6210\u7684\u76ee\u5f55\u7ed3\u6784\uff1a</p> <pre><code>mao@pekshcsitd33451:~$ cd koko-learn/\nmao@pekshcsitd33451:~/koko-learn$ tree\n.\n\u251c\u2500\u2500 pyproject.toml\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 koko_learn\n        \u2514\u2500\u2500 __init__.py\n\n2 directories, 3 files\n</code></pre>"},{"location":"blog/2024/20241020/#python","title":"\u7b2c\u4e8c\u6b65\uff0c\u8bbe\u7f6e<code>python</code>\u7248\u672c","text":"<pre><code>mao@pekshcsitd33451:~/koko-learn$ rye pin 3.11\npinned 3.11.9 in /home/mao/koko-learn/.python-version\n</code></pre>"},{"location":"blog/2024/20241020/#_4","title":"\u7b2c\u4e09\u6b65\uff0c\u521d\u59cb\u5316\u865a\u62df\u73af\u5883","text":"<pre><code>mao@pekshcsitd33451:~/koko-learn$ rye sync\nInitializing new virtualenv in /home/mao/koko-learn/.venv\nPython version: cpython@3.11.9\nGenerating production lockfile: /home/mao/koko-learn/requirements.lock\nGenerating dev lockfile: /home/mao/koko-learn/requirements-dev.lock\nInstalling dependencies\n   Built file:///home/mao/koko-learn                                                                                    Built 1 editable in 240ms\nInstalled 1 package in 0.42ms\n + koko-learn==0.1.0 (from file:///home/mao/koko-learn)\nDone!\n</code></pre> <p>\u4f1a\u521b\u5efa\u865a\u62df\u73af\u5883\u76ee\u5f55<code>.venv</code></p> <p>\u547d\u4ee4\u884c\u6fc0\u6d3b\u865a\u62df\u73af\u5883\uff1a</p> WindowsLinux <pre><code>. .\\.venv\\Scripts\\activate\n</code></pre> <pre><code>. .venv/bin/activate\n</code></pre>"},{"location":"blog/2024/20241020/#_5","title":"\u7b2c\u56db\u6b65\uff0c\u521b\u5efa\u7b97\u6cd5\u5e93","text":"<p>\u7b97\u6cd5\u5e93\u521b\u5efa\u5728<code>src/koko_learn</code>\u6587\u4ef6\u5939\u4e0b\uff0c\u5982\uff1a</p> <code>src/koko_learn/SignalProcessing/__init__.py</code><code>src/koko_learn/SignalProcessing/_filtering.py</code><code>src/koko_learn/DataSets/Fetch104xx.py</code> <pre><code>from ._filtering import filter_signal\n\n__all__ = [\n    'filter_signal',\n]\n</code></pre> <pre><code>import numpy as np\n\ndef filter_signal(in_signal: list | np.ndarray,\n                  cutoff: int | float | list | np.ndarray | tuple,\n                  sample_rate: int | float,\n                  order: int = 4,\n                  filter_type: str = 'bandpass') -&gt; np.ndarray:\n    ...\n</code></pre> <pre><code>from koko_learn.SignalProcessing import filter_signal\n\nclass Fetch104xx(DataBaseCls):\n    def __init__(self,\n                 path_base: str,\n                 ) -&gt; None:\n    ...\n</code></pre>"},{"location":"blog/2024/20241020/#_6","title":"\u7b2c\u4e94\u6b65\uff0c\u521b\u5efa\u5de5\u7a0b","text":"<p>\u5728<code>src/koko_learn</code>\u7684\u540c\u7ea7\u76ee\u5f55\u4e0b\u521b\u5efa\u5de5\u7a0b\uff0c\u5982\uff1a</p> <code>src/1017_KAN_104/e1_xtract_features.py</code><code>src/1017_KAN_104/m1_odeling.py</code> <pre><code>from koko_learn.SignalProcessing import filter_signal\n\ndef main():\n    ...\n</code></pre> <pre><code>from koko_learn.GetModel import KAN\n\ndef main():\n    ...\n</code></pre>"},{"location":"blog/2024/20241020/#_7","title":"\u53c1\u4e28\u914d\u7f6e","text":""},{"location":"blog/2024/20241020/#1-gitignore","title":"1. <code>.gitignore</code>\u914d\u7f6e","text":"<pre><code># python generated files\n__pycache__/\n*/__pycache__/\n*.py[oc]\nbuild/\ndist/\nwheels/\n*.egg-info\n# jetbrains\n.idea/\n# venv\n.venv/\n# src\nsrc/*\n!src/PyPulse/\n</code></pre> <p><code>src/*</code>\u2014\u2014\u5c06<code>src</code>\u76ee\u5f55\u4e0b\u6240\u6709\u8def\u5f84\u5c4f\u853d</p> <p><code>!src/koko_learn/</code>\u2014\u2014\u6392\u9664<code>koko_learn</code>\u7b97\u6cd5\u5e93\u6587\u4ef6\u5939(\u672c\u5730\u73af\u5883\u548c\u8ba1\u7b97\u4e91\u4ec5\u540c\u6b65koko_learn\u7b97\u6cd5\u5e93\u6587\u4ef6\u5939)</p> <p>\u5bf9\u4e8e<code>pyproject.toml</code>\uff0c\u8fd9\u91cc\u4e0d\u5efa\u8bae\u5c4f\u853d\uff0c\u4e3a\u4e86\u8fdc\u7a0b\u53ef\u4ee5\u5feb\u901f\u521d\u59cb\u5316\u73af\u5883\u5230\u4e0e\u672c\u5730\u76f8\u540c\u7684\u865a\u62df\u73af\u5883</p>"},{"location":"blog/2024/20241020/#2","title":"2. \u8ba1\u7b97\u4e91\u540c\u6b65\u7b97\u6cd5\u5e93","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u672c\u5730\u7b97\u6cd5\u5e93\u540c\u6b65\u5230\u4ed3\u5e93</p> <pre><code>git add .\ngit commit -m 'xxxx'\ngit push\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff0c\u8ba1\u7b97\u4e91\u91cd\u7f6e\u5230\u8fdc\u7a0b\u5206\u652f</p> <pre><code>git fetch origin\ngit reset --hard origin/&lt;branch_name&gt;\n</code></pre> <p>\u5077\u4e2a\u5c0f\u61d2\uff1a</p> src/koko_learn/utils/sync_git.py<pre><code>import os\n\nif __name__ == '__main__':\n    cmd = 'git fetch origin &amp;&amp; git reset --hard origin/master'\n    os.system(cmd)\n</code></pre> <p>\u8fd9\u91cc\u4f7f\u7528\u4e86\u5f3a\u5236\u91cd\u7f6e\uff0c\u6240\u4ee5\u5f53\u4f7f\u7528\u8ba1\u7b97\u4e91\u8dd1\u7a0b\u5e8f\u53d1\u73b0\u7b97\u6cd5\u5e93\u7684Bug\u65f6\uff0c\u4e00\u5b9a\u8bb0\u5f97\u540c\u65f6\u4fee\u6539</p>"},{"location":"blog/2024/20241020/#3","title":"3. \u5b89\u88c5\u5e93","text":"\u7c7b\u578b \u4e3e\u4f8b \u5e94\u5bf9\u65b9\u6cd5 \u7b97\u6cd5\u5e93\u4f9d\u8d56\uff0c\u4e14\u4f7f\u7528\u9891\u7387\u9ad8 <code>tqdm</code>\u3001<code>numpy</code> \u76f4\u63a5\u5b89\u88c5\uff1a<code>rye add tqdm numpy</code> \u7b97\u6cd5\u5e93\u4f9d\u8d56\uff0c\u4f46\u51e0\u4e4e\u4e0d\u7528 <code>biosppy</code> \u521b\u5efa<code>check_module_support()</code>\u65b9\u6cd5\u68c0\u67e5\u5e76\u5bfc\u5165 \u7b97\u6cd5\u5e93\u4e0d\u4f9d\u8d56\uff0c\u5de5\u7a0b\u4f9d\u8d56 <code>ngboost</code> \u6dfb\u52a0\u5230\u5f00\u53d1\u4f9d\u8d56\u9879\uff1a<code>rye add ngboost --dev</code> <p>\u68c0\u67e5\u5305\u5e76\u5bfc\u5165\uff1a</p> src/koko_learn/utils/_check_module_support.py<pre><code>install_commands = {\n 'torchvision': 'rye add torchvision',\n 'torch': 'rye add torch',\n 'biosppy': 'rye add biosppy',\n 'wfdb': 'rye add wfdb',\n}\n\n\ndef check_module_support(module_name, caller_name):\n try:\n     module = __import__(module_name)\n     return module\n except ImportError as e:\n     raise ImportError(f\"{caller_name} requires {module_name}.\\n\"\n                       f\"\u5b89\u88c5\u547d\u4ee4: {install_commands[module_name]}\") from e\n</code></pre>"},{"location":"blog/2024/20241020/#4","title":"4. \u8fdc\u7a0b\u8f6f\u4ef6","text":"<p>\u63a8\u8350JetBrains Gateway</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/","title":"\ud83c\udf80 \u8f6f\u4ef6\u53ca\u914d\u7f6e","text":"<ul> <li> <p> \u5f00\u6e90\u8f6f\u4ef6</p> <p>\u5f00\u6e90\u8f6f\u4ef6\u662f\u6307\u6e90\u4ee3\u7801\u53ef\u4ee5\u88ab\u516c\u4f17\u67e5\u770b\u3001\u4fee\u6539\u548c\u589e\u5f3a\u7684\u8f6f\u4ef6\uff0c\u5b83\u9f13\u52b1\u793e\u533a\u5408\u4f5c\u548c\u521b\u65b0\u3002\u8fd9\u7c7b\u8f6f\u4ef6\u901a\u5e38\u9075\u5faa\u7279\u5b9a\u7684\u5f00\u6e90\u8bb8\u53ef\u8bc1\uff0c\u5982GNU\u901a\u7528\u516c\u5171\u8bb8\u53ef\u8bc1\uff08GPL\uff09\u3002</p> <p> Getting started</p> </li> <li> <p> Linux(Ubuntu)</p> <p>Ubuntu\u662f\u4e00\u4e2a\u57fa\u4e8eLinux\u7684\u5f00\u6e90\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4ee5\u5176\u7528\u6237\u53cb\u597d\u7684\u754c\u9762\u548c\u5f3a\u5927\u7684\u793e\u533a\u652f\u6301\u800c\u95fb\u540d\u3002\u5b83\u9002\u7528\u4e8e\u591a\u79cd\u8bbe\u5907\uff0c\u5305\u62ec\u684c\u9762\u3001\u670d\u52a1\u5668\u548c\u4e91\u73af\u5883\uff0c\u63d0\u4f9b\u4e86\u514d\u8d39\u7684\u66f4\u65b0\u548c\u5b89\u5168\u8865\u4e01\u3002</p> <p> Getting started</p> </li> <li> <p> WSL</p> <p>WSL\uff08Windows Subsystem for Linux\uff09\u662f\u5fae\u8f6f\u5f00\u53d1\u7684\u4e00\u9879\u529f\u80fd\uff0c\u5b83\u5141\u8bb8\u7528\u6237\u5728Windows 10\u548cWindows 11\u4e0a\u539f\u751f\u8fd0\u884cLinux\u73af\u5883\u3002</p> <p> Getting started</p> </li> <li> <p> 10</p> <p> Getting started</p> </li> <li> <p> Windows11</p> <p> Getting started</p> </li> <li> <p> Git</p> <p>Git\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u7528\u4e8e\u6709\u6548\u3001\u9ad8\u901f\u5730\u5904\u7406\u4ece\u5c0f\u5230\u5927\u7684\u9879\u76ee\u7248\u672c\u7ba1\u7406\u3002\u5b83\u7531Linus Torvalds\u521b\u5efa\uff0c\u652f\u6301\u5206\u652f\u548c\u5408\u5e76\u64cd\u4f5c\uff0c\u5e7f\u6cdb\u7528\u4e8e\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u4ee5\u534f\u8c03\u4ee3\u7801\u53d8\u66f4\u548c\u591a\u4eba\u534f\u4f5c\u3002</p> <p> Getting started</p> </li> <li> <p> macOS</p> <p> Getting started</p> </li> <li> <p> \u82f1\u96c4\u8054\u76df</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/0%EF%B8%8F%E2%83%A3%20%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6/","title":"\ud83c\udf80 \u8f6f\u4ef6\u53ca\u914d\u7f6e/0\ufe0f\u20e3 \u5f00\u6e90\u8f6f\u4ef6","text":"<ul> <li> <p>TheFuck</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/0%EF%B8%8F%E2%83%A3%20%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6/A/","title":"\ud83e\udd29\ufe0f TheFuck","text":"<p>\u529f\u80fd\uff1a\u7ea0\u6b63\u8f93\u5165\u9519\u8bef\u7684cmd\u547d\u4ee4</p> <p>\u5f00\u6e90\u94fe\u63a5\uff1ahttps://github.com/nvbn/thefuck</p> <p>\u5b89\u88c5\uff08Ubuntu\uff09</p> <p>\u7b2c\u4e00\u6b65\uff0c\u5b89\u88c5\uff1a</p> <pre><code>sudo apt update\nsudo apt install python3-dev python3-pip python3-setuptools\npip3 install thefuck --user\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff0c\u6dfb\u52a0\u73af\u5883\u53d8\u91cf\uff1a</p> <pre><code>sudo nano ~/.bashrc\n</code></pre> <p>\u6dfb\u52a0\uff1a</p> <pre><code>eval $(thefuck --alias)\n# You can use whatever you want as an alias, like for Mondays:\neval $(thefuck --alias FUCK)\n</code></pre> <p>\u7b2c\u4e09\u6b65\uff0c\u6fc0\u6d3b\u73af\u5883\uff1a <pre><code>source ~/.bashrc\n</code></pre></p> <p>\u5347\u7ea7</p> <pre><code>pip3 install thefuck --upgrade\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/","title":"\ud83c\udf80 \u8f6f\u4ef6\u53ca\u914d\u7f6e/1\ufe0f\u20e3 Linux(Ubuntu)","text":"<ul> <li> <p>\u7cfb\u7edf\u5b89\u88c5\u8bb0\u5f55</p> <p> Getting started</p> </li> <li> <p>\u57fa\u7840\u4f7f\u7528</p> <p> Getting started</p> </li> <li> <p>\u5b89\u88c5\u8f6f\u4ef6</p> <p> Getting started</p> </li> <li> <p>\u4fee\u6539\u955c\u50cf\u6e90</p> <p> Getting started</p> </li> <li> <p>\u5b89\u88c5\u5b57\u4f53</p> <p> Getting started</p> </li> <li> <p>\u914d\u7f6eSamba</p> <p> Getting started</p> </li> <li> <p>\u914d\u7f6eJupyter\u8fdc\u7a0b\u8bbf\u95ee</p> <p> Getting started</p> </li> <li> <p>\u914d\u7f6eSSH</p> <p> Getting started</p> </li> <li> <p>\u538b\u7f29\u547d\u4ee4\u6c47\u603b</p> <p> Getting started</p> </li> <li> <p>\u914d\u7f6ewget\u4ee3\u7406</p> <p> Getting started</p> </li> <li> <p>\u914d\u7f6ecurl\u4ee3\u7406</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/A/","title":"\ud83c\udf53 \u7cfb\u7edf\u5b89\u88c5\u8bb0\u5f55","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/A/#-gun-grub","title":"\u58f9\u4e28\u5b89\u88c5-GUN GRUB\u89e3\u6790<sup>1</sup>","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u9996\u9875\u663e\u793a\uff1a</p> <pre><code>* Ubuntu\n* Advanced options for Ubuntu\n</code></pre> <p><code>Ubuntu</code>\u2014\u2014\u76f4\u63a5\u8fdb\u5165Ubuntu\u7cfb\u7edf</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u9009\u62e9<code>Advanced options for Ubuntu</code>\u9875\uff1a</p> <pre><code>* resume            Resume normal boot\n* clean             Try to make free space\n* dpkg              Repair broken packages\n* fsck              Check all file systems\n* grub              Update grub bootloader\n* network           Enable networking\n* root              Drop to root shell prompt\n* system-summary    System summary\n</code></pre> <p><code>resume</code>\uff1a\u6062\u590d\u6b63\u5e38\u542f\u52a8\uff0c\u6709\u7684\u4eba\u9009\u8fd9\u4e2a\u5c31\u53ef\u4ee5\u8fdb\u5165\u7cfb\u7edf <code>clean</code>\uff1a\u6e05\u9664\u78c1\u76d8\u4e2d\u4e0d\u5fc5\u8981\u7684\u6587\u6863 <code>dpkg</code>\uff1a\u4fee\u590d\u53d7\u635f\u7684\u5b89\u88c5\u5305 <code>fsck</code>\uff1a\u78c1\u76d8\u68c0\u67e5\u4e0e\u4fee\u590d <code>grub</code>\uff1a\u66f4\u65b0grub\u5f15\u5bfc <code>network</code>\uff1a\u5e26\u7f51\u7edc\u8fde\u63a5\u7684shell\u754c\u9762 <code>root</code>\uff1a\u6700\u9ad8\u7ba1\u7406\u5458\u7684shell\u754c\u9762 <code>system-summary</code>\uff1a\u67e5\u770b\u7cfb\u7edf\u7684\u4fe1\u606f\uff0c\u8d44\u6599</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/A/#_1","title":"\u8d30\u4e28\u8e29\u5751\u8bb0\u5f55","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/A/#1","title":"1. \u65e0\u6cd5\u6b63\u5e38\u8fdb\u5165\u7cfb\u7edf","text":"<p>Nidia\u663e\u5361\u9a71\u52a8\u5bfc\u81f4\u5f00\u673a\u5361\u5728\uff1a</p> <pre><code>/dev/sda1: clean, ***files, ***blocks\n</code></pre> <p>\u539f\u56e0\uff1a\u663e\u5361\u9a71\u52a8\u95ee\u9898\uff0c\u5bfc\u81f4\u65e0\u6cd5\u76f4\u63a5\u8fdb\u5165\u7cfb\u7edf<sup>2</sup></p> <p>\u8fdb\u5165<code>Advanced options for Ubuntu</code>\u2014\u2014<code>resume</code>\u53ef\u4ee5\u6b63\u5e38\u8fdb\u5165\u7cfb\u7edf\uff0c\u7136\u540e\u5728<code>\u8f6f\u4ef6\u548c\u66f4\u65b0</code>\u2014\u2014<code>\u9644\u52a0\u9a71\u52a8</code>\u4e2d\u5b89\u88c5\u63a8\u8350\u7684\u663e\u5361\u9a71\u52a8\uff0c\u91cd\u542f\u5373\u53ef</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/A/#2-nvidia","title":"2. \u4eceNVIDIA\u4e0b\u8f7d\u5b89\u88c5\u663e\u5361\u9a71\u52a8\u540e\u65e0\u6cd5\u8fdb\u5165\u7cfb\u7edf","text":"<p>\u5f00\u673a\u5361\u7684\u4f4d\u7f6e\u548c\u4e0a\u9762\u76f8\u540c\uff0c\u9700\u8981\u5378\u8f7d\u663e\u5361\u9a71\u52a8<sup>3</sup><sup>4</sup>\uff0c\u518d\u91cd\u65b0\u5b89\u88c5</p> <p>\u9009\u62e9<code>Advance Options</code>\uff0c\u9009\u62e9<code>root</code>\uff0c\u8fdb\u5165\u7ba1\u7406\u5458\u6a21\u5f0f</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/A/#_2","title":"\u65b9\u6cd5\u4e00\uff1a","text":"<p>\u67e5\u770b\u663e\u5361\u9a71\u52a8\u53ca\u7248\u672c\u5b89\u88c5\u60c5\u51b5</p> <pre><code>ls /usr/src | grep nvidia\n</code></pre> <p>\u8fdb\u5165\u5b89\u88c5\u76ee\u5f55\uff0c\u4f7f\u7528\u81ea\u5e26\u7684\u5378\u8f7d\u547d\u4ee4\u5378\u8f7d\u9a71\u52a8</p> <pre><code>cd /usr/bin\nls nvidia-*\nsudo nvidia-uninstall\n</code></pre> <p>\u518d\u6b21\u67e5\u770b\u662f\u5426\u5378\u8f7d\u5e72\u51c0</p> <pre><code>ls /usr/src | grep nvidia\n</code></pre> <p>\u5378\u8f7d\u5e72\u51c0\u6240\u6709\u82f1\u4f1f\u8fbe\u9a71\u52a8</p> <pre><code>sudo apt-get remove --purge nvidia-*\n</code></pre> \u614e\u7528 <pre><code>sudo apt autoremove\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/A/#_3","title":"\u65b9\u6cd5\u4e8c\uff1a","text":"<p>\u67e5\u770b\u5df2\u5b89\u88c5\u663e\u5361\u9a71\u52a8\uff1a</p> <pre><code>ls /usr/src | grep nvidia\n</code></pre> <p>\u76f4\u63a5\u5378\u8f7d\u663e\u5361\u9a71\u52a8</p> <pre><code>sudo ./\u663e\u5361\u9a71\u52a8\u5305\u540d\u79f0 --uninstall\n</code></pre> <p>\u5378\u8f7d\u5e72\u51c0</p> <pre><code>sudo apt-get purge nvidia*\nsudo apt autoremove\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/A/#3","title":"3. \u672a\u5b89\u88c5\u663e\u5361\u9a71\u52a8\u65f6\u4ecd\u7136\u4f1a\u5361\u4f4f","text":"<p>\u62a5\u9519\uff1a</p> <pre><code>snd_hda_intel xxx\n</code></pre> <p>\u539f\u56e0\uff1aHDMI\u58f0\u5361\u9a71\u52a8\u95ee\u9898\uff0c\u8fdb\u5165Ubuntu\u540e\u5b89\u88c5\u663e\u5361\u9a71\u52a8\u5373\u53ef</p> <p>\u53c2\u8003\uff1a</p> <ol> <li> <p>CSDN\uff0c@ \u5c0f\u767dhemu\uff0cubuntu\u8e29\u5751\u7b14\u8bb0--\u5f00\u673a\u8fdb\u5165recovering journal\u89e3\u51b3\u65b9\u6cd5 \u21a9</p> </li> <li> <p>CSDN\uff0c@Y1\u7687_\uff0cNvidia\u663e\u5361\u9a71\u52a8\u5bfc\u81f4Ubuntu\u5f00\u673a\u5361\u5728/dev/sda1\uff1aclean\uff0cxxxfiles, xxxblocks\u7684\u89e3\u51b3 \u21a9</p> </li> <li> <p>CSDN\uff0c@\u7aeb\u8a00\uff0cubuntu\u5378\u8f7d\u663e\u5361\u9a71\u52a8 \u21a9</p> </li> <li> <p>CSDN\uff0c@\u9053\u963b\u4e14\u957f\u884c\u5219\u5c06\u81f3\uff01\uff0cUbuntu18-22.04\u5b89\u88c5\u548c\u5e72\u51c0\u5378\u8f7dnvidia\u663e\u5361\u9a71\u52a8\u2014\u2014\u8d85\u8be6\u7ec6\u3001\u6700\u7b80\u5355 \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/AA/","title":"\ud83c\udf5f \u57fa\u7840\u4f7f\u7528","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/AA/#1-python","title":"1. \u5173\u95edPython\u8fdb\u7a0b","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u6253\u5f00\u7ec8\u7aef</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684Python\u8fdb\u7a0b</p> <pre><code>ps -aux | grep python\n</code></pre> <p>\u7b2c\u4e09\u6b65\uff0c\u627e\u5230\u60f3\u8981\u5173\u95ed\u7684Python\u8fdb\u7a0bPID\uff0c\u5728\u8f93\u51fa\u7684\u7b2c\u4e8c\u5217</p> <p>\u7b2c\u56db\u6b65\uff0c\u5173\u95edPython\u8fdb\u7a0b</p> <pre><code>kill &lt;PID&gt;\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/AA/#2","title":"2. \u5220\u9664\u672c\u6587\u4ef6\u5939\u4e0b\u6240\u6709\u6587\u4ef6","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u8fdb\u5165\u76ee\u6807\u6587\u4ef6\u5939</p> <pre><code>cd /path/to/folder\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff0c\u5220\u9664\u76ee\u6807\u6587\u4ef6\u5939\u4e0b\u6240\u6709\u6587\u4ef6</p> <pre><code>rm *\n</code></pre> <p>\u5220\u9664\u6587\u4ef6\u5939\u672c\u8eab</p> <pre><code>rm -r /path/to/folder\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/B/","title":"\ud83c\udf45 \u5b89\u88c5\u8f6f\u4ef6","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/B/#snap","title":"\u58f9\u4e28\u4ecesnap\u5546\u5e97\u5b89\u88c5","text":"<p>\u5b89\u88c5\u8f6f\u4ef6\u547d\u4ee4</p> <pre><code>sudo snap install xxx\n</code></pre> <p>\u67e5\u770b\u5df2\u7ecf\u5b89\u88c5\u7684snap\u8f6f\u4ef6</p> <pre><code>snap list\n</code></pre> <p>\u5378\u8f7d\u8f6f\u4ef6</p> <pre><code>sudo snap remove xxx\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/B/#_1","title":"\u8d30\u4e28\u5e38\u7528\u8f6f\u4ef6\u5b89\u88c5","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/B/#1-coding","title":"1. Coding\u8f6f\u4ef6","text":"<ol> <li>VS Code</li> </ol> <pre><code>sudo snap install code --classic\n</code></pre> <ol> <li>Sublime Text</li> </ol> <pre><code>sudo snap install sublime-text --classic\n</code></pre> <ol> <li>Jetbrains Toolbox App</li> </ol> <p>\u5b98\u7f51\uff1ahttps://www.jetbrains.com/zh-cn/toolbox-app/</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/B/#2","title":"2. \u529e\u516c\u8f6f\u4ef6","text":"<ol> <li>Xmind\u3010\u601d\u7ef4\u5bfc\u56fe\u3011</li> </ol> <pre><code>sudo snap install xmind\n</code></pre> <ol> <li>PicGo\u3010\u56fe\u5e8a\u4e0a\u4f20\u3011</li> </ol> <p>\u5b98\u7f51\uff1ahttps://molunerfinn.com/PicGo/</p> <pre><code>sudo snap install picgo_2.4.0-beta.4_amd64.snap --dangerous\n</code></pre> <p>\u5176\u4e2d\uff0c<code>--dangerous</code>\u4e3a\u5ffd\u7565\u7b7e\u540d</p> <ol> <li>Typora\u3010Markdown\u3011</li> </ol> <pre><code>sudo snap install typora\n</code></pre> <ol> <li>Drawio\u3010\u6d41\u7a0b\u56fe\u3011</li> </ol> <pre><code>sudo snap install drawio\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/B/#3","title":"3. \u5a92\u4f53\u64ad\u653e","text":"<ol> <li>Plex\u3010\u6d41\u5a92\u4f53\u3011</li> </ol> <pre><code>sudo snap install plex-desktop\n</code></pre> <ol> <li>QQ\u97f3\u4e50</li> </ol> <pre><code>sudo snap install qqmusic-snap\n</code></pre> <ol> <li>YesPlayMusic</li> </ol> <pre><code>sudo snap install yesplaymusic\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/B/#4","title":"4. \u4e0b\u8f7d","text":"<ol> <li>Motrix\u3010\u4e0b\u8f7d\u3011</li> </ol> <pre><code>sudo snap install motrix\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/C/","title":"\ud83e\uddb4 \u4fee\u6539\u955c\u50cf\u6e90","text":"<p>\u5e38\u7528\u7684\u955c\u50cf\u6e90\u6709\u6e05\u534e\u955c\u50cf\u6e90<sup>1</sup>\u3001\u4e2d\u79d1\u5927\u955c\u50cf\u6e90<sup>2</sup>\u7b49\u3002</p> <p>\u7b2c\u4e00\u6b65\uff0c\u4fee\u6539\u914d\u7f6e\u6587\u4ef6<code>/etc/apt/sources.list</code></p> <pre><code>sudo nano /etc/apt/sources.list\n</code></pre> <p>\u4ee5Ubuntu 20.04 LTS\u4e3a\u4f8b\uff1a</p> /etc/apt/sources.list<pre><code># \u9ed8\u8ba4\u6ce8\u91ca\u4e86\u6e90\u7801\u955c\u50cf\u4ee5\u63d0\u9ad8 apt update \u901f\u5ea6\uff0c\u5982\u6709\u9700\u8981\u53ef\u81ea\u884c\u53d6\u6d88\u6ce8\u91ca\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse\n\n# \u9884\u53d1\u5e03\u8f6f\u4ef6\u6e90\uff0c\u4e0d\u5efa\u8bae\u542f\u7528\n# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse\n</code></pre> <p>\u6ce8\u610f\uff1a\u8981\u9009\u62e9\u5bf9\u5e94Ubuntu\u7248\u672c\u7684\u8f6f\u4ef6\u6e90</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u66f4\u65b0\u7d22\u5f15</p> <pre><code>sudo apt update\n</code></pre> <ol> <li> <p>\u6e05\u534e\u5927\u5b66\u5f00\u6e90\u955c\u50cf\u7ad9\uff0cUbuntu \u955c\u50cf\u4f7f\u7528\u5e2e\u52a9 \u21a9</p> </li> <li> <p>\u4e2d\u79d1\u5927\u5f00\u6e90\u955c\u50cf\u7ad9\uff0cUbuntu \u6e90\u4f7f\u7528\u5e2e\u52a9 \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/D/","title":"\ud83c\udf4e \u5b89\u88c5\u5b57\u4f53","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/D/#_1","title":"\u7b2c\u4e00\u6b65\uff0c\u590d\u5236\u5b57\u4f53","text":"<p>\u5c06\u5b57\u4f53\u6587\u4ef6\u590d\u5236\u5230<code>~/.fonts/</code>\u6587\u4ef6\u5939\u4e0b\u3002\u8fd9\u4e2a\u6587\u4ef6\u5939\u662f\u7528\u4e8e\u5b58\u50a8\u4e2a\u4eba\u7528\u6237\u7684\u5b57\u4f53\u6587\u4ef6\u7684\uff0c\u5982\u679c\u8be5\u6587\u4ef6\u5939\u4e0d\u5b58\u5728\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u521b\u5efa\uff1a</p> <pre><code>mkdir ~/.fonts\n</code></pre> <p>\u7136\u540e\u5c06\u5b57\u4f53\u6587\u4ef6\u590d\u5236\u5230\u8be5\u6587\u4ef6\u5939\u4e0b\uff0c\u4f8b\u5982\uff1a</p> <pre><code>cp /path/to/font.ttf ~/.fonts/\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/D/#_2","title":"\u7b2c\u4e8c\u6b65\uff0c\u5237\u65b0\u5b57\u4f53\u7f13\u5b58","text":"<p>\u590d\u5236\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4f7f\u5b57\u4f53\u751f\u6548\uff1a</p> <pre><code>fc-cache -f -v\n</code></pre> <p>\u8fd9\u4e2a\u547d\u4ee4\u4f1a\u91cd\u65b0\u5efa\u7acb\u5b57\u4f53\u7f13\u5b58\uff0c\u4f7f\u65b0\u5b89\u88c5\u7684\u5b57\u4f53\u80fd\u591f\u88ab\u7cfb\u7edf\u8bc6\u522b\u548c\u4f7f\u7528\u3002</p> \u67e5\u770b\u6240\u6709\u5b57\u4f53 <pre><code>fc-list\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/D/#matplotlib","title":"\u7b2c\u4e09\u6b65\uff0cMatplotlib\u5237\u65b0\u5b57\u4f53\u7f13\u5b58\u3010\u53ef\u9009\u3011","text":"<p>Ubuntu\u7684Matplotlib\u5237\u65b0\u5b57\u4f53\u7f13\u5b58</p> <pre><code>import matplotlib\nprint(matplotlib.get_cachedir())\n</code></pre> <p>\u6211\u7684\u662f<code>/home/MasterMao/.cache/matplotlib</code></p> <p>\u5220\u6389\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e0b\u7684<code>fontlist-v330.json</code>\uff0c\u518d\u6b21\u4f7f\u7528<code>matplotlib</code>\u65f6\u4f1a\u81ea\u52a8\u5237\u65b0\u5b57\u4f53\u7f13\u5b58</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/F/","title":"\ud83c\udf6c \u914d\u7f6eSamba","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/F/#samba","title":"\u7b2c\u4e00\u6b65\uff0c\u5b89\u88c5Samba<sup>1</sup>","text":"<pre><code>sudo apt update\nsudo apt install samba\n</code></pre> <p>\u68c0\u67e5\u662f\u5426\u5b89\u88c5\u6210\u529f\uff1a</p> <pre><code>whereis samba\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>samba: /usr/sbin/samba /usr/lib/x86_64-linux-gnu/samba /etc/samba /usr/share/samba /usr/share/man/man7/samba.7.gz /usr/share/man/man8/samba.8.gz\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/F/#_1","title":"\u7b2c\u4e8c\u6b65\uff0c\u8bbe\u7f6e\u5171\u4eab\u6587\u4ef6\u5939","text":"<p>\u8fd9\u91cc\u8bbe\u7f6e\u7684\u5171\u4eab\u76ee\u5f55\u4e3a<code>~/samba</code></p> <pre><code>mkdir ~/samba\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/F/#_2","title":"\u7b2c\u4e09\u6b65\uff0c\u4fee\u6539\u914d\u7f6e\u6587\u4ef6","text":"<pre><code>sudo nano /etc/samba/smb.conf\n</code></pre> <p>\u5728\u5e95\u90e8\u6dfb\u52a0\uff1a</p> <pre><code>[sambashare]\n    comment = Samba on Ubuntu\n    path = /home/mastermao/samba\n    read only = no\n    browsable = yes\n    public = yes\n    available = yes\n    guest ok = no\n    writable = yes\n    valid users = mastermao\n    create mask = 0777\n    directory mask = 0777\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/F/#samba_1","title":"\u7b2c\u56db\u6b65\uff0c\u66f4\u65b0\u9632\u706b\u5899\u89c4\u5219\u5141\u8bb8Samba","text":"<pre><code>sudo ufw allow samba\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/F/#_3","title":"\u7b2c\u4e94\u6b65\uff0c\u8bbe\u7f6e\u7528\u6237\u8d26\u6237","text":"<pre><code>sudo smbpasswd -a mastermao\n</code></pre> <p>\u8bbe\u7f6e\u8d26\u6237\u5bc6\u7801\u540e\u5373\u53ef\u4fdd\u5b58</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/F/#samba_2","title":"\u7b2c\u516d\u6b65\uff0c\u91cd\u542fSamba\u670d\u52a1","text":"<pre><code>sudo service smbd restart\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/F/#windows","title":"\u6700\u540e\uff0cWindows\u8bbf\u95ee","text":"<p>\u6587\u4ef6\u8d44\u6e90\u7ba1\u7406\u5668\u5730\u5740\u680f\u8f93\u5165\uff1a<code>\\\\192.168.0.107</code>\uff0c\u5373\u53ef\u6253\u5f00Samba\u5171\u4eab\u6587\u4ef6\u5939</p> <ol> <li> <p>CSDN\uff0c@orange....\uff0chttps://blog.csdn.net/Cfx1998/article/details/128974277\u00a0\u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/G/","title":"\ud83c\udf7f \u914d\u7f6eJupyter\u8fdc\u7a0b\u8bbf\u95ee","text":"<p>\u3010\u80cc\u666f\u3011</p> <p>\u516c\u53f8\u7535\u8111\u6ca1\u6709GPU\uff0c\u5e73\u65f6\u4f7f\u7528Pycharm\u7684SSH\u8fde\u63a5\u5230GPU\u670d\u52a1\u5668\uff0c\u4f46\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u4f1a\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\uff0c\u5305\u62ec\uff1a</p> <ul> <li>Pycharm\u6709<code>\u6d4f\u89c8\u8fdc\u7a0b\u4e3b\u673a</code>\u5c0f\u5de5\u5177\uff0c\u4f46\u7ecf\u5e38\u4f1a\u628a\u4e0d\u540c\u9879\u76ee\u7684\u540c\u6b65\u76ee\u5f55\u641e\u4e71\uff0c\u6709\u65f6\u4e5f\u641e\u4e0d\u6e05\u6587\u4ef6\u662f\u5426\u5df2\u7ecf\u540c\u6b65</li> <li>Pycharm\u7684Notebook\u652f\u6301\u6709\u4ee3\u7801\u8865\u5168\u3001\u81ea\u52a8\u683c\u5f0f\u5316\u7b49\u529f\u80fd\uff0c\u4f46\u754c\u9762\u5e76\u6ca1\u6709\u5f88\u597d\u7528\uff0c\u6bd4\u5982\u5fc5\u987b\u5207\u6362\u82f1\u6587\u8f93\u5165\u624d\u80fd\u4f7f\u7528<code>a</code>\u6216<code>b</code>\u65b0\u589e\u5757</li> <li>\u4ee3\u7801\u4fee\u6539\u540e\u6267\u884c\uff0c\u9700\u8981\u5bf9GPU\u670d\u52a1\u5668\u4e0a\u4f20\u5e2e\u52a9\u6587\u4ef6\uff0c\u53cd\u5e94\u5f88\u6162</li> </ul> <p>\u3010\u89e3\u51b3\u65b9\u6848\u3011</p> <ol> <li>\u914d\u7f6e\u8fdc\u7a0bGPU\u670d\u52a1\u5668\u7684Jupyter Lab\uff0c\u5728\u672c\u5730\u8fdc\u7a0b\u8bbf\u95ee</li> <li>\u7ec8\u6781\u89e3\u51b3\u65b9\u6848\uff1aJetbrains Gateway</li> </ol> \u4f18\u70b9 \u7f3a\u70b9 1. Jupyter Lab\u6e05\u6d01\u3001\u8f7b\u91cf\u53162. \u54cd\u5e94\u901f\u5ea6\u5feb 1. \u6ca1\u6709\u81ea\u52a8\u683c\u5f0f\u53162. \u4ee3\u7801\u8865\u5168\u529f\u80fd\u4e0d\u591f\u5f3a\u5927 <p>\u3010\u540e\u7eed\u4f7f\u7528\u611f\u53d7\u3011</p> <p>jupyter\u4ee3\u7801\u8865\u5168\u4e00\u8a00\u96be\u5c3d\uff0c\u4e2a\u4eba\u4f7f\u7528notebook\u7684\u9891\u7387\u4e0d\u9ad8\uff0c\u4f46\u8fdc\u7a0b\u8bbf\u95eeGPU\u670d\u52a1\u5668notebook\u7684\u65b9\u6cd5\u786e\u5b9e\u6bd4\u4e4b\u524d\u65b9\u4fbf\u3002</p> <p>\u76ee\u524d\u4f7f\u7528Jetbrains\u5bb6\u7684Gateway\uff0c\u4f7f\u7528Rye\u7ba1\u7406\u73af\u5883\uff0c\u5b9e\u8df5\u611f\u89c9\u5b9e\u7528\u6027\u5f88\u5f3a</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/G/#jupyter-lab","title":"\u58f9\u4e28\u5b89\u88c5\u914d\u7f6eJupyter Lab<sup>1</sup>","text":"<p>\u8fd9\u91cc\u7528\u4e2a\u4eba\u7535\u8111\u7684WSL\u6a21\u62df\u8fdc\u7a0bGPU\u670d\u52a1\u5668</p> <p>\u9996\u5148\uff0c\u786e\u4fdd\u8fdc\u7a0b\u670d\u52a1\u5668\u5b89\u88c5\u4e86Anaconda\u6216Miniconda</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/G/#jupyter-lab_1","title":"\u7b2c\u4e00\u6b65\uff0c\u5b89\u88c5Jupyter Lab","text":"<pre><code>conda install -c conda-forge jupyterlab -y\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/G/#jupyter-lab_2","title":"\u7b2c\u4e8c\u6b65\uff0c\u8bbe\u7f6eJupyter Lab\u8bbf\u95ee\u5bc6\u7801","text":"<p>\u547d\u4ee4\u884c\u8f93\u5165\uff1a</p> <pre><code>ipython\n</code></pre> <p>\u751f\u6210hash\u5bc6\u7801</p> <pre><code>&gt;&gt;&gt; from jupyter_server.auth import passwd\n&gt;&gt;&gt; passwd()\n# \u6839\u636e\u63d0\u793a\u8f93\u5165\u5bc6\u7801\uff0c\u4f1a\u5f97\u5230\u7c7b\u4f3c\u4e0b\u9762\u7684\u79d8\u94a5\uff0c\u5c06\u79d8\u94a5\u8bb0\u5f55\n</code></pre> <p></p> <p>\u8f93\u5165<code>exit()</code>\u9000\u51faipython\u73af\u5883</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/G/#_1","title":"\u7b2c\u4e09\u6b65\uff0c\u751f\u6210\u914d\u7f6e\u6587\u4ef6","text":"<pre><code>jupyter-lab --generate-config\n</code></pre> <p>\u8fd4\u56de\uff1a</p> <pre><code>Writing default config to: /home/mastermao/.jupyter/jupyter_lab_config.py\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/G/#_2","title":"\u7b2c\u56db\u6b65\uff0c\u4fee\u6539\u914d\u7f6e\u6587\u4ef6","text":"<pre><code>sudo nano ~/.jupyter/jupyter_lab_config.py\n</code></pre> <pre><code>c.ServerApp.allow_remote_access = True\nc.ServerApp.ip = '*'\n\n# \u542f\u52a8\u65f6\u4e0d\u81ea\u52a8\u6253\u5f00\u6d4f\u89c8\u5668 \nc.ServerApp.open_browser = False\nc.LabServerApp.open_browser = False\nc.ExtensionApp.open_browser = False\nc.LabApp.open_browser = False\n\nc.ServerApp.password_required = True\n# \u6dfb\u52a0\u521a\u521a\u751f\u6210\u7684\u5bc6\u94a5\nc.ServerApp.password = 'argon2:$argon2id$v=19$m=10240,t=10,p=8$WPTImP4LkbLfUZEArh/lgQ$dqxJA33ztdvsFM4OcH0/hnVIcG87hwHMhhpetvOo67Y'\n\n# \u4fee\u6539\u7aef\u53e3\u53f7(\u53ef\u9009)\nc.ServerApp.port = 8800\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/G/#_3","title":"\u7b2c\u4e94\u6b65\uff0c\u8bbe\u7f6e\u5f00\u673a\u542f\u52a8\uff08\u53ef\u9009\uff09","text":"<p>\u6dfb\u52a0<code>jupyter.service</code>\u5230<code>/etc/systemd/system/</code>\u76ee\u5f55</p> <pre><code>sudo nano /etc/systemd/system/jupyter.service\n</code></pre> <pre><code>[Unit]\nDescription=Jupyter Notebook\nAfter=network.target\n[Service]\nType=simple\nExecStart=/home/mastermao/anaconda3/bin/jupyter-lab --config=/home/mastermao/.jupyter/jupyter_lab_config.py --no-browser\nUser=user\nGroup=user\nWorkingDirectory=/home/mastermao/\nRestart=always\nRestartSec=10\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>\u8bbe\u7f6e\u5f00\u673a\u542f\u52a8</p> <pre><code>sudo systemctl enable jupyter.service\nsudo systemctl start jupyter.service\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/G/#_4","title":"\u8d30\u4e28\u8fdc\u7a0b\u8bbf\u95ee","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/G/#ssh","title":"\u7b2c\u4e00\u6b65\uff0cSSH\u8fde\u63a5\u76ee\u6807\u670d\u52a1\u5668","text":"<pre><code>ssh mastermao@192.168.0.107 -p 22\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/G/#jupyter-lab_3","title":"\u7b2c\u4e8c\u6b65\uff0c\u542f\u52a8Jupyter Lab","text":"<pre><code>jupyter lab\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/G/#_5","title":"\u7b2c\u4e09\u6b65\uff0c\u6d4f\u89c8\u5668\u8bbf\u95ee","text":"<p>\u6d4f\u89c8\u5668\u8f93\u5165<code>192.168.0.107:8800</code></p> <p>\u8f93\u5165\u5bc6\u7801\u5373\u53ef\u8fdb\u5165</p> <p></p> <p></p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/G/#jupyter-lab_4","title":"\u53c1\u4e28\u914d\u7f6e<code>jupyter lab</code>","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/G/#1","title":"1. \u4e2d\u6587\u652f\u6301\uff08\u53ef\u9009\uff09","text":"<pre><code>pip install jupyterlab-language-pack-zh-CN -i https://pypi.tuna.tsinghua.edu.cn/simple\n</code></pre> <p>\u5728Settings \u2014\u2014 Language \u2014\u2014 \u9009\u62e9\u4e2d\u6587</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/G/#2","title":"2. \u4ee3\u7801\u81ea\u52a8\u8865\u5168\uff08\u53ef\u9009\uff09<sup>2</sup>","text":"<pre><code>pip install jupyterlab-lsp -i https://pypi.tuna.tsinghua.edu.cn/simple\n\npip install -U jedi-language-server -i https://pypi.tuna.tsinghua.edu.cn/simple\n</code></pre> <p>\u5f00\u542f\u81ea\u52a8\u8865\u5168\uff1a</p> <p>\u8bbe\u7f6e \u2014\u2014 \u8bbe\u7f6e\u7f16\u8f91\u5668 \u2014\u2014 \u4ee3\u7801\u8865\u5168 \u2014\u2014 \u52fe\u9009<code>\u542f\u7528\u81ea\u52a8\u8865\u5168</code></p> <p></p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/G/#pycharmjupyter-lab","title":"\u8086\u4e28Pycharm\u914d\u7f6e\u8fdc\u7a0bjupyter lab","text":"<p>\u65b0\u5efa<code>.ipynb</code>\u6587\u4ef6 \u2014\u2014 \u914d\u7f6eJupyter\u670d\u52a1\u5668 \u2014\u2014 \u914d\u7f6e\u7684\u670d\u52a1\u5668 \u2014\u2014 \u8f93\u5165\u76ee\u6807Jupyter Lab\u7684IP\u53ca\u7aef\u53e3\uff0c\u5982\uff1a</p> <pre><code>http://192.168.0.108:8889\n</code></pre> <ol> <li> <p>\u77e5\u4e4e\uff0c@Saito\uff0cUbuntu22.04\u914d\u7f6ejupyter-lab\u5e76\u5f00\u542f\u8fdc\u7a0b\u8bbf\u95ee\u4e0e\u5f00\u673a\u81ea\u542f\u52a8 \u21a9</p> </li> <li> <p>\u535a\u5ba2\u56ed\uff0c@oneDonkey\uff0cJupyter Lab\u5b89\u88c5\uff0c\u4e2d\u6587\u8bbe\u7f6e\uff0c\u81ea\u52a8\u8865\u5168\u4e0e\u4ee3\u7801\u63d0\u793a \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/H/","title":"\ud83c\udf88 \u914d\u7f6eSSH","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/H/#_1","title":"\u7b2c\u4e00\u6b65\uff0c\u66f4\u65b0","text":"<pre><code>sudo apt update\n</code></pre> <pre><code>sudo apt upgrade\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/H/#ssh","title":"\u7b2c\u4e8c\u6b65\uff0c\u914d\u7f6eSSH","text":"<p>\u5b89\u88c5SSH\u670d\u52a1\uff1a</p> <pre><code>sudo apt-get install ssh\n</code></pre> <p>\u542f\u52a8SSH\uff1a</p> <pre><code>sudo service ssh start\n</code></pre> <p>\u8bbe\u7f6e\u5f00\u673a\u542f\u52a8\uff1a</p> <pre><code>sudo systemctl enable ssh\n</code></pre> <p>\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff1a</p> <pre><code>sudo nano /etc/ssh/sshd_config\n</code></pre> <pre><code># \u7aef\u53e3\uff0c\u9ed8\u8ba422\nPort 22\n</code></pre> <p>\u5176\u4ed6\u64cd\u4f5c</p> <p>\u5173\u95edSSH\uff1a</p> <pre><code>sudo service ssh stop\n</code></pre> <p>\u67e5\u770bSSH\u72b6\u6001\uff1a</p> <pre><code>sudo service ssh status\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/H/#3-ssh","title":"3. \u542f\u52a8ssh\u670d\u52a1","text":"<pre><code>sudo service ssh --full-restart\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/I/","title":"\ud83c\udf92 \u538b\u7f29\u547d\u4ee4\u6c47\u603b","text":"<p>Linux\u538b\u7f29\u547d\u4ee4\u5e38\u7528\u7684\u6709\uff1a<code>tar</code>\u3001<code>tgz</code>\u3001<code>gzip</code>\u3001<code>zip</code>\u3001<code>rar</code></p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/I/#_1","title":"\u96f6\u4e28\u6c47\u603b","text":"\u538b\u7f29\u7c7b\u578b \u538b\u7f29\u547d\u4ee4 \u89e3\u538b\u7f29\u547d\u4ee4 <code>.tar</code> <code>tar -cvf file.tar file</code> <code>tar -xvf file.tar</code> <code>.tgz</code>\uff08\u63a8\u8350\uff09 <code>tar -zcvf file.tgz file</code> <code>tar -zxvf file.tgz</code> <code>.gzip</code> <code>gzip -r examples.gz examples</code> <code>gunzip -r examples.gz</code> <code>.zip</code> <code>zip -r examples.zip examples</code> <code>unzip examples.zip</code> <code>.rar</code> <code>rar -a examples.rar examples</code> <code>unrar examples.rar</code>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/I/#tar","title":"\u58f9\u4e28<code>tar</code>","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/I/#1","title":"1. \u538b\u7f29\u547d\u4ee4","text":"<pre><code>tar -cvf examples.tar files|dir\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <pre><code>-c, --create  create a new archive \u521b\u5efa\u4e00\u4e2a\u5f52\u6863\u6587\u4ef6\n-v, --verbose verbosely list files processed \u663e\u793a\u521b\u5efa\u5f52\u6863\u6587\u4ef6\u7684\u8fdb\u7a0b\n-f, --file=ARCHIVE use archive file or device ARCHIVE  \u540e\u9762\u8981\u7acb\u523b\u63a5\u88ab\u5904\u7406\u7684\u6863\u6848\u540d,\u6bd4\u5982--file=examples.tar\n</code></pre> <p>\u4e3e\u4f8b\uff1a</p> <pre><code>tar -cvf file.tar file1       #file1\u6587\u4ef6\ntar -cvf file.tar file1 file2 #file1\uff0cfile2\u6587\u4ef6\ntar -cvf file.tar dir         #dir\u76ee\u5f55\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/I/#2","title":"2. \u89e3\u538b\u547d\u4ee4","text":"<pre><code>tar -xvf examples.tar \uff08\u89e3\u538b\u81f3\u5f53\u524d\u76ee\u5f55\u4e0b\uff09\ntar -xvf examples.tar  -C /path (/path \u89e3\u538b\u81f3\u5176\u5b83\u8def\u5f84)\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <pre><code>-x, --extract, extract files from an archive \u4ece\u4e00\u4e2a\u5f52\u6863\u6587\u4ef6\u4e2d\u63d0\u53d6\u6587\u4ef6\n</code></pre> <p>\u4e3e\u4f8b\uff1a</p> <pre><code>tar -xvf file.tar\ntar -xvf file.tar -C /temp  #\u89e3\u538b\u5230temp\u76ee\u5f55\u4e0b\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/I/#tgz","title":"\u8d30\u4e28<code>tgz</code>","text":"<p><code>tar</code>\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570<code>-z</code>\u540c\u65f6\u8c03\u7528<code>gzip</code>\u5bf9tar\u5305\u8fdb\u884c\u538b\u7f29</p> <p><code>.tar.gz</code>\u548c<code>.tgz</code>\u683c\u5f0f\u662f\u76f8\u540c\u7684\uff0c\u547d\u540d\u4e0d\u540c\u800c\u5df2</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/I/#1_1","title":"1. \u538b\u7f29\u547d\u4ee4","text":"<pre><code>tar -zcvf examples.tgz examples (examples\u5f53\u524d\u6267\u884c\u8def\u5f84\u4e0b\u7684\u76ee\u5f55)\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <pre><code>-z, --gzip filter the archive through gzip \u901a\u8fc7gzip\u538b\u7f29\u7684\u5f62\u5f0f\u5bf9\u6587\u4ef6\u8fdb\u884c\u5f52\u6863\n</code></pre> <p>\u4e3e\u4f8b\uff1a</p> <pre><code>tar -zcvf file.tgz dir\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/I/#2_1","title":"2. \u89e3\u538b\u7f29\u547d\u4ee4","text":"<pre><code>tar -zxvf examples.tar \uff08\u89e3\u538b\u81f3\u5f53\u524d\u6267\u884c\u76ee\u5f55\u4e0b\uff09\ntar -zxvf examples.tar  -C /path (/path \u89e3\u538b\u81f3\u5176\u5b83\u8def\u5f84)\n</code></pre> <p>\u4e3e\u4f8b\uff1a</p> <pre><code>tar -zxvf file.tgz\ntar -zxvf file.tgz -C /temp\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/I/#gzip","title":"\u53c1\u4e28<code>gzip</code>","text":"<p><code>gzip</code>\u53ea\u80fd\u538b\u7f29\u6587\u4ef6\u4e0d\u80fd\u6253\u5305\uff0c\u5e76\u4e0d\u4f1a\u5c06\u67d0\u4e00\u76ee\u5f55\u6253\u5305\u4e3a<code>xxx.gz</code>\uff0c\u800c\u662f\u5c06\u8be5\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u5206\u522b\u538b\u7f29\u4e3a<code>.gz</code></p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/I/#1_2","title":"1. \u538b\u7f29\u547d\u4ee4","text":"<pre><code>gzip -r -6 examples.gz examples\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <pre><code>-z, --gzip filter the archive through gzip \u901a\u8fc7gzip\u538b\u7f29\u7684\u5f62\u5f0f\u5bf9\u6587\u4ef6\u8fdb\u884c\u5f52\u6863\n-6 \u6307\u5b9a\u538b\u7f29\u6548\u7387\uff0c\u9ed8\u8ba4\u4e3a6\uff0c\u8303\u56f41\u52309\uff0c1\u7684\u538b\u7f29\u6548\u7387\u6700\u5c0f\u538b\u7f29\u901f\u5ea6\u6700\u5feb\uff0c9\u53cd\u4e4b\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/I/#2_2","title":"2. \u89e3\u538b\u7f29\u547d\u4ee4","text":"<pre><code>gzip -dr examples.gz\ngunzip -r examples.gz\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/I/#zip","title":"\u8086\u4e28<code>zip</code>","text":"<p>zip \u683c\u5f0f\u662f\u5f00\u653e\u4e14\u514d\u8d39\u7684\uff0c\u5e7f\u6cdb\u4f7f\u7528\u5728 Windows\u3001Linux\u3001MacOS \u5e73\u53f0\u3002\u7f3a\u70b9\u662f\u538b\u7f29\u7387\u4e0d\u9ad8\uff0c\u4e0d\u5982<code>rar</code>\u53ca<code>.tar.gz</code> \u7b49\u683c\u5f0f\u3002</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/I/#1_3","title":"1. \u538b\u7f29\u547d\u4ee4","text":"<pre><code>zip -r examples.zip examples (examples\u4e3a\u76ee\u5f55)\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <pre><code>-r \u9012\u5f52\u5904\u7406\uff0c\u5c06\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u548c\u5b50\u76ee\u5f55\u4e00\u5e76\u5904\u7406\u3002\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/I/#2_3","title":"2. \u89e3\u538b\u7f29\u547d\u4ee4","text":"<pre><code>unzip examples.zip\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/I/#rar","title":"\u4f0d\u4e28<code>rar</code>","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/I/#1_4","title":"1. \u538b\u7f29\u547d\u4ee4","text":"<pre><code>rar -a examples.rar examples\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/I/#2_4","title":"2. \u89e3\u538b\u7f29\u547d\u4ee4","text":"<pre><code>rar -x examples.rar\nunrar examples.rar\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/J/","title":"\ud83c\udfaf \u914d\u7f6ewget\u4ee3\u7406","text":"<p>\u5982\u4e0b\u663e\u793a\u53ef\u80fd\u662f\u88ab\u516c\u53f8\u5185\u7f51\u5899\u6389\u4e86\uff0c\u9700\u8981\u8bbe\u7f6e\u4ee3\u7406</p> <pre><code>Connecting to physionet.org (physionet.org)|18.18.42.54|:443... failed: Resource temporarily unavailable.\nRetrying.\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/J/#_1","title":"\u58f9\u4e28\u4ee3\u7406\u8bbe\u7f6e","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/J/#1","title":"1. \u63a8\u8350\u914d\u7f6e","text":"<p>Ubuntu\u4e0b\u4fee\u6539<code>~/.wgetrc</code>\u6587\u4ef6\uff0cWindows\u7528\u6237\u76ee\u5f55\u4e0b\u4fee\u6539\u6216\u65b0\u5efa<code>.wgetrc</code>\uff0c\u6dfb\u52a0\uff1a</p> <pre><code>http_proxy = http://example.com:8080\nhttps_proxy = https://example.com:8080\nproxy_user = USER_NAME\nproxy_password = PASSWORD\nuse_proxy = on\nwait = 15\n</code></pre> <p>\u6ce8\u610f\uff1a\u5bc6\u7801\u4e2d\u7684\u7279\u6b8a\u5b57\u7b26\u9700\u8981\u7528\u7f16\u7801\u66ff\u4ee3</p> \u7279\u6b8a\u5b57\u7b26 \u7f16\u7801 \u7279\u6b8a\u5b57\u7b26 \u7f16\u7801 \u7279\u6b8a\u5b57\u7b26 \u7f16\u7801 ! %21 &amp; %26 ) %29 # %23 ' %27 * %2A $ %24 ( %28 + %2B , %2C / %2F : %3A ; %3B = %3D ? %3F @ %40 [ %5B ] %5D"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/J/#2","title":"2. \u4e34\u65f6\u914d\u7f6e","text":"<p>\u4e34\u65f6\u4f7f\u7528proxy\uff0c\u53ef\u4ee5\u4f7f\u7528\uff1a</p> <pre><code>export http_proxy=http://USER_NAME:PASSWORD@example.com:8080\nexport https_proxy=https://USER_NAME:PASSWORD@example.com:8080\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/J/#_2","title":"\u8d30\u4e28\u89e3\u51b3\u65b9\u6848","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/J/#1-windows","title":"1. Windows\u89e3\u51b3\u65b9\u6848","text":"<p>Windows\u7cfb\u7edf\u4e0b<code>wget</code>\u547d\u4ee4\u4e0d\u53ef\u7528\uff0c\u4e0b\u9762\u7ed9\u51fa\u4e00\u79cd\u66f2\u7ebf\u6551\u56fd\u7684\u65b9\u6cd5\uff1a</p> <p>\u7b2c\u4e00\u6b65\uff0c\u4e0b\u8f7d<code>wget.exe</code>\uff0c\u7f51\u5740\uff1aGNU Wget 1.21.4 for Windows (eternallybored.org)</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u653e\u5728\u7528\u6237\u76ee\u5f55\u4e0b\uff1a<code>C:\\Users\\username</code></p> <p>\u7b2c\u4e09\u6b65\uff0c\u914d\u7f6e\u4ee3\u7406\u3002\u5728\u7528\u6237\u76ee\u5f55\u4e0b\u65b0\u5efa<code>.wgetrc</code>\u6587\u4ef6\uff0c\u6dfb\u52a0\u4ee3\u7406\u914d\u7f6e\uff1a</p> <pre><code>http_proxy = http://example.com:8080\nhttps_proxy = https://example.com:8080\nproxy_user = USER_NAME\nproxy_password = PASSWORD\nuse_proxy = on\nwait = 15\n</code></pre> <p>\u7b2c\u56db\u6b65\uff0c\u76ee\u6807\u6587\u4ef6\u5939\u4e0b\u65b0\u5efa<code>scripts.py</code>\uff1a</p> <pre><code>import os\n\ncmd = 'C:\\\\Users\\\\username\\\\wget.exe -r -N -c -np https://physionet.org/files/mimic3wdb-matched/1.0/'\nos.system(cmd)\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/J/#2-linux","title":"2. Linux\u89e3\u51b3\u65b9\u6848","text":"<p>\u53ef\u4ee5\u641c\u7d22\u4f7f\u7528<code>mwget</code>\u66ff\u4ee3<code>wget</code>\uff0c\u53ef\u4ee5\u5b9e\u73b0\u591a\u7ebf\u7a0b\u4e0b\u8f7d\u3002</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/1%EF%B8%8F%E2%83%A3%20Linux%28Ubuntu%29/K/","title":"\ud83d\udc1e \u914d\u7f6ecurl\u4ee3\u7406","text":"<p>\u5bb6\u76ee\u5f55\u65b0\u5efa<code>.curlrc</code> </p> <pre><code>sudo nano ~/.curlrc\n</code></pre> <p>\u914d\u7f6e\u4ee3\u7406\uff1a</p> <pre><code>proxy=\"http://usr:passwd@ip:port\n</code></pre> \u5173\u952e\u5b57 \u542b\u4e49 \u4e3e\u4f8b <code>usr</code> \u7528\u6237\u540d <code>mastermao</code> <code>passwd</code> \u5bc6\u7801 <code>123456</code> <code>ip</code> \u4ee3\u7406\u7f51\u5740 <code>www.example.com</code> <code>port</code> \u7aef\u53e3\u53f7 <code>8080</code> <p>\u5219\uff1a</p> <pre><code>proxy=\"http://mastermao:123456@www.example.com:8080\n</code></pre> <p>\u9a8c\u8bc1\u914d\u7f6e\uff1a</p> <pre><code>curl www.baidu.com\n</code></pre> <pre><code>&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"&gt;&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"&gt;&lt;meta content=\"always\" name=\"referrer\"&gt;&lt;meta name=\"theme-color\" content=\"#ffffff\"&gt;&lt;meta name=\"description\" content=\"\u5168\u7403\u9886\u5148\u7684\u4e2d\u6587\u641c\u7d22\u5f15\u64ce\u3001\u81f4\u529b\u4e8e\u8ba9\u7f51\u6c11\u66f4\u4fbf\u6377\u5730\u83b7\u53d6\u4fe1\u606f\uff0c\u627e\u5230\u6240\u6c42\u3002\u767e\u5ea6\u8d85\u8fc7\u5343\u4ebf\u7684\u4e2d\u6587\u7f51\u9875\u6570\u636e\u5e93\uff0c\u53ef\u4ee5\u77ac\u95f4\u627e\u5230\u76f8\u5173\u7684\u641c\u7d22\u7ed3\u679c\u3002\"&gt;\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/2%EF%B8%8F%E2%83%A3%20WSL/","title":"\ud83c\udf80 \u8f6f\u4ef6\u53ca\u914d\u7f6e/2\ufe0f\u20e3 WSL","text":"<ul> <li> <p>WSL\u5b89\u88c5\u6307\u5b9a\u7248\u672c</p> <p> Getting started</p> </li> <li> <p>WSL\u4fee\u6539\u521d\u59cb\u76ee\u5f55</p> <p> Getting started</p> </li> <li> <p>\u8c03\u7528WSL\u547d\u4ee4</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/2%EF%B8%8F%E2%83%A3%20WSL/A/","title":"\ud83e\udda2 WSL\u5b89\u88c5\u6307\u5b9a\u7248\u672c","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/2%EF%B8%8F%E2%83%A3%20WSL/A/#_1","title":"\u58f9\u4e28\u51c6\u5907\u5de5\u4f5c","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/2%EF%B8%8F%E2%83%A3%20WSL/A/#1-linuxwindows","title":"1. \u542f\u7528\u9002\u7528\u4e8eLinux\u7684Windows\u5b50\u7cfb\u7edf","text":"<p>PowerShell\u6267\u884c\uff1a</p> <pre><code>dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart\n</code></pre> <p>\u6b64\u65f6\u5b89\u88c5\u7684\u662fWSL 1</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/2%EF%B8%8F%E2%83%A3%20WSL/A/#2","title":"2. \u542f\u7528\u865a\u62df\u673a\u529f\u80fd","text":"<pre><code>dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart\n</code></pre> <p>WSL 2\u5fc5\u987b\u5f00\u542f\u865a\u62df\u673a\u5e73\u53f0\u529f\u80fd</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/2%EF%B8%8F%E2%83%A3%20WSL/A/#wsl","title":"\u8d30\u4e28\u5207\u6362WSL\u7248\u672c\uff08\u53ef\u9009\uff09","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/2%EF%B8%8F%E2%83%A3%20WSL/A/#1-linuxwsl-1wsl-2","title":"1. \u4e0b\u8f7dLinux\u5185\u6838\u66f4\u65b0\u5305\uff08WSL 1\u5347\u7ea7\u5230WSL 2\uff09","text":"<p>\u4e0b\u8f7d\u5730\u5740\uff1a\u9002\u7528\u4e8e x64 \u8ba1\u7b97\u673a\u7684 WSL2 Linux \u5185\u6838\u66f4\u65b0\u5305</p> <p>\u4e0b\u8f7d\u540e\u5b89\u88c5<code>.msi</code>\u6587\u4ef6</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/2%EF%B8%8F%E2%83%A3%20WSL/A/#2-wsl-2","title":"2. \u5c06WSL 2\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u7248\u672c","text":"<pre><code>wsl --set-default-version 2\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/2%EF%B8%8F%E2%83%A3%20WSL/A/#_2","title":"\u53c1\u4e28\u5b89\u88c5\u6307\u5b9a\u5206\u53d1\u7248\u672c","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/2%EF%B8%8F%E2%83%A3%20WSL/A/#1-microsoft-storelinux","title":"1. \u7b2c\u4e00\u79cd\uff0c<code>Microsoft Store</code>\u5b89\u88c5Linux\u5206\u53d1\u7248\uff08\u7565\uff09","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/2%EF%B8%8F%E2%83%A3%20WSL/A/#2wsl","title":"2.\u7b2c\u4e8c\u79cd\uff0c<code>wsl</code>\u547d\u4ee4\u5728\u7ebf\u5b89\u88c5","text":"<p>\u9996\u5148\uff0c\u4f7f\u7528<code>wsl --list --online</code>\u5c55\u793a\u53ef\u5b89\u88c5\u6709\u6548\u5206\u53d1\u5217\u8868\uff1a</p> <pre><code>NAME            FRIENDLY NAME\nUbuntu          Ubuntu\nDebian          Debian GNU/Linux\nkali-linux      Kali Linux Rolling\nopenSUSE-42     openSUSE Leap 42\nSLES-12         SUSE Linux Enterprise Server v12\nUbuntu-16.04    Ubuntu 16.04 LTS\nUbuntu-18.04    Ubuntu 18.04 LTS\nUbuntu-20.04    Ubuntu 20.04 LTS\n</code></pre> <p>\u7136\u540e\u4f7f\u7528<code>wsl --install -d &lt;\u5206\u53d1&gt;</code>\u5b89\u88c5\uff0c\u5982\uff1a</p> <pre><code>wsl --install -d Ubuntu-18.04\n</code></pre> <p>Note</p> <p>\u4e0a\u8ff0\u5206\u53d1\u5217\u8868\u53ef\u80fd\u4e0d\u5305\u542b\u81ea\u5df1\u60f3\u5b89\u88c5\u7684\u7248\u672c\uff0c\u6bd4\u5982<code>Ubuntu 22.04</code></p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/2%EF%B8%8F%E2%83%A3%20WSL/A/#3","title":"3. \u7b2c\u4e09\u79cd\uff0c\u624b\u52a8\u4e0b\u8f7d\u5b89\u88c5","text":"<p>\u5b98\u65b9\u6559\u7a0b\uff1a\u65e7\u7248 WSL \u7684\u624b\u52a8\u5b89\u88c5\u6b65\u9aa4\u63d0\u4f9b\u7684\u53ef\u5b89\u88c5\u7248\u672c\u5305\u62ec\uff1a</p> <pre><code>Ubuntu\nUbuntu 22.04 LTS\nUbuntu 20.04\nUbuntu 20.04 ARM\nUbuntu 18.04\nUbuntu 18.04 ARM\nUbuntu 16.04\nDebian GNU/Linux\nKali Linux\nSUSE Linux Enterprise Server 12\nSUSE Linux Enterprise Server 15 SP2\nSUSE Linux Enterprise Server 15 SP3\nopenSUSE Tumbleweed\nopenSUSE Leap 15.3\nopenSUSE Leap 15.2\nOracle Linux 8.5\nOracle Linux 7.9\nFedora Remix for WSL\n</code></pre> <p>\u4ee5\u5b89\u88c5<code>Ubuntu 22.04 LTS</code>\u4e3a\u4f8b\uff1a</p> <p>\u4e0b\u8f7d\u5b89\u88c5\u5305\uff1a</p> <pre><code>Invoke-WebRequest -Uri https://aka.ms/wslubuntu2204 -OutFile Ubuntu.appx -UseBasicParsing\n</code></pre> <p>\u5b89\u88c5\u5305\u4f4d\u4e8e\u5f53\u524dPowerShell\u76ee\u5f55\u4e0b\uff0c\u7136\u540e\u5b89\u88c5</p> <pre><code>Add-AppxPackage .\\Ubuntu.appx\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/2%EF%B8%8F%E2%83%A3%20WSL/D/","title":"\ud83d\udd4a\ufe0f WSL\u4fee\u6539\u521d\u59cb\u76ee\u5f55","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/2%EF%B8%8F%E2%83%A3%20WSL/D/#wsl","title":"\u58f9\u4e28WSL\u521d\u59cb\u76ee\u5f55","text":"<p>\u67e5\u770bWSL\u7cfb\u7edf\u6587\u4ef6\u7ed3\u6784\uff1a</p> <pre><code>ls /\n</code></pre> <p>\u5c55\u793a\u51fa\u6839\u76ee\u5f55\u4e0b\u5305\u542b\uff1a<code>dev</code>\u3001<code>home</code>\u3001<code>media</code>\u3001<code>tmp</code>\u3001<code>boot</code>\u3001<code>etc</code>\u3001<code>mnt</code>\u3001<code>snap</code>\u3001<code>sys</code>\u3001<code>usr</code>\u7b49</p> <p>\u5728\u6253\u5f00Terminal\u65f6\uff0c\u663e\u793a\uff1a</p> <pre><code># \u5728Ubuntu 18.04\u8001\u7248\u672c\u7684WSL\u4e0a\u4f1a\u76f4\u63a5\u5bfc\u822a\u5230Windows\u7528\u6237\u76ee\u5f55\nmastermao@\u4e00\u4e00\u98ce\u548c\u6a58:/mnt/c/Users/MasterMao$ _\n\n# \u5728Ubuntu 22.04\u7b49\u65b0\u7248\u672c\u4e0a\u4f1a\u5bfc\u822a\u5230Linux\u7684\u7528\u6237\u76ee\u5f55\nmastermao@MasterMao:~$ _\n</code></pre> <p>\u4e0d\u8bbaWSL\u662f\u5426\u5c06Windows\u7cfb\u7edf\u7684\u7528\u6237\u6587\u4ef6\u5939\u4f5c\u4e3a\u521d\u59cb\u76ee\u5f55\uff0c\u90fd\u4e0d\u5f71\u54cd\u5176\u771f\u5b9ehome\u76ee\u5f55\u4e3a<code>~</code>\u3002</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/2%EF%B8%8F%E2%83%A3%20WSL/D/#wsl_1","title":"\u8d30\u4e28\u4fee\u6539WSL\u521d\u59cb\u76ee\u5f55<sup>1</sup>","text":"<p>\u4e2a\u4eba\u4e60\u60ef\u521d\u59cb\u76ee\u5f55\u4e3aWindows\u7684\u7528\u6237\u6587\u4ef6\u5939\uff08\u65b0\u5b89\u88c5\u7684WSL2\u521d\u59cb\u6587\u4ef6\u5939\u4e3a<code>~</code>\uff09\uff0c\u4fee\u6539\u65b9\u6cd5\u5982\u4e0b\uff1a</p> <pre><code>sudo nano /etc/profile\n</code></pre> <p>\u6587\u4ef6\u672b\u5c3e\u6dfb\u52a0\uff1a</p> <pre><code>cd /mnt/c/Users/MasterMao\n</code></pre> <ol> <li> <p>CSDN\uff0c@\u5fae\u6b65_ym\uff0cUbuntu\uff1a\u914d\u7f6e\u73af\u5883\u53d8\u91cf\u7684\u4e24\u79cd\u5e38\u7528\u65b9\u6cd5... \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/2%EF%B8%8F%E2%83%A3%20WSL/E/","title":"\u2603\ufe0f \u8c03\u7528WSL\u547d\u4ee4","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/2%EF%B8%8F%E2%83%A3%20WSL/E/#wsl-git","title":"\u58f9\u4e28\u8c03\u7528WSL-git","text":"<p>\u4f17\u6240\u5468\u77e5\uff0cWindows\u4f7f\u7528git\u9700\u8981\u5b89\u88c5\u76f8\u5173\u8f6f\u4ef6\uff0c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u8c03\u7528Linux\u81ea\u5e26\u7684git\u529f\u80fd</p> <p>\u7b2c\u4e00\u6b65\uff0c\u521b\u5efagit.cmd\u811a\u672c</p> <p>\u65b0\u5efa\u6587\u4ef6\uff1a<code>C:\\Users\\MasterMao\\git\\git.cmd</code></p> <pre><code>@echo off\nbash -c \"/usr/bin/git %*\"\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff0c\u6dfb\u52a0\u73af\u5883\u53d8\u91cf</p> <p>\u6b64\u7535\u8111\u2014\u2014\u5c5e\u6027\u2014\u2014\u9ad8\u7ea7\u7cfb\u7edf\u8bbe\u7f6e\u2014\u2014\u9ad8\u7ea7-\u73af\u5883\u53d8\u91cf\u2014\u2014Path\u2014\u2014\u7f16\u8f91\u2014\u2014\u65b0\u5efa\uff0c\u5c06<code>git.cmd</code>\u6587\u4ef6\u8def\u5f84<code>C:\\Users\\MasterMao\\git</code>\u5199\u5165\u3002</p> <p>\u7b2c\u4e09\u6b65\uff0c\u9a8c\u8bc1</p> <p>\u5728Windows Terminal\u6216Pycharm Terminal\u4e2d\u67e5\u8be2git\u7248\u672c\uff1a</p> <pre><code>git --version\n# \u8c03\u7528\u6210\u529f\uff1a\n# git version 2.25.1\n</code></pre> <p>\u6700\u540e\uff0cPycharm\u4f7f\u7528WSL-git\uff1a</p> <ol> <li>\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u76f4\u63a5\u4f7f\u7528git\u547d\u4ee4</li> <li>\u8bbe\u7f6e\u2014\u2014\u7248\u672c\u63a7\u5236\u2014\u2014Git\u4e2d\uff0c\u8bbe\u7f6eGit\u53ef\u6267\u884c\u6587\u4ef6\u8def\u5f84\u4e3a<code>C:\\Users\\MasterMao\\git\\git.cmd</code>\uff0c\u70b9\u51fb\u6d4b\u8bd5\u5373\u53ef\u770b\u5230git\u7248\u672c</li> </ol> <p></p> <p>\u4f46\u6211\u4f7f\u75282\u7684\u65f6\u5019\u5728\u53f3\u4e0b\u89d2\u603b\u4f1a\u51fa\u73b0\u70e6\u4eba\u7684\u626b\u63cf\u8fdb\u5ea6\u6761\uff0c\u4e0d\u63a8\u8350\u3002</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/2%EF%B8%8F%E2%83%A3%20WSL/E/#sass","title":"\u8d30\u4e28\u8c03\u7528sass\u529f\u80fd","text":"<p>sass\u7528\u4e8e\u524d\u7aef\u4e2d\u5c06<code>.SCSS</code>\u3001<code>.SASS</code>\u6587\u4ef6\u7f16\u8bd1\u6210<code>.CSS</code>\u6587\u4ef6</p> <p>\u7b2c\u4e00\u6b65\uff0cWSL\u4e2d\u5b89\u88c5sass<sup>1</sup></p> <pre><code>sudo npm install -g sass\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff0c\u521b\u5efasass.bat\u811a\u672c</p> <p>\u65b0\u5efa\u6587\u4ef6\uff1a<code>C:\\Users\\MasterMao\\sass\\sass.cmd</code></p> <pre><code>@echo off\nbash -c \"/usr/bin/sass %*\"\n</code></pre> <p>\u7b2c\u4e09\u6b65\uff0c\u6dfb\u52a0\u73af\u5883\u53d8\u91cf</p> <p>\u6b64\u7535\u8111\u2014\u2014\u5c5e\u6027\u2014\u2014\u9ad8\u7ea7\u7cfb\u7edf\u8bbe\u7f6e\u2014\u2014\u9ad8\u7ea7-\u73af\u5883\u53d8\u91cf\u2014\u2014Path\u2014\u2014\u7f16\u8f91\u2014\u2014\u65b0\u5efa\uff0c\u5c06<code>sass.cmd</code>\u6587\u4ef6\u8def\u5f84<code>C:\\Users\\MasterMao\\sass</code>\u5199\u5165\u3002</p> <p>\u7b2c\u56db\u6b65\uff0c\u9a8c\u8bc1</p> <p>\u5728Windows Terminal\u6216Pycharm Terminal\u4e2d\u67e5\u8be2sass\u7248\u672c\uff1a</p> <pre><code>sass --version\n\n# \u8c03\u7528\u6210\u529f\n# 1.57.1 compiled with dart2js 2.18.6\n</code></pre> <p>\u6700\u540e\uff0cWebStorm\u8c03\u7528WSL-sass</p> <p>\u8bbe\u7f6e\u2014\u2014\u5de5\u5177\u2014\u2014File Watcher\u4e2d\uff0c\u65b0\u5efaFile Watcher\uff0c\u6b64\u65f6\u7a0b\u5e8f\u5e94\u8be5\u9ed8\u8ba4\u627e\u5230\u4e86sass\u5de5\u5177\uff0c\u786e\u5b9a\u5373\u53ef</p> <p></p> <p>\u5176\u4ed6\u529f\u80fd</p> <p>\u5176\u4ed6\u529f\u80fd\u5305\u62ecCSSO\u3001SCSS/Sass\u3001Less\u3001UglifyJS\u7b49\uff0c\u65b9\u6cd5\u5927\u81f4\u76f8\u540c\u3002\u9644\u5b89\u88c5\u547d\u4ee4\uff1a <pre><code># CSSO\nsudo npm install -g csso-cli\n# SCSS/Sass\nsudo npm install -g sass\n# Less\nsudo npm install --global less\n# UglifyJS\nsudo npm install --g uglify-js\n</code></pre></p> <ol> <li> <p>RUNOOB.COM\uff0cSass\u5b89\u88c5 \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/3%EF%B8%8F%E2%83%A3%20Windows%2010/","title":"\ud83c\udf80 \u8f6f\u4ef6\u53ca\u914d\u7f6e/3\ufe0f\u20e3 Windows 10","text":"<ul> <li> <p>Win10\u5e38\u89c1\u62a5\u9519\u53ca\u4fee\u590d</p> <p> Getting started</p> </li> <li> <p>WindowsTerminal\u7f8e\u5316</p> <p> Getting started</p> </li> <li> <p>SSH\u914d\u7f6e</p> <p> Getting started</p> </li> <li> <p>Windows\u7f8e\u5316</p> <p> Getting started</p> </li> <li> <p>\u4fee\u6539PPT\u56fe\u7247\u5bfc\u51fa\u5206\u8fa8\u7387</p> <p> Getting started</p> </li> <li> <p>\u56fd\u5bb6\u6807\u51c6\u53c2\u8003\u6587\u732e\u683c\u5f0f</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/3%EF%B8%8F%E2%83%A3%20Windows%2010/A/","title":"\ud83d\udcea Win10\u5e38\u89c1\u62a5\u9519\u53ca\u4fee\u590d","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/3%EF%B8%8F%E2%83%A3%20Windows%2010/A/#1-win10","title":"1. win10\u5f00\u59cb\u83dc\u5355\u78c1\u8d34\u53ea\u6709\u80cc\u666f","text":"<p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u91cd\u542fexplorer</p> <p>\u65b9\u6cd5\u4e00\uff1a\u4f7f\u7528\u547d\u4ee4\u63d0\u793a\u7b26\uff1a</p> <pre><code>taskkill /f /im explorer.exe\n</code></pre> <pre><code>start explorer\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1a<code>Ctrl</code>+<code>Alt</code>+<code>Del</code>\u6253\u5f00\u4efb\u52a1\u7ba1\u7406\u5668\uff0c\u9009\u4e2d<code>Windows \u8d44\u6e90\u7ba1\u7406\u5668</code>\uff0c\u7ed3\u675f\u4efb\u52a1\uff08\u6b64\u65b9\u6cd5\u540c\u6837\u9002\u7528\u4e8e\u90e8\u5206\u60c5\u51b5\u4e0b\u7684\u7535\u8111\u5361\u6b7b\u95ee\u9898\uff09</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/3%EF%B8%8F%E2%83%A3%20Windows%2010/A/#2-wordppt","title":"2. Word\u3001PPT \u7b49\u62d6\u52a8\u95ea\u9000","text":"<p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u7981\u7528\u786c\u4ef6\u52a0\u901f</p> <p>\u65b9\u6cd5\u4e00\uff1aGUI\u754c\u9762\u5173\u95ed\u786c\u4ef6\u52a0\u901f</p> <p>\u6587\u4ef6\u2014\u2014\u9009\u9879\u2014\u2014\u9ad8\u7ea7\u2014\u2014\u7981\u7528\u786c\u4ef6\u52a0\u901f</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u4fee\u6539\u6ce8\u518c\u8868</p> <p>\u7b2c\u4e00\u6b65\uff0cWin+R\u2014\u2014\u6253\u5f00regedit</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u627e\u5230  HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\16.0\\Common</p> <p>\u7b2c\u4e09\u6b65\uff0c\u65b0\u5efa\u2014\u2014\u9879\u2014\u2014\u547d\u540d Graphics</p> <p>\u7b2c\u56db\u6b65\uff0cGraphics\u2014\u2014\u65b0\u5efa\u2014\u2014DWORD\u503c\u2014\u2014DisableHardwareAcceleration</p> <p>\u7b2c\u4e94\u6b65\uff0cDisableHardwareAcceleration\u53cc\u51fb\u2014\u20140\u6539\u4e3a1</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/3%EF%B8%8F%E2%83%A3%20Windows%2010/A/#3-chrome","title":"3. Chrome\u7cfb\u6d4f\u89c8\u5668\u6253\u5f00\u5168\u9ed1","text":"<p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u5173\u95ed\u786c\u4ef6\u52a0\u901f</p> <p>\u5c5e\u6027\u2014\u2014\u5feb\u6377\u65b9\u5f0f\u2014\u2014\u76ee\u6807\u2014\u2014\u6dfb\u52a0\u201c --disable-gpu --disable-software-rasterize\u201d</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/3%EF%B8%8F%E2%83%A3%20Windows%2010/A/#4-dpi","title":"4. \u8f6f\u4ef6\u5f00\u542f\u9ad8DPI","text":"<p>\u4f7f\u75282K\u30014K\u5c4f\u65f6\uff0c\u4e00\u4e9b\u8f6f\u4ef6\u5982\u7f8e\u56fe\u79c0\u79c0\u3001\u592e\u89c6\u5f71\u97f3\u7b49\u663e\u793a\u7684\u975e\u5e38\u5c0f\uff0c\u539f\u56e0\u662f\u6ca1\u6709\u9002\u914d\u9ad8DPI\uff0c\u53ef\u4ee5\u624b\u52a8\u8bbe\u7f6e\u4e0b\u3002</p> <p>\u5feb\u6377\u65b9\u5f0f\u2014\u2014\u53f3\u952e\u201c\u5c5e\u6027\u201d\u2014\u2014\u517c\u5bb9\u6027\u2014\u2014\u66f4\u6539\u9ad8DPI\u8bbe\u7f6e\u2014\u2014\u9ad8DPI\u7f29\u653e\u66ff\u4ee3\u2014\u2014\u52fe\u9009\u66ff\u4ee3\u9ad8DPI\u7f29\u653e\u884c\u4e3a\u2014\u2014\u7f29\u653e\u6267\u884c\u9009\u62e9\u201c\u7cfb\u7edf\uff08\u589e\u5f3a\uff09\u201d</p> <p></p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/3%EF%B8%8F%E2%83%A3%20Windows%2010/B/","title":"\u26c8\ufe0f WindowsTerminal\u7f8e\u5316","text":"<p>\u9884\u89c8\uff1a</p> <p></p> <p>\u6807\u7b7e\u680f\u4e0b\u4e09\u89d2\u2014\u2014\u8bbe\u7f6e\uff1a</p> <p>\u542f\u52a8\u2014\u2014\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\uff1aUbuntu</p> <p>\u914d\u7f6e\u6587\u4ef6\u2014\u2014Ubuntu\uff1a</p> <p>\u2014\u2014\u5e38\u89c4\uff1a</p> <p>\u540d\u79f0\uff1aUbuntu\uff1b</p> <p>\u56fe\u6807\uff1a...</p> <p>\u9009\u9879\u5361\u6807\u9898\uff1aUbuntu</p> <p>\u2014\u2014\u5916\u89c2\uff1a</p> <p>\u6587\u672c\u914d\u8272\u65b9\u6848\uff1aTango Dark</p> <p>\u5b57\u4f53\uff1aMonaco</p> <p>\u5b57\u53f7\uff1a13</p> <p>\u5149\u6807\u5f62\u72b6\uff1a\u4e0b\u5212\u7ebf</p> <p>\u80cc\u666f\u56fe\u50cf\uff1a...</p> <p>\u80cc\u666f\u56fe\u50cf\u4e0d\u900f\u660e\u5ea6\uff1a50%</p> <p>\u6587\u672c\u683c\u5f0f\u5316\uff1a\u4eae\u8272</p> <p>\u4e9a\u514b\u529b\u6548\u679c\uff1a\u5f00</p> <p>Acrylic \u4e0d\u900f\u660e\u5ea6\uff1a70%</p> <p>\u6eda\u52a8\u6761\u53ef\u89c1\u6027\uff1a\u9690\u85cf</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/3%EF%B8%8F%E2%83%A3%20Windows%2010/BB/","title":"\ud83d\udd8a\ufe0f SSH\u914d\u7f6e","text":"<p>\u8f6f\u4ef6\uff1aWindows Terminal</p> <p>\u8bbe\u7f6e\u2014\u2014\u6dfb\u52a0\u65b0\u914d\u7f6e\u6587\u4ef6\uff0c\u914d\u7f6e\u547d\u4ee4\u884c\uff1a</p> <pre><code>ssh username@ip\n</code></pre> <p>\u6b64\u65f6\u9ed8\u8ba4SSH\u7aef\u53e3\u53f7\u4e3a<code>22</code></p> <p>\u5982\u679c\u9ed8\u8ba4\u7aef\u53e3\u53f7\u5df2\u4fee\u6539\uff0c\u6307\u5b9a\u7aef\u53e3\u53f7\uff1a</p> <pre><code>ssh username@ip -p xx\n</code></pre> <p>\u6b64\u65f6\u5c31\u53ef\u4ee5\u5728Windows Terminal\u4e2d\u5feb\u6377\u6253\u5f00\u8fdc\u7a0b\u7ec8\u7aef\u4e86</p> <p></p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/3%EF%B8%8F%E2%83%A3%20Windows%2010/C/","title":"\u231a Windows\u7f8e\u5316","text":"<p>\u7528\u8fc7\u4e00\u5927\u7968\u58c1\u7eb8\u8f6f\u4ef6\uff0c\u4ec0\u4e48\u6f2b\u5929\u98d8\u843d\u7684\u96ea\u82b1\u5566\u3001\u4ec0\u4e48\u9f20\u6807\u4ea4\u4e92\u82b1\u7eb9\u5566\u3001\u4ec0\u4e48Q\u5f39\u7684**\u5566\u2026\u2026\u4f7f\u7528\u4e0b\u6765\u53d1\u73b0\uff0c\u5168\u5c4f\u5de5\u4f5c\u6216\u8005\u73a9\u6e38\u620f\u7684\u65f6\u95f4\u6bd4\u8f83\u591a\uff0c\u7c7b\u4f3c\u7684\u52a8\u6001\u6548\u679c\u7b80\u76f4\u6d6a\u8d39\u6027\u80fd\u3002</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/3%EF%B8%8F%E2%83%A3%20Windows%2010/C/#_1","title":"\u58f9\u4e28\u7cfb\u7edf\u8f6f\u4ef6","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/3%EF%B8%8F%E2%83%A3%20Windows%2010/C/#1-360","title":"1. \u542f\u52a8\u9879\u7ba1\u7406\u3001\u8f6f\u4ef6\u7ba1\u5bb6\u3001\u9a71\u52a8\u7ba1\u7406\uff1a360\u5b89\u5168\u536b\u58eb","text":"<p>\u5b89\u88c5360\u5b89\u5168\u536b\u58eb\uff0c\u8bbe\u7f6e\u4e2d\u53d6\u6d88\u52fe\u9009\u6240\u6709\u9879\u76ee\u3001\u5173\u95ed\u4e3b\u52a8\u9632\u5fa1\u3001\u5173\u95ed\u684c\u9762\u52a9\u624b\u3001\u5173\u95ed360\u6240\u6709\u76f8\u5173\u7684\u5f00\u673a\u542f\u52a8\u2026\u2026</p> <p>\u4e0d\u5f97\u4e0d\u627f\u8ba4\uff0c\u8fd9\u79cdall in one\u7684\u6d41\u6c13\u8f6f\u4ef6\u6ca1\u6709\u6346\u7ed1\u548c\u5e7f\u544a\u7684\u8bdd\u786e\u5b9e\u597d\u7528</p> <p></p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/3%EF%B8%8F%E2%83%A3%20Windows%2010/C/#2","title":"2. \u5f39\u7a97\u7ba1\u7406\u3001\u5b89\u5168\u9632\u62a4\uff1a\u706b\u7ed2\u5b89\u5168","text":"<p>\u5f00\u673a\u542f\u52a8\u9879\u5173\u95ed\u6240\u6709\u4e0e360\u76f8\u5173\u7684\u542f\u52a8\u9879\uff0c\u5f00\u673a\u53ea\u542f\u52a8\u706b\u7ed2\u53ca\u706b\u7ed2\u7684\u5f39\u7a97\u62e6\u622a</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/3%EF%B8%8F%E2%83%A3%20Windows%2010/C/#win10","title":"\u8d30\u4e28Win10\u78c1\u8d34","text":"<p>\u8bbe\u7f6e\u2014\u2014\u4e2a\u6027\u5316\u2014\u2014\u5f00\u59cb</p> <p>\u5728\u201c\u5f00\u59cb\u201d\u83dc\u5355\u4e0a\u663e\u793a\u66f4\u591a\u78c1\u8d34\uff1aON</p> <p>\u5728\u201c\u5f00\u59cb\u201d\u83dc\u5355\u4e2d\u663e\u793a\u5e94\u7528\u5217\u8868\uff1aOFF</p> <p>\u663e\u793a\u6700\u8fd1\u6dfb\u52a0\u7684\u5e94\u7528\uff1aOFF</p> <p>\u663e\u793a\u6700\u5e38\u7528\u7684\u5e94\u7528\uff1aOFF</p> <p>\u4f7f\u7528\u5168\u5c4f\u201c\u5f00\u59cb\u201d\u5c4f\u5e55\uff1aON</p> <p>\u5728\u201c\u5f00\u59cb\u201d\u83dc\u5355\u6216\u2026\u2026\uff1aOFF</p> <p>\u5c06\u5e38\u7528\u7684\u8f6f\u4ef6\u5168\u90e8\u56fa\u5b9a\u5230\u5f00\u59cb\u83dc\u5355\uff0c\u5206\u7ec4\u3001\u6392\u5217</p> <p>\u63a8\u8350\u4f7f\u7528Tile Genie\uff08Microsoft Store\uff0c\u514d\u8d39\uff09\u53ef\u4ee5\u5c06\u56fe\u7247\u8bbe\u4e3a\u78c1\u8d34</p> <p></p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/3%EF%B8%8F%E2%83%A3%20Windows%2010/C/#_2","title":"\u53c1\u4e28\u6587\u4ef6\u5939\u7ba1\u7406","text":"<p>\u4e0d\u4e60\u60ef\u628a\u6587\u4ef6\u5939\u56fa\u5b9a\u5728\u78c1\u8d34\u4f4d\u7f6e\uff0c\u4e00\u822c\u628a**\u4e34\u65f6\u6587\u4ef6\u53ca\u6587\u4ef6\u5939**\u653e\u5728\u684c\u9762\uff0c**\u5e38\u7528\u7684\u6587\u4ef6\u5939**\u56fa\u5b9a\u5728\u8d44\u6e90\u7ba1\u7406\u5668\u7684\u201c\u5feb\u901f\u8bbf\u95ee\u201d\u680f\u91cc\u3002</p> <p></p> <p>\u6587\u4ef6\u5939\u6574\u7406\u91c7\u7528\u56fe\u4e66\u7f16\u53f7\u7684\u5f62\u5f0f\uff08\u539f\u6c41\u539f\u5473\u64cd\u4f5c\u81ea\u884c\u767e\u5ea6\uff09\uff0c\u6211\u8fd9\u91cc\u7c97\u7565\u7684\u7528\u4e09\u4f4d\u6570\u5b57\u8fdb\u884c\u7f16\u53f7</p> <p></p> <p></p> <p>\u8fd9\u79cd\u65b9\u5f0f\u80fd\u8ba9\u6587\u4ef6\u5c42\u7ea7\u66f4\u6e05\u6670\uff0c\u4e14\u540c\u7ea7\u76ee\u5f55\u4e0b\u91cd\u8981\u6587\u4ef6\u5939\u53ef\u4ee5\u4fdd\u6301\u4e00\u4e2a\u76f8\u5bf9\u56fa\u5b9a\u7684\u4f4d\u7f6e\uff08\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5f53\u65b0\u5efa\u6587\u4ef6\u5939\u7684\u65f6\u5019\uff0c100-500\u6587\u4ef6\u5939\u6309\u7167\u540d\u79f0\u6392\u5e8f\u4f9d\u7136\u5728\u524d5\u4e2a\uff0c\u4e45\u800c\u4e45\u4e4b\uff0c\u53ef\u4ee5\u8bb0\u4f4f\u56fa\u5b9a\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u5e76\u4e14\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5f3a\u8feb\u81ea\u5df1\u517b\u6210\u6574\u7406\u5206\u7c7b\u7684\u4e60\u60ef\uff09</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/3%EF%B8%8F%E2%83%A3%20Windows%2010/C/#_3","title":"\u53c1\u4e28\u4efb\u52a1\u680f\u900f\u660e\u8bbe\u7f6e\u53ca\u7f6e\u9876<sup>1</sup>","text":"<p>\u8bbe\u7f6e\u2014\u2014\u4e2a\u6027\u5316\u2014\u2014\u4efb\u52a1\u680f\uff1a</p> <p>\u4efb\u52a1\u680f\u5728\u5c4f\u5e55\u4e0a\u7684\u4f4d\u7f6e\uff1a\u9876\u90e8</p> <p>\u5408\u5e76\u4efb\u52a1\u680f\u6309\u94ae\uff1a\u59cb\u7ec8\u5408\u5e76\u6309\u94ae</p> <p>\u9009\u62e9\u54ea\u4e9b\u56fe\u6807\u663e\u793a\u5728\u4efb\u52a1\u680f\u4e0a\uff1a\u97f3\u91cfON\uff0c\u5176\u4ed6\u5168\u90e8OFF</p> <p>\u63a8\u8350\u4f7f\u7528TranslucentTB\uff08Microsoft Store\uff0c\u514d\u8d39\uff09\u8bbe\u7f6e\u900f\u660e\u4efb\u52a1\u680f</p> <p>\u684c\u9762\u4fdd\u7559\u6b64\u7535\u8111\u3001\u56de\u6536\u7ad9\u548c\u4e34\u65f6\u6587\u4ef6\u5939\uff0c\u5b9a\u671f\u6e05\u7406\u5f52\u6863\u3002</p> <p></p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/3%EF%B8%8F%E2%83%A3%20Windows%2010/C/#_4","title":"\u8086\u4e28\u5f85\u529e\u4e8b\u9879","text":"<p>\u9009\u62e9Microsoft To Do\uff08Microsoft Store\uff0c\u514d\u8d39\uff09\uff0c\u56fa\u5b9a\u5230\u4efb\u52a1\u680f\uff0c\u968f\u65f6\u6253\u5f00\u3002</p> <p>\u4e2a\u4eba\u4e0d\u63a8\u8350\u53c2\u8003[1]\u4e2d\u7684TickTick\u5c0f\u90e8\u4ef6\u65b9\u6848\uff0c\u5176\u4ed6\u5e94\u7528\u4e00\u9876\u7f6e\uff0c\u5565\u4e5f\u770b\u4e0d\u89c1\uff1b\u684c\u9762\u80cc\u666f\u81ea\u52a8\u5207\u6362\u5230\u6697\u8272\u6216\u6d45\u8272\uff0c\u5c0f\u90e8\u4ef6\u7684\u5b57\u5c31\u770b\u4e0d\u6e05\u4e86\u3002</p> <ol> <li> <p>\u543e\u7231\u7834\u89e3\u8bba\u575b\uff0c@ShuningWan\uff0c\u3010Window10\u3011\u78c1\u8d34\u8f85\u52a9\u5b9e\u73b0\u6781\u7b80\u684c\u9762\u8bbe\u7f6e\uff08\u975e\u4e09\u65b9\u684c\u9762\uff09 \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/3%EF%B8%8F%E2%83%A3%20Windows%2010/D/","title":"\u2614 \u4fee\u6539PPT\u56fe\u7247\u5bfc\u51fa\u5206\u8fa8\u7387","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8981\u53e6\u5b58\u4e3a\u56fe\u7247\u7684 PowerPoint \u5e7b\u706f\u7247\u7684\u5bfc\u51fa\u5206\u8fa8\u7387\u4e3a\u6bcf\u82f1\u5bf8 96 \u70b9 (dpi)\u3002 \u82e5\u8981\u66f4\u6539\u5bfc\u51fa\u5206\u8fa8\u7387\uff0c\u8bf7\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p> <p>\u7b2c\u4e00\u6b65\uff0c\u9000\u51fa\u6240\u6709 Windows \u7a0b\u5e8f\u3002</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u53f3\u952e\u5355\u51fb\u201c\u5f00\u59cb\u201d\uff0c\u7136\u540e\u9009\u62e9\u201c\u8fd0\u884c\u201d\u3002 </p> <p>\u7b2c\u4e09\u6b65\uff0c\u5728\u201c\u6253\u5f00\u201d\u6846\u4e2d\uff0c\u952e\u5165\u201cregedit\u201d\uff0c\u7136\u540e\u9009\u62e9\u201c\u786e\u5b9a\u201d\u3002</p> <p>\u7b2c\u56db\u6b65\uff0c\u6839\u636e\u4f60\u4f7f\u7528\u7684 PowerPoint \u7248\u672c\uff0c\u627e\u5230\u4ee5\u4e0b\u6ce8\u518c\u8868\u5b50\u9879\u4e4b\u4e00\uff1a</p> <p>PowerPoint 2016\u3001PowerPoint 2019\u3001Microsoft 365 \u4e13\u5c5e PowerPoint</p> <pre><code>HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\16.0\\PowerPoint\\Options\n</code></pre> \u5176\u4ed6\u7248\u672c <p>PowerPoint 2013</p> <p>HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\15.0\\PowerPoint\\Options</p> <p>PowerPoint 2010</p> <p>HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\14.0\\PowerPoint\\Options</p> <p>PowerPoint 2007</p> <p>HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\12.0\\PowerPoint\\Options</p> <p>PowerPoint 2003</p> <p>HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\11.0\\PowerPoint\\Options</p> <p>\u7b2c\u4e94\u6b65\uff0c\u5355\u51fb\u201c\u9009\u9879\u201d\u5b50\u9879\uff0c\u6307\u5411\u201c\u7f16\u8f91\u201d\u83dc\u5355\u4e0a\u7684\u201c\u65b0\u5efa\u201d\uff0c\u7136\u540e\u9009\u62e9\u201cDWORD (32 \u4f4d)\u503c\u201d\u3002</p> <p>\u7b2c\u516d\u6b65\uff0c\u8f93\u5165\u201cExportBitmapResolution\u201d\uff0c\u7136\u540e\u6309 Enter \u952e\u3002</p> <p>\u7b2c\u4e03\u6b65\uff0c\u786e\u4fdd\u9009\u4e2d\u201cExportBitmapResolution\u201d\uff0c\u7136\u540e\u9009\u62e9\u201c\u7f16\u8f91\u201d\u83dc\u5355\u4e0a\u7684\u201c\u4fee\u6539\u201d\u3002</p> <p>\u7b2c\u516b\u6b65\uff0c\u5728\u201c\u7f16\u8f91 DWORD \u503c\u201d\u5bf9\u8bdd\u6846\u4e2d\u9009\u62e9\u201c\u5341\u8fdb\u5236\u201d\u3002</p> <p>\u7b2c\u4e5d\u6b65\uff0c\u5728\u201c\u6570\u503c\u6570\u636e\u201d\u6846\u4e2d\uff0c\u8f93\u5165\u5206\u8fa8\u7387\u201c300\u201d\u3002 \u6216\u4f7f\u7528\u4e0b\u8868\u4e2d\u7684\u53c2\u6570\u3002</p> \u5206\u8fa8\u7387\u53c2\u6570 \u5341\u8fdb\u5236\u503c \u5168\u5c4f\u50cf\u7d20\uff08\u6c34\u5e73 \u00d7 \u5782\u76f4\uff09 \u5bbd\u5c4f\u50cf\u7d20\uff08\u6c34\u5e73 + \u5782\u76f4\uff09 \u6bcf\u82f1\u5bf8\u70b9\u6570\uff08\u6c34\u5e73\u548c\u5782\u76f4\uff09 50 500 \u00d7 375 667 \u00d7 375 50 dpi 96\uff08\u9ed8\u8ba4\u503c\uff09 960 \u00d7 720 1280 \u00d7 720 96 dpi 100 1000 \u00d7 750 1333 \u00d7 750 100 dpi 150 1500 \u00d7 1125 2000 \u00d7 1125 150 dpi 200 2000 \u00d7 1500 2667 \u00d7 1500 200 dpi 250 2500 \u00d7 1875 3333 \u00d7 1875 250 dpi 300 3000 \u00d7 2250 4000 \u00d7 2250 300 dpi <p>\u6700\u540e\uff0c\u786e\u5b9a\u5e76\u9000\u51fa\u6ce8\u518c\u8868\u7f16\u8f91\u5668</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/3%EF%B8%8F%E2%83%A3%20Windows%2010/E/","title":"\u2614 \u56fd\u5bb6\u6807\u51c6\u53c2\u8003\u6587\u732e\u683c\u5f0f","text":"<p>\u8457\u5f55\u683c\u5f0f\uff1a</p> <p>[\u5e8f\u53f7] \u4e3b\u8981\u8d23\u4efb\u8005. \u6807\u51c6\u7f16\u53f7 \u6807\u51c6\u540d[S]. \u51fa\u7248\u5730\uff1a\u51fa\u7248\u8005\uff0c\u51fa\u7248\u5e74. \u83b7\u53d6\u548c\u8bbf\u95ee\u8def\u5f84.</p> <p>\u4e3e\u4f8b\uff1a</p> <p>[1] \u56fd\u5bb6\u6280\u672f\u76d1\u7763\u5c40. GB 3100~3120\u20141993 \u91cf\u548c\u5355\u4f4d[S]. \u5317\u4eac\uff1a\u4e2d\u56fd\u6807\u51c6\u51fa\u7248\u793e\uff0c1994.</p> <p>[2] \u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u56fd\u5bb6\u8d28\u91cf\u76d1\u7763\u68c0\u9a8c\u68c0\u75ab\u603b\u5c40\uff0c\u4e2d\u56fd\u56fd\u5bb6\u6807\u51c6\u5316\u7ba1\u7406\u59d4\u5458\u4f1a. GB/T 7714\u20142005 \u6587\u540e\u53c2\u8003\u6587\u732e\u8457\u5f55\u89c4\u5219[S]. \u5317\u4eac\uff1a\u4e2d\u56fd\u6807\u51c6\u51fa\u7248\u793e\uff0c2005.</p> <p>__Tips\uff1a__\u5b89\u5168\u884c\u4e1a\u6807\u51c6(AQ)\u7531\u56fd\u5bb6\u5b89\u5168\u751f\u4ea7\u76d1\u7763\u7ba1\u7406\u603b\u5c40\u89c4\u5b9a\u7684\u7164\u70ad\u5de5\u4e1a\u51fa\u7248\u793e\u51fa\u7248\u3001\u56fd\u5bb6\u6807\u51c6\u7531\u56fd\u52a1\u9662\u6807\u51c6\u5316\u4e3b\u7ba1\u90e8\u95e8\u89c4\u5b9a\u7684\u56fd\u5bb6\u6807\u51c6\u51fa\u7248\u793e\u51fa\u7248</p> <p>\u4ee5\u4e0b\u4e3a\u6211\u7684\u8bba\u6587\u4e2d\u5f15\u7528\u7684\u56fd\u5bb6\u6807\u51c6\uff08\u5730\u65b9\u6807\u51c6\u7684\u51fa\u7248\u4fe1\u606f\u53ef\u4ee5\u7701\u7565\uff09</p> <p>[1] \u56fd\u5bb6\u80fd\u6e90\u5c40\uff0eSY/T 6524-2017 \u77f3\u6cb9\u5929\u7136\u6c14\u4f5c\u4e1a\u573a\u6240\u52b3\u52a8\u9632\u62a4\u7528\u54c1\u914d\u5907\u89c4\u8303\uff3bS\uff3d\uff0e\u5317\u4eac\uff1a\u77f3\u6cb9\u5de5\u4e1a\u51fa\u7248\u793e\uff0c2017\uff0e</p> <p>[2] \u5168\u56fd\u5b89\u5168\u751f\u4ea7\u6807\u51c6\u5316\u6280\u672f\u59d4\u5458\u4f1a\u975e\u7164\u77ff\u5c71\u5b89\u5168\u5206\u6280\u672f\u59d4\u5458\u4f1a\uff0eAQ 2012-2007 \u77f3\u6cb9\u5929\u7136\u6c14\u5b89\u5168\u89c4\u7a0b\uff3bS\uff3d\uff0e\u5317\u4eac\uff1a\u7164\u70ad\u5de5\u4e1a\u51fa\u7248\u793e\uff0c2007\uff0e</p> <p>[3] \u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u4f4f\u623f\u548c\u57ce\u4e61\u5efa\u8bbe\u90e8\uff0eCJJ/T 153-2010 \u57ce\u9547\u71c3\u6c14\u6807\u5fd7\u6807\u51c6\uff3bS\uff3d\uff0e\u5317\u4eac\uff1a\u4e2d\u56fd\u5efa\u7b51\u5de5\u4e1a\u51fa\u7248\u793e\uff0c2010\uff0e</p> <p>[4] \u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u4f4f\u623f\u548c\u57ce\u4e61\u5efa\u8bbe\u90e8\uff0eCJJ/T 146-2011 \u57ce\u9547\u71c3\u6c14\u62a5\u8b66\u63a7\u5236\u7cfb\u7edf\u6280\u672f\u89c4\u7a0b\uff3bS\uff3d\uff0e\u5317\u4eac\uff1a\u4e2d\u56fd\u5efa\u7b51\u5de5\u4e1a\u51fa\u7248\u793e\uff0c2011\uff0e</p> <p>[5] \u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u4f4f\u623f\u548c\u57ce\u4e61\u5efa\u8bbe\u90e8\uff0c\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u56fd\u5bb6\u8d28\u91cf\u76d1\u7763\u68c0\u9a8c\u68c0\u75ab\u603b\u5c40\uff0eGB/T 50811-2012 \u71c3\u6c14\u7cfb\u7edf\u8fd0\u884c\u5b89\u5168\u8bc4\u4ef7\u6807\u51c6\uff3bS\uff3d\uff0e\u5317\u4eac\uff1a\u4e2d\u56fd\u5efa\u7b51\u5de5\u4e1a\u51fa\u7248\u793e\uff0c2012\uff0e</p> <p>[6] \u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u4f4f\u623f\u548c\u57ce\u4e61\u5efa\u8bbe\u90e8\uff0eCJJ 95-2013 \u57ce\u9547\u71c3\u6c14\u57cb\u5730\u94a2\u8d28\u7ba1\u9053\u8150\u8680\u63a7\u5236\u6280\u672f\u89c4\u7a0b\uff3bS\uff3d\uff0e\u5317\u4eac\uff1a\u4e2d\u56fd\u5efa\u7b51\u5de5\u4e1a\u51fa\u7248\u793e\uff0c2013\uff0e</p> <p>[7] \u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u4f4f\u623f\u548c\u57ce\u4e61\u5efa\u8bbe\u90e8\uff0eCJJ 51-2016 \u57ce\u9547\u71c3\u6c14\u8bbe\u65bd\u8fd0\u884c\u3001\u7ef4\u62a4\u548c\u62a2\u4fee\u5b89\u5168\u6280\u672f\u89c4\u7a0b\uff3bS\uff3d\uff0e\u5317\u4eac\uff1a\u4e2d\u56fd\u5efa\u7b51\u5de5\u4e1a\u51fa\u7248\u793e\uff0c2016\uff0e</p> <p>[8] \u5b89\u5fbd\u7701\u7279\u79cd\u8bbe\u5907\u5b89\u5168\u6807\u51c6\u5316\u6280\u672f\u59d4\u5458\u4f1a\uff0eDB34/T 3918-2021 \u57ce\u9547\u71c3\u6c14\u7ba1\u9053\u65e5\u5e38\u7ef4\u62a4\u4e0e\u5b9a\u671f\u68c0\u67e5\u8981\u6c42\uff3bS\uff3d\uff0e</p> <p>\u53c2\u8003\uff1a</p> <p>[1] \u77e5\u4e4e\uff0c@\u8ffd\u68a6\u5c0f\u516c\u5b50\uff0c\u53c2\u8003\u6587\u732e\u8457\u5f55\u683c\u5f0f\uff08\u56fd\u6807GB\uff0fT7714-2015\uff09</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/4%EF%B8%8F%E2%83%A3%20Windows11/","title":"\ud83c\udf80 \u8f6f\u4ef6\u53ca\u914d\u7f6e/4\ufe0f\u20e3 Windows11","text":"<ul> <li> <p>Win11\u914d\u7f6e</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/4%EF%B8%8F%E2%83%A3%20Windows11/A/","title":"\ud83d\udc3d Win11\u914d\u7f6e","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/4%EF%B8%8F%E2%83%A3%20Windows11/A/#1","title":"1. \u6062\u590d\u78c1\u8d34","text":"<p>\u4f7f\u7528ExplorerPatcher\u5de5\u5177</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/","title":"\ud83c\udf80 \u8f6f\u4ef6\u53ca\u914d\u7f6e/5\ufe0f\u20e3 Git","text":"<ul> <li> <p>Git\u914d\u7f6e</p> <p> Getting started</p> </li> <li> <p>Git\u57fa\u7840\u4f7f\u7528</p> <p> Getting started</p> </li> <li> <p>Commit\u89c4\u8303</p> <p> Getting started</p> </li> <li> <p>Git\u81ea\u52a8\u63d0\u4ea4(Windows)</p> <p> Getting started</p> </li> <li> <p>Git\u5e38\u89c1\u9519\u8bef</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/A/","title":"\ud83e\ude79 Git\u914d\u7f6e","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/A/#1-git","title":"1. \u67e5\u770b Git \u7248\u672c","text":"<p>\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u53ef\u4ee5\u67e5\u770b Git \u7684\u7248\u672c\u4fe1\u606f\uff1a</p> <pre><code>git --version\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/A/#2","title":"2. \u914d\u7f6e\u7528\u6237\u540d\u548c\u90ae\u7bb1","text":"<p>\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u53ef\u4ee5\u914d\u7f6e Git \u7684\u7528\u6237\u540d\u548c\u90ae\u7bb1\uff1a</p> <pre><code>git config --global user.name \"yourname\"\ngit config --global user.email \"youremail\"\n</code></pre> <p>\u5176\u4e2d\uff0c<code>yourname</code>\u548c<code>youremail</code>\u9700\u8981\u66ff\u6362\u4e3a\u81ea\u5df1\u7684\u7528\u6237\u540d\u548c\u90ae\u7bb1</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/A/#3","title":"3. \u751f\u6210\u79d8\u94a5","text":"<p>\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u53ef\u4ee5\u751f\u6210 SSH \u79d8\u94a5\uff1a</p> <pre><code>ssh-keygen -t rsa -C \"youremail\"\n</code></pre> <p>\u540c\u6837\uff0c<code>youremail</code>\u9700\u8981\u66ff\u6362\u4e3a\u81ea\u5df1\u7684\u90ae\u7bb1</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/A/#4-github","title":"4. \u6dfb\u52a0\u79d8\u94a5\u5230 GitHub","text":"<p>\u8bfb\u53d6\u79d8\u94a5\uff0c\u5e76\u5c06\u79d8\u94a5\u6dfb\u52a0\u5230GitHub\uff1a</p> <pre><code>cat ~/.ssh/id_rsa.pub\n</code></pre> <p>\u5c06<code>id_rsa.pub</code>\u6587\u4ef6\u7684\u5185\u5bb9\u590d\u5236\uff0c\u5e76\u5c06\u5176\u7c98\u8d34\u5230GitHub\u7684Setting\u2014\u2014SSH keys\u2014\u2014New SSH key\u4e2d</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/A/#5","title":"5. \u6d4b\u8bd5\u8fde\u63a5","text":"<p>\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6d4b\u8bd5\u8fde\u63a5\uff1a</p> <pre><code>ssh -T git@github.com\n</code></pre> <p>\u5982\u679c\u8fde\u63a5\u6210\u529f\uff0c\u4f1a\u51fa\u73b0\u63d0\u793a\u4fe1\u606f\uff1a</p> <pre><code>Hi {username}! You've successfully authenticated, but GitHub does not provide shell access.\n</code></pre> <p>\u5982\u679c\u8fde\u63a5\u5931\u8d25\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u6392\u67e5\u548c\u5904\u7406\u8fde\u63a5\u9519\u8bef\uff0c\u4f8b\u5982\u68c0\u67e5\u7f51\u7edc\u8fde\u63a5\u3001\u786e\u8ba4 SSH \u79d8\u94a5\u662f\u5426\u6b63\u786e\u3001\u68c0\u67e5 GitHub \u8bbe\u7f6e\u662f\u5426\u6b63\u786e\u7b49\u7b49\u3002</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/B/","title":"\ud83d\udc57 Git\u57fa\u7840\u4f7f\u7528","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/B/#_1","title":"\u58f9\u4e28\u57fa\u7840\u4f7f\u7528","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/B/#1","title":"1. \u65b0\u5efa\u4ee3\u7801\u5e93","text":"<pre><code># \u5728\u5f53\u524d\u76ee\u5f55\u65b0\u5efa\u4e00\u4e2aGit\u4ee3\u7801\u5e93\ngit init\n\n# \u65b0\u5efa\u4e00\u4e2a\u76ee\u5f55\uff0c\u5c06\u5176\u521d\u59cb\u5316\u4e3aGit\u4ee3\u7801\u5e93\ngit init [project-name]\n\n# \u4e0b\u8f7d\u4e00\u4e2a\u9879\u76ee\u548c\u5b83\u7684\u6574\u4e2a\u4ee3\u7801\u5386\u53f2\ngit clone [url]\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/B/#2","title":"2. \u589e\u52a0/\u5220\u9664\u6587\u4ef6","text":"<pre><code># \u6dfb\u52a0\u6307\u5b9a\u6587\u4ef6\u5230\u6682\u5b58\u533a\ngit add [file1] [file2] ...\n\n# \u6dfb\u52a0\u6307\u5b9a\u76ee\u5f55\u5230\u6682\u5b58\u533a\uff0c\u5305\u62ec\u5b50\u76ee\u5f55\ngit add [dir]\n\n# \u6dfb\u52a0\u5f53\u524d\u76ee\u5f55\u7684\u6240\u6709\u6587\u4ef6\u5230\u6682\u5b58\u533a\ngit add .\n\n# \u6dfb\u52a0\u6bcf\u4e2a\u53d8\u5316\u524d\uff0c\u90fd\u4f1a\u8981\u6c42\u786e\u8ba4\n# \u5bf9\u4e8e\u540c\u4e00\u4e2a\u6587\u4ef6\u7684\u591a\u5904\u53d8\u5316\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5206\u6b21\u63d0\u4ea4\ngit add -p\n\n# \u5220\u9664\u5de5\u4f5c\u533a\u6587\u4ef6\uff0c\u5e76\u4e14\u5c06\u8fd9\u6b21\u5220\u9664\u653e\u5165\u6682\u5b58\u533a\ngit rm [file1] [file2] ...\n\n# \u505c\u6b62\u8ffd\u8e2a\u6307\u5b9a\u6587\u4ef6\uff0c\u4f46\u8be5\u6587\u4ef6\u4f1a\u4fdd\u7559\u5728\u5de5\u4f5c\u533a\ngit rm --cached [file]\n\n# \u6539\u540d\u6587\u4ef6\uff0c\u5e76\u4e14\u5c06\u8fd9\u4e2a\u6539\u540d\u653e\u5165\u6682\u5b58\u533a\ngit mv [file-original] [file-renamed]\n</code></pre> <p>\u6dfb\u52a0\u6240\u6709\u6587\u4ef6\u5230\u6682\u5b58\u533a\uff0c\u4ee3\u7801\u5982\u4e0b</p> <pre><code>git add .\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/B/#3","title":"3. \u4ee3\u7801\u63d0\u4ea4","text":"<pre><code># \u63d0\u4ea4\u6682\u5b58\u533a\u5230\u4ed3\u5e93\u533a\uff08\u5e38\u7528\uff09\ngit commit -m [message]\n\n# \u63d0\u4ea4\u6682\u5b58\u533a\u7684\u6307\u5b9a\u6587\u4ef6\u5230\u4ed3\u5e93\u533a\ngit commit [file1] [file2] ... -m [message]\n\n# \u63d0\u4ea4\u5de5\u4f5c\u533a\u81ea\u4e0a\u6b21commit\u4e4b\u540e\u7684\u53d8\u5316\uff0c\u76f4\u63a5\u5230\u4ed3\u5e93\u533a\ngit commit -a\n\n# \u63d0\u4ea4\u65f6\u663e\u793a\u6240\u6709diff\u4fe1\u606f\ngit commit -v\n\n# \u4f7f\u7528\u4e00\u6b21\u65b0\u7684commit\uff0c\u66ff\u4ee3\u4e0a\u4e00\u6b21\u63d0\u4ea4\n# \u5982\u679c\u4ee3\u7801\u6ca1\u6709\u4efb\u4f55\u65b0\u53d8\u5316\uff0c\u5219\u7528\u6765\u6539\u5199\u4e0a\u4e00\u6b21commit\u7684\u63d0\u4ea4\u4fe1\u606f\ngit commit --amend -m [message]\n\n# \u91cd\u505a\u4e0a\u4e00\u6b21commit\uff0c\u5e76\u5305\u62ec\u6307\u5b9a\u6587\u4ef6\u7684\u65b0\u53d8\u5316\ngit commit --amend [file1] [file2] ...\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/B/#_2","title":"\u8d30\u4e28\u8fdb\u9636\u64cd\u4f5c","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/B/#1_1","title":"1. \u5206\u652f\u64cd\u4f5c","text":"<pre><code># \u5217\u51fa\u6240\u6709\u672c\u5730\u5206\u652f\ngit branch\n\n# \u5217\u51fa\u6240\u6709\u8fdc\u7a0b\u5206\u652f\ngit branch -r\n\n# \u5217\u51fa\u6240\u6709\u672c\u5730\u5206\u652f\u548c\u8fdc\u7a0b\u5206\u652f\ngit branch -a\n\n# \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u4f46\u4f9d\u7136\u505c\u7559\u5728\u5f53\u524d\u5206\u652f\ngit branch [branch-name]\n\n# \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u5e76\u5207\u6362\u5230\u8be5\u5206\u652f\ngit checkout -b [branch]\n\n# \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u6307\u5411\u6307\u5b9acommit\ngit branch [branch] [commit]\n\n# \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u4e0e\u6307\u5b9a\u7684\u8fdc\u7a0b\u5206\u652f\u5efa\u7acb\u8ffd\u8e2a\u5173\u7cfb\ngit branch --track [branch] [remote-branch]\n\n# \u5207\u6362\u5230\u6307\u5b9a\u5206\u652f\uff0c\u5e76\u66f4\u65b0\u5de5\u4f5c\u533a\ngit checkout [branch-name]\n\n# \u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u5206\u652f\ngit checkout -\n\n# \u5efa\u7acb\u8ffd\u8e2a\u5173\u7cfb\uff0c\u5728\u73b0\u6709\u5206\u652f\u4e0e\u6307\u5b9a\u7684\u8fdc\u7a0b\u5206\u652f\u4e4b\u95f4\ngit branch --set-upstream [branch] [remote-branch]\n\n# \u5408\u5e76\u6307\u5b9a\u5206\u652f\u5230\u5f53\u524d\u5206\u652f\ngit merge [branch]\n\n# \u9009\u62e9\u4e00\u4e2acommit\uff0c\u5408\u5e76\u8fdb\u5f53\u524d\u5206\u652f\ngit cherry-pick [commit]\n\n# \u5220\u9664\u5206\u652f\ngit branch -d [branch-name]\n\n# \u5220\u9664\u8fdc\u7a0b\u5206\u652f\ngit push origin --delete [branch-name]\ngit branch -dr [remote/branch]\n\n# \u672c\u5730\u5b58\u5728\u4e00\u4e2a\u5206\u652f\uff0c\u540d\u79f0\u53eb\uff1adevelop_chen\uff0c\u4f46\u8fdc\u7a0b\u6ca1\u6709\u600e\u4e48\u529e\uff1f\ngit push origin develop_chen\n\n\u8fd9\u6837\u5c31\u5728\u8fdc\u7a0b\u5efa\u7acb\u4e00\u4e2a\u548c\u672c\u5730\u4e00\u6837\u7684\u5206\u652f \n\ngit branch --set-upstream-to=origin/develop  develop  \u672c\u5730\u5206\u652f\u548c\u8fdc\u7a0b\u5206\u652f\u5efa\u7acb\u8ddf\u8e2a\u5173\u7cfb\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/B/#2_1","title":"2. \u6807\u7b7e\u64cd\u4f5c","text":"<pre><code># \u5217\u51fa\u6240\u6709tag\ngit tag\n\n# \u65b0\u5efa\u4e00\u4e2atag\u5728\u5f53\u524dcommit\ngit tag [tag]\n\n# \u65b0\u5efa\u4e00\u4e2atag\u5728\u6307\u5b9acommit\ngit tag [tag] [commit]\n\n# \u5220\u9664\u672c\u5730tag\ngit tag -d [tag]\n\n# \u5220\u9664\u8fdc\u7a0btag\ngit push origin :refs/tags/[tagName]\n\n# \u67e5\u770btag\u4fe1\u606f\ngit show [tag]\n\n# \u63d0\u4ea4\u6307\u5b9atag\ngit push [remote] [tag]\n\n# \u63d0\u4ea4\u6240\u6709tag\ngit push [remote] --tags\n\n# \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u6307\u5411\u67d0\u4e2atag\ngit checkout -b [branch] [tag]\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/B/#3_1","title":"3. \u67e5\u770b\u4fe1\u606f","text":"<pre><code># \u663e\u793a\u6709\u53d8\u66f4\u7684\u6587\u4ef6\ngit status\n\n# \u663e\u793a\u5f53\u524d\u5206\u652f\u7684\u7248\u672c\u5386\u53f2\ngit log\n\n# \u663e\u793acommit\u5386\u53f2\uff0c\u4ee5\u53ca\u6bcf\u6b21commit\u53d1\u751f\u53d8\u66f4\u7684\u6587\u4ef6\ngit log --stat\n\n# \u641c\u7d22\u63d0\u4ea4\u5386\u53f2\uff0c\u6839\u636e\u5173\u952e\u8bcd\ngit log -S [keyword]\n\n# \u663e\u793a\u67d0\u4e2acommit\u4e4b\u540e\u7684\u6240\u6709\u53d8\u52a8\uff0c\u6bcf\u4e2acommit\u5360\u636e\u4e00\u884c\ngit log [tag] HEAD --pretty=format:%s\n\n# \u663e\u793a\u67d0\u4e2acommit\u4e4b\u540e\u7684\u6240\u6709\u53d8\u52a8\uff0c\u5176\"\u63d0\u4ea4\u8bf4\u660e\"\u5fc5\u987b\u7b26\u5408\u641c\u7d22\u6761\u4ef6\ngit log [tag] HEAD --grep feature\n\n# \u663e\u793a\u67d0\u4e2a\u6587\u4ef6\u7684\u7248\u672c\u5386\u53f2\uff0c\u5305\u62ec\u6587\u4ef6\u6539\u540d\ngit log --follow [file]\ngit whatchanged [file]\n\n# \u663e\u793a\u6307\u5b9a\u6587\u4ef6\u76f8\u5173\u7684\u6bcf\u4e00\u6b21diff\ngit log -p [file]\n\n# \u663e\u793a\u8fc7\u53bb5\u6b21\u63d0\u4ea4\ngit log -5 --pretty --oneline\n\n# \u663e\u793a\u6240\u6709\u63d0\u4ea4\u8fc7\u7684\u7528\u6237\uff0c\u6309\u63d0\u4ea4\u6b21\u6570\u6392\u5e8f\ngit shortlog -sn\n\n# \u663e\u793a\u6307\u5b9a\u6587\u4ef6\u662f\u4ec0\u4e48\u4eba\u5728\u4ec0\u4e48\u65f6\u95f4\u4fee\u6539\u8fc7\ngit blame [file]\n\n# \u663e\u793a\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u7684\u4ee3\u7801\u5dee\u5f02\ngit diff\n\n# \u663e\u793a\u6682\u5b58\u533a\u548c\u4e0a\u4e00\u4e2acommit\u7684\u5dee\u5f02\ngit diff --cached [file]\n\n# \u663e\u793a\u5de5\u4f5c\u533a\u4e0e\u5f53\u524d\u5206\u652f\u6700\u65b0commit\u4e4b\u95f4\u7684\u5dee\u5f02\ngit diff HEAD\n\n# \u663e\u793a\u4e24\u6b21\u63d0\u4ea4\u4e4b\u95f4\u7684\u5dee\u5f02\ngit diff [first-branch]...[second-branch]\n\n# \u663e\u793a\u4eca\u5929\u4f60\u5199\u4e86\u591a\u5c11\u884c\u4ee3\u7801\ngit diff --shortstat \"@{0 day ago}\"\n\n# \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u7684\u5143\u6570\u636e\u548c\u5185\u5bb9\u53d8\u5316\ngit show [commit]\n\n# \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u53d1\u751f\u53d8\u5316\u7684\u6587\u4ef6\ngit show --name-only [commit]\n\n# \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u65f6\uff0c\u67d0\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\ngit show [commit]:[filename]\n\n# \u663e\u793a\u5f53\u524d\u5206\u652f\u7684\u6700\u8fd1\u51e0\u6b21\u63d0\u4ea4\ngit reflog# \u4ece\u672c\u5730master\u62c9\u53d6\u4ee3\u7801\u66f4\u65b0\u5f53\u524d\u5206\u652f\uff1abranch \u4e00\u822c\u4e3amaster\ngit rebase [branch]\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/B/#4","title":"4. \u8fdc\u7a0b\u540c\u6b65","text":"<pre><code>git remote update  --\u66f4\u65b0\u8fdc\u7a0b\u4ed3\u50a8\n# \u4e0b\u8f7d\u8fdc\u7a0b\u4ed3\u5e93\u7684\u6240\u6709\u53d8\u52a8\ngit fetch [remote]\n\n# \u663e\u793a\u6240\u6709\u8fdc\u7a0b\u4ed3\u5e93\ngit remote -v\n\n# \u663e\u793a\u67d0\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\u7684\u4fe1\u606f\ngit remote show [remote]\n\n# \u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5e76\u547d\u540d\ngit remote add [shortname] [url]\n\n# \u53d6\u56de\u8fdc\u7a0b\u4ed3\u5e93\u7684\u53d8\u5316\uff0c\u5e76\u4e0e\u672c\u5730\u5206\u652f\u5408\u5e76\ngit pull [remote] [branch]\n\n# \u4e0a\u4f20\u672c\u5730\u6307\u5b9a\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93\ngit push [remote] [branch]\n\n# \u5f3a\u884c\u63a8\u9001\u5f53\u524d\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5373\u4f7f\u6709\u51b2\u7a81\ngit push [remote] --force\n\n# \u63a8\u9001\u6240\u6709\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93\ngit push [remote] --all\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/B/#5","title":"5. \u64a4\u9500","text":"<pre><code># \u6062\u590d\u6682\u5b58\u533a\u7684\u6307\u5b9a\u6587\u4ef6\u5230\u5de5\u4f5c\u533a\ngit checkout [file]\n\n# \u6062\u590d\u67d0\u4e2acommit\u7684\u6307\u5b9a\u6587\u4ef6\u5230\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\ngit checkout [commit] [file]\n\n# \u6062\u590d\u6682\u5b58\u533a\u7684\u6240\u6709\u6587\u4ef6\u5230\u5de5\u4f5c\u533a\ngit checkout .\n\n# \u91cd\u7f6e\u6682\u5b58\u533a\u7684\u6307\u5b9a\u6587\u4ef6\uff0c\u4e0e\u4e0a\u4e00\u6b21commit\u4fdd\u6301\u4e00\u81f4\uff0c\u4f46\u5de5\u4f5c\u533a\u4e0d\u53d8\ngit reset [file]\n\n# \u91cd\u7f6e\u6682\u5b58\u533a\u4e0e\u5de5\u4f5c\u533a\uff0c\u4e0e\u4e0a\u4e00\u6b21commit\u4fdd\u6301\u4e00\u81f4\ngit reset --hard\n\n# \u91cd\u7f6e\u5f53\u524d\u5206\u652f\u7684\u6307\u9488\u4e3a\u6307\u5b9acommit\uff0c\u540c\u65f6\u91cd\u7f6e\u6682\u5b58\u533a\uff0c\u4f46\u5de5\u4f5c\u533a\u4e0d\u53d8\ngit reset [commit]\n\n# \u91cd\u7f6e\u5f53\u524d\u5206\u652f\u7684HEAD\u4e3a\u6307\u5b9acommit\uff0c\u540c\u65f6\u91cd\u7f6e\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\uff0c\u4e0e\u6307\u5b9acommit\u4e00\u81f4\ngit reset --hard [commit]\n\n# \u91cd\u7f6e\u5f53\u524dHEAD\u4e3a\u6307\u5b9acommit\uff0c\u4f46\u4fdd\u6301\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u4e0d\u53d8\ngit reset --keep [commit]\n\n# \u65b0\u5efa\u4e00\u4e2acommit\uff0c\u7528\u6765\u64a4\u9500\u6307\u5b9acommit\n# \u540e\u8005\u7684\u6240\u6709\u53d8\u5316\u90fd\u5c06\u88ab\u524d\u8005\u62b5\u6d88\uff0c\u5e76\u4e14\u5e94\u7528\u5230\u5f53\u524d\u5206\u652f\ngit revert [commit]\n\n# \u6682\u65f6\u5c06\u672a\u63d0\u4ea4\u7684\u53d8\u5316\u79fb\u9664\uff0c\u7a0d\u540e\u518d\u79fb\u5165\ngit stash\ngit stash pop\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/B/#6","title":"6. \u5408\u5e76\u5206\u652f","text":"<p>\u5c06\u5f00\u53d1\u5206\u652f\u5408\u5e76\u5230<code>master</code></p> <pre><code>git checkout dev           #\u5207\u6362\u5230dev\u5f00\u53d1\u5206\u652f\ngit pull\ngit checkout master\ngit merge dev              #\u5408\u5e76dev\u5206\u652f\u5230master\u4e0a\ngit push origin master     #\u5c06\u4ee3\u7801\u63a8\u5230master\u4e0a\n</code></pre> <p>\u5c06master\u7684\u4ee3\u7801\u540c\u6b65\u66f4\u65b0\u5230\u5f00\u53d1\u5206\u652f\u4e2d</p> <pre><code>git checkout master\ngit pull\ngit checkout dev\ngit merge master\ngit pull origin dev\n</code></pre> <p>\u751f\u6210\u53ef\u53d1\u5e03\u7684\u538b\u7f29\u5305</p> <pre><code>git archive\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/C/","title":"\ud83e\udd4f Git Commit\u89c4\u8303","text":"<p>Git \u63d0\u4ea4\u4fe1\u606f\u7684\u6807\u51c6\u683c\u5f0f\u6709\u52a9\u4e8e\u63d0\u9ad8\u4ee3\u7801\u5e93\u7684\u53ef\u8bfb\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002\u4e00\u4e2a\u5e38\u89c1\u7684\u6807\u51c6\u683c\u5f0f\u662f Conventional Commits \u89c4\u8303\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e00\u79cd\u7ed3\u6784\u5316\u7684\u63d0\u4ea4\u4fe1\u606f\u683c\u5f0f\uff0c\u4f7f\u5f97\u63d0\u4ea4\u5386\u53f2\u66f4\u6e05\u6670\u3001\u66f4\u6709\u610f\u4e49\u3002</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/C/#conventional-commits","title":"\u58f9\u4e28Conventional Commits \u683c\u5f0f","text":"<pre><code>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;\n&lt;BLANK LINE&gt;\n&lt;body&gt;\n&lt;BLANK LINE&gt;\n&lt;footer&gt;\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/C/#1-type","title":"1. <code>&lt;type&gt;</code>\uff1a\u63d0\u4ea4\u7c7b\u578b","text":"<p><code>&lt;type&gt;</code> \u7528\u4e8e\u63cf\u8ff0\u63d0\u4ea4\u7684\u7c7b\u522b\uff0c\u5e38\u89c1\u7684\u7c7b\u578b\u5305\u62ec\uff1a</p> <ul> <li><code>feat</code>\uff1a\u65b0\u529f\u80fd</li> <li><code>fix</code>\uff1a\u4fee\u590d\u95ee\u9898</li> <li><code>docs</code>\uff1a\u4ec5\u6587\u6863\u66f4\u6539</li> <li><code>style</code>\uff1a\u683c\u5f0f\uff08\u4e0d\u5f71\u54cd\u4ee3\u7801\u8fd0\u884c\u7684\u53d8\u52a8\uff09</li> <li><code>refactor</code>\uff1a\u91cd\u6784\uff08\u5373\u4e0d\u662f\u65b0\u589e\u529f\u80fd\uff0c\u4e5f\u4e0d\u662f\u4fee\u6539 bug \u7684\u4ee3\u7801\u53d8\u52a8\uff09</li> <li><code>test</code>\uff1a\u6dfb\u52a0\u6d4b\u8bd5</li> <li><code>chore</code>\uff1a\u6784\u5efa\u8fc7\u7a0b\u6216\u8f85\u52a9\u5de5\u5177\u7684\u53d8\u52a8</li> </ul>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/C/#2-scope","title":"2. <code>&lt;scope&gt;</code>\uff1a\u63d0\u4ea4\u8303\u56f4\uff08\u53ef\u9009\uff09","text":"<p><code>&lt;scope&gt;</code> \u7528\u4e8e\u63cf\u8ff0\u63d0\u4ea4\u5f71\u54cd\u7684\u8303\u56f4\uff0c\u4f8b\u5982\u6a21\u5757\u3001\u6587\u4ef6\u6216\u529f\u80fd\u3002\u5b83\u662f\u53ef\u9009\u7684\uff0c\u4f46\u6709\u52a9\u4e8e\u7406\u89e3\u63d0\u4ea4\u7684\u5f71\u54cd\u8303\u56f4\u3002</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/C/#3-subject","title":"3. <code>&lt;subject&gt;</code>\uff1a\u63d0\u4ea4\u8bf4\u660e","text":"<p><code>&lt;subject&gt;</code> \u662f\u5bf9\u63d0\u4ea4\u7684\u7b80\u77ed\u63cf\u8ff0\uff0c\u901a\u5e38\u4e0d\u8d85\u8fc7 50 \u4e2a\u5b57\u7b26\u3002\u5b83\u5e94\u8be5\u7b80\u6d01\u660e\u4e86\uff0c\u63cf\u8ff0\u63d0\u4ea4\u7684\u4e3b\u8981\u53d8\u66f4\u3002</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/C/#4-body","title":"4. <code>&lt;body&gt;</code>\uff1a\u8be6\u7ec6\u63cf\u8ff0\uff08\u53ef\u9009\uff09","text":"<p><code>&lt;body&gt;</code> \u662f\u5bf9\u63d0\u4ea4\u7684\u8be6\u7ec6\u63cf\u8ff0\uff0c\u53ef\u4ee5\u5305\u542b\u591a\u884c\u5185\u5bb9\u3002\u5b83\u7528\u4e8e\u89e3\u91ca\u4e3a\u4ec0\u4e48\u8fdb\u884c\u8fd9\u4e9b\u53d8\u66f4\uff0c\u4ee5\u53ca\u53d8\u66f4\u7684\u5177\u4f53\u5185\u5bb9\u3002</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/C/#5-footer","title":"5. <code>&lt;footer&gt;</code>\uff1a\u811a\u6ce8\uff08\u53ef\u9009\uff09","text":"<p><code>&lt;footer&gt;</code> \u901a\u5e38\u7528\u4e8e\u5f15\u7528\u76f8\u5173\u7684\u4efb\u52a1\u6216\u95ee\u9898\u8ddf\u8e2a\u7cfb\u7edf\u4e2d\u7684\u6761\u76ee\uff0c\u4f8b\u5982 JIRA \u7968\u636e\u6216 GitHub Issues\u3002\u5b83\u4e5f\u53ef\u4ee5\u7528\u4e8e\u63cf\u8ff0\u7834\u574f\u6027\u53d8\u66f4\uff08BREAKING CHANGE\uff09\u3002</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/C/#_1","title":"\u8d30\u4e28\u793a\u4f8b","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/C/#1","title":"\u793a\u4f8b 1\uff1a\u65b0\u589e\u529f\u80fd","text":"<pre><code>feat(auth): add login functionality\n\nImplemented the login functionality using JWT tokens. Users can now log in with their email and password.\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/C/#2","title":"\u793a\u4f8b 2\uff1a\u4fee\u590d\u95ee\u9898","text":"<pre><code>fix(api): correct user data endpoint\n\nFixed the issue where the user data endpoint was returning incorrect data. The endpoint now correctly returns user information.\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/C/#3","title":"\u793a\u4f8b 3\uff1a\u6587\u6863\u66f4\u6539","text":"<pre><code>docs(readme): update installation instructions\n\nUpdated the installation instructions to include steps for setting up the development environment.\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/C/#4","title":"\u793a\u4f8b 4\uff1a\u4ee3\u7801\u683c\u5f0f","text":"<pre><code>style(css): format CSS files\n\nFormatted the CSS files to follow the project's style guidelines. No functional changes.\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/C/#5","title":"\u793a\u4f8b 5\uff1a\u91cd\u6784\u4ee3\u7801","text":"<pre><code>refactor(user): refactor user service\n\nRefactored the user service to improve code readability and maintainability. No functional changes.\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/C/#6","title":"\u793a\u4f8b 6\uff1a\u6dfb\u52a0\u6d4b\u8bd5","text":"<pre><code>test(auth): add tests for login functionality\n\nAdded unit tests for the login functionality to ensure it works as expected.\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/C/#7","title":"\u793a\u4f8b 7\uff1a\u6784\u5efa\u8fc7\u7a0b\u53d8\u52a8","text":"<pre><code>chore(deps): update dependencies\n\nUpdated project dependencies to their latest versions.\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/C/#8","title":"\u793a\u4f8b 8\uff1a\u7834\u574f\u6027\u53d8\u66f4","text":"<pre><code>feat(api): change user data endpoint\n\nBREAKING CHANGE: The user data endpoint has been changed to /api/v2/user. Update your API calls accordingly.\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/D/","title":"\ud83d\udc20 Git\u81ea\u52a8\u63d0\u4ea4(Windows)","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u65b0\u5efa\u811a\u672c\uff1a</p> autogit.bat<pre><code>@echo off\ncd /d path/to/folder\nset datetime=%date:~0,4%%date:~5,2%%date:~8,2%%time:~0,2%%time:~3,2%\ngit add .\ngit commit -m \"upload - %datetime%\"\ngit push http://{USER}:{PASSWD}@xxxxx.git\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff0c\u6dfb\u52a0\u5b9a\u65f6\u4efb\u52a1</p> <p>\u641c\u7d22\u201c\u4efb\u52a1\u8ba1\u5212\u7a0b\u5e8f\u201d \u2014\u2014 \u53f3\u4fa7\u201c\u521b\u5efa\u57fa\u672c\u4efb\u52a1\u201d \u2014\u2014 \u6309\u7167\u6307\u5bfc\u6dfb\u52a0\u4e0a\u8ff0\u8ba1\u5212</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/E/","title":"\ud83d\udee2\ufe0f Git\u5e38\u89c1\u9519\u8bef","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/E/#1","title":"1. \u7f51\u7edc\u9519\u8bef","text":"<p>\u3010\u95ee\u9898\u590d\u73b0\u3011</p> <pre><code># \u4ee3\u7406ON\uff1a\nfatal: unable to access 'https://github.com/yiyifengheju/ONAV.git/': Error in the HTTP2 framing layer\n# \u4ee3\u7406OFF\uff1a\nfatal: unable to access 'https://github.com/yiyifengheju/ONAV.git/': GnuTLS recv error (-110): The TLS connection was non-properly terminated.\n</code></pre> <p>\u3010\u89e3\u51b3\u65b9\u6cd5\u3011</p> <pre><code>sudo apt-get update\nsudo apt-get install gnutls-bin\ngit config --global http.sslVerify false\ngit config --global http.postBuffer 1048576000\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/E/#2-rpc","title":"2. RPC\u9519\u8bef","text":"<p>\u3010\u95ee\u9898\u590d\u73b0\u3011</p> <pre><code>error: RPC failed; curl 16 Error in the HTTP2 framing layer\nsend-pack: unexpected disconnect while reading sideband packet\nfatal: the remote end hung up unexpectedly\n</code></pre> <p>\u3010\u89e3\u51b3\u65b9\u6cd5\u3011\u5f3a\u5236\u5c06git\u8bbe\u7f6e\u4e3aHTTP 1.1\uff1a</p> <pre><code>git config --global http.version HTTP/1.1\n</code></pre> <p>\u6062\u590d\u65b9\u6cd5\uff1a</p> <pre><code>git config --global http.version HTTP/2\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/E/#3-wsl","title":"3. WSL\u4ee3\u7406\u95ee\u9898","text":"<p>\u3010\u95ee\u9898\u590d\u73b0\u3011\u6253\u5f00WSL\u65f6\u663e\u793a\uff1a</p> <pre><code>wsl: \u68c0\u6d4b\u5230 localhost \u4ee3\u7406\u914d\u7f6e\uff0c\u4f46\u672a\u955c\u50cf\u5230 WSL\u3002NAT \u6a21\u5f0f\u4e0b\u7684 WSL \u4e0d\u652f\u6301 localhost \u4ee3\u7406\u3002\n</code></pre> <p>\u3010\u89e3\u51b3\u65b9\u6cd5\u3011\u5728Windows\u4e2d\u7684<code>C:\\Users\\$Username$\\</code>\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a<code>.wslconfig</code>\u6587\u4ef6\uff0c\u7136\u540e\u5728\u6587\u4ef6\u4e2d\u5199\u5165\u5982\u4e0b\u5185\u5bb9\uff1a</p> <pre><code>[experimental]\nautoMemoryReclaim=gradual  \nnetworkingMode=mirrored\ndnsTunneling=true\nfirewall=true\nautoProxy=true\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/5%EF%B8%8F%E2%83%A3%20Git/E/#4-git","title":"4. \u6bcf\u6b21git\u90fd\u9700\u8981\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801","text":"<p>\u3010\u95ee\u9898\u590d\u73b0\u3011\u5982\u9898</p> <p>\u3010\u89e3\u51b3\u65b9\u6cd5\u3011\u6267\u884c\u4e0b\u8ff0\u547d\u4ee4\u540e\uff0c\u518d\u6267\u884c<code>git pull</code>\u6216<code>git push</code>\uff0c\u8f93\u5165\u7528\u6237\u540d\u5bc6\u7801\uff0c\u4ee5\u540e\u5c31\u4e0d\u9700\u8981\u6bcf\u6b21\u90fd\u8f93\u5165\u4e86\u3002</p> <pre><code>git config --global credential.helper store\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/","title":"\ud83c\udf80 \u8f6f\u4ef6\u53ca\u914d\u7f6e/6\ufe0f\u20e3 macOS","text":"<ul> <li> <p>\u9ed1\u82f9\u679c\u5b89\u88c5\u95ee\u9898\u603b\u7ed3</p> <p> Getting started</p> </li> <li> <p>\u9ed1\u82f9\u679c\u5b89\u88c5\u8bb0\u5f55</p> <p> Getting started</p> </li> <li> <p>\u8054\u60f3Y50\u66f4\u6362BCM94352z\u65e0\u7ebf\u7f51\u5361</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/A/","title":"\ud83d\udcea \u9ed1\u82f9\u679c\u5b89\u88c5\u95ee\u9898\u603b\u7ed3","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/A/#_1","title":"\u58f9\u4e28\u5b89\u88c5\u95ee\u9898","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/A/#1","title":"1.\u5b89\u88c5\u8fc7\u7a0b\u5361\u52a0\u53f7","text":"<p>\u539f\u56e0\uff1adrivers64UEFI \u91cc\u7684\u4e00\u4e2aefi\u6587\u4ef6\u6709\u95ee\u9898</p> <p>\u7b2c\u4e00\u6b65\uff0c<code>/EFI/CLOVER/drivers64UEFI/</code>\u4e0b\u5220\u9664\uff1a</p> <pre><code>OsxAptioFix2Drv-64.efi\nOsxLowMemFixDrv-64.efi\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff0c<code>config.plist</code>\u4e2d\u5220\u6389<code>slide=XXX</code></p> <p>\u7b2c\u4e09\u6b65\uff0c\u5982\u679c\u4ecd\u65e7\u65e0\u6cd5\u542f\u52a8, \u8868\u660e\u5185\u6838\u8bf7\u6c42\u5206\u914d\u7684\u7a7a\u95f4\u4ecd\u65e7\u592a\u5927\u3002\u5c06<code>CsrActiveConfig</code>\u8bbe\u7f6e\u6210<code>0x67</code></p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/A/#2amfidenying-core-dump-for-pid-too-many-corpses-being-created","title":"2.\u6b63\u5e38\u5b89\u88c5\u5b8c\u6210\u540e\u5f00\u673a\u51fa\u73b0\u6b7b\u5faa\u73af\uff0c\u62a5\u9519\uff1aAMFI:Denying core dump for pid *** too many corpses being created","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u7b2c\u4e00\u6b21\u91cd\u542f\u5b89\u88c5\u540e\uff0c\u4e00\u76f4\u8fdb\u5165<code>preboot</code>\u6765\u5b89\u88c5\uff0c\u4f1a\u91cd\u542f\u51e0\u6b21\uff0c\u5b89\u88c5\u5b8c\u6210\u540e\u53ef\u4ee5\u8fdb\u5165\u7cfb\u7edf\uff0c\u4f46\u53ea\u80fd\u4ece<code>preboot</code>\u8fdb\u5165</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u5728<code>config.plist</code>\u4e2d\u628a\u4ee5\u4e0b\u8fd9\u6bb5\u5220\u9664\uff08\u4e0d\u9690\u85cf<code>preboot</code>\uff09</p> <pre><code>&lt;key&gt;\n    Hide\n&lt;/key&gt;\n&lt;array&gt;\n    &lt;string&gt;\n        Preboot\n    &lt;/string&gt;\n&lt;/array&gt;\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/A/#3xxx","title":"3.\u201cxxx\u5b89\u88c5\u526f\u672c\u635f\u574f\u201d","text":"<p>\u7ec8\u7aef\u4fee\u6539date\u3002\u5b9e\u8df5\u53d1\u73b0\uff0c\u6bcf\u6b21\u4f7f\u7528\u4e0d\u540c\u5b89\u88c5\u5305\u4fee\u6539\u7684 date \u662f\u4e0d\u540c\u7684\uff0c\u89c4\u5f8b\u662f\u4fee\u6539\u5230\u4e00\u5e74\u524d\u7684\u6b64\u65f6\u6b64\u523b\u3002</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/A/#4","title":"4.\u7761\u7720\u7761\u6b7b\u3001\u53d6\u6d88\u7761\u7720\u540e\u81ea\u52a8\u91cd\u542f","text":"<p>\u5b9a\u5236USB\u3002\u53c2\u8003\uff1a\u9ed1\u82f9\u679cCatalina 15.x USB\u5b9a\u5236\uff08Asrock Z370\uff09</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/A/#5","title":"5.\u516b\u82f9\u679c\u82b1\u5c4f","text":"<p>BIOS\u91cc\u8bbe\u7f6e\uff1a</p> <pre><code>Legacy Boot (but UEFI first): enabled\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/A/#6windows","title":"6.\u65e0\u6cd5\u76f4\u63a5\u5f00\u673a\uff0c\u9700\u8981\u8fdb\u4e00\u6b21Windows\u7cfb\u7edf\u91cd\u542f\u624d\u80fd\u8fdb\u5165\u9ed1\u82f9\u679c/\u542f\u52a8\u7cfb\u7edf\u6ca1\u6709\u58f0\u97f3","text":"<p>\u542f\u52a8\u53c2\u6570\u52a0\u5165<code>slide=0</code></p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/A/#_2","title":"\u8d30\u4e28\u4f7f\u7528\u95ee\u9898","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/A/#1-xxx-is-not-in-the-sudoers-file-this-incident-will-be-reported","title":"1. xxx is not in the sudoers file. This incident will be reported.","text":"<p>Linux\u6216Mac\u4e2d\uff0c\u4f7f\u7528sudo\u547d\u4ee4\uff0c\u63d0\u793a\u201cxxx is not in the sudoers file. This incident will be reported.\u201d\uff0c\u9700\u8981\u4fee\u6539/etc/sudoers\u6587\u4ef6</p> <p>\u7b2c\u4e00\u6b65\uff0c\u6dfb\u52a0\u6587\u4ef6\u5199\u6743\u9650</p> <pre><code>sudo chmod u+w /etc/sudoers\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff0c\u7f16\u8f91/etc/sudoers\u6587\u4ef6</p> <pre><code>nano /etc/sudoers\n</code></pre> <p>\u7b2c\u4e09\u6b65\uff0c\u4fee\u6539\u5982\u4e0b\u5185\u5bb9\uff1a</p> <pre><code>root ALL=(ALL) ALL\nxxx ALL=(ALL) ALL # xxx\u662f\u7528\u6237\u540d\n</code></pre> <p>\u7b2c\u56db\u6b65\uff0c\u64a4\u9500\u6587\u4ef6\u5199\u6743\u9650</p> <pre><code>sudo chmod u-w /etc/sudoers\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/B/","title":"\ud83d\udcea \u9ed1\u82f9\u679c\u5b89\u88c5\u8bb0\u5f55","text":"<p>## \u524d\u8a00</p> <p>\u9ed1\u82f9\u679c\u5b89\u88c5\u7b80\u5355\uff0c\u96be\u5728\u9a71\u52a8\u3002\u5728\u88c5\u4e86\u5f88\u591a\u6b21\u540e\u53d1\u73b0\uff0c\u4e00\u4e2a\u597d\u7684\u5b89\u88c5\u5305\u53ef\u4ee5\u4e3a\u88c5\u9a71\u52a8\u7701\u53bb\u5f88\u591a\u9ebb\u70e6\u3002</p> <p>\u76ee\u524d\u4e2a\u4eba\u611f\u89c9<code>macOS Catalina</code>\u7cfb\u7edf\u5b89\u88c5\u6700\u597d\u7528\u7684\u5b89\u88c5\u5305\u662f\uff1a<code>\u9ed1\u679c\u5c0f\u5175 macOS Catalina 10.15.4(19E2269) Installer for Clover 5116 and WEPE.dmg</code>\uff0c\u5176\u4ed6\u7684\u5b89\u88c5\u5305\uff0c\u5373\u4fbf\u4e5f\u662f\u6765\u81ea\u9ed1\u679c\u5c0f\u5175\u7f51\u7ad9\uff0c\u8fd8\u662f\u4e0d\u5982\u8fd9\u4e2a\u5b89\u88c5\u5305\u597d\u7528\u3002</p> <p>\u81f3\u4e8e<code>macOS Bigsur</code>\u7cfb\u7edf\uff0c\u88c5\u8fc7\u4e24\u6b21\uff0c\u5b89\u88c5\u6210\u529f\u540e\u6ca1\u53ca\u65f6\u8bb0\u5f55\uff0c\u5fd8\u4e86\u7528\u7684\u54ea\u4e2a\u5b89\u88c5\u5305\u3002</p> <p>\u4e0b\u9762\u662f\u9047\u5230\u7684\u4e00\u4e9b\u4e3b\u673a\u7684\u9ed1\u82f9\u679c\u5b89\u88c5\u3001\u9a71\u52a8\u8bb0\u5f55\u3002</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/B/#y50-70","title":"\u58f9\u4e28\u8054\u60f3Y50-70","text":"<p>\u57fa\u672c\u914d\u7f6e\uff1a</p> \u578b\u53f7 \u8054\u60f3 Y50-70AM-IFI \u5904\u7406\u5668 Intel Core i5-4200H(2.8GHz/L3 3M) Haswell\u67b6\u6784 \u5185\u5b58 4GB DDR3L 1600MHz\uff08\u81ea\u884c\u5b89\u88c5\u4e00\u6761\u4e09\u661fDDR3L 1600MHz\u6269\u5bb9\u81f38GB\uff09 \u786c\u76d8 1TB HDD\uff08\u81ea\u884c\u66f4\u6362\u4e09\u661f860 EVO 500G\u56fa\u6001\u786c\u76d8\uff09 \u663e\u5361 NVIDIA GeForce GTX 860M+Intel HD 4600\uff08BIOS\u4e2d\u5c4f\u853d\u72ec\u663e\uff09 USB 1xUSB2.0+2xUSB3.0 \u5176\u4ed6\u63a5\u53e3 HDMI\u63a5\u53e3\u30013.5mm\u8033\u673a..."},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/B/#1","title":"1.\u51c6\u5907\u5de5\u4f5c","text":"<p>BIOS\u8bbe\u7f6e\uff1a</p> <pre><code>UEFI boot: enabled\nsecure boot: disabled\n</code></pre> <p>\u955c\u50cf\uff1a\u9ed1\u679c\u5c0f\u5175</p> <p>\u7cfb\u7edf\u5b89\u88c5\u6d41\u7a0b\u4e0d\u518d\u8d58\u8ff0\uff0c\u6309\u7167\u6307\u793a\u5b89\u88c5\u5373\u53ef\u3002</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/B/#2","title":"2.\u5b89\u88c5\u9a71\u52a8","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u5b89\u88c5 Xcode</p> <pre><code>xcode-select --install\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff0c\u514b\u9686 git \u4ed3\u5e93</p> <pre><code>mkdir ~/Projects\n</code></pre> <pre><code>cd ~/Projects\n</code></pre> <pre><code>git clone https://github.com/RehabMan/Lenovo-Y50-DSDT-Patch y50.git\n</code></pre> <p>\u7b2c\u4e09\u6b65\uff0c\u5b89\u88c5\u9a71\u52a8</p> <pre><code>cd ~/Projects/y50.git\n</code></pre> <pre><code>./download.sh\n</code></pre> <pre><code>./install_downloads.sh\n</code></pre> <p>\u7b2c\u56db\u6b65\uff0c\u7f16\u8bd1</p> <pre><code>cd ~/Projects/y50.git\n</code></pre> <pre><code>make\n</code></pre> <pre><code>make install\n</code></pre> <p>\u7b2c\u4e94\u6b65\uff0c\u4fee\u590d\u4f11\u7720</p> <pre><code>sudo pmset -a hibernatemode 0\n</code></pre> <pre><code>sudo rm /var/vm/sleepimage\n</code></pre> <pre><code>sudo mkdir /var/vm/sleepimage\n</code></pre> <p>\u7b2c\u516d\u6b65\uff0c\u79fb\u52a8\u5230 EFI \u5206\u533a</p> <pre><code>cd ~/Projects/y50.git\n</code></pre> <pre><code>./mount_efi.sh\n</code></pre> <pre><code>cd ~/Projects/y50.git\n</code></pre> <pre><code>cp config.plist /Volumes/EFI/EFI/Clover/config.plist\n</code></pre>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/B/#samsung-270e5k","title":"\u8d30\u4e28Samsung 270E5K","text":"<p>\u4e00\u6b3e2015\u5e74\u5de6\u53f3\u4e0a\u5e02\u7684\u4e09\u661f\u7b14\u8bb0\u672c\uff0c\u4f7f\u75285\u4ee3i5\uff0c\u72ec\u663e\u662fNVIDIA GeForce 920M\uff0c\u636e\u8bf4920\u662f\u5f00\u666e\u52d2\u67b6\u6784\uff0c\u611a\u4ee5\u4e3a\u5f00\u666e\u52d2\u67b6\u6784\u7684N\u5361\u90fd\u53ef\u4ee5\u514d\u9a71\uff0c\u5b89\u88c5macOS 10.13.6\u53ca\u4ee5\u524d\u7684\u7248\u672c\uff0c\u4e0d\u65ad\u5730\u88c5\u673a\u3001\u722c\u8d34\uff0c\u53d1\u73b0WebDriver\u5e76\u4e0d\u80fd\u9a71\u52a8\u3002</p> <p>\u540e\u6765\u67e5\u5230\uff0c920M\u662fGK208\u6838\u5fc3\uff0c\u6ca1\u529e\u6cd5\u9a71\u52a8\u7684\u3002\uff08\u53e6\u5916\uff0cmacOS 10.13\u662f\u771f\u7684\u8001\u4e86\uff0c\u6709\u6548\u7684\u8d44\u6599\u592a\u5c11\uff09</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/B/#intel-8500xx","title":"\u53c1\u4e28Intel 8500+\u534e\u7855xx\u4e3b\u677f\uff08\u53f0\u5f0f\u673a\uff09","text":"<p>\u4e3b\u677f\u53ea\u6709VGA\uff0c\u5728\u786c\u4ef6\u5e95\u5c42\u5c31\u5df2\u7ecf\u88abmacOS\u780d\u6389\u4e86\u3002\u867d\u7136\u636e\u8bf4\u662f\u4e3b\u677f\u4e0a\u7684DP\u53e3\u6539\u51fa\u6765\u7684VGA\uff0c\u4f46\u6700\u7ec8\u6ca1\u80fd\u9a71\u52a8\u6210\u529f</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/B/#intel-9700prime-b365m-kdvivga","title":"\u8086\u4e28Intel 9700+\u534e\u7855Prime B365M-K\uff08\u53f0\u5f0f\u673a\uff0c\u4e3b\u677f\u53ea\u6709DVI\u548cVGA\uff09","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/B/#1_1","title":"1.\u663e\u5361\u9a71\u52a8\uff1a","text":"<p>\u5c1d\u8bd5\u4e00\uff0c\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u6838\u663e\u6ca1\u9a71\u52a8\uff0cDVI\u6b63\u5e38\u8f93\u51fa\uff0c\u4eff\u5192<code>IDIntelGFX</code>\u8bbe\u7f6e\u4e3a<code>3E9B8086</code>\u3001<code>ig-platform-id</code>\u8bbe\u7f6e<code>3E9B0007</code>\u540e\uff0c\u5f00\u673a\u9ed1\u5c4f\u3002\uff08\u6838\u5fc3\u663e\u5361\u6b63\u5e38\u9a71\u52a8\u540eDVI/HDMI\u6ca1\u6709\u8f93\u51fa\uff09</p> <p>\u5c1d\u8bd5\u4e8c\uff0c\u6ce8\u5165\u4e0d\u540c\u663e\u5361id\uff0c\u6ca1\u7528\uff1b\u4fee\u6539\u673a\u578b\u4e3a<code>Macmini 8.1</code>\uff0c\u6ca1\u7528\uff1bFB\u6253\u7f13\u51b2\u5e27\u8865\u4e01\uff0c\u6ca1\u7528\u3002\u3002\u3002\u3002</p> <p>\u5c1d\u8bd5\u4e09\uff0c\u5728\u7f51\u4e0a\u627e\u4e86\u4e00\u6bb5plist\u8bbe\u7f6e\u4ee3\u7801\uff0c\u771f\u795e\u5947\uff0c\u7adf\u7136\u53ef\u4ee5\u4e86\uff01\uff08\u5f53\u4f20\u5bb6\u5b9d\u4fdd\u5b58\u4e0b\u6765\uff09</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/B/#2usb","title":"2.\u5b9a\u5236USB\uff1a","text":"<p>\u53c2\u8003\uff1a\u9ed1\u82f9\u679cCatalina 15.x USB\u5b9a\u5236\uff08Asrock Z370\uff09</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/B/#3","title":"3.\u58f0\u5361\u9a71\u52a8\uff1a","text":"<p>\u67e5\u4e86\u58f0\u5361\u578b\u53f7\uff0cALC\u5df4\u62c9\u5df4\u62c9\uff0c\u7f51\u7edc\u4e0a\u641c\u5230\u7684\u6ce8\u5165ID\uff0c\u597d\u591a\u597d\u591a\uff0c\u771f\u7684\u662f\u6539\u4e2a\u6570\u91cd\u542f\u4e00\u4e0b\uff0c\u91cd\u542f\u4e86\u5341\u6765\u56de\uff0c\u58f0\u5361\u6ce8\u5165<code>11</code>\u6210\u529f\u9a71\u52a8\u3002</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/B/#4","title":"4.\u5176\u4ed6\u95ee\u9898\uff1a","text":"<ol> <li>DVI\u8f6cHDMI\u540e\u5c4f\u5e55\u53d1\u7d2b\uff08RGB\u8272\u5f69\u7a7a\u95f4\u95ee\u9898\uff09</li> </ol> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u5f3a\u5236RGB\uff0c\u6ce8\u5165EDID</p> <ol> <li>\u65e0\u6cd5\u5f00\u542fHiDPI\uff0c\u8bbe\u7f6e1080p\uff0c\u5b57\u4f53\u6a21\u7cca\uff1b\u8bbe\u7f6e\u9ad8\u5206\u8fa8\u7387\uff0c\u4e0d\u80fd\u5168\u5c4f\uff1bHiDPI\u53ea\u80fd\u5f00\u542f960x540\u3002</li> </ol> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u6362\u4e2a\u663e\u793a\u5668\u540e\u6548\u679c\u53d8\u597d\u4e86\uff08\u540c\u68371920*1080\u7684\u5c4f\u5e55\uff0c\u7384\u5b66\uff09</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/B/#lenovo-thinkpad-centre-m8600t-6700h110","title":"\u4f0d\u4e28Lenovo ThinkPad Centre M8600t 6700+H110\uff08\u54c1\u724c\u53f0\u5f0f\u673a\uff09","text":"<p>6700\u6838\u663e\u514d\u9a71\uff01\uff01\u4fee\u4fee\u8865\u8865\u5b9a\u5236USB\u3001\u58f0\u5361\u9a71\u52a8\u5c31\u53ef\u8fd1\u4e4e\u5b8c\u7f8e\uff0c\u6559\u7a0b\u4e0d\u518d\u8d58\u8ff0\u3002</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/B/#_1","title":"\u53c2\u8003","text":"<p>[1] CSDN\uff0c@LeoForBest\uff0c\u9ed1\u82f9\u679cCatalina 15.x USB\u5b9a\u5236\uff08Asrock Z370\uff09</p> <p>[2] tonymacx86.com\uff0c@RehabMan\uff0c[Guide] Lenovo Y50 (UHD or 1080p) using Clover UEFI </p> <p>[3] \u9ed1\u679c\u5c0f\u5175</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/C/","title":"\ud83d\udcea \u8054\u60f3Y50\u66f4\u6362BCM94352z\u65e0\u7ebf\u7f51\u5361","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u4e0b\u5355</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u62c6\u673a\u5b89\u88c5</p> <p>\u7b2c\u4e09\u6b65\uff0c\u51fa\u73b0\u9519\u8bef unauthorized wireless network card is plugged in</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u53bb\u9664BIOS\u65e0\u7ebf\u7f51\u5361\u767d\u540d\u5355\u9650\u5236</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/C/#_1","title":"\u58f9\u4e28\u51c6\u5907\u5de5\u4f5c","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/C/#1","title":"1.\u5de5\u5177","text":"<p>\u4fee\u6539BIOS\u7684\u8f6f\u4ef6\u3001BIOS\u6587\u4ef6\u7b49https://cloud.189.cn/t/36zauuvAnYZj\uff08\u8bbf\u95ee\u7801\uff1ail7a\uff09</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/C/#2bios","title":"2.\u5347\u7ea7BIOS\uff08\u53ef\u8df3\u8fc7\uff09","text":"<p>\u627e\u5230\u5408\u9002\u7248\u672c\u7684BIOS\u70b9\u51fb\u5b89\u88c5\uff08\u63a8\u83501.14\u7248\u672c\u4ee5\u4e0b\u7684BIOS\uff09</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/C/#3bios","title":"3.\u5907\u4efdBIOS","text":"<p>\u5347\u7ea7\u540e\u91cd\u542f\uff0c\u5728BIOS\u4e2d\u5347\u7ea7\uff0c\u518d\u8fdb\u884c\u5907\u4efd</p> <p>\u5f00\u673a\uff0c\u7ba1\u7406\u5458\u6743\u9650\u6267\u884c<code>fptw64/</code>\u4e2d\u7684<code>backup.exe</code>\uff0c\u751f\u6210<code>bios_bak.bin</code></p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/C/#_2","title":"\u8d30\u4e28\u5220\u9664\u767d\u540d\u5355","text":"<p>\u7b2c\u4e00\u6b65\uff0cEzH2O\u8f7d\u5165BIOS\u5907\u4efd\uff08bios_bak.bin\uff09</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u9009\u62e9\uff1a\u7ec4\u4ef6\u2014\u2014\u6a21\u5757\u2014\u2014\u5220\u9664\u73b0\u6709\u7684\u6a21\u5757</p> <p>\u7b2c\u4e09\u6b65\uff0c\u9009\u62e9\uff1aGUID-\u201c11D378C2-B472-412F-AD87-1BE4CD8B33A6\u201d\u2014\u2014\u4fee\u8865</p> <p>\u7b2c\u56db\u6b65\uff0c\u9009\u62e9\uff1a\u6587\u4ef6\u2014\u2014\u4fdd\u5b58</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/6%EF%B8%8F%E2%83%A3%20macOS/C/#_3","title":"\u53c1\u4e28\u5237\u5165","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u63d2\u5165U\u76d8\uff0c\u7ba1\u7406\u5458\u6743\u9650\u8fd0\u884c<code>rufus</code>\uff0c\u70b9\u51fb\u8fd0\u884c\uff0c\u5236\u4f5cU\u76d8\u542f\u52a8\u76d8</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u5c06<code>fpt/</code>\u6587\u4ef6\u5939\u590d\u5236\u5230U\u76d8\u6839\u76ee\u5f55</p> <p>\u7b2c\u4e09\u6b65\uff0c\u5c06\u4fee\u6539\u540e\u7684BIOS\u6587\u4ef6\u590d\u5236\u5230U\u76d8\u6839\u76ee\u5f55\uff0c\u6539\u540d\u4e3a<code>1.bin</code></p> <p>\u7b2c\u56db\u6b65\uff0c\u91cd\u542f\u8fdb\u5165BIOS\uff0c\u8bbe\u7f6eLegacy Support\uff0c\u4fdd\u5b58\u9000\u51fa</p> <p>\u7b2c\u4e94\u6b65\uff0c\u91cd\u542fF12\u9009\u62e9DOS\u7cfb\u7edf\uff0c\u663e\u793a<code>C:&gt;</code></p> <p>\u7b2c\u516d\u6b65\uff0c\u8f93\u5165<code>cd fpd</code>\uff0c\u56de\u8f66</p> <p>\u7b2c\u4e03\u6b65\uff0c\u8f93\u5165<code>prr</code>\uff0c\u56de\u8f66</p> <p>\u7b2c\u516b\u6b65\uff0c\u8f93\u5165<code>fpt -f 1.bin -bios</code>\uff0c\u56de\u8f66</p> <p>\u7b2c\u4e5d\u6b65\uff0c\u91cd\u542f</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/7%EF%B8%8F%E2%83%A3%20%E8%8B%B1%E9%9B%84%E8%81%94%E7%9B%9F/","title":"\ud83c\udf80 \u8f6f\u4ef6\u53ca\u914d\u7f6e/7\ufe0f\u20e3 \u82f1\u96c4\u8054\u76df","text":"<ul> <li> <p>\u4fee\u590d4K\u5206\u8fa8\u7387\u4e0b\u6307\u9488\u8fc7\u5c0f</p> <p> Getting started</p> </li> <li> <p>\u7cbe\u5f69\u65f6\u523b</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/7%EF%B8%8F%E2%83%A3%20%E8%8B%B1%E9%9B%84%E8%81%94%E7%9B%9F/A/","title":"\ud83d\udcea \u4fee\u590d4K\u5206\u8fa8\u7387\u4e0b\u6307\u9488\u8fc7\u5c0f","text":"<p>4K\u5c4f\u4e0b\uff0c\u9f20\u6807\u6307\u9488\u5c0f\u7684\u53ef\u601c\uff0c\u7ecf\u5e38\u8865\u5175\u627e\u4e0d\u5230\u6307\u9488\u3001\u6253\u56e2\u627e\u4e0d\u5230\u6307\u9488\u3001\u5546\u5e97\u8d2d\u7269\u94b1\u4e0d\u591f</p> <p>\u7b2c\u4e00\u6b65\uff0c\u4fee\u6539<code>\u82f1\u96c4\u8054\u76df/Game/Config/game.cfg</code>\uff1a</p> <pre><code>[General]\n+ CursorOverride=0\n+ CursorScale=3.0000\n</code></pre> <p><code>CursorScale</code>\u63a7\u5236\u653e\u5927\u500d\u6570\uff0c<code>3.0000</code>\u8868\u793a\u653e\u5927\u5230<code>300%</code></p> <p>\u7b2c\u4e8c\u6b65\uff0c\u4fee\u6539<code>\u82f1\u96c4\u8054\u76df/Game/Config/PersistedSettings.json</code>\uff1a</p> <pre><code>{\n    \"name\": \"CursorOverride\",\n    \"value\": \"0\"\n},\n{\n    \"name\": \"CursorScale\",\n    \"value\": \"3.0000\"\n},\n</code></pre> <p>\u7b2c\u4e09\u6b65\uff0c\u8bbe\u7f6e<code>\u82f1\u96c4\u8054\u76df/Game/Config/PersistedSettings.json</code>\u4e3a__\u53ea\u8bfb__</p>"},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/7%EF%B8%8F%E2%83%A3%20%E8%8B%B1%E9%9B%84%E8%81%94%E7%9B%9F/B/","title":"\ud83d\udcea \u7cbe\u5f69\u65f6\u523b","text":""},{"location":"%F0%9F%8E%80%20%E8%BD%AF%E4%BB%B6%E5%8F%8A%E9%85%8D%E7%BD%AE/7%EF%B8%8F%E2%83%A3%20%E8%8B%B1%E9%9B%84%E8%81%94%E7%9B%9F/B/#kaisa","title":"\u5361\u838e\u4e28Kai'Sa","text":""},{"location":"%F0%9F%8E%81%20%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/A%20%E7%9B%B8%E4%BD%8D%E5%B7%AE%E8%AE%A1%E7%AE%97/","title":"A \u76f8\u4f4d\u5dee\u8ba1\u7b97","text":""},{"location":"%F0%9F%8E%81%20%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/A%20%E7%9B%B8%E4%BD%8D%E5%B7%AE%E8%AE%A1%E7%AE%97/#_1","title":"\u58f9\u4e28\u95ee\u9898\u5206\u6790","text":"<p>\u4e24\u6761\u65f6\u95f4\u5e8f\u5217\u5b58\u5728\u4e00\u5b9a\u7684\u76f8\u4f4d\u5dee\uff0c\u600e\u6837\u63d0\u53d6\u5b83\u4eec\u4e4b\u95f4\u7684\u76f8\u4f4d\u5dee\u5462\uff1f</p> <ul> <li>\u4f7f\u7528\u79fb\u52a8\u5e73\u79fb\u76f8\u5173\u6027TLCC\uff0c\u8865\u507f\u76f8\u79fb\u518d\u8ba1\u7b97</li> <li>\u4f7f\u7528Scipy\u5c01\u88c5\u7684\u51fd\u6570\u5b9e\u73b0</li> </ul>"},{"location":"%F0%9F%8E%81%20%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/A%20%E7%9B%B8%E4%BD%8D%E5%B7%AE%E8%AE%A1%E7%AE%97/#scipy","title":"\u8d30\u4e28Scipy\u63d0\u53d6\u76f8\u4f4d\u5dee","text":"<pre><code>import matplotlib.pyplot as plt\nimport numpy as np\nfrom scipy import signal\n\nplt.style.use('mastermao-simtimes')\n\n\ndef get_diff(x, y):\n    correlation = signal.correlate(x, y, mode=\"full\")\n    lags = signal.correlation_lags(x.size, y.size, mode=\"full\")\n    delay = lags[np.argmax(correlation)]\n    return delay\n\n\ndef plot_delay(x, y, delay):\n    signal_shifted = np.roll(y, int(delay))\n\n    fig, ax = plt.subplots(figsize=(7.05, 3), constrained_layout=True)\n    ax.plot(x, label='\u53c2\u8003\u4fe1\u53f7')\n    ax.plot(y, label='\u5b9e\u9645\u4fe1\u53f7')\n    ax.plot(signal_shifted, label='\u8865\u507f\u76f8\u79fb\u4fe1\u53f7')\n    x_lim, y_lim = ax.get_xlim(), ax.get_ylim()\n    # ax.text(x=x_lim[1] - 0.1, y=y_lim[1] - 0.1, s=f'Delay = {delay:.2f}', ha='right', va='top')\n    ax.legend(loc='upper right', title=f'Delay = {delay:.2f}')\n    plt.savefig(f'./ps.webp')\n    plt.show()\n\n\nif __name__ == '__main__':\n    # \u91c7\u6837\u9891\u7387\n    fs = 125\n\n    # \u53c2\u8003\u4fe1\u53f7\u548c\u5f85\u6d4b\u4fe1\u53f7\u7684\u91c7\u6837\u6570\u636e\n    x = np.sin(np.arange(0, 3000) / fs)\n    y = 0.8 * np.sin(np.arange(0, 3000) / fs + 5)\n\n    delay = get_diff(x, y)\n    plot_delay(x, y, delay)\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/B%20%E6%BB%A4%E6%B3%A2%E5%99%A8%E8%AE%BE%E8%AE%A1/","title":"B \u6ee4\u6ce2\u5668\u8bbe\u8ba1","text":"<p>TODO</p>"},{"location":"%F0%9F%8E%81%20%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/B%20%E6%BB%A4%E6%B3%A2%E5%99%A8%E8%AE%BE%E8%AE%A1/#1","title":"1. \u5e26\u901a\u6ee4\u6ce2\uff1a","text":"<pre><code>def sos_bandpass(in_signal, low_cut, high_cut, freq=100, order=4):\n    \"\"\"\n    \u5bf9\u8f93\u5165\u4fe1\u53f7\u8fdb\u884c\u5e26\u901a\u6ee4\u6ce2\n\n    :param in_signal: 1d array\uff0c\u8f93\u5165\u4fe1\u53f7\n    :param low_cut: float\uff0c\u6ee4\u6ce2\u5668\u4e0b\u622a\u6b62\u9891\u7387(Hz)\n    :param high_cut: float\uff0c\u6ee4\u6ce2\u5668\u4e0a\u622a\u6b62\u9891\u7387(Hz)\n    :param freq: int or float\uff0c\u8f93\u5165\u4fe1\u53f7\u91c7\u6837\u7387(Hz)\n    :param order: int\uff0c\u6ee4\u6ce2\u5668\u9636\u6570\n    :return: 1d array\uff0c\u6ee4\u6ce2\u540e\u53c2\u6570\n    \"\"\"\n    nyquist_freq = 0.5 * freq\n    low = low_cut / nyquist_freq\n    high = high_cut / nyquist_freq\n    sos = signal.butter(order, [low, high], btype='bandpass', output='sos')\n    out_signal = signal.sosfiltfilt(sos, in_signal)\n    return out_signal\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/B%20%E6%BB%A4%E6%B3%A2%E5%99%A8%E8%AE%BE%E8%AE%A1/#2","title":"2. \u9ad8\u901a\u6ee4\u6ce2","text":"<pre><code>def sos_highpass(in_signal, low_cut, freq=100, order=4):\n    \"\"\"\n    \u5bf9\u8f93\u5165\u4fe1\u53f7\u8fdb\u884c\u9ad8\u901a\u6ee4\u6ce2\n    :param in_signal: 1d array\uff0c\u8f93\u5165\u4fe1\u53f7\n    :param low_cut: float\uff0c\u6ee4\u6ce2\u5668\u4e0b\u622a\u6b62\u9891\u7387(Hz)\n    :param freq: int or float\uff0c\u8f93\u5165\u4fe1\u53f7\u91c7\u6837\u7387(Hz)\n    :param order: int\uff0c\u6ee4\u6ce2\u5668\u9636\u6570\n    :return: 1d array\uff0c\u6ee4\u6ce2\u540e\u53c2\u6570\n    \"\"\"\n    nyquist_freq = 0.5 * freq\n    low = low_cut / nyquist_freq\n    sos = signal.butter(order, low, btype='high', output='sos')\n    out_signal = signal.sosfiltfilt(sos, in_signal)\n    return out_signal\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/B%20%E6%BB%A4%E6%B3%A2%E5%99%A8%E8%AE%BE%E8%AE%A1/#3","title":"3. \u4f4e\u901a\u6ee4\u6ce2","text":"<pre><code>def sos_lowpass(in_signal, high_cut, freq=100, order=4):\n    \"\"\"\n    \u5bf9\u8f93\u5165\u4fe1\u53f7\u8fdb\u884c\u9ad8\u901a\u6ee4\u6ce2\n    :param in_signal: 1d array\uff0c\u8f93\u5165\u4fe1\u53f7\n    :param high_cut: float\uff0c\u6ee4\u6ce2\u5668\u4e0a\u622a\u6b62\u9891\u7387(Hz)\n    :param freq: int or float\uff0c\u8f93\u5165\u4fe1\u53f7\u91c7\u6837\u7387(Hz)\n    :param order: int\uff0c\u6ee4\u6ce2\u5668\u9636\u6570\n    :return: 1d array\uff0c\u6ee4\u6ce2\u540e\u53c2\u6570\n    \"\"\"\n    nyquist_freq = 0.5 * freq\n    high = high_cut / nyquist_freq\n    sos = signal.butter(order, high, btype='low', output='sos')\n    out_signal = signal.sosfiltfilt(sos, in_signal)\n    return out_signal\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/1%EF%B8%8F%E2%83%A3%20%E7%94%9F%E7%89%A9%E5%8C%BB%E5%AD%A6%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/A%20%E7%BB%AA%E8%AE%BA/","title":"A \u7eea\u8bba","text":"<p>\u8bfe\u7a0b\uff1a\u751f\u7269\u533b\u5b66\u4fe1\u53f7\u5904\u7406</p> <p>\u4e3b\u8bb2\u4eba\uff1a\u674e\u51cc</p>"},{"location":"%F0%9F%8E%81%20%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/1%EF%B8%8F%E2%83%A3%20%E7%94%9F%E7%89%A9%E5%8C%BB%E5%AD%A6%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/A%20%E7%BB%AA%E8%AE%BA/#_1","title":"\u58f9\u4e28\u4fe1\u53f7","text":"<p>\u4f20\u9012\u4fe1\u606f\u7684\u7269\u7406\u91cf\uff0c\u5305\u62ec\u786e\u5b9a\u6027\u4fe1\u53f7\u3001\u968f\u673a\u4fe1\u53f7\u3001\u5206\u5f62\u4fe1\u53f7\uff08\u5c3a\u5ea6\u4e0d\u53d8\u6027\uff09\u3001\u6df7\u6c8c\u4fe1\u53f7</p> <p>\u6df7\u6c8c\u4fe1\u53f7\uff1a\u4e0d\u80fd\u51c6\u786e\u9884\u6d4b\u672a\u6765\u7684\u786e\u5b9a\u6027\u4fe1\u53f7\uff0c\u5bf9\u521d\u59cb\u503c\u654f\u611f</p>"},{"location":"%F0%9F%8E%81%20%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/1%EF%B8%8F%E2%83%A3%20%E7%94%9F%E7%89%A9%E5%8C%BB%E5%AD%A6%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/A%20%E7%BB%AA%E8%AE%BA/#_2","title":"\u8d30\u4e28\u751f\u7269\u533b\u5b66\u4fe1\u53f7","text":"<p>\u7279\u70b9\uff1a\u590d\u6742\u6027\u3001\u968f\u673a\u6027\u3001\u566a\u58f0\u5e72\u6270\u5f3a\u3001\u975e\u5e73\u7a33\u6027</p> <ol> <li> <p>\u7531\u751f\u7406\u8fc7\u7a0b\u81ea\u53d1\u4ea7\u751f\u7684\uff1aECG\u3001EEG\u3001EMG\u3001EOG\u3001\u4f53\u6e29\u3001\u8840\u538b\u3001\u8109\u640f\u3001\u547c\u5438</p> </li> <li> <p>\u8eab\u4f53\u4f5c\u4e3a\u901a\u9053\uff0c\u5916\u754c\u65bd\u52a0\u4e8e\u4eba\u4f53\u4ea7\u751f\u7684\uff1a\u8d85\u58f0\u6ce2\u3001\u540c\u4f4d\u7d20\u3001X\u5c04\u7ebf</p> </li> </ol> <p>\u751f\u7406\u4fe1\u53f7\u7684\u5e45\u503c\u548c\u5e26\u5bbd\uff1a</p> <ul> <li>\u8111\u7535\u56fe\uff08EEG\uff09\uff1a0.5-60Hz\u300115-100mV</li> <li>\u808c\u7535\u56fe\uff08EMG\uff09\uff1a10-200Hz</li> <li>\u5fc3\u7535\u56fe\uff08ECG\uff09\uff1a0.05-100Hz\u3001\u5a74\u513f10\u03bcV\uff0c\u6210\u4eba5mV</li> <li>\u5fc3\u7387\uff1a45-200\u6b21/min</li> <li>\u8840\u538b\uff1a\u52a8\u810940-300mmHg\u3001\u9759\u81090-15mmHg</li> <li>\u547c\u5438\u7387\uff1a12-40\u6b21/min</li> </ul>"},{"location":"%F0%9F%8E%81%20%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/1%EF%B8%8F%E2%83%A3%20%E7%94%9F%E7%89%A9%E5%8C%BB%E5%AD%A6%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/A%20%E7%BB%AA%E8%AE%BA/#_3","title":"\u53c1\u4e28\u4fe1\u53f7\u5904\u7406","text":"<ol> <li>\u53bb\u9664\u5e72\u6270\uff0c\u5982\u5de5\u9891\u5e72\u6270</li> <li>\u7279\u5f81\u63d0\u53d6</li> <li>\u4fe1\u53f7\u9884\u6d4b</li> </ol>"},{"location":"%F0%9F%8E%81%20%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/1%EF%B8%8F%E2%83%A3%20%E7%94%9F%E7%89%A9%E5%8C%BB%E5%AD%A6%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/A%20%E7%BB%AA%E8%AE%BA/#_4","title":"\u8086\u4e28\u6ee4\u6ce2\u5668\u8bbe\u8ba1\u548c\u5b9e\u73b0","text":"<p>IIR\u6ee4\u6ce2\u5668\u8bbe\u8ba1\uff1a\u5229\u7528\u4f20\u7edf\u6a21\u62df\u6ee4\u6ce2\u5668\u8bbe\u8ba1\u65b9\u6cd5</p> <p>FIR\u6ee4\u6ce2\u5668\u8bbe\u8ba1\uff1a\u91c7\u7528\u7a97\u51fd\u6570\u548c\u9891\u7387\u53d6\u6837\u8bbe\u8ba1\u6cd5</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/","title":"\ud83c\udf81 \u673a\u5668\u5b66\u4e60","text":"<ul> <li> <p> \u5f00\u6e90\u6570\u636e\u96c6</p> <p>\u4e00\u4e9b\u5e38\u89c1\u6570\u636e\u96c6\u7684\u7b80\u5355\u4f7f\u7528</p> <p> Getting started</p> </li> <li> <p> ML\u76f8\u5173\u6982\u5ff5</p> <p>\u4e00\u4e9b\u673a\u5668\u5b66\u4e60\u76f8\u5173\u6982\u5ff5\u3001\u7406\u89e3</p> <p> Getting started</p> </li> <li> <p> \u96c6\u6210\u5b66\u4e60</p> <p> Getting started</p> </li> <li> <p> \u8d85\u53c2\u6570\u4f18\u5316</p> <p> Getting started</p> </li> <li> <p> \u6a21\u578b\u53ef\u89e3\u91ca\u6027</p> <p> Getting started</p> </li> <li> <p> \u7f6e\u4fe1\u5b66\u4e60</p> <p> Getting started</p> </li> <li> <p> NGBoost</p> <p> Getting started</p> </li> <li> <p> CatBoost</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/1%EF%B8%8F%E2%83%A3%20%E5%BC%80%E6%BA%90%E6%95%B0%E6%8D%AE%E9%9B%86/","title":"\ud83c\udf81 \u673a\u5668\u5b66\u4e60/1\ufe0f\u20e3 \u5f00\u6e90\u6570\u636e\u96c6","text":"<ul> <li> <p>A.ipynb</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/1%EF%B8%8F%E2%83%A3%20%E5%BC%80%E6%BA%90%E6%95%B0%E6%8D%AE%E9%9B%86/A/","title":"\ud83d\udc1e \u52a0\u5229\u798f\u5c3c\u4e9a\u623f\u4ef7\u6570\u636e\u96c6","text":"In\u00a0[1]: Copied! <pre># \u5bfc\u5165\u52a0\u5229\u798f\u5c3c\u4e9a\u623f\u4ef7\u6570\u636e\nfrom sklearn.datasets import fetch_california_housing\nfrom sklearn.model_selection import train_test_split\n\ndata = fetch_california_housing()\nprint(data.keys())\n\n# \u5212\u5206\u6570\u636e\u96c6\nx = data['data']\ny = data['target']\ntrain_x, test_x, train_y, test_y = train_test_split(x, y, test_size=0.3, random_state=22)\n</pre> # \u5bfc\u5165\u52a0\u5229\u798f\u5c3c\u4e9a\u623f\u4ef7\u6570\u636e from sklearn.datasets import fetch_california_housing from sklearn.model_selection import train_test_split  data = fetch_california_housing() print(data.keys())  # \u5212\u5206\u6570\u636e\u96c6 x = data['data'] y = data['target'] train_x, test_x, train_y, test_y = train_test_split(x, y, test_size=0.3, random_state=22) <pre>dict_keys(['data', 'target', 'frame', 'target_names', 'feature_names', 'DESCR'])\n</pre> In\u00a0[2]: Copied! <pre>from sklearn.datasets import fetch_california_housing\n\n# \u8f7d\u5165\u6570\u636e\ncalifornia_housing = fetch_california_housing(as_frame=True)\n</pre> from sklearn.datasets import fetch_california_housing  # \u8f7d\u5165\u6570\u636e california_housing = fetch_california_housing(as_frame=True) In\u00a0[3]: Copied! <pre># \u67e5\u770b\u6570\u636e\u96c6\u63cf\u8ff0\nprint(california_housing.DESCR)\n</pre> # \u67e5\u770b\u6570\u636e\u96c6\u63cf\u8ff0 print(california_housing.DESCR) <pre>.. _california_housing_dataset:\n\nCalifornia Housing dataset\n--------------------------\n\n**Data Set Characteristics:**\n\n    :Number of Instances: 20640\n\n    :Number of Attributes: 8 numeric, predictive attributes and the target\n\n    :Attribute Information:\n        - MedInc        median income in block group\n        - HouseAge      median house age in block group\n        - AveRooms      average number of rooms per household\n        - AveBedrms     average number of bedrooms per household\n        - Population    block group population\n        - AveOccup      average number of household members\n        - Latitude      block group latitude\n        - Longitude     block group longitude\n\n    :Missing Attribute Values: None\n\nThis dataset was obtained from the StatLib repository.\nhttps://www.dcc.fc.up.pt/~ltorgo/Regression/cal_housing.html\n\nThe target variable is the median house value for California districts,\nexpressed in hundreds of thousands of dollars ($100,000).\n\nThis dataset was derived from the 1990 U.S. census, using one row per census\nblock group. A block group is the smallest geographical unit for which the U.S.\nCensus Bureau publishes sample data (a block group typically has a population\nof 600 to 3,000 people).\n\nA household is a group of people residing within a home. Since the average\nnumber of rooms and bedrooms in this dataset are provided per household, these\ncolumns may take surprisingly large values for block groups with few households\nand many empty houses, such as vacation resorts.\n\nIt can be downloaded/loaded using the\n:func:`sklearn.datasets.fetch_california_housing` function.\n\n.. topic:: References\n\n    - Pace, R. Kelley and Ronald Barry, Sparse Spatial Autoregressions,\n      Statistics and Probability Letters, 33 (1997) 291-297\n</pre> In\u00a0[4]: Copied! <pre># \u524d8\u5217\u662f\u53ef\u7528\u4e8e\u9884\u6d4b\u7684\u7279\u5f81\uff0c\u6700\u540e\u4e00\u5217\u662f\u623f\u5b50\u4ef7\u503c\ncalifornia_housing.frame.head()\n</pre> # \u524d8\u5217\u662f\u53ef\u7528\u4e8e\u9884\u6d4b\u7684\u7279\u5f81\uff0c\u6700\u540e\u4e00\u5217\u662f\u623f\u5b50\u4ef7\u503c california_housing.frame.head() Out[4]: MedInc HouseAge AveRooms AveBedrms Population AveOccup Latitude Longitude MedHouseVal 0 8.3252 41.0 6.984127 1.023810 322.0 2.555556 37.88 -122.23 4.526 1 8.3014 21.0 6.238137 0.971880 2401.0 2.109842 37.86 -122.22 3.585 2 7.2574 52.0 8.288136 1.073446 496.0 2.802260 37.85 -122.24 3.521 3 5.6431 52.0 5.817352 1.073059 558.0 2.547945 37.85 -122.25 3.413 4 3.8462 52.0 6.281853 1.081081 565.0 2.181467 37.85 -122.25 3.422 In\u00a0[5]: Copied! <pre># \u67e5\u770b\u53ef\u7528\u4e8e\u9884\u6d4b\u7684\u7279\u5f81\ncalifornia_housing.data.head()\n</pre> # \u67e5\u770b\u53ef\u7528\u4e8e\u9884\u6d4b\u7684\u7279\u5f81 california_housing.data.head() Out[5]: MedInc HouseAge AveRooms AveBedrms Population AveOccup Latitude Longitude 0 8.3252 41.0 6.984127 1.023810 322.0 2.555556 37.88 -122.23 1 8.3014 21.0 6.238137 0.971880 2401.0 2.109842 37.86 -122.22 2 7.2574 52.0 8.288136 1.073446 496.0 2.802260 37.85 -122.24 3 5.6431 52.0 5.817352 1.073059 558.0 2.547945 37.85 -122.25 4 3.8462 52.0 6.281853 1.081081 565.0 2.181467 37.85 -122.25 In\u00a0[6]: Copied! <pre># \u67e5\u770b\u623f\u5b50\u4ef7\u503c\u7279\u5f81\ncalifornia_housing.target.head()\n</pre> # \u67e5\u770b\u623f\u5b50\u4ef7\u503c\u7279\u5f81 california_housing.target.head() Out[6]: <pre>0    4.526\n1    3.585\n2    3.521\n3    3.413\n4    3.422\nName: MedHouseVal, dtype: float64</pre> In\u00a0[7]: Copied! <pre># \u67e5\u770b\u662f\u5426\u7f3a\u5931\ncalifornia_housing.frame.info()\n</pre> # \u67e5\u770b\u662f\u5426\u7f3a\u5931 california_housing.frame.info() <pre>&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 20640 entries, 0 to 20639\nData columns (total 9 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   MedInc       20640 non-null  float64\n 1   HouseAge     20640 non-null  float64\n 2   AveRooms     20640 non-null  float64\n 3   AveBedrms    20640 non-null  float64\n 4   Population   20640 non-null  float64\n 5   AveOccup     20640 non-null  float64\n 6   Latitude     20640 non-null  float64\n 7   Longitude    20640 non-null  float64\n 8   MedHouseVal  20640 non-null  float64\ndtypes: float64(9)\nmemory usage: 1.4 MB\n</pre> In\u00a0[8]: Copied! <pre>import matplotlib.pyplot as plt\nfrom PyAqua import config\nconfig.plt_style()\n\n# \u67e5\u770b\u6bcf\u4e2a\u7279\u5f81\u7684\u5206\u5e03\ncalifornia_housing.frame.hist(figsize=(10, 9), bins=30, edgecolor=\"black\")\nplt.subplots_adjust(hspace=0.7, wspace=0.4)\n</pre> import matplotlib.pyplot as plt from PyAqua import config config.plt_style()  # \u67e5\u770b\u6bcf\u4e2a\u7279\u5f81\u7684\u5206\u5e03 california_housing.frame.hist(figsize=(10, 9), bins=30, edgecolor=\"black\") plt.subplots_adjust(hspace=0.7, wspace=0.4) <p>\u5e73\u5747\u623f\u95f4\u3001\u5e73\u5747\u5367\u5ba4\u3001\u5e73\u5747\u804c\u4e1a\u548c\u4eba\u53e3\u660e\u663e\u7684\u5b58\u5728\u79bb\u7fa4\u503c\uff0c\u53ef\u4ee5\u5927\u6982\u770b\u4e0b\u6570\u636e\u7684\u7edf\u8ba1\u7ed3\u679c</p> In\u00a0[10]: Copied! <pre>features_of_interest = [\"AveRooms\", \"AveBedrms\", \"AveOccup\", \"Population\"]\ncalifornia_housing.frame[features_of_interest].describe()\n</pre> features_of_interest = [\"AveRooms\", \"AveBedrms\", \"AveOccup\", \"Population\"] california_housing.frame[features_of_interest].describe() Out[10]: AveRooms AveBedrms AveOccup Population count 20640.000000 20640.000000 20640.000000 20640.000000 mean 5.429000 1.096675 3.070655 1425.476744 std 2.474173 0.473911 10.386050 1132.462122 min 0.846154 0.333333 0.692308 3.000000 25% 4.440716 1.006079 2.429741 787.000000 50% 5.229129 1.048780 2.818116 1166.000000 75% 6.052381 1.099526 3.282261 1725.000000 max 141.909091 34.066667 1243.333333 35682.000000 In\u00a0[12]: Copied! <pre># \u67e5\u770b\u623f\u4ef7\u4e0e\u7ecf\u7eac\u5ea6\u7684\u76f8\u5173\u5173\u7cfb\n# \u6a2a\u5750\u6807\u4e3a\nimport seaborn as sns\n\nsns.scatterplot(\n    data=california_housing.frame,\n    x=\"Longitude\",\n    y=\"Latitude\",\n    size=\"MedHouseVal\",\n    hue=\"MedHouseVal\",\n    palette=\"viridis\",\n    alpha=0.5,\n)\nplt.legend(title=\"MedHouseVal\", bbox_to_anchor=(1.05, 0.95), loc=\"upper left\")\n_ = plt.title(\"Median house value depending of\\n their spatial location\")\n</pre> # \u67e5\u770b\u623f\u4ef7\u4e0e\u7ecf\u7eac\u5ea6\u7684\u76f8\u5173\u5173\u7cfb # \u6a2a\u5750\u6807\u4e3a import seaborn as sns  sns.scatterplot(     data=california_housing.frame,     x=\"Longitude\",     y=\"Latitude\",     size=\"MedHouseVal\",     hue=\"MedHouseVal\",     palette=\"viridis\",     alpha=0.5, ) plt.legend(title=\"MedHouseVal\", bbox_to_anchor=(1.05, 0.95), loc=\"upper left\") _ = plt.title(\"Median house value depending of\\n their spatial location\") <p>\u6a2a\u5750\u6807\u4e3a\u7ecf\u5ea6\uff0c\u7eb5\u5750\u6807\u4e3a\u7eac\u5ea6\uff0c\u6309\u7167\u623f\u4ef7\u751f\u6210\u4e0d\u540c\u989c\u8272\u548c\u5927\u5c0f\u7684\u6563\u70b9\u56fe\uff0c\u8868\u5f81\u4e0d\u540c\u4f4d\u7f6e\u7684\u623f\u4ef7</p> In\u00a0[13]: Copied! <pre># \u968f\u673a\u62bd\u53d6500\u4e2a\u6837\u672c\nimport numpy as np\n\nrng = np.random.RandomState(0)\nindices = rng.choice(\n    np.arange(california_housing.frame.shape[0]), size=500, replace=False\n)\n</pre> # \u968f\u673a\u62bd\u53d6500\u4e2a\u6837\u672c import numpy as np  rng = np.random.RandomState(0) indices = rng.choice(     np.arange(california_housing.frame.shape[0]), size=500, replace=False ) In\u00a0[14]: Copied! <pre># \u518d\u6b21\u7ed8\u5236\u623f\u4ef7\u4e0e\u7ecf\u7eac\u5ea6\u7684\u5173\u7cfb\nsns.scatterplot(\n    data=california_housing.frame.iloc[indices],\n    x=\"Longitude\",\n    y=\"Latitude\",\n    size=\"MedHouseVal\",\n    hue=\"MedHouseVal\",\n    palette=\"viridis\",\n    alpha=0.5,\n)\nplt.legend(title=\"MedHouseVal\", bbox_to_anchor=(1.05, 1), loc=\"upper left\")\n_ = plt.title(\"Median house value depending of\\n their spatial location\")\n</pre> # \u518d\u6b21\u7ed8\u5236\u623f\u4ef7\u4e0e\u7ecf\u7eac\u5ea6\u7684\u5173\u7cfb sns.scatterplot(     data=california_housing.frame.iloc[indices],     x=\"Longitude\",     y=\"Latitude\",     size=\"MedHouseVal\",     hue=\"MedHouseVal\",     palette=\"viridis\",     alpha=0.5, ) plt.legend(title=\"MedHouseVal\", bbox_to_anchor=(1.05, 1), loc=\"upper left\") _ = plt.title(\"Median house value depending of\\n their spatial location\") In\u00a0[15]: Copied! <pre>import pandas as pd\n\n# \u53bb\u6389\u7ecf\u7eac\u5ea6\u4e0d\u5fc5\u8981\u7684\u7279\u5f81\ncolumns_drop = [\"Longitude\", \"Latitude\"]\nsubset = california_housing.frame.iloc[indices].drop(columns=columns_drop)\n# \u5c06\u76ee\u6807\u91cf\u5316\u5e76\u4fdd\u7559\u4e2d\u95f4\u4f4d\u7f6e\nsubset[\"MedHouseVal\"] = pd.qcut(subset[\"MedHouseVal\"], 6, retbins=False)\nsubset[\"MedHouseVal\"] = subset[\"MedHouseVal\"].apply(lambda x: x.mid)\n\n# \u7ed8\u5236\u77e9\u9635\u56fe\n_ = sns.pairplot(data=subset, hue=\"MedHouseVal\", palette=\"viridis\")\n</pre> import pandas as pd  # \u53bb\u6389\u7ecf\u7eac\u5ea6\u4e0d\u5fc5\u8981\u7684\u7279\u5f81 columns_drop = [\"Longitude\", \"Latitude\"] subset = california_housing.frame.iloc[indices].drop(columns=columns_drop) # \u5c06\u76ee\u6807\u91cf\u5316\u5e76\u4fdd\u7559\u4e2d\u95f4\u4f4d\u7f6e subset[\"MedHouseVal\"] = pd.qcut(subset[\"MedHouseVal\"], 6, retbins=False) subset[\"MedHouseVal\"] = subset[\"MedHouseVal\"].apply(lambda x: x.mid)  # \u7ed8\u5236\u77e9\u9635\u56fe _ = sns.pairplot(data=subset, hue=\"MedHouseVal\", palette=\"viridis\") In\u00a0[16]: Copied! <pre># \u4f7f\u7528\u5cad\u56de\u5f52\u8fdb\u884c\u623f\u4ef7\u9884\u6d4b\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import RidgeCV\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.model_selection import cross_validate\n\nalphas = np.logspace(-3, 1, num=30)\nmodel = make_pipeline(StandardScaler(), RidgeCV(alphas=alphas))\ncv_results = cross_validate(\n    model,\n    california_housing.data,\n    california_housing.target,\n    return_estimator=True,\n    n_jobs=2,\n)\n</pre> # \u4f7f\u7528\u5cad\u56de\u5f52\u8fdb\u884c\u623f\u4ef7\u9884\u6d4b from sklearn.preprocessing import StandardScaler from sklearn.linear_model import RidgeCV from sklearn.pipeline import make_pipeline from sklearn.model_selection import cross_validate  alphas = np.logspace(-3, 1, num=30) model = make_pipeline(StandardScaler(), RidgeCV(alphas=alphas)) cv_results = cross_validate(     model,     california_housing.data,     california_housing.target,     return_estimator=True,     n_jobs=2, ) In\u00a0[17]: Copied! <pre>score = cv_results[\"test_score\"]\nprint(f\"R2 score: {score.mean():.3f} \u00b1 {score.std():.3f}\")\n</pre> score = cv_results[\"test_score\"] print(f\"R2 score: {score.mean():.3f} \u00b1 {score.std():.3f}\") <pre>R2 score: 0.553 \u00b1 0.062\n</pre> In\u00a0[18]: Copied! <pre>cv_results.keys()\n</pre> cv_results.keys() Out[18]: <pre>dict_keys(['fit_time', 'score_time', 'estimator', 'test_score'])</pre> In\u00a0[19]: Copied! <pre>import pandas as pd\n\ncoefs = pd.DataFrame(\n    [est[-1].coef_ for est in cv_results[\"estimator\"]],\n    columns=california_housing.feature_names,\n)\n</pre> import pandas as pd  coefs = pd.DataFrame(     [est[-1].coef_ for est in cv_results[\"estimator\"]],     columns=california_housing.feature_names, ) In\u00a0[20]: Copied! <pre>color = {\"whiskers\": \"black\", \"medians\": \"black\", \"caps\": \"black\"}\ncoefs.plot.box(vert=False, color=color)\nplt.axvline(x=0, ymin=-1, ymax=1, color=\"black\", linestyle=\"--\")\n_ = plt.title(\"Coefficients of Ridge models\\n via cross-validation\")\n</pre> color = {\"whiskers\": \"black\", \"medians\": \"black\", \"caps\": \"black\"} coefs.plot.box(vert=False, color=color) plt.axvline(x=0, ymin=-1, ymax=1, color=\"black\", linestyle=\"--\") _ = plt.title(\"Coefficients of Ridge models\\n via cross-validation\") <p>[^1]: Pace, R. Kelley and Ronald Barry, Sparse Spatial Autoregressions,Statistics and Probability Letters, 33 (1997) 291-297.</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/1%EF%B8%8F%E2%83%A3%20%E5%BC%80%E6%BA%90%E6%95%B0%E6%8D%AE%E9%9B%86/A/","title":"\ud83d\udc1e \u52a0\u5229\u798f\u5c3c\u4e9a\u623f\u4ef7\u6570\u636e\u96c6\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/1%EF%B8%8F%E2%83%A3%20%E5%BC%80%E6%BA%90%E6%95%B0%E6%8D%AE%E9%9B%86/A/","title":"\u58f9\u4e28\u6570\u636e\u96c6\u7b80\u4ecb\u00b6","text":"<p>\u7b80\u4ecb\uff1a\u5305\u542b\u5e73\u5747\u623f\u5c4b\u4ef7\u503c\u4f5c\u4e3a\u76ee\u6807\u53d8\u91cf\uff0c\u8f93\u5165\u53d8\u91cf\u5305\u62ec\uff1a\u5e73\u5747\u6536\u5165\u3001\u4f4f\u623f\u5e73\u5747\u5e74\u9f84\u3001\u5e73\u5747\u623f\u95f4\u3001\u5e73\u5747\u5367\u5ba4\u3001\u4eba\u53e3\u3001\u5e73\u5747\u804c\u4e1a\u3001\u7eac\u5ea6\u3001\u7cbe\u5ea6[^1]</p> <p>\u539f\u59cb\u6570\u636e\u53ef\u4ee5\u4eceStatLib\u83b7\u53d6\uff1ahttp://lib.stat.cmu.edu/datasets/</p> <p>\u6570\u636e\u91cf\uff1a[20640, 9]</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/1%EF%B8%8F%E2%83%A3%20%E5%BC%80%E6%BA%90%E6%95%B0%E6%8D%AE%E9%9B%86/A/#scikit-learn","title":"\u8d30\u4e28scikit-learn\u8c03\u7528\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%EF%B8%8F%E2%83%A3%20ML%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/","title":"\ud83c\udf81 \u673a\u5668\u5b66\u4e60/3\ufe0f\u20e3 ML\u76f8\u5173\u6982\u5ff5","text":"<ul> <li> <p>\u79bb\u7fa4\u503c\u5bf9\u6a21\u578b\u7684\u5f71\u54cd</p> <p> Getting started</p> </li> <li> <p>CatBoost\u53c2\u6570</p> <p> Getting started</p> </li> <li> <p>C.ipynb</p> <p> Getting started</p> </li> <li> <p>\u81ea\u7136\u68af\u5ea6&amp;\u5e38\u89c4\u68af\u5ea6</p> <p> Getting started</p> </li> <li> <p>\u76f8\u5173\u7cfb\u6570\u4e0e\u51b3\u5b9a\u7cfb\u6570</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%EF%B8%8F%E2%83%A3%20ML%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/A/","title":"\ud83d\ude06 \u79bb\u7fa4\u503c\u5bf9\u6a21\u578b\u7684\u5f71\u54cd","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%EF%B8%8F%E2%83%A3%20ML%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/A/#_1","title":"\u79bb\u7fa4\u503c\u5982\u4f55\u5f71\u54cd\u6a21\u578b\u6784\u5efa\uff1f","text":"<p>\u79bb\u7fa4\u503c\uff1a\u6570\u636e\u96c6\u4e2d\u4e0e\u5176\u4ed6\u6570\u636e\u660e\u663e\u4e0d\u540c\u7684\u89c2\u6d4b\u503c\u3002\u53ef\u80fd\u7531\u4e8e\u6d4b\u91cf\u6216\u8bb0\u5f55\u9519\u8bef\u3001\u5f02\u5e38\u60c5\u51b5\u6216\u771f\u5b9e\u4f46\u7f55\u89c1\u7684\u4e8b\u4ef6\u5f15\u8d77\u7684\u3002\u79bb\u7fa4\u503c\u5728\u6a21\u578b\u6784\u5efa\u4e2d\u53ef\u80fd\u5bf9\u7ed3\u679c\u6709\u5f71\u54cd\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e**\u6a21\u578b\u7c7b\u578b**\u548c**\u6570\u636e\u7279\u70b9**\u3002\u53ef\u80fd\u7684\u5f71\u54cd\u5305\u62ec\uff1a</p> <ol> <li>\u5bf9\u57fa\u4e8e\u8ddd\u79bb\u5ea6\u91cf\u7684\u6a21\u578b\uff08K-Means\u3001KNN\u7b49\uff09\uff0c\u79bb\u7fa4\u503c\u53ef\u80fd\u4f1a\u6709\u8f83\u5927\u5f71\u54cd\u3002\u6a21\u578b\u8ba1\u7b97\u8ddd\u79bb\u65f6\uff0c\u79bb\u7fa4\u503c\u4f1a\u5bfc\u81f4\u8ddd\u79bb\u8ba1\u7b97\u7ed3\u679c\u660e\u663e\u504f\u79bb\u5176\u4ed6\u6570\u636e\u70b9\uff0c\u4ece\u800c\u5f71\u54cd\u6a21\u578b\u7ed3\u679c</li> <li>\u79bb\u7fa4\u503c\u5f71\u54cd\u56de\u5f52\u6a21\u578b\u7684\u53c2\u6570\u4f30\u8ba1\u3002\u57fa\u4e8e\u6700\u5c0f\u4e8c\u4e58\u6cd5\u53c2\u6570\u4f30\u8ba1\uff08\u7ebf\u6027\u56de\u5f52\u7b49\uff09\uff0c\u79bb\u7fa4\u503c\u4f1a\u5bfc\u81f4\u53c2\u6570\u4f30\u8ba1\u7ed3\u679c\u53d7\u5230\u79bb\u7fa4\u503c\u7684\u5f71\u54cd\uff0c\u5f71\u54cd\u6a21\u578b\u7ed3\u679c\u3002</li> <li>\u79bb\u7fa4\u503c\u5f71\u54cd\u51b3\u7b56\u6811\u548c\u57fa\u4e8e\u6811\u7684\u6a21\u578b\uff08\u5982RandomForest\u3001GBDT\uff09\u7684\u6784\u5efa\u3002\u6a21\u578b\u901a\u8fc7\u5206\u88c2\u8282\u70b9\u6784\u5efa\u6a21\u578b\uff0c\u79bb\u7fa4\u503c\u5bfc\u81f4\u8282\u70b9\u5206\u88c2\u7684\u9009\u62e9\u51fa\u73b0\u504f\u5dee\uff08\u901a\u8fc7\u635f\u5931\u51fd\u6570\u5f71\u54cd\uff09\uff0c\u5f71\u54cd\u6a21\u578b\u7684\u9884\u6d4b\u80fd\u529b\u3002</li> <li>\u79bb\u7fa4\u503c\u5f71\u54cd\u795e\u7ecf\u7f51\u7edc\u548c\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u3002\u6a21\u578b\u4f9d\u8d56\u4e8e\u5927\u91cf\u7684\u8bad\u7ec3\u6570\u636e\u548c\u6743\u91cd\u66f4\u65b0\u7b97\u6cd5\uff0c\u79bb\u7fa4\u503c\u5bfc\u81f4\u6a21\u578b\u7684\u8bad\u7ec3\u8fc7\u7a0b\u53d8\u5f97\u4e0d\u7a33\u5b9a\uff0c\u9700\u8981\u66f4\u591a\u7684\u8c03\u4f18\u548c\u5904\u7406\u3002</li> </ol> <p>\u5f53\u5904\u7406\u79bb\u7fa4\u503c\u65f6\uff0c\u53ef\u4ee5\u8003\u8651\u4ee5\u4e0b\u7b56\u7565\uff1a</p> <ol> <li>\u68c0\u6d4b\u79bb\u7fa4\u503c\uff1a\u9996\u5148\uff0c\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u79bb\u7fa4\u503c\u68c0\u6d4b\uff0c\u53ef\u4ee5\u4f7f\u7528\u7edf\u8ba1\u65b9\u6cd5\uff08\u5982\u7bb1\u7ebf\u56fe\u3001Z\u5206\u6570\uff09\u6216\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u65b9\u6cd5\uff08\u5982\u5b64\u7acb\u68ee\u6797\u3001\u5c40\u90e8\u79bb\u7fa4\u56e0\u5b50\uff09\u6765\u8bc6\u522b\u79bb\u7fa4\u503c\u3002</li> <li>\u6570\u636e\u5904\u7406\uff1a\u6839\u636e\u79bb\u7fa4\u503c\u7684\u6027\u8d28\u548c\u6570\u636e\u96c6\u7684\u7279\u70b9\uff0c\u53ef\u4ee5\u9009\u62e9\u5bf9\u79bb\u7fa4\u503c\u8fdb\u884c\u5904\u7406\u3002\u5904\u7406\u65b9\u6cd5\u5305\u62ec\u5220\u9664\u79bb\u7fa4\u503c\u3001\u66ff\u6362\u4e3a\u7f3a\u5931\u503c\u3001\u5e73\u6ed1\u5316\u5904\u7406\u7b49\u3002</li> <li>\u4f7f\u7528\u9c81\u68d2\u6027\u6a21\u578b\uff1a\u4e00\u4e9b\u6a21\u578b\u5bf9\u79bb\u7fa4\u503c\u5177\u6709\u4e00\u5b9a\u7684\u9c81\u68d2\u6027\uff0c\u4f8b\u5982\u57fa\u4e8e\u4e2d\u4f4d\u6570\u7684\u56de\u5f52\u6a21\u578b\uff08\u5982\u5cad\u56de\u5f52\u3001Lasso\u56de\u5f52\uff09\u548c\u57fa\u4e8e\u6811\u7684\u6a21\u578b\uff08\u5982\u968f\u673a\u68ee\u6797\uff09\u3002\u4f7f\u7528\u8fd9\u4e9b\u6a21\u578b\u53ef\u4ee5\u51cf\u5c11\u79bb\u7fa4\u503c\u5bf9\u7ed3\u679c\u7684\u5f71\u54cd\u3002</li> <li>\u7279\u5f81\u5de5\u7a0b\uff1a\u901a\u8fc7\u5408\u7406\u7684\u7279\u5f81\u5de5\u7a0b\u53ef\u4ee5\u51cf\u5c11\u79bb\u7fa4\u503c\u5bf9\u6a21\u578b\u7684\u5f71\u54cd\u3002\u4f8b\u5982\uff0c\u4f7f\u7528\u5206\u7bb1\uff08binning\uff09\u6216\u5f52\u4e00\u5316\u7b49\u65b9\u6cd5\u53ef\u4ee5\u5c06\u79bb\u7fa4\u503c\u8f6c\u5316\u4e3a\u8f83\u5927\u8303\u56f4\u5185\u7684\u666e\u901a\u503c\uff0c\u4ece\u800c\u51cf\u5c11\u5176\u5bf9\u6a21\u578b\u7684\u5f71\u54cd\u3002</li> </ol>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%EF%B8%8F%E2%83%A3%20ML%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/B/","title":"\ud83d\ude0e CatBoost\u53c2\u6570","text":"<p>\u95ee\u9898\uff1a\u5728Catboost\u4e2d\u6709<code>eval_metric</code>\u548c<code>loss_function</code>\u4e24\u4e2a\u53c2\u6570\uff0c\u4e8c\u8005\u6709\u4ec0\u4e48\u533a\u522b\uff1f</p> <p>\u5728CatBoost\u4e2d\uff0c<code>eval_metric</code>\u548c<code>loss_function</code>\u662f\u4e24\u4e2a\u76f8\u5173\u4f46\u4e0d\u5b8c\u5168\u76f8\u540c\u7684\u6982\u5ff5\u3002</p> <ol> <li> <p><code>eval_metric</code>\uff08\u8bc4\u4f30\u6307\u6807\uff09\uff1a<code>eval_metric</code>\u662f\u7528\u4e8e\u8bc4\u4f30\u6a21\u578b\u6027\u80fd\u7684\u6307\u6807\u3002\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0cCatBoost\u4f1a\u6839\u636e\u6307\u5b9a\u7684<code>eval_metric</code>\u8861\u91cf\u6a21\u578b\u5728\u6bcf\u4e2a\u8bad\u7ec3\u8fed\u4ee3\u4e2d\u7684\u6027\u80fd\uff0c\u5e76\u5c06\u5176\u7528\u4e8e\u786e\u5b9a\u662f\u5426\u8fdb\u884c\u63d0\u524d\u505c\u6b62\u548c\u9009\u62e9\u6700\u4f73\u6a21\u578b\u3002<code>eval_metric</code>\u901a\u5e38\u7528\u4e8e\u6a21\u578b\u9009\u62e9\u548c\u8c03\u53c2\u3002</p> </li> <li> <p><code>loss_function</code>\uff08\u635f\u5931\u51fd\u6570\uff09\uff1a<code>loss_function</code>\u662fCatBoost\u7528\u4e8e\u5b9a\u4e49\u6a21\u578b\u7684\u4f18\u5316\u76ee\u6807\u7684\u51fd\u6570\u3002\u635f\u5931\u51fd\u6570\u8861\u91cf\u6a21\u578b\u5728\u6bcf\u4e2a\u8bad\u7ec3\u6837\u672c\u4e0a\u7684\u9884\u6d4b\u8bef\u5dee\uff0c\u5e76\u7528\u4e8e\u8ba1\u7b97\u68af\u5ea6\u548c\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u3002<code>loss_function</code>\u76f4\u63a5\u5f71\u54cd\u6a21\u578b\u7684\u4f18\u5316\u8fc7\u7a0b\uff0c\u51b3\u5b9a\u6a21\u578b\u5982\u4f55\u8fdb\u884c\u53c2\u6570\u66f4\u65b0\u3002</p> </li> </ol> <p>\u867d\u7136<code>eval_metric</code>\u548c<code>loss_function</code>\u6709\u4e00\u5b9a\u7684\u8054\u7cfb\uff0c\u4f46\u5b83\u4eec\u7684\u4f5c\u7528\u548c\u5e94\u7528\u573a\u666f\u662f\u4e0d\u540c\u7684\u3002</p> <p>\u5728CatBoost\u4e2d\uff0c\u53ef\u4ee5\u6839\u636e\u4efb\u52a1\u7684\u7279\u70b9\u548c\u9700\u6c42\u9009\u62e9\u9002\u5408\u7684<code>eval_metric</code>\u548c<code>loss_function</code>\u7ec4\u5408\u3002\u5e38\u89c1\u7684<code>eval_metric</code>\u5305\u62ec<code>RMSE</code>\uff08\u5747\u65b9\u6839\u8bef\u5dee\uff09\u3001<code>MAE</code>\uff08\u5e73\u5747\u7edd\u5bf9\u8bef\u5dee\uff09\u3001<code>Logloss</code>\uff08\u5bf9\u6570\u635f\u5931\uff09\u7b49\uff0c\u800c\u5e38\u89c1\u7684<code>loss_function</code>\u5305\u62ec<code>RMSE</code>\u3001<code>MAE</code>\u3001<code>Logloss</code>\u3001<code>Poisson</code>\uff08\u6cca\u677e\u635f\u5931\uff09\u7b49\u3002</p> <p>\u4f8b\u5982\uff0c\u53ef\u4ee5\u9009\u62e9<code>eval_metric='RMSE'</code>\u7528\u4e8e\u8bc4\u4f30\u6a21\u578b\u7684\u6027\u80fd\uff0c\u540c\u65f6\u4f7f\u7528<code>loss_function='RMSE'</code>\u4f5c\u4e3a\u4f18\u5316\u6a21\u578b\u7684\u635f\u5931\u51fd\u6570\uff0c\u4ee5\u6700\u5c0f\u5316\u5747\u65b9\u6839\u8bef\u5dee\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c<code>eval_metric</code>\u548c<code>loss_function</code>\u7684\u9009\u62e9\u5e94\u6839\u636e\u5177\u4f53\u7684\u4efb\u52a1\u548c\u9700\u6c42\u8fdb\u884c\u6743\u8861\u548c\u8c03\u6574\u3002\u67d0\u4e9b\u6307\u6807\u9002\u7528\u4e8e\u7279\u5b9a\u7684\u4efb\u52a1\uff0c\u800c\u67d0\u4e9b\u635f\u5931\u51fd\u6570\u5219\u5bf9\u5e94\u7279\u5b9a\u7684\u6a21\u578b\u5047\u8bbe\u548c\u4f18\u5316\u76ee\u6807\u3002\u56e0\u6b64\uff0c\u5728\u9009\u62e9\u65f6\u9700\u8981\u8003\u8651\u4efb\u52a1\u7684\u7279\u70b9\u3001\u6570\u636e\u7684\u5206\u5e03\u548c\u6a21\u578b\u7684\u6027\u8d28\u3002</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%EF%B8%8F%E2%83%A3%20ML%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/C/","title":"\ud83d\ude35 \u76f8\u4f3c\u6027\u5ea6\u91cf","text":"In\u00a0[2]: Copied! <pre>import numpy as np\nfrom scipy.spatial import distance\n</pre> import numpy as np from scipy.spatial import distance In\u00a0[3]: Copied! <pre>np.random.seed(22)\n\nx = np.random.random(10) * 10\ny = np.random.random(10) * 10\nprint(f'X = {x}\\nY = {y}')\n</pre> np.random.seed(22)  x = np.random.random(10) * 10 y = np.random.random(10) * 10 print(f'X = {x}\\nY = {y}') <pre>X = [2.08460537 4.81681062 4.20538035 8.59181999 1.71161554 3.38863961\n 2.70532833 6.9104135  2.20404517 8.11950921]\nY = [0.10526874 5.61203697 8.13726187 7.45100296 1.89111355 0.06140866\n 7.72043871 9.57832168 7.01937884 2.97578267]\n</pre> In\u00a0[8]: Copied! <pre>def euclidean_dist(x, y):\n    return np.sqrt(np.sum(np.square(x - y)))\n\n\ndist = euclidean_dist(x, y)\nprint(f'\u6b27\u6c0f\u8ddd\u79bb = {dist}')\ndist = np.linalg.norm(x - y)\nprint(f'L2\u8303\u6570 = {dist}')\ndist = distance.euclidean(x, y)\nprint(f'Scipy\u6b27\u5f0f\u8ddd\u79bb = {dist}')\n</pre> def euclidean_dist(x, y):     return np.sqrt(np.sum(np.square(x - y)))   dist = euclidean_dist(x, y) print(f'\u6b27\u6c0f\u8ddd\u79bb = {dist}') dist = np.linalg.norm(x - y) print(f'L2\u8303\u6570 = {dist}') dist = distance.euclidean(x, y) print(f'Scipy\u6b27\u5f0f\u8ddd\u79bb = {dist}') <pre>\u6b27\u6c0f\u8ddd\u79bb = 10.692447183086724\nL2\u8303\u6570 = 10.692447183086724\nScipy\u6b27\u5f0f\u8ddd\u79bb = 10.692447183086724\n</pre> In\u00a0[9]: Copied! <pre>def manhattan_dist(x, y):\n    return sum(np.abs(x - y))\n\n\ndist = manhattan_dist(x, y)\nprint(f'\u66fc\u54c8\u987f\u8ddd\u79bb = {dist}')\ndist = np.linalg.norm(x - y, ord=1)\nprint(f'L1\u8303\u6570 = {dist}')\ndist = distance.cityblock(x, y)\nprint(f'Scipy\u66fc\u54c8\u987f\u8ddd\u79bb = {dist}')\n</pre> def manhattan_dist(x, y):     return sum(np.abs(x - y))   dist = manhattan_dist(x, y) print(f'\u66fc\u54c8\u987f\u8ddd\u79bb = {dist}') dist = np.linalg.norm(x - y, ord=1) print(f'L1\u8303\u6570 = {dist}') dist = distance.cityblock(x, y) print(f'Scipy\u66fc\u54c8\u987f\u8ddd\u79bb = {dist}') <pre>\u66fc\u54c8\u987f\u8ddd\u79bb = 28.99606925332795\nL1\u8303\u6570 = 28.99606925332795\nScipy\u66fc\u54c8\u987f\u8ddd\u79bb = 28.99606925332795\n</pre> In\u00a0[13]: Copied! <pre>def minkowski_dist(x, y, p=1):\n    return np.linalg.norm(x - y, ord=p)\n\n\np = 3\ndist = minkowski_dist(x, y, p=p)\nprint(f'\u95f5\u53ef\u592b\u65af\u57fa\u8ddd\u79bb = {dist}')\ndist = distance.minkowski(x, y, p=p)\nprint(f'Scipy\u95f5\u53ef\u592b\u65af\u57fa\u8ddd\u79bb = {dist}')\n</pre> def minkowski_dist(x, y, p=1):     return np.linalg.norm(x - y, ord=p)   p = 3 dist = minkowski_dist(x, y, p=p) print(f'\u95f5\u53ef\u592b\u65af\u57fa\u8ddd\u79bb = {dist}') dist = distance.minkowski(x, y, p=p) print(f'Scipy\u95f5\u53ef\u592b\u65af\u57fa\u8ddd\u79bb = {dist}') <pre>\u95f5\u53ef\u592b\u65af\u57fa\u8ddd\u79bb = 7.93828244203566\nScipy\u95f5\u53ef\u592b\u65af\u57fa\u8ddd\u79bb = 7.93828244203566\n</pre> In\u00a0[23]: Copied! <pre>def cosine_similarity(x, y):\n    x = np.asarray(x)\n    y = np.asarray(y)\n    return np.dot(x, y) / (np.linalg.norm(x) * np.linalg.norm(y))\n\n\nsim = cosine_similarity(x, y)\nprint(f'\u4f59\u5f26\u76f8\u4f3c\u8ddd\u79bb = {1 - sim}, \u4f59\u5f26\u76f8\u4f3c\u5ea6 = {sim}')\ndist = distance.cosine(x, y)\nprint(f'Scipy\u4f59\u5f26\u76f8\u4f3c\u8ddd\u79bb = {dist}, \u4f59\u5f26\u76f8\u4f3c\u5ea6 = {1 - dist}')\n</pre> def cosine_similarity(x, y):     x = np.asarray(x)     y = np.asarray(y)     return np.dot(x, y) / (np.linalg.norm(x) * np.linalg.norm(y))   sim = cosine_similarity(x, y) print(f'\u4f59\u5f26\u76f8\u4f3c\u8ddd\u79bb = {1 - sim}, \u4f59\u5f26\u76f8\u4f3c\u5ea6 = {sim}') dist = distance.cosine(x, y) print(f'Scipy\u4f59\u5f26\u76f8\u4f3c\u8ddd\u79bb = {dist}, \u4f59\u5f26\u76f8\u4f3c\u5ea6 = {1 - dist}') <pre>\u4f59\u5f26\u76f8\u4f3c\u8ddd\u79bb = 0.017127813065678232, \u4f59\u5f26\u76f8\u4f3c\u5ea6 = 0.9828721869343218\nScipy\u4f59\u5f26\u76f8\u4f3c\u8ddd\u79bb = 0.01712781306567812, \u4f59\u5f26\u76f8\u4f3c\u5ea6 = 0.9828721869343219\n</pre> In\u00a0[31]: Copied! <pre>def pearson_r(x, y):\n    return np.corrcoef(x, y)[0, 1]\n\n\ndef pearson_dist(x, y):\n    return 1 - np.corrcoef(x, y)[0, 1]\n\n\ndist = pearson_dist(x, y)\nr = pearson_r(x, y)\nprint(f'\u76ae\u5c14\u900a\u8ddd\u79bb = {dist}, \u76ae\u5c14\u900a\u76f8\u5173\u6027 = {r}')\ndist = distance.correlation(x, y)\nprint(f'Scipy\u76ae\u5c14\u900a\u8ddd\u79bb = {dist}, \u76ae\u5c14\u900a\u76f8\u5173\u6027 = {1 - dist}')\n</pre> def pearson_r(x, y):     return np.corrcoef(x, y)[0, 1]   def pearson_dist(x, y):     return 1 - np.corrcoef(x, y)[0, 1]   dist = pearson_dist(x, y) r = pearson_r(x, y) print(f'\u76ae\u5c14\u900a\u8ddd\u79bb = {dist}, \u76ae\u5c14\u900a\u76f8\u5173\u6027 = {r}') dist = distance.correlation(x, y) print(f'Scipy\u76ae\u5c14\u900a\u8ddd\u79bb = {dist}, \u76ae\u5c14\u900a\u76f8\u5173\u6027 = {1 - dist}') <pre>\u76ae\u5c14\u900a\u8ddd\u79bb = 0.6357804085261578, \u76ae\u5c14\u900a\u76f8\u5173\u6027 = 0.36421959147384214\nScipy\u76ae\u5c14\u900a\u8ddd\u79bb = 0.6357804085261578, \u76ae\u5c14\u900a\u76f8\u5173\u6027 = 0.3642195914738422\n</pre> In\u00a0[36]: Copied! <pre>dist = distance.jaccard(x, y)\nprint(f'Scipy\u6770\u5361\u5fb7\u8ddd\u79bb = {dist}, \u6770\u5361\u5fb7\u76f8\u5173\u6027 = {1 - dist}')\n</pre> dist = distance.jaccard(x, y) print(f'Scipy\u6770\u5361\u5fb7\u8ddd\u79bb = {dist}, \u6770\u5361\u5fb7\u76f8\u5173\u6027 = {1 - dist}') <pre>Scipy\u6770\u5361\u5fb7\u8ddd\u79bb = 1.0, \u6770\u5361\u5fb7\u76f8\u5173\u6027 = 0.0\n</pre> In\u00a0[54]: Copied! <pre>def mahalanobis_dist(x, y, inv_cov):\n    return np.sqrt(np.dot(np.dot(x-y, inv_cov), (x-y).T))\n\n\na = np.random.random(10) * 10\nb = np.random.random(10) * 10\nc = np.random.random(10) * 10\nd = np.random.random(10) * 10\ne = np.random.random(10) * 10\nf = np.random.random(10) * 10\ng = np.random.random(10) * 10\nh = np.random.random(10) * 10\nmat = np.asarray([x, y, a, b, c, d, e, f, g, h]).T\n# \u8ba1\u7b97\u603b\u4f53\u6837\u672c\u7684\u534f\u65b9\u5dee\ncov = np.cov(mat)\n# \u8ba1\u7b97\u534f\u65b9\u5dee\u9006\u77e9\u9635\nVI = np.linalg.inv(np.matrix(cov))\n# \u8ba1\u7b97\u9a6c\u6c0f\u8ddd\u79bb\n\n\ndist = mahalanobis_dist(x, y, VI)\nprint(f'\u9a6c\u6c0f\u8ddd\u79bb = {dist}')\ndist = distance.mahalanobis(x, y, VI)\nprint(f'Scipy\u9a6c\u6c0f\u8ddd\u79bb\u8ddd\u79bb = {dist}')\n</pre> def mahalanobis_dist(x, y, inv_cov):     return np.sqrt(np.dot(np.dot(x-y, inv_cov), (x-y).T))   a = np.random.random(10) * 10 b = np.random.random(10) * 10 c = np.random.random(10) * 10 d = np.random.random(10) * 10 e = np.random.random(10) * 10 f = np.random.random(10) * 10 g = np.random.random(10) * 10 h = np.random.random(10) * 10 mat = np.asarray([x, y, a, b, c, d, e, f, g, h]).T # \u8ba1\u7b97\u603b\u4f53\u6837\u672c\u7684\u534f\u65b9\u5dee cov = np.cov(mat) # \u8ba1\u7b97\u534f\u65b9\u5dee\u9006\u77e9\u9635 VI = np.linalg.inv(np.matrix(cov)) # \u8ba1\u7b97\u9a6c\u6c0f\u8ddd\u79bb   dist = mahalanobis_dist(x, y, VI) print(f'\u9a6c\u6c0f\u8ddd\u79bb = {dist}') dist = distance.mahalanobis(x, y, VI) print(f'Scipy\u9a6c\u6c0f\u8ddd\u79bb\u8ddd\u79bb = {dist}') <pre>\u9a6c\u6c0f\u8ddd\u79bb = [[4.19164339]]\nScipy\u9a6c\u6c0f\u8ddd\u79bb\u8ddd\u79bb = [[4.19164339]]\n</pre> In\u00a0[55]: Copied! <pre>x = np.array([0,1,0,1,0])\ny = np.array([1,1,1,1,1])\nprint(\"\u6c49\u660e\u8ddd\u79bb:\",distance.hamming(x,y))\n</pre> x = np.array([0,1,0,1,0]) y = np.array([1,1,1,1,1]) print(\"\u6c49\u660e\u8ddd\u79bb:\",distance.hamming(x,y)) <pre>\u6c49\u660e\u8ddd\u79bb: 0.6\n</pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%EF%B8%8F%E2%83%A3%20ML%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/C/","title":"\ud83d\ude35 \u76f8\u4f3c\u6027\u5ea6\u91cf\u00b6","text":"<p>\u5728\u673a\u5668\u5b66\u4e60\u9886\u57df\uff0c\u7ecf\u5e38\u9700\u8981\u5ea6\u91cf\u4e24\u7ec4\u6570\u636e\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\uff0c\u8fd9\u5c31\u6d89\u53ca\u5230\u76f8\u4f3c\u5ea6\u7684\u5ea6\u91cf\u65b9\u6cd5\u3002</p> <p>\u5bf9\u4e8e\u4e24\u4e2a\u5411\u91cf$\ud835\udc4b = (x_1, x_2, ..., x_n)$\u548c$Y = (y_1, y_2, ..., y_n)$\uff0c\u6709\u4ee5\u4e0b\u65b9\u6cd5\u8fdb\u884c\u5ea6\u91cf\uff1a</p> <ol> <li>\u6b27\u6c0f\u8ddd\u79bb\uff08Euclidean Distance\uff09</li> <li>\u66fc\u54c8\u987f\u8ddd\u79bb\uff08Manhattan Distance\uff09</li> <li>\u95f5\u53ef\u592b\u65af\u57fa\u8ddd\u79bb\uff08Minkowski Distance\uff09</li> <li>\u4f59\u5f26\u76f8\u4f3c\u5ea6\uff08Cosine Similarity\uff09</li> <li>\u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570\uff08Pearson Correlation Coefficient\uff09</li> </ol>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%EF%B8%8F%E2%83%A3%20ML%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/C/#1-euclidean-distance","title":"1. \u6b27\u6c0f\u8ddd\u79bb\uff08Euclidean Distance\uff09\u00b6","text":"<p>\u6b27\u6c0f\u8ddd\u79bb\uff08L2\u8303\u6570\uff09\u662f\u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u76f4\u7ebf\u8ddd\u79bb\uff0c\u5373\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u5bf9\u5e94\u5143\u7d20\u5dee\u7684\u5e73\u65b9\u548c\u7684\u5e73\u65b9\u6839\u3002\u5b83\u5728\u5904\u7406\u8fde\u7eed\u6570\u636e\u65f6\u5e38\u88ab\u4f7f\u7528\u3002</p> <p>$$dist = \\sqrt{\\sum_{i=1}^n(x_i-y_i)^2}$$</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%EF%B8%8F%E2%83%A3%20ML%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/C/#2-manhattan-distance","title":"2. \u66fc\u54c8\u987f\u8ddd\u79bb\uff08Manhattan Distance\uff09\u00b6","text":"<p>\u66fc\u54c8\u987f\u8ddd\u79bb\uff08\u4e5f\u79f0\u57ce\u5e02\u8857\u533a\u8ddd\u79bb\u3001L1\u8303\u6570\uff09\u662f\u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u57ce\u5e02\u8857\u533a\u8ddd\u79bb\uff0c\u5373\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u5bf9\u5e94\u5143\u7d20\u5dee\u7684\u7edd\u5bf9\u503c\u4e4b\u548c\u3002\u5b83\u5728\u5904\u7406\u79bb\u6563\u6570\u636e\u6216\u7a00\u758f\u6570\u636e\u65f6\u5e38\u88ab\u4f7f\u7528\u3002</p> <p>$$dist = \\sum_{i=1}^n|x_i-y_i|$$</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%EF%B8%8F%E2%83%A3%20ML%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/C/#3-minkowski-distance","title":"3. \u95f5\u53ef\u592b\u65af\u57fa\u8ddd\u79bb\uff08Minkowski Distance\uff09\u00b6","text":"<p>\u95f5\u53ef\u592b\u65af\u57fa\u8ddd\u79bb\u662f\u6b27\u6c0f\u8ddd\u79bb\u548c\u66fc\u54c8\u987f\u8ddd\u79bb\u7684\u4e00\u79cd\u63a8\u5e7f\uff0c\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u53c2\u6570\u6765\u63a7\u5236\u8ddd\u79bb\u7684\u8ba1\u7b97\u65b9\u5f0f\u3002 $$ d(X, Y) = (|x_1-y_1|^p + |x_2-y_2|^p + ... + |x_n-y_n|^p)^{1/p} $$ \u5176\u4e2d\uff0c$p$\u662f\u63a7\u5236\u8ddd\u79bb\u8ba1\u7b97\u65b9\u5f0f\u7684\u53c2\u6570\uff0c\u5f53$p=2$\u65f6\uff0c\u9000\u5316\u4e3a\u6b27\u6c0f\u8ddd\u79bb\uff1b\u5f53$p=1$\u65f6\uff0c\u9000\u5316\u4e3a\u66fc\u54c8\u987f\u8ddd\u79bb</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%EF%B8%8F%E2%83%A3%20ML%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/C/#4-cosine-similarity","title":"4. \u4f59\u5f26\u76f8\u4f3c\u5ea6\uff08Cosine Similarity\uff09\u00b6","text":"<p>\u4f59\u5f26\u76f8\u4f3c\u5ea6\u8861\u91cf\u7684\u662f\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u5939\u89d2\uff0c\u800c\u4e0d\u662f\u76f4\u7ebf\u8ddd\u79bb\u3002\u5b83\u5728\u5904\u7406\u6587\u672c\u6570\u636e\u3001\u7a00\u758f\u6570\u636e\u6216\u9ad8\u7ef4\u6570\u636e\u65f6\u5e38\u88ab\u4f7f\u7528\u3002</p> <p>$$dist = 1-\\frac{x \\cdot y}             {||x||_2 ||y||_2}  $$ $$ similarity= \\frac{\\Sigma_ix_iy_i}             {\\sqrt{\\Sigma_ix_i^2}\\sqrt{\\Sigma_iy_i^2}}  $$</p> <p>\u5176\u4e2d\uff0c$X\u00b7Y$\u8868\u793a\u70b9\u79ef\uff08\u5185\u79ef\uff09\uff0c$||X||$\u548c$||Y||$\u8868\u793aL2\u8303\u6570\uff08\u957f\u5ea6\uff09</p> <p>\u4f59\u5f26\u76f8\u4f3c\u5ea6\u7684\u53d6\u503c\u8303\u56f4\u5728 -1 \u5230 1 \u4e4b\u95f4\uff0c\u503c\u8d8a\u63a5\u8fd1 1 \u8868\u793a\u4e24\u4e2a\u5411\u91cf\u8d8a\u76f8\u4f3c\uff0c\u503c\u8d8a\u63a5\u8fd1 -1 \u8868\u793a\u4e24\u4e2a\u5411\u91cf\u8d8a\u4e0d\u76f8\u4f3c\uff0c\u503c\u4e3a 0 \u8868\u793a\u4e24\u4e2a\u5411\u91cf\u6b63\u4ea4\uff08\u65e0\u76f8\u4f3c\u6027\uff09</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%EF%B8%8F%E2%83%A3%20ML%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/C/#5-pearson-correlation-coefficient","title":"5. \u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570\uff08Pearson Correlation Coefficient\uff09\u00b6","text":"<p>\u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570\u8861\u91cf\u7684\u662f\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u7ebf\u6027\u76f8\u5173\u6027\uff0c\u53d6\u503c\u8303\u56f4\u5728-1\u52301\u4e4b\u95f4\u3002\u5b83\u5728\u5904\u7406\u7ebf\u6027\u76f8\u5173\u6027\u95ee\u9898\u65f6\u5e38\u88ab\u4f7f\u7528\u3002</p> <p>$$dist =  1 - \\frac{(x - \\bar{x}) \\cdot (y - \\bar{y})}            {{||(x - \\bar{x})||}_2 {||(y - \\bar{y})||}_2} $$</p> <p>$$coor = \\frac{(x - \\bar{x}) \\cdot (y - \\bar{y})}            {{||(x - \\bar{x})||}_2 {||(y - \\bar{y})||}_2} $$</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%EF%B8%8F%E2%83%A3%20ML%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/C/#6-jaccard-similarity","title":"6. \u6770\u5361\u5fb7\u76f8\u4f3c\u5ea6\uff08Jaccard Similarity\uff09\u00b6","text":"<p>\u6770\u5361\u5fb7\u76f8\u4f3c\u7cfb\u6570(Jaccard similarity coefficient)\uff0c\u4e5f\u79f0\u6770\u5361\u5fb7\u6307\u6570(Jaccard Index)\uff0c\u7528\u4e8e\u8ba1\u7b97\u4e24\u4e2a\u96c6\u5408\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\uff0c\u5b83\u8861\u91cf\u7684\u662f\u4e24\u4e2a\u96c6\u5408\u4ea4\u96c6\u7684\u5927\u5c0f\u4e0e\u5e76\u96c6\u7684\u5927\u5c0f\u4e4b\u95f4\u7684\u6bd4\u4f8b\u3002</p> <p>\u6770\u5361\u5fb7\u8ddd\u79bb(Jaccard Distance) \u662f\u7528\u6765\u8861\u91cf\u4e24\u4e2a\u96c6\u5408\u5dee\u5f02\u6027\u7684\u4e00\u79cd\u6307\u6807\uff0c\u5b83\u662f\u6770\u5361\u5fb7\u76f8\u4f3c\u7cfb\u6570\u7684\u8865\u96c6\uff0c\u88ab\u5b9a\u4e49\u4e3a1\u51cf\u53bbJaccard\u76f8\u4f3c\u7cfb\u6570\u3002</p> <p>$$dist = \\frac{c_{TF} + c_{FT}}         {c_{TT} + c_{FT} + c_{TF}} $$</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%EF%B8%8F%E2%83%A3%20ML%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/C/#7-mahalanobis-distance","title":"7. \u9a6c\u6c0f\u8ddd\u79bb\uff08Mahalanobis Distance\uff09\u00b6","text":"<p>\u9a6c\u6c0f\u8ddd\u79bb\u662f\u4e00\u79cd\u7528\u4e8e\u8861\u91cf\u4e24\u4e2a\u6837\u672c\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u7684\u5ea6\u91cf\u65b9\u6cd5\u3002\u4e0e\u6b27\u6c0f\u8ddd\u79bb\u4e0d\u540c\uff0c\u9a6c\u6c0f\u8ddd\u79bb\u8003\u8651\u4e86\u6570\u636e\u7684\u534f\u65b9\u5dee\u7ed3\u6784\uff0c\u53ef\u4ee5\u6709\u6548\u5730\u5904\u7406\u7279\u5f81\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u3002</p> <p>$$dist = \\sqrt{(x-y)^T\\Sigma^{-1}(x-y)}$$ $$dist = \\sqrt{ (u-v) V^{-1} (u-v)^T } $$</p> <p>\u5176\u4e2d\uff0c(x-y)\u3001(u-v)\u662f\u6837\u672c\u70b9\u4e4b\u95f4\u7684\u5dee\u5411\u91cf\uff0c$\\Sigma^{-1}$\u662f\u534f\u65b9\u5dee\u77e9\u9635$\\Sigma$\u7684\u9006\u77e9\u9635\uff0c$T$\u8868\u793a\u5411\u91cf\u7684\u8f6c\u7f6e\u8fd0\u7b97\u3002</p> <p>\u9a6c\u6c0f\u8ddd\u79bb\u7684\u8ba1\u7b97\u8003\u8651\u4e86\u7279\u5f81\u4e4b\u95f4\u7684\u76f8\u5173\u6027\uff0c\u901a\u8fc7\u534f\u65b9\u5dee\u77e9\u9635$\\Sigma$\u7684\u9006\u77e9\u9635\u6765\u5bf9\u7279\u5f81\u8fdb\u884c\u7f29\u653e\u548c\u65cb\u8f6c\uff0c\u4f7f\u5f97\u8ddd\u79bb\u8ba1\u7b97\u66f4\u52a0\u51c6\u786e\u3002\u5f53\u534f\u65b9\u5dee\u77e9\u9635$\\Sigma$\u4e3a\u5355\u4f4d\u77e9\u9635\u65f6\uff0c\u9a6c\u6c0f\u8ddd\u79bb\u9000\u5316\u4e3a\u6b27\u6c0f\u8ddd\u79bb\u3002</p> <p>\u9a6c\u6c0f\u8ddd\u79bb\u5e38\u7528\u4e8e\u805a\u7c7b\u5206\u6790\u3001\u5f02\u5e38\u68c0\u6d4b\u548c\u6a21\u5f0f\u8bc6\u522b\u7b49\u9886\u57df\uff0c\u7279\u522b\u662f\u5728\u5904\u7406\u5177\u6709\u76f8\u5173\u7279\u5f81\u7684\u6570\u636e\u65f6\uff0c\u80fd\u591f\u66f4\u597d\u5730\u6355\u6349\u6570\u636e\u4e4b\u95f4\u7684\u771f\u5b9e\u8ddd\u79bb\u3002</p> <p>\u8fd9\u91cc\u6211\u5bf9\u9a6c\u6c0f\u8ddd\u79bb\u7684\u7406\u89e3\u4e0d\u662f\u5f88\u6df1\u5165\uff0c\u534f\u65b9\u5dee\u77e9\u9635\u7684\u8ba1\u7b97\u5e94\u8be5\u57fa\u4e8e\u603b\u4f53\u6837\u672c\uff0c\u6837\u672c\u91cf\u5e94\u8be5\u5927\u4e8e\u7279\u5f81\u6570\uff0c\u624d\u80fd\u4fdd\u8bc1\u534f\u65b9\u5dee\u77e9\u9635\u9006\u77e9\u9635\u5b58\u5728</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%EF%B8%8F%E2%83%A3%20ML%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/C/#8","title":"8. \u6c49\u660e\u8ddd\u79bb\u00b6","text":"<p>\u4e24\u4e2a\u7b49\u957f\u5b57\u7b26\u4e32s1\u4e0es2\u4e4b\u95f4\u7684\u6c49\u660e\u8ddd\u79bb\u5b9a\u4e49\u4e3a\u5c06\u5176\u4e2d\u4e00\u4e2a\u53d8\u4e3a\u53e6\u5916\u4e00\u4e2a\u6240\u9700\u8981\u4f5c\u7684\u6700\u5c0f\u66ff\u6362\u6b21\u6570</p> <p>\u4f8b\u5982\uff1a1011101\u4e0e1001001\u4e4b\u95f4\u7684\u6c49\u660e\u8ddd\u79bb\u662f2/7\u3002</p> <p>$$ \\frac{c_{01} + c_{10}}{n} $$</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%EF%B8%8F%E2%83%A3%20ML%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/C/","title":"\u53c2\u8003\u00b6","text":"<p>[1] \u77e5\u4e4e\uff0c@\u9a6c\u4e1c\u4ec0\u4e48\uff0c\u70b9\u79ef\u76f8\u4f3c\u5ea6\u3001\u4f59\u5f26\u76f8\u4f3c\u5ea6\u3001\u6b27\u51e0\u91cc\u5f97\u76f8\u4f3c\u5ea6 </p> <p>[2] CSDN\uff0c@\u5ddd\u5ddd1212\uff0c\u534f\u65b9\u5dee\u3001\u534f\u65b9\u5dee\u77e9\u9635\u3001\u9a6c\u6c0f\u8ddd\u79bb\u4e0e\u6b27\u5f0f\u8ddd\u79bb\u7684\u7406\u89e3 </p> <p>[3] CSDN\uff0c@lijfrank\uff0c\u9a6c\u6c0f\u8ddd\u79bb-\u534f\u65b9\u5dee\u77e9\u9635 </p> <p>[4] \u77e5\u4e4e\uff0c@Ph0en1x\uff0c\u9a6c\u6c0f\u8ddd\u79bb(Mahalanobis Distance) </p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%EF%B8%8F%E2%83%A3%20ML%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/D/","title":"\ud83e\uddf8 \u81ea\u7136\u68af\u5ea6&\u5e38\u89c4\u68af\u5ea6","text":"<p>\u81ea\u7136\u68af\u5ea6\uff08Natural Gradient\uff09\u548c\u5e38\u89c4\u68af\u5ea6\uff08Regular Gradient\uff09\u662f\u4f18\u5316\u7b97\u6cd5\u4e2d\u7528\u4e8e\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u7684\u4e24\u79cd\u4e0d\u540c\u65b9\u6cd5\u3002\u5b83\u4eec\u4e4b\u95f4\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u5982\u4f55\u8ba1\u7b97\u548c\u4f7f\u7528\u68af\u5ea6\u3002</p> <p>\u81ea\u7136\u68af\u5ea6\u901a\u8fc7\u8003\u8651\u53c2\u6570\u7a7a\u95f4\u7684\u51e0\u4f55\u7279\u6027\uff0c\u63d0\u4f9b\u4e86\u4e00\u79cd\u66f4\u6709\u6548\u7684\u66f4\u65b0\u65b9\u5f0f\uff0c\u5c24\u5176\u5728\u9ad8\u7ef4\u548c\u590d\u6742\u6a21\u578b\u4e2d\u8868\u73b0\u66f4\u4f73\u3002</p> <p>\u5e38\u89c4\u68af\u5ea6\u5219\u662f\u66f4\u7b80\u5355\u7684\u8ba1\u7b97\u65b9\u6cd5\uff0c\u4f46\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u53ef\u80fd\u5bfc\u81f4\u6536\u655b\u901f\u5ea6\u8f83\u6162\u3002</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%EF%B8%8F%E2%83%A3%20ML%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/D/#1","title":"1. \u5e38\u89c4\u68af\u5ea6","text":"<p>\u5b9a\u4e49\uff1a\u5e38\u89c4\u68af\u5ea6\u662f\u57fa\u4e8e\u635f\u5931\u51fd\u6570\u5bf9\u6a21\u578b\u53c2\u6570\u7684\u504f\u5bfc\u6570\u8ba1\u7b97\u7684\u3002\u5b83\u8868\u793a\u5728\u53c2\u6570\u7a7a\u95f4\u4e2d\uff0c\u635f\u5931\u51fd\u6570\u7684\u53d8\u5316\u7387\u3002</p> <p>\u8ba1\u7b97\u65b9\u5f0f\uff1a\u5bf9\u4e8e\u635f\u5931\u51fd\u6570 \\(L(\\theta)\\)\uff0c\u5e38\u89c4\u68af\u5ea6\u8ba1\u7b97\u4e3a\uff1a</p> \\[ \\nabla L(\\theta) = \\left[ \\frac{\\partial L}{\\partial \\theta_1}, \\frac{\\partial L}{\\partial \\theta_2}, \\ldots, \\frac{\\partial L}{\\partial \\theta_n} \\right] \\] <p>\u7279\u70b9\uff1a</p> <ul> <li>\u5e38\u89c4\u68af\u5ea6\u5728\u53c2\u6570\u7a7a\u95f4\u4e2d\u662f\u7ebf\u6027\u7684\uff0c\u53ef\u80fd\u5bfc\u81f4\u5728\u67d0\u4e9b\u65b9\u5411\u4e0a\u66f4\u65b0\u8fc7\u5927\u6216\u8fc7\u5c0f\u3002</li> <li>\u5728\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\uff0c\u5e38\u89c4\u68af\u5ea6\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6536\u655b\u901f\u5ea6\u6162\uff0c\u5c24\u5176\u662f\u5728\u53c2\u6570\u7a7a\u95f4\u7684\u66f2\u7387\u53d8\u5316\u8f83\u5927\u7684\u60c5\u51b5\u4e0b\u3002</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%EF%B8%8F%E2%83%A3%20ML%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/D/#2","title":"2. \u81ea\u7136\u68af\u5ea6","text":"<p>\u5b9a\u4e49\uff1a\u81ea\u7136\u68af\u5ea6\u662f\u5bf9\u5e38\u89c4\u68af\u5ea6\u7684\u6539\u8fdb\uff0c\u8003\u8651\u4e86\u53c2\u6570\u7a7a\u95f4\u7684\u51e0\u4f55\u7ed3\u6784\u3002\u5b83\u4f7f\u7528\u8d39\u820d\u5c14\u4fe1\u606f\u77e9\u9635\uff08Fisher Information Matrix\uff09\u6765\u8c03\u6574\u68af\u5ea6\u65b9\u5411\u3002</p> <p>\u8ba1\u7b97\u65b9\u5f0f\uff1a\u81ea\u7136\u68af\u5ea6\u8ba1\u7b97\u4e3a\uff1a</p> \\[ \\nabla_{\\text{natural}} L(\\theta) = \\mathbf{F}^{-1} \\nabla L(\\theta) \\] <p>\u5176\u4e2d \\(\\mathbf{F}\\) \u662f\u8d39\u820d\u5c14\u4fe1\u606f\u77e9\u9635\u3002</p> <p>\u7279\u70b9\uff1a</p> <ul> <li>\u81ea\u7136\u68af\u5ea6\u5728\u53c2\u6570\u7a7a\u95f4\u4e2d\u662f\u66f4\u6709\u6548\u7684\uff0c\u56e0\u4e3a\u5b83\u8003\u8651\u4e86\u53c2\u6570\u7684\u51e0\u4f55\u7279\u6027\u3002</li> <li>\u901a\u8fc7\u4f7f\u7528\u8d39\u820d\u5c14\u4fe1\u606f\u77e9\u9635\uff0c\u81ea\u7136\u68af\u5ea6\u80fd\u591f\u5728\u9ad8\u66f2\u7387\u533a\u57df\u8fdb\u884c\u66f4\u5408\u7406\u7684\u66f4\u65b0\uff0c\u4ece\u800c\u52a0\u901f\u6536\u655b\u3002</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%EF%B8%8F%E2%83%A3%20ML%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/D/#3","title":"3. \u4e3b\u8981\u533a\u522b","text":"<ul> <li> <p>\u51e0\u4f55\u8003\u8651\uff1a\u5e38\u89c4\u68af\u5ea6\u5ffd\u7565\u4e86\u53c2\u6570\u7a7a\u95f4\u7684\u51e0\u4f55\u7ed3\u6784\uff0c\u800c\u81ea\u7136\u68af\u5ea6\u5219\u8003\u8651\u4e86\u8fd9\u4e00\u70b9\u3002</p> </li> <li> <p>\u6536\u655b\u901f\u5ea6\uff1a\u81ea\u7136\u68af\u5ea6\u901a\u5e38\u5728\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u6536\u655b\u66f4\u5feb\uff0c\u5c24\u5176\u662f\u5728\u53c2\u6570\u7a7a\u95f4\u7684\u66f2\u7387\u53d8\u5316\u8f83\u5927\u7684\u60c5\u51b5\u4e0b\u3002</p> </li> <li> <p>\u8ba1\u7b97\u590d\u6742\u6027\uff1a\u81ea\u7136\u68af\u5ea6\u7684\u8ba1\u7b97\u901a\u5e38\u6bd4\u5e38\u89c4\u68af\u5ea6\u66f4\u590d\u6742\uff0c\u56e0\u4e3a\u9700\u8981\u8ba1\u7b97\u8d39\u820d\u5c14\u4fe1\u606f\u77e9\u9635\u53ca\u5176\u9006\u3002</p> </li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%EF%B8%8F%E2%83%A3%20ML%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/E/","title":"\ud83d\ude16 \u76f8\u5173\u7cfb\u6570\u4e0e\u51b3\u5b9a\u7cfb\u6570","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%EF%B8%8F%E2%83%A3%20ML%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/E/#_1","title":"\u58f9\u4e28\u76f8\u5173\u6982\u5ff5","text":"<p>\u76ae\u5c14\u900a\u79ef\u77e9\u76f8\u5173\u7cfb\u6570\uff08\u82f1\u8bed\uff1aP**earson **p**roduct-**m**oment **c**orrelation **c**oefficient\uff0c\u7f29\u5199\uff1a**PPMCC\uff0c\u6216**PCCs**\uff0c\u6709\u65f6\u7b80\u79f0**\u76f8\u5173\u7cfb\u6570**\uff09\u7528\u4e8e\u5ea6\u91cf\u4e24\u7ec4\u6570\u636e\u7684\u53d8\u91cfX\u548cY\u4e4b\u95f4\u7684\u7ebf\u6027\u76f8\u5173\u7684\u7a0b\u5ea6\u3002\u5b83\u662f\u4e24\u4e2a\u53d8\u91cf\u7684\u534f\u65b9\u5dee\u4e0e\u5176\u6807\u51c6\u5dee\u7684\u4e58\u79ef\u4e4b\u6bd4\uff1b \u56e0\u6b64\uff0c\u5b83\u672c\u8d28\u4e0a\u662f\u534f\u65b9\u5dee\u7684\u5f52\u4e00\u5316\u5ea6\u91cf\uff0c\u56e0\u6b64\u7ed3\u679c\u59cb\u7ec8\u5177\u6709\u4ecb\u4e8e-1\u548c1\u4e4b\u95f4\u7684\u503c\u3002\u4e0e\u534f\u65b9\u5dee\u672c\u8eab\u4e00\u6837\uff0c\u8be5\u5ea6\u91cf\u53ea\u80fd\u53cd\u6620\u53d8\u91cf\u7684\u7ebf\u6027\u76f8\u5173\u6027\uff0c\u800c\u5ffd\u7565\u4e86\u8bb8\u591a\u5176\u4ed6\u7c7b\u578b\u7684\u5173\u7cfb\u6216\u76f8\u5173\u6027\u3002<sup>1</sup></p> <p>\u4e3e\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u53ef\u4ee5\u9884\u671f\u9ad8\u4e2d\u9752\u5c11\u5e74\u6837\u672c\u7684\u5e74\u9f84\u548c\u8eab\u9ad8\u7684\u76ae\u5c14\u900a\u79ef\u77e9\u76f8\u5173\u7cfb\u6570\u663e\u8457\u5927\u4e8e0\uff0c\u4f46\u5c0f\u4e8e1\uff08\u56e0\u4e3a1\u8868\u793a\u4e0d\u5207\u5b9e\u9645\u7684\u5b8c\u7f8e\u76f8\u5173\u6027\uff09\u3002</p> <p>\u51b3\u5b9a\u7cfb\u6570\uff0c\u6216\u79f0**\u5224\u5b9a\u7cfb\u6570**\uff08\u82f1\u8bed\uff1aCoefficient of determination\uff0c\u8bb0\u4e3a*R2*\u6216*r2*\uff09\uff0c\u5728\u7edf\u8ba1\u5b66\u4e2d\u7528\u4e8e\u5ea6\u91cf\u56e0\u53d8\u91cf\u7684\u53d8\u5f02\u4e2d\u53ef\u7531\u81ea\u53d8\u91cf\u89e3\u91ca\u90e8\u5206\u6240\u5360\u7684\u6bd4\u4f8b\uff0c\u4ee5\u6b64\u6765\u5224\u65ad\u56de\u5f52\u6a21\u578b\u7684\u89e3\u91ca\u529b\u3002<sup>2</sup></p> <p>\u5bf9\u4e8e\u7b80\u5355\u7ebf\u6027\u56de\u5f52\u800c\u8a00\uff0c\u51b3\u5b9a\u7cfb\u6570\u4e3a\u6837\u672c\u76f8\u5173\u7cfb\u6570\u7684\u5e73\u65b9\u3002\u5f53\u52a0\u5165\u5176\u4ed6\u56de\u5f52\u81ea\u53d8\u91cf\u540e\uff0c\u51b3\u5b9a\u7cfb\u6570\u76f8\u5e94\u5730\u53d8\u4e3a\u591a\u91cd\u76f8\u5173\u7cfb\u6570\u7684\u5e73\u65b9\u3002</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%EF%B8%8F%E2%83%A3%20ML%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/E/#_2","title":"\u8d30\u4e28\u4e3e\u4e2a\u7b80\u5355\u4f8b\u5b50","text":"<pre><code>import numpy as np\nfrom sklearn.metrics import r2_score\n\nfake_true = np.random.random(100) * 50\nfake_pred = fake_true + np.random.random(100) * 10\n\nr = np.corrcoef(fake_pred, fake_true)[0][1]\nr2 = r2_score(fake_true, fake_pred)\nprint(f'{r=}')\nprint(f'{r2=}')\nprint(f'r**2={r ** 2}')\n</code></pre> <pre><code>r=0.9800127107917392\nr2=0.8088416899303008\nr**2=0.9604249133133731\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%EF%B8%8F%E2%83%A3%20ML%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/E/#_3","title":"\u53c1\u4e28\u76f8\u5173\u7cfb\u6570\u548c\u51b3\u5b9a\u7cfb\u6570\u7684\u533a\u522b","text":"<p>\u6e90\u81eaChatGPT</p> <p>\u76f8\u5173\u7cfb\u6570\uff08r\uff09\u548c\u51b3\u5b9a\u7cfb\u6570\uff08R\u00b2\uff09\u662f\u4e24\u79cd\u5e38\u7528\u7684\u7edf\u8ba1\u91cf\uff0c\u7528\u4e8e\u8861\u91cf\u53d8\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\u548c\u6a21\u578b\u7684\u62df\u5408\u7a0b\u5ea6\u3002\u5b83\u4eec\u6709\u4e0d\u540c\u7684\u7279\u70b9\u548c\u9002\u7528\u573a\u666f\uff0c\u56e0\u6b64\u5728\u4e0d\u540c\u7684\u60c5\u51b5\u4e0b\u53ef\u80fd\u4f1a\u9009\u62e9\u4f7f\u7528\u5176\u4e2d\u4e4b\u4e00\u3002</p> <p>\u76f8\u5173\u7cfb\u6570\uff08r\uff09\u8861\u91cf\u7684\u662f\u4e24\u4e2a\u53d8\u91cf\u4e4b\u95f4\u7684\u7ebf\u6027\u76f8\u5173\u7a0b\u5ea6\uff0c\u53d6\u503c\u8303\u56f4\u5728-1\u52301\u4e4b\u95f4\u3002\u5f53r\u63a5\u8fd11\u65f6\uff0c\u8868\u793a\u4e24\u4e2a\u53d8\u91cf\u4e4b\u95f4\u5b58\u5728\u5f3a\u6b63\u76f8\u5173\u5173\u7cfb\uff1b\u5f53r\u63a5\u8fd1-1\u65f6\uff0c\u8868\u793a\u4e24\u4e2a\u53d8\u91cf\u4e4b\u95f4\u5b58\u5728\u5f3a\u8d1f\u76f8\u5173\u5173\u7cfb\uff1b\u5f53r\u63a5\u8fd10\u65f6\uff0c\u8868\u793a\u4e24\u4e2a\u53d8\u91cf\u4e4b\u95f4\u4e0d\u5b58\u5728\u7ebf\u6027\u76f8\u5173\u5173\u7cfb\u3002\u76f8\u5173\u7cfb\u6570\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u53d8\u91cf\u4e4b\u95f4\u7684\u7ebf\u6027\u5173\u7cfb\uff0c\u4ee5\u53ca\u5b83\u4eec\u7684\u65b9\u5411\u548c\u5f3a\u5ea6\u3002</p> <p>\u51b3\u5b9a\u7cfb\u6570\uff08R\u00b2\uff09\u5219\u662f\u4e00\u79cd\u7528\u4e8e\u8861\u91cf\u56de\u5f52\u6a21\u578b\u5bf9\u76ee\u6807\u53d8\u91cf\u7684\u89e3\u91ca\u80fd\u529b\u7684\u7edf\u8ba1\u91cf\u3002R\u00b2\u7684\u53d6\u503c\u8303\u56f4\u662f\u4ece0\u52301\uff0c\u8868\u793a\u6a21\u578b\u80fd\u591f\u89e3\u91ca\u76ee\u6807\u53d8\u91cf\u53d8\u5f02\u6027\u7684\u6bd4\u4f8b\u3002\u5f53R\u00b2\u63a5\u8fd11\u65f6\uff0c\u8868\u793a\u6a21\u578b\u80fd\u591f\u5f88\u597d\u5730\u89e3\u91ca\u76ee\u6807\u53d8\u91cf\u7684\u53d8\u5f02\u6027\uff1b\u5f53R\u00b2\u63a5\u8fd10\u65f6\uff0c\u8868\u793a\u6a21\u578b\u65e0\u6cd5\u89e3\u91ca\u76ee\u6807\u53d8\u91cf\u7684\u53d8\u5f02\u6027\uff0c\u5373\u6a21\u578b\u7684\u62df\u5408\u6548\u679c\u8f83\u5dee\u3002R\u00b2\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u8bc4\u4f30\u56de\u5f52\u6a21\u578b\u7684\u6027\u80fd\u548c\u9884\u6d4b\u80fd\u529b\u3002</p> <p>\u4f7f\u7528\u76f8\u5173\u7cfb\u6570\uff08r\uff09\u7684\u4f18\u70b9\u5305\u62ec\uff1a</p> <ol> <li>\u76f8\u5173\u7cfb\u6570\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u4e86\u89e3\u53d8\u91cf\u4e4b\u95f4\u7684\u7ebf\u6027\u5173\u7cfb\uff0c\u5305\u62ec\u65b9\u5411\u548c\u5f3a\u5ea6\u3002\u8fd9\u5bf9\u4e8e\u63a2\u7d22\u6570\u636e\u4e2d\u7684\u5173\u8054\u548c\u8d8b\u52bf\u975e\u5e38\u6709\u7528\u3002</li> <li>\u76f8\u5173\u7cfb\u6570\u53ef\u4ee5\u7528\u4e8e\u4efb\u4f55\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u5305\u62ec\u8fde\u7eed\u578b\u3001\u5206\u7c7b\u578b\u548c\u4e8c\u5143\u578b\u53d8\u91cf\u3002</li> </ol> <p>\u4f7f\u7528\u51b3\u5b9a\u7cfb\u6570\uff08R\u00b2\uff09\u7684\u4f18\u70b9\u5305\u62ec\uff1a</p> <ol> <li>\u51b3\u5b9a\u7cfb\u6570\u53ef\u4ee5\u76f4\u63a5\u53cd\u6620\u6a21\u578b\u5bf9\u76ee\u6807\u53d8\u91cf\u7684\u89e3\u91ca\u80fd\u529b\uff0c\u5373\u6a21\u578b\u80fd\u591f\u89e3\u91ca\u76ee\u6807\u53d8\u91cf\u53d8\u5f02\u6027\u7684\u6bd4\u4f8b\u3002</li> <li>\u51b3\u5b9a\u7cfb\u6570\u53ef\u4ee5\u7528\u4e8e\u8bc4\u4f30\u56de\u5f52\u6a21\u578b\u7684\u6027\u80fd\u548c\u9884\u6d4b\u80fd\u529b\uff0c\u5e2e\u52a9\u6211\u4eec\u9009\u62e9\u6700\u4f73\u7684\u6a21\u578b\u3002</li> </ol> <p>\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u9009\u62e9\u4f7f\u7528\u76f8\u5173\u7cfb\u6570\uff08r\uff09\u8fd8\u662f\u51b3\u5b9a\u7cfb\u6570\uff08R\u00b2\uff09\u53d6\u51b3\u4e8e\u5177\u4f53\u7684\u5206\u6790\u76ee\u7684\u548c\u95ee\u9898\u80cc\u666f\u3002\u5982\u679c\u6211\u4eec\u66f4\u5173\u6ce8\u53d8\u91cf\u4e4b\u95f4\u7684\u7ebf\u6027\u76f8\u5173\u6027\uff0c\u6216\u8005\u60f3\u8981\u4e86\u89e3\u53d8\u91cf\u4e4b\u95f4\u7684\u65b9\u5411\u548c\u5f3a\u5ea6\uff0c\u90a3\u4e48\u76f8\u5173\u7cfb\u6570\u66f4\u4e3a\u5408\u9002\u3002\u5982\u679c\u6211\u4eec\u66f4\u5173\u6ce8\u56de\u5f52\u6a21\u578b\u7684\u6027\u80fd\u548c\u9884\u6d4b\u80fd\u529b\uff0c\u6216\u8005\u60f3\u8981\u6bd4\u8f83\u4e0d\u540c\u6a21\u578b\u7684\u89e3\u91ca\u80fd\u529b\uff0c\u90a3\u4e48\u51b3\u5b9a\u7cfb\u6570\u66f4\u4e3a\u9002\u7528\u3002</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/3%EF%B8%8F%E2%83%A3%20ML%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/E/#sklearn","title":"\u8086\u4e28\u4e3a\u4ec0\u4e48sklearn\u8f93\u51fa\u7684\u51b3\u5b9a\u7cfb\u6570\u53ef\u4ee5\u4e3a\u8d1f\u503c\uff1f","text":"<p>\u51b3\u5b9a\u7cfb\u6570\uff08Coefficient of Determination\uff09\uff0c\u4e5f\u79f0\u4e3aR\u00b2\u5206\u6570\uff0c\u7528\u4e8e\u8861\u91cf\u56de\u5f52\u6a21\u578b\u5bf9\u76ee\u6807\u53d8\u91cf\u7684\u89e3\u91ca\u80fd\u529b\u3002\u5728scikit-learn\uff08sklearn\uff09\u4e2d\uff0cr2_score\u662f\u7528\u4e8e\u8ba1\u7b97\u51b3\u5b9a\u7cfb\u6570\u7684\u51fd\u6570\u4e4b\u4e00\u3002</p> <p>\u51b3\u5b9a\u7cfb\u6570\u7684\u53d6\u503c\u8303\u56f4\u662f\u4ece\u8d1f\u65e0\u7a77\u52301\u4e4b\u95f4\uff0c\u5176\u4e2d1\u8868\u793a\u5b8c\u7f8e\u62df\u5408\uff0c0\u8868\u793a\u6a21\u578b\u65e0\u6cd5\u89e3\u91ca\u76ee\u6807\u53d8\u91cf\u7684\u53d8\u5f02\u6027\uff0c\u800c\u8d1f\u6570\u8868\u793a\u6a21\u578b\u7684\u8868\u73b0\u6bd4\u76f4\u63a5\u4f7f\u7528\u5747\u503c\u9884\u6d4b\u8fd8\u8981\u5dee\u3002</p> <p>\u5f53\u51b3\u5b9a\u7cfb\u6570\u4e3a\u8d1f\u6570\u65f6\uff0c\u8868\u793a\u6a21\u578b\u5bf9\u76ee\u6807\u53d8\u91cf\u7684\u89e3\u91ca\u80fd\u529b\u975e\u5e38\u5dee\uff0c\u751a\u81f3\u6bd4\u4f7f\u7528\u7b80\u5355\u7684\u5747\u503c\u9884\u6d4b\u8fd8\u8981\u5dee\u3002\u8fd9\u53ef\u80fd\u53d1\u751f\u5728\u56de\u5f52\u6a21\u578b\u7684\u62df\u5408\u8fc7\u7a0b\u4e2d\uff0c\u5f53\u6a21\u578b\u7684\u9884\u6d4b\u7ed3\u679c\u8fdc\u79bb\u5b9e\u9645\u89c2\u6d4b\u503c\u65f6\uff0c\u5bfc\u81f4\u6a21\u578b\u7684\u89e3\u91ca\u80fd\u529b\u53d8\u5f97\u8d1f\u9762\u3002</p> <p>\u8d1f\u7684\u51b3\u5b9a\u7cfb\u6570\u53ef\u80fd\u662f\u7531\u4e8e\u4ee5\u4e0b\u539f\u56e0\u4e4b\u4e00\uff1a 1. \u6a21\u578b\u9009\u62e9\u4e0d\u5f53\uff1a\u9009\u7528\u7684\u56de\u5f52\u6a21\u578b\u53ef\u80fd\u4e0d\u9002\u5408\u89e3\u91ca\u76ee\u6807\u53d8\u91cf\u7684\u53d8\u5f02\u6027\uff0c\u6216\u8005\u6a21\u578b\u4e2d\u7684\u7279\u5f81\u9009\u62e9\u4e0d\u5f53\u3002 2. \u6570\u636e\u8bef\u5dee\uff1a\u6570\u636e\u4e2d\u5b58\u5728\u566a\u58f0\u6216\u5f02\u5e38\u503c\uff0c\u5bfc\u81f4\u6a21\u578b\u65e0\u6cd5\u51c6\u786e\u5730\u62df\u5408\u6570\u636e\u3002 3. \u8fc7\u62df\u5408\uff1a\u6a21\u578b\u8fc7\u4e8e\u590d\u6742\uff0c\u8fc7\u5ea6\u62df\u5408\u4e86\u8bad\u7ec3\u6570\u636e\uff0c\u5bfc\u81f4\u5728\u672a\u77e5\u6570\u636e\u4e0a\u7684\u8868\u73b0\u8f83\u5dee\u3002</p> <p>\u5f53\u8ba1\u7b97\u51b3\u5b9a\u7cfb\u6570\u65f6\uff0csklearn\u7684r2_score\u51fd\u6570\u4f1a\u8fd4\u56de\u8d1f\u6570\uff0c\u4ee5\u63d0\u9192\u7528\u6237\u6a21\u578b\u7684\u8868\u73b0\u4e0d\u4f73\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u901a\u5e38\u5e0c\u671b\u51b3\u5b9a\u7cfb\u6570\u4e3a\u6b63\u503c\uff0c\u63a5\u8fd11\u8d8a\u597d\uff0c\u4f46\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8d1f\u7684\u51b3\u5b9a\u7cfb\u6570\u4e5f\u53ef\u80fd\u63d0\u4f9b\u4e00\u4e9b\u6709\u4ef7\u503c\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u8868\u793a\u6a21\u578b\u7684\u9884\u6d4b\u6bd4\u57fa\u51c6\uff08\u5982\u5747\u503c\uff09\u66f4\u5dee\u3002</p> <p>\u56e0\u6b64\uff0c\u5728\u4f7f\u7528r2_score\u51fd\u6570\u8ba1\u7b97\u51b3\u5b9a\u7cfb\u6570\u65f6\uff0c\u8d1f\u6570\u7684\u7ed3\u679c\u5e94\u88ab\u89c6\u4e3a\u6a21\u578b\u6027\u80fd\u7684\u8b66\u793a\u4fe1\u53f7\uff0c\u9700\u8981\u8fdb\u4e00\u6b65\u5206\u6790\u548c\u6539\u8fdb\u6a21\u578b\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002</p> <ol> <li> <p>@\u7ef4\u57fa\u767e\u79d1\uff0c\u76ae\u5c14\u900a\u79ef\u77e9\u76f8\u5173\u7cfb\u6570 \u21a9</p> </li> <li> <p>@\u7ef4\u57fa\u767e\u79d1\uff0c\u51b3\u5b9a\u7cfb\u6570 \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/","title":"\ud83c\udf81 \u673a\u5668\u5b66\u4e60/4\ufe0f\u20e3 \u96c6\u6210\u5b66\u4e60","text":"<ul> <li> <p>A.ipynb</p> <p> Getting started</p> </li> <li> <p>B.ipynb</p> <p> Getting started</p> </li> <li> <p>C.ipynb</p> <p> Getting started</p> </li> <li> <p>D.ipynb</p> <p> Getting started</p> </li> <li> <p>E.ipynb</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/A/","title":"\ud83e\udd66 \u68af\u5ea6\u63d0\u5347\u6811GBDT","text":"In\u00a0[1]: Copied! <pre># \u67e5\u770b\u5404\u4e2a\u5e93\u7248\u672c\nimport sklearn\nimport matplotlib as mlp\nimport numpy as np\nimport pandas as pd\n\nfor item in [sklearn, mlp, np, pd]:\n    print(f'{eval(str(item).split(\" \")[1])}: {item.__version__}')\n</pre> # \u67e5\u770b\u5404\u4e2a\u5e93\u7248\u672c import sklearn import matplotlib as mlp import numpy as np import pandas as pd  for item in [sklearn, mlp, np, pd]:     print(f'{eval(str(item).split(\" \")[1])}: {item.__version__}') <pre>sklearn: 1.3.2\nmatplotlib: 3.7.1\nnumpy: 1.25.0\npandas: 2.0.2\n</pre> In\u00a0[2]: Copied! <pre># \u5bfc\u5165\u52a0\u5229\u798f\u5c3c\u4e9a\u623f\u4ef7\u6570\u636e\nfrom sklearn.datasets import fetch_california_housing\nfrom sklearn.model_selection import train_test_split as TTS\n\ndata = fetch_california_housing()\nprint(data.keys())\n\n# \u5212\u5206\u6570\u636e\u96c6\nx = data['data']\ny = data['target']\ntrain_x, test_x, train_y, test_y = TTS(x, y, test_size=0.3, random_state=22)\n</pre> # \u5bfc\u5165\u52a0\u5229\u798f\u5c3c\u4e9a\u623f\u4ef7\u6570\u636e from sklearn.datasets import fetch_california_housing from sklearn.model_selection import train_test_split as TTS  data = fetch_california_housing() print(data.keys())  # \u5212\u5206\u6570\u636e\u96c6 x = data['data'] y = data['target'] train_x, test_x, train_y, test_y = TTS(x, y, test_size=0.3, random_state=22) <pre>dict_keys(['data', 'target', 'frame', 'target_names', 'feature_names', 'DESCR'])\n</pre> In\u00a0[6]: Copied! <pre>from sklearn.ensemble import GradientBoostingRegressor as GBR\nfrom time import time\n\nfor n in range(50, 550, 50):\n    start = time()\n    reg = GBR(n_estimators=n, random_state=22)\n    reg.fit(train_x, train_y)\n    print(f'Estimators: {n} \\t R2: {reg.score(test_x, test_y):.4f} \\t Time:{time() - start:.4f}')\n</pre> from sklearn.ensemble import GradientBoostingRegressor as GBR from time import time  for n in range(50, 550, 50):     start = time()     reg = GBR(n_estimators=n, random_state=22)     reg.fit(train_x, train_y)     print(f'Estimators: {n} \\t R2: {reg.score(test_x, test_y):.4f} \\t Time:{time() - start:.4f}') <pre>Estimators: 50 \t R2: 0.7602 \t Time:3.4205\nEstimators: 100 \t R2: 0.7929 \t Time:6.8516\nEstimators: 150 \t R2: 0.8056 \t Time:10.2487\nEstimators: 200 \t R2: 0.8144 \t Time:13.5612\nEstimators: 250 \t R2: 0.8182 \t Time:16.8938\nEstimators: 300 \t R2: 0.8229 \t Time:20.2602\nEstimators: 350 \t R2: 0.8266 \t Time:23.7398\nEstimators: 400 \t R2: 0.8287 \t Time:27.0994\nEstimators: 450 \t R2: 0.8305 \t Time:30.2137\nEstimators: 500 \t R2: 0.8317 \t Time:33.4626\n</pre> In\u00a0[7]: Copied! <pre>for lr in np.linspace(0.01, 0.2, 5):\n    start = time()\n    reg = GBR(n_estimators=200, learning_rate=lr, random_state=22)\n    reg.fit(train_x, train_y)\n    print(f'learning_rate: {lr} \\t R2: {reg.score(test_x, test_y):.4f} \\t Time:{time() - start:.4f}')\n</pre> for lr in np.linspace(0.01, 0.2, 5):     start = time()     reg = GBR(n_estimators=200, learning_rate=lr, random_state=22)     reg.fit(train_x, train_y)     print(f'learning_rate: {lr} \\t R2: {reg.score(test_x, test_y):.4f} \\t Time:{time() - start:.4f}') <pre>learning_rate: 0.01 \t R2: 0.6431 \t Time:13.6895\nlearning_rate: 0.0575 \t R2: 0.7975 \t Time:13.5025\nlearning_rate: 0.105 \t R2: 0.8163 \t Time:13.4170\nlearning_rate: 0.15250000000000002 \t R2: 0.8248 \t Time:13.4009\nlearning_rate: 0.2 \t R2: 0.8286 \t Time:13.3612\n</pre> In\u00a0[\u00a0]: Copied! <pre>from sklearn.ensemble import GradientBoostingRegressor as GBR\nfrom sklearn.model_selection import cross_val_score as CSV\nfrom sklearn.model_selection import KFold\n\ngbr = GBR(n_estimators=10, random_state=22)\ncv = KFold(n_splits=5, shuffle=True, random_state=22)\nresult_gbr = CSV(gbr, train_x, train_y, cv=cv, scoring='neg_mean_squared_error')\n\n# RMSE\nrmse = (abs(result_gbr) ** 0.5).mean()\n# \u65b9\u5dee\nvar = (abs(result_gbr) ** 0.5).var()\nprint(f'RMSE = {rmse}\\n'\n      f'Var = {var}')\n</pre> from sklearn.ensemble import GradientBoostingRegressor as GBR from sklearn.model_selection import cross_val_score as CSV from sklearn.model_selection import KFold  gbr = GBR(n_estimators=10, random_state=22) cv = KFold(n_splits=5, shuffle=True, random_state=22) result_gbr = CSV(gbr, train_x, train_y, cv=cv, scoring='neg_mean_squared_error')  # RMSE rmse = (abs(result_gbr) ** 0.5).mean() # \u65b9\u5dee var = (abs(result_gbr) ** 0.5).var() print(f'RMSE = {rmse}\\n'       f'Var = {var}')"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/A/#gbdt","title":"\ud83e\udd66 \u68af\u5ea6\u63d0\u5347\u6811GBDT\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/A/#boosting","title":"\u58f9\u4e28\u96c6\u6210\u5b66\u4e60\u4e0eBoosting\u00b6","text":"<p>\u96c6\u6210\u5b66\u4e60\uff08Ensemble Learning\uff09\u4f7f\u7528\u591a\u4e2a\u5f31\u8bc4\u4f30\u5668\uff0c\u5e76\u5c06\u5b83\u4eec\u4ee5\u67d0\u79cd\u65b9\u5f0f\u7ed3\u5408\u8d77\u6765\u89e3\u51b3\u4e00\u4e2a\u95ee\u9898</p> <p>\u96c6\u6210\u5b66\u4e60\u4e09\u4e2a\u4e3b\u8981\u7814\u7a76\u9886\u57df\uff1a</p> <ol> <li>\u6a21\u578b\u878d\u5408\u3002\u5305\u62ec\u6295\u7968\u6cd5Voting\u3001\u5806\u53e0\u6cd5Stacking\u3001\u6df7\u5408\u6cd5Blending\u7b49</li> <li>\u5f31\u5206\u7c7b\u5668\u96c6\u6210\u3002\u5982\u88c5\u888b\u6cd5Bagging\u3001\u63d0\u5347\u6cd5Boosting</li> <li>\u6df7\u5408\u4e13\u5bb6\u6a21\u578b\u3002\u5c06\u4e00\u4e2a\u590d\u6742\u4efb\u52a1\u62c6\u89e3\u6210\u51e0\u4e2a\u76f8\u5bf9\u7b80\u5355\u4e14\u66f4\u5c0f\u7684\u5b50\u4efb\u52a1\uff0c\u9488\u5bf9\u4e0d\u540c\u5b50\u4efb\u52a1\u8bad\u7ec3\u4e2a\u4f53\u5b66\u4e60\u5668\u3002</li> </ol>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/A/#gbdt","title":"\u8d30\u4e28GBDT\u00b6","text":"<p>GBDT(GBM)\u662f\u63d0\u5347\u6cd5Boosting\u7684\u4ee3\u8868\uff0c\u9010\u4e00\u5efa\u7acb\u5f31\u8bc4\u4f30\u5668\u3001\u5e76\u4e14\u4e0a\u4e00\u4e2a\u5f31\u8bc4\u4f30\u5176\u7684\u8f93\u51fa\u7ed3\u679c\u4f1a\u5f71\u54cd\u4e0b\u4e00\u4e2a\u5f31\u8bc4\u4f30\u5668\u7684\u5efa\u7acb\u3002\u5f31\u8bc4\u4f30\u5668\u4e4b\u95f4\u9ad8\u5ea6\u76f8\u5173\u3002</p> <p>Bagging\u6cd5\u4e00\u6b21\u6027\u5efa\u7acb\u591a\u4e2a\u5e73\u884c\u72ec\u7acb\u7684\u5f31\u8bc4\u4f30\u5668\uff0c\u8ba9\u6240\u6709\u8bc4\u4f30\u5668\u5e76\u884c\u8ba1\u7b97\u3002\u5982\u968f\u673a\u68ee\u6797\u3002</p> <p>AdaBoost\u786e\u7acb\u63d0\u5347\u6cd5\u4e09\u8981\u7d20\uff1a</p> <ul> <li>\u635f\u5931\u51fd\u6570 L(x, y)</li> <li>\u5f31\u8bc4\u4f30\u5668 f(x)</li> <li>\u7efc\u5408\u96c6\u6210\u89c4\u5219</li> </ul> <p>\u4f9d\u8d56\u4e8e\u4e09\u8981\u7d20\uff0cAdaBoost\u8fd8\u786e\u7acb\u4e86\u57fa\u672c\u8bad\u7ec3\u6d41\u7a0b\uff1a\u4f9d\u636e\u4e0a\u4e00\u4e2a\u5f31\u8bc4\u4f30\u5668 $f(x)_{t-1}$ \u7684\u7ed3\u679c\uff0c\u8ba1\u7b97\u635f\u5931\u51fd\u6570 $L(x, y)$\uff0c\u5e76\u4ee5\u6700\u5c0f\u5316 $L(x, y)$ \u4e3a\u76ee\u6807\u5f71\u54cd\u4e0b\u4e00\u4e2a\u5f31\u8bc4\u4f30\u5668 $f(x)_t$ \u7684\u6784\u5efa\u3002</p> \u5e74\u4efd \u7b97\u6cd5/\u7406\u8bba \u6210\u5c31/\u6539\u8fdb 1988 General Boosting \u5148\u524d\u7684\u5f31\u8bc4\u4f30\u5668\u4e0a\u9884\u6d4b\u9519\u8bef\u7684\u6837\u672c\u5e94\u8be5\u5728\u540e\u7eed\u5f97\u5230\u66f4\u591a\u5173\u6ce8 1997 AdaBoost \u4ece0\u52301\uff0c\u9996\u6b21\u5728\u5de5\u7a0b\u4e0a\u5b9e\u73b0Boosting\u7406\u8bba\u786e\u7acb\u4e86\u51b3\u7b56\u6811\u4f5c\u4e3a\u5f31\u8bc4\u4f30\u5668\uff0c\u751f\u957f\u89c4\u5219\u4e3aC4.5\u81ea\u9002\u5e94\u5730\u8c03\u6574\u6570\u636e\u5206\u5e03\u81ea\u9002\u5e94\u5730\u8ba1\u7b97\u6bcf\u4e2a\u5f31\u5206\u7c7b\u5668\u7684\u6743\u91cd 2000 GBDT\u6539\u8fdbADB \u66f4\u65b0\u635f\u5931\u51fd\u6570$L(x,y)$\uff0c\u5728\u6570\u5b66\u6d41\u7a0b\u4e0a\u63a8\u5e7f\u5230\u4efb\u610f\u53ef\u5fae\u51fd\u6570\u653e\u5f03\u8c03\u6574\u6570\u636e\u5206\u5e03\u3001\u653e\u5f03\u5f31\u5206\u7c7b\u5668\u6743\u91cd\u81ea\u9002\u5e94\u5730\u8c03\u6574\u540e\u7eed\u5f31\u8bc4\u4f30\u5668\u62df\u5408\u7684\u76ee\u6807 2014 XGBoost\u6539\u8fdbGBDT \u66f4\u65b0\u635f\u5931\u51fd\u6570$L(x,y)$\uff0c\u5728\u635f\u5931\u51fd\u6570\u4e2d\u52a0\u5165\u6b63\u5219\u9879\u6539\u8fdb\u5f31\u8bc4\u4f30\u5668$f(x)$\u751f\u957f\u89c4\u5219\uff0c\u81ea\u9002\u5e94\u5730\u8c03\u6574\u540e\u7eed\u5f31\u8bc4\u4f30\u5668\u7684\u7ed3\u6784\u6539\u8fdb\u62df\u5408\u4e2d\u7684\u6570\u5b66\u8fc7\u7a0b\uff0c\u63d0\u5347\u62df\u5408\u7cbe\u5ea6\u9996\u6b21\u5728\u5de5\u7a0b\u4e0a\u5b9e\u73b0\u4e86Boosting\u6811\u7684\u5e76\u884c\uff0c\u63d0\u5347\u8fd0\u7b97\u901f\u5ea6\u652f\u6301GPU\u52a0\u901f 2016 LGBM\u6539\u8fdbGBDT\u53d7XGBoost\u542f\u53d1 \u6539\u8fdb\u5f31\u8bc4\u4f30\u5668$f(x)$\u7684\u751f\u957f\u89c4\u5219\uff0c\u81ea\u9002\u5e94\u5730\u8c03\u6574\u540e\u7eed\u5f31\u8bc4\u4f30\u5668\u7684\u7ed3\u6784\u8bbe\u8ba1\u4e86\u9002\u5408\u4e8eGBDT\u7684\u6570\u636e\u5206\u5e03\u8c03\u6574\u65b9\u5f0fGOSS\uff0c\u81ea\u9002\u5e94\u5730\u8c03\u6574\u6570\u636e\u5206\u5e03\u8bbe\u8ba1\u4e86\u52a0\u901f\u5f31\u5206\u7c7b\u5668\u5206\u679d\u7684\u8ba1\u7b97\u65b9\u5f0fEFB\uff0c\u5728\u5de5\u7a0b\u4e0a\u5927\u5e45\u5ea6\u964d\u4f4e\u4e86\u8fd0\u7b97\u65f6\u95f4\u4e0e\u5185\u5b58\u6d88\u8017\u652f\u6301GPU\u52a0\u901f 2017 CatBoost\u6539\u8fdbGBDT\u53d7XGBoost\u542f\u53d1 \u6539\u8fdb\u5f31\u8bc4\u4f30\u5668$f(x)$\u7684\u751f\u957f\u89c4\u5219\uff0c\u81ea\u9002\u5e94\u989d\u8c03\u6574\u540e\u7eed\u5f31\u8bc4\u4f30\u5668\u7684\u7ed3\u6784\u8bbe\u8ba1\u4e86\u9002\u7528\u4e8e\u68af\u5ea6\u4e0b\u964d\u7684\u5f31\u5206\u7c7b\u5668\u6743\u91cd\u8c03\u6574\u65b9\u5f0f\uff0c\u81ea\u9002\u5e94\u5730\u8c03\u6574\u5f31\u5206\u7c7b\u5668\u7684\u6743\u91cd\u6539\u8fdb\u79bb\u6563\u578b\u53d8\u91cf\u7684\u5206\u679d\u65b9\u5f0f\uff0c\u63d0\u5347\u62df\u5408\u7cbe\u5ea6\u652f\u6301GPU\u52a0\u901f <p>Boosting\u7b97\u6cd5\u4e2d\u6240\u6709\u7684\u5f31\u8bc4\u4f30\u5668\u90fd\u662f\u56de\u5f52\u6811\uff0c\u5206\u7c7b\u7b97\u6cd5\u662f\u5728\u56de\u5f52\u8f93\u51fa\u7684\u57fa\u7840\u4e0a\u52a0\u4e0aSigmoid\u6216Softmax\u51fd\u6570</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/A/#gbdt","title":"\u53c1\u4e28GBDT\u76f8\u5173\u53c2\u6570\u00b6","text":"\u53c2\u6570\u76f8\u5173\u6d41\u7a0b \u53c2\u6570 \u635f\u5931\u51fd\u6570 <code>loss</code>\uff0c<code>alpha</code> \u96c6\u6210\u89c4\u5219 <code>init</code>\uff0c<code>subsample</code>\uff0c<code>learning_rate</code> \u5f31\u8bc4\u4f30\u5668 <code>n_estimators</code>\uff0c<code>criterion</code> \u5f31\u8bc4\u4f30\u5668\uff08\u6297\u8fc7\u62df\u5408\uff09 <code>min_samples_split</code>\uff0c<code>min_samples_leaf</code>\uff0c<code>min_weight_fraction_leaf</code>\uff0c<code>max_depth</code>\uff0c<code>min_impurity</code>\uff0c<code>max_features</code>\uff0c<code>max_leaf_nodes</code>\uff0c<code>ccp_alpha</code> \u8bad\u7ec3\u6d41\u7a0b\uff08\u7ed3\u679c\u76d1\u63a7\uff09 <code>verbose</code> \u8bad\u7ec3\u6d41\u7a0b\uff08\u63d0\u524d\u505c\u6b62\uff09 <code>validation_fraction</code>\uff0c<code>n_iter_no_change</code>\uff0c<code>tol</code> \u8bad\u7ec3\u6d41\u7a0b\uff08\u589e\u91cf\u5b66\u4e60\uff09 <code>warm_start</code> \u968f\u673a\u6027\u63a7\u5236 <code>random_state</code> <p><code>n_estimators</code>\uff1a\u8fed\u4ee3\u6b21\u6570\uff0c\u9ed8\u8ba4100\u3002\u968f\u7740<code>n_estimators</code>\u589e\u591a\uff0c\u8bad\u7ec3\u901f\u5ea6\u53d8\u6162\uff0c\u8fc7\u62df\u5408\u53ef\u80fd\u6027\u589e\u5927</p> <p>\u5f53\u6811\u7684\u5c3a\u5bf8\u5c0f\u7684\u65f6\u5019\uff0c\u4e0d\u5bb9\u6613\u8fc7\u62df\u5408\u3002\u8ba1\u7b97\u8d44\u6e90\u8db3\u591f\u65f6\u53ef\u4ee5\u589e\u591a\u6811\u7684\u6570\u91cf\uff0c\u5e76\u901a\u8fc7\u63a7\u5236\u8fc7\u62df\u5408\u53c2\u6570\u8c03\u6574\u6a21\u578b</p> <p><code>learning_rate</code>\uff1a\u5b66\u4e60\u7387\u63a7\u5236\u6bcf\u68f5\u6811\u589e\u957f\u7684\u901f\u5ea6\u3002\u5f53\u5b66\u4e60\u7387\u5927\u65f6\uff0c\u7b97\u6cd5\u8fed\u4ee3\u5f97\u5feb\uff0c\u53ea\u9700\u8981\u8f83\u5c11\u7684\u6811\u5c31\u53ef\u4ee5\u5feb\u901f\u8fbe\u5230\u6a21\u578b\u7684\u6781\u9650\u9644\u8fd1\u3002\u5f53\u5b66\u4e60\u7387\u5c0f\u65f6\uff0c\u60c5\u51b5\u5b8c\u5168\u76f8\u53cd\u3002</p> <p>\u5728Boosting\u4e2d\uff0c\u4e00\u4e2a\u6837\u672c\u5728\u96c6\u6210\u7b97\u6cd5\u4e2d\u7684\u8f93\u51fa\u503c\u603b\u662f\u7b49\u4e8e\u8fd9\u4e2a\u6837\u672c\u5728\u6240\u6709\u6811\u4e0a\u7684\u8f93\u51fa\u503c\u7684\u52a0\u6743\u5e73\u5747</p> <p>$$ \\hat{y_i} = \\Sigma wf(x_i) $$</p> <p>\u5728\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\uff0c\u6301\u7eed\u7684\u6c42\u89e3\u8f93\u51fa\u7684$\\hat{y_i}$\uff0c\u5047\u8bbe\u6a21\u578b\u4e2d\u6709\u4e86<code>k</code>\u68f5\u6811\uff0c\u5728\u5efa\u7acb\u7b2c<code>k+1</code>\u68f5\u65b0\u7684\u6811\u65f6\uff0c\u8f93\u51fa\u7ed3\u679c\u8868\u793a\u4e3a\uff1a</p> <p>$$ \\hat{y_i}^{(k+1)} = \\hat{y_i}^{(k)} + \\eta f_{k+1}(x_i) $$</p> <p>\u5176\u4e2d\uff0c$\\eta$\u5c31\u662f\u5b66\u4e60\u7387</p> <p><code>loss</code>\uff1a\u635f\u5931\u51fd\u6570\uff0c\u53ef\u6307\u5b9a: [<code>squared_error</code>, <code>absolute_error</code>, <code>huber</code>, <code>quantile</code>]\uff0c\u9ed8\u8ba4\u503c\uff1a<code>squared_error</code></p> <ol> <li>\u5e73\u65b9\u8bef\u5dee\uff1a</li> </ol> <p>$$ loss = \\Sigma(y-f(x))^2 $$</p> <ol> <li>\u7edd\u5bf9\u8bef\u5dee\uff1a</li> </ol> <p>$$ loss =\\Sigma |y-f(x)| $$</p> <ol> <li>Huber\u635f\u5931\uff1a</li> </ol> <p>$$ loss=\\Sigma L(y,f(x)) $$</p> <p>\u5176\u4e2d,</p> <p>$$ {\\displaystyle L_{\\delta }(y,f(x))={\\begin{cases}{\\frac {1}{2}}(y-f(x))^{2}&amp;{\\text{for }}|y-f(x)|\\leq \\delta ,\\\\\\delta \\ \\cdot \\left(|y-f(x)|-{\\frac {1}{2}}\\delta \\right),&amp;{\\text{otherwise.}}\\end{cases}}} \\\\ \\\\ \\delta \\in (0,1) $$</p> <p>GBDT\u5fc5\u987b\u8003\u8651\u79bb\u7fa4\u503c\u7684\u5f71\u54cd Boosting\u7b97\u6cd5\u66f4\u5bb9\u6613\u88ab\u79bb\u7fa4\u503c\u5f71\u54cd\uff0c\u4e5f\u66f4\u64c5\u957f\u5b66\u4e60\u79bb\u7fa4\u503c\uff1a \u5f53\u9ad8\u5ea6\u5173\u6ce8\u79bb\u7fa4\u503c\u3001\u5e76\u4e14\u5e0c\u671b\u52aa\u529b\u5c06\u79bb\u7fa4\u503c\u9884\u6d4b\u6b63\u786e\u65f6\uff0c\u9009\u62e9MSE \u52aa\u529b\u6392\u9664\u79bb\u7fa4\u503c\u7684\u5f71\u54cd\uff0c\u66f4\u5173\u6ce8\u975e\u79bb\u7fa4\u503c\u65f6\uff0c\u9009\u62e9MAE \u5e73\u8861\u79bb\u7fa4\u503c\u4e0e\u975e\u79bb\u7fa4\u503c\u65f6\uff0c\u9009\u62e9Huber\u6216\u8005Quantileloss</p> <p><code>random_state</code>\uff1a\u968f\u673a\u6570\u79cd\u5b50\u3002\u63a7\u5236\u968f\u673a\u89c4\u5219\u7684\u53c2\u6570</p> <p>sklearn\u4e2d\u7684\u968f\u673a\u6027\u6d41\u7a0b\u5305\u62ec\uff1a</p> <ol> <li>\uff08\u5f3a\u5236\uff09\u968f\u673a\u62bd\u53d6\u6bcf\u68f5\u6811\u5efa\u7acb\u65f6\u5206\u679d\u7528\u7684\u7279\u5f81\uff0c\u62bd\u53d6\u6570\u91cf\u7531<code>max_features</code>\u51b3\u5b9a</li> <li>\uff08\u5f3a\u5236\uff09\u968f\u673a\u6392\u5e8f\u6bcf\u68f5\u6811\u5206\u679d\u65f6\u6240\u7528\u7684\u7279\u5f81</li> <li>\uff08\u53ef\u9009\uff09\u968f\u673a\u62bd\u53d6\u6bcf\u68f5\u6811\u5efa\u7acb\u65f6\u8bad\u7ec3\u7528\u7684\u6837\u672c\uff0c\u62bd\u53d6\u6bd4\u4f8b\u7531<code>subsamples</code>\u51b3\u5b9a</li> <li>\uff08\u53ef\u9009\uff09\u968f\u673a\u62bd\u6837\u90e8\u5206\u6570\u636e\u4f5c\u4e3a\u9a8c\u8bc1\u96c6\u6765\u63a7\u5236\u63d0\u524d\u505c\u6b62\uff0c\u62bd\u53d6\u6bd4\u4f8b\u7531<code>validation_fraction</code>\u51b3\u5b9a</li> </ol> <p><code>criterion</code>\uff1a\u6811\u5206\u679d\u65f6\u4f7f\u7528\u7684\u4e0d\u7eaf\u5ea6\u8861\u91cf\u6307\u6807\u3002CART\u6811\u5728\u5206\u679d\u65f6\u4f1a\u5206\u4e3a\u4e24\u4e2a\u53f6\u5b50\u8282\u70b9\uff0cleft\u548cright\uff0c\u9700\u8981\u627e\u5230\u4ee4\u5de6\u53f3\u8282\u70b9\u7684\u4e0d\u7eaf\u5ea6\u4e4b\u548c\u6700\u5c0f\u7684\u5206\u679d\u65b9\u5f0f\u3002</p> <p>\u7236\u8282\u70b9\u7684\u4e0d\u7eaf\u5ea6\u4e0e\u5de6\u53f3\u8282\u70b9\u4e0d\u7eaf\u5ea6\u4e4b\u548c\u7684\u5dee\u503c\uff0c\u79f0\u4e3a\u4e0d\u7eaf\u5ea6\u4e0b\u964d\u91cf\uff0c\u4e0b\u964d\u91cf\u8d8a\u5927\uff0c\u8be5\u5206\u652f\u5bf9\u4e8e\u964d\u4f4e\u4e0d\u7eaf\u5ea6\u7684\u8d21\u732e\u8d8a\u5927</p> <p>\u8ba1\u7b97\u4e0d\u7eaf\u5ea6\u4e0b\u964d\u91cf\u65b9\u6cd5\u5305\u62ec\uff1a\u5f17\u91cc\u5fb7\u66fc\u5747\u65b9\u8bef\u5dee\u3001\u5747\u65b9\u8bef\u5dee</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/A/#1-n_estimators","title":"1. <code>n_estimators</code>\u8c03\u53c2\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/A/#2-learning_rate","title":"2. <code>learning_rate</code>\u8c03\u53c2\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/A/#3","title":"3. \u4ea4\u53c9\u9a8c\u8bc1\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/B/","title":"\ud83c\udf40 XGBoost","text":"In\u00a0[1]: Copied! <pre># \u5bfc\u5165\u52a0\u5229\u798f\u5c3c\u4e9a\u623f\u4ef7\u6570\u636e\nfrom sklearn.datasets import fetch_california_housing\nfrom sklearn.model_selection import train_test_split as TTS\n\ndata = fetch_california_housing()\nprint(data.keys())\n\n# \u5212\u5206\u6570\u636e\u96c6\nx = data['data']\ny = data['target']\ntrain_x, test_x, train_y, test_y = TTS(x, y, test_size=0.3, random_state=22)\n</pre> # \u5bfc\u5165\u52a0\u5229\u798f\u5c3c\u4e9a\u623f\u4ef7\u6570\u636e from sklearn.datasets import fetch_california_housing from sklearn.model_selection import train_test_split as TTS  data = fetch_california_housing() print(data.keys())  # \u5212\u5206\u6570\u636e\u96c6 x = data['data'] y = data['target'] train_x, test_x, train_y, test_y = TTS(x, y, test_size=0.3, random_state=22) <pre>dict_keys(['data', 'target', 'frame', 'target_names', 'feature_names', 'DESCR'])\n</pre> In\u00a0[2]: Copied! <pre>import xgboost as xgb\nfrom sklearn.metrics import mean_squared_error as MSE\n</pre> import xgboost as xgb from sklearn.metrics import mean_squared_error as MSE In\u00a0[3]: Copied! <pre># XGBoost\u539f\u751f\u8c03\u7528\u9700\u8981\u628a\u6570\u636e\u8f6c\u6362\u4e3a\u7279\u5b9a\u7684\u6570\u636e\u683c\u5f0f\ntrain_data = xgb.DMatrix(train_x, train_y)\ntest_data = xgb.DMatrix(test_x, test_y)\n</pre> # XGBoost\u539f\u751f\u8c03\u7528\u9700\u8981\u628a\u6570\u636e\u8f6c\u6362\u4e3a\u7279\u5b9a\u7684\u6570\u636e\u683c\u5f0f train_data = xgb.DMatrix(train_x, train_y) test_data = xgb.DMatrix(test_x, test_y) In\u00a0[4]: Copied! <pre># \u8bbe\u7f6e\u53c2\u6570\nparam = {'seed': 22}\n\n# \u8bad\u7ec3\u6a21\u578b\nreg = xgb.train(param, train_data)\n\n# \u9884\u6d4b\u7ed3\u679c\ny_pred = reg.predict(test_data)\n\n# \u8ba1\u7b97mse\nmse = MSE(test_y, y_pred, squared=False)\nprint(f'MSE = {mse}')\n</pre> # \u8bbe\u7f6e\u53c2\u6570 param = {'seed': 22}  # \u8bad\u7ec3\u6a21\u578b reg = xgb.train(param, train_data)  # \u9884\u6d4b\u7ed3\u679c y_pred = reg.predict(test_data)  # \u8ba1\u7b97mse mse = MSE(test_y, y_pred, squared=False) print(f'MSE = {mse}') <pre>MSE = 0.5131600787859798\n</pre> In\u00a0[5]: Copied! <pre>xgb.cv(param, train_data, nfold=5, seed=22)\n</pre> xgb.cv(param, train_data, nfold=5, seed=22) Out[5]: train-rmse-mean train-rmse-std test-rmse-mean test-rmse-std 0 0.942639 0.004828 0.950416 0.015797 1 0.795500 0.004464 0.810545 0.015531 2 0.698609 0.003671 0.722387 0.019121 3 0.633481 0.002354 0.665639 0.020278 4 0.587897 0.003754 0.627098 0.018831 5 0.557956 0.004437 0.604098 0.016470 6 0.533969 0.004048 0.585822 0.018141 7 0.511882 0.004187 0.568054 0.016490 8 0.495614 0.005177 0.556252 0.016304 9 0.480777 0.005718 0.545853 0.012671 <p>\u8f93\u51fa\u4e3a\u751f\u6210\u6811\u8fc7\u7a0b\u7684n\u6298\u5e73\u5747\u7ed3\u679c\uff0c\u5373\u6700\u7ec8\u7ed3\u679c\u4e3a\u6700\u540e\u4e00\u884c\uff0c\u4e14\u4e3an\u6298\u4ea4\u53c9\u9a8c\u8bc1\u7684\u5e73\u5747</p> In\u00a0[6]: Copied! <pre>from xgboost import XGBRegressor\n</pre> from xgboost import XGBRegressor In\u00a0[7]: Copied! <pre># \u521b\u5efa\u5bf9\u8c61\nreg = xgb.XGBRegressor(n_estimators=100, random_state=22)\n\n# \u8bad\u7ec3\nreg.fit(train_x, train_y)\n\n# \u6d4b\u8bd5, \u9ed8\u8ba4\u8fd4\u56deR2\nreg.score(test_x, test_y)\n</pre> # \u521b\u5efa\u5bf9\u8c61 reg = xgb.XGBRegressor(n_estimators=100, random_state=22)  # \u8bad\u7ec3 reg.fit(train_x, train_y)  # \u6d4b\u8bd5, \u9ed8\u8ba4\u8fd4\u56deR2 reg.score(test_x, test_y) Out[7]: <pre>0.833294092003024</pre> In\u00a0[8]: Copied! <pre># \u9884\u6d4b\ny_pred = reg.predict(test_x)\n\n# \u8ba1\u7b97mse\nmse = MSE(test_y, y_pred, squared=False)\nprint(f'MSE = {mse}')\n</pre> # \u9884\u6d4b y_pred = reg.predict(test_x)  # \u8ba1\u7b97mse mse = MSE(test_y, y_pred, squared=False) print(f'MSE = {mse}') <pre>MSE = 0.4609130051083081\n</pre> In\u00a0[9]: Copied! <pre># \u8f93\u51fa\u8d21\u732e\u7387\nfor fn, fi in zip(data['feature_names'], reg.feature_importances_):\n    print(f'{fn}: {fi:.4f}')\n</pre> # \u8f93\u51fa\u8d21\u732e\u7387 for fn, fi in zip(data['feature_names'], reg.feature_importances_):     print(f'{fn}: {fi:.4f}') <pre>MedInc: 0.4889\nHouseAge: 0.0658\nAveRooms: 0.0363\nAveBedrms: 0.0228\nPopulation: 0.0245\nAveOccup: 0.1429\nLatitude: 0.1079\nLongitude: 0.1109\n</pre> In\u00a0[10]: Copied! <pre>from sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score as CVS\n</pre> from sklearn.model_selection import KFold from sklearn.model_selection import cross_val_score as CVS In\u00a0[11]: Copied! <pre>reg = xgb.XGBRegressor(n_estimators=100, random_state=22)\n# \u4ea4\u53c9\u9a8c\u8bc1\ncv = KFold(n_splits=5, shuffle=True, random_state=22)\nres = CVS(reg, train_x, train_y, cv=cv, scoring='neg_mean_squared_error')\nrmse = (abs(res) ** 0.5).mean()\nvrmse = (abs(res) ** 0.5).var()\nprint(f'Mean(RMSE) = {rmse}\\n'\n      f'Var(RMSE) = {vrmse}')\n</pre> reg = xgb.XGBRegressor(n_estimators=100, random_state=22) # \u4ea4\u53c9\u9a8c\u8bc1 cv = KFold(n_splits=5, shuffle=True, random_state=22) res = CVS(reg, train_x, train_y, cv=cv, scoring='neg_mean_squared_error') rmse = (abs(res) ** 0.5).mean() vrmse = (abs(res) ** 0.5).var() print(f'Mean(RMSE) = {rmse}\\n'       f'Var(RMSE) = {vrmse}') <pre>Mean(RMSE) = 0.4830401686217102\nVar(RMSE) = 0.0002604404270682063\n</pre> In\u00a0[\u00a0]: Copied! <pre># \u67e5\u770bsklearn API\u53c2\u6570\nfrom xgboost import XGBRegressor as XGBR\n\nreg = XGBR()\nreg\n</pre> # \u67e5\u770bsklearn API\u53c2\u6570 from xgboost import XGBRegressor as XGBR  reg = XGBR() reg In\u00a0[12]: Copied! <pre># sklearn API\nfrom xgboost import XGBRegressor\nfrom sklearn.model_selection import KFold, cross_val_score as CVS\n\nimport numpy as np\n\nfor lr in np.linspace(0.1, 0.5, 5):\n    reg = XGBRegressor(objective='reg:squarederror',\n                       learning_rate=lr,\n                       random_state=22)\n    cv = KFold(n_splits=5, shuffle=True, random_state=22)\n    res = CVS(reg, train_x, train_y, cv=cv, scoring='neg_mean_squared_error')\n\n    print(f'learning_rate = {lr:.4f}, res = {(abs(res) ** 0.5).mean()}')\n</pre> # sklearn API from xgboost import XGBRegressor from sklearn.model_selection import KFold, cross_val_score as CVS  import numpy as np  for lr in np.linspace(0.1, 0.5, 5):     reg = XGBRegressor(objective='reg:squarederror',                        learning_rate=lr,                        random_state=22)     cv = KFold(n_splits=5, shuffle=True, random_state=22)     res = CVS(reg, train_x, train_y, cv=cv, scoring='neg_mean_squared_error')      print(f'learning_rate = {lr:.4f}, res = {(abs(res) ** 0.5).mean()}') <pre>learning_rate = 0.1000, res = 0.4868025769066027\nlearning_rate = 0.2000, res = 0.4793697761831933\nlearning_rate = 0.3000, res = 0.4830401686217102\nlearning_rate = 0.4000, res = 0.5026510715198398\nlearning_rate = 0.5000, res = 0.512333817939106\n</pre> In\u00a0[13]: Copied! <pre># \u539f\u751fAPI\nimport xgboost as xgb\n\ntrain_data = xgb.DMatrix(train_x, train_y)\n\nfor eta in np.linspace(0.1, 0.5, 5):\n    param = {'objective': 'reg:squarederror',\n             'eta': eta,\n             'seed': 22}\n    res = xgb.cv(param, train_data,\n                 num_boost_round=100, nfold=5, seed=22,\n                 shuffle=True, metrics='rmse')\n    print(f'eta = {eta:.4f}, res = {res.iloc[-1, -2]}')\n</pre> # \u539f\u751fAPI import xgboost as xgb  train_data = xgb.DMatrix(train_x, train_y)  for eta in np.linspace(0.1, 0.5, 5):     param = {'objective': 'reg:squarederror',              'eta': eta,              'seed': 22}     res = xgb.cv(param, train_data,                  num_boost_round=100, nfold=5, seed=22,                  shuffle=True, metrics='rmse')     print(f'eta = {eta:.4f}, res = {res.iloc[-1, -2]}') <pre>eta = 0.1000, res = 0.4873787736549489\neta = 0.2000, res = 0.4836093275141261\neta = 0.3000, res = 0.4846305601993509\neta = 0.4000, res = 0.49834340288402323\neta = 0.5000, res = 0.5076573688820785\n</pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/B/#xgboost","title":"\ud83c\udf40 XGBoost\u00b6","text":"<p>XGBoost\uff08Extreme Gradient Boosting\uff09\uff0c\u6781\u81f4\u63d0\u5347\u6811/\u6781\u9650\u63d0\u5347\u6811\uff0c\u7531\u9648\u5929\u5947\u5f00\u53d1\u3002\u5728GBDT\u57fa\u7840\u4e0a\u6539\u8fdb\u7684\u7b97\u6cd5\u3002</p> <p>\u5b98\u7f51\uff1ahttps://xgboost.readthedocs.io/en/stable/</p> <p>\u5b89\u88c5\uff1a<code>pip install xgboost</code></p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/B/#xgboostapi","title":"\u58f9\u4e28XGBoost\u539f\u751fAPI\u8c03\u7528\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/B/#1","title":"1. \u6570\u636e\u8f6c\u6362\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/B/#2-xgb","title":"2. XGB\u8bad\u7ec3\u6d4b\u8bd5\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/B/#3","title":"3. \u4ea4\u53c9\u9a8c\u8bc1\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/B/#xgboostsklearn-api","title":"\u8d30\u4e28XGBoost\u7684sklearn API\u8c03\u7528\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/B/#1","title":"1. \u8bad\u7ec3\u6d4b\u8bd5\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/B/#2","title":"2. \u4ea4\u53c9\u9a8c\u8bc1\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/B/#xgboost","title":"\u53c1\u4e28XGBoost\u53c2\u6570\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/B/#1-xgboost","title":"1. \u67e5\u770bXGBoost\u53c2\u6570\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/B/#2-sklearn-apiapi","title":"2. sklearn API\u548c\u539f\u751fAPI\u5bf9\u7167\u00b6","text":"\u53c2\u6570\u76f8\u5173\u6d41\u7a0b \u539f\u751f\u5e93\u53c2\u6570 sklearn API\u53c2\u6570 \u635f\u5931\u51fd\u6570 <code>objective</code>\uff0c<code>lambda</code>\uff0c<code>alpha</code> <code>objective</code>\uff0c<code>reg_alpha</code>\uff0c<code>reg_lambda</code> \u96c6\u6210\u89c4\u5219 <code>eta</code>\uff0c<code>base_score</code>\uff0c<code>eval_metric</code>\uff0c<code>subsample</code>\uff0c<code>sampling_method</code>\uff0c<code>colsample_bytree</code>\uff0c<code>colsample_bylevel</code>\uff0c<code>colsample_bynode</code> <code>learning_rate</code>\uff0c<code>base_score</code>\uff0c<code>eval_metric</code>\uff0c<code>subsample</code>\uff0c<code>colsample_bytree</code>\uff0c<code>colsample_bylevel</code>\uff0c<code>colsample_bynode</code> \u5f31\u8bc4\u4f30\u5668 <code>num_boost_round</code>\uff0c<code>booster</code>\uff0c<code>tree_method</code>\uff0c<code>sketch_eps</code>\uff0c<code>updater</code>\uff0c<code>grow_policy</code> <code>n_estimators</code>\uff0c<code>booster</code>\uff0c<code>tree_method</code> \u8bad\u7ec3\u6d41\u7a0b\uff08\u6297\u8fc7\u62df\u5408\uff09 <code>num_feature</code>\uff0c<code>max_depth</code>\uff0c<code>gamma</code>\uff0c<code>min_child_weight</code>\uff0c<code>max_delta_step</code>\uff0c<code>max_leaves</code>\uff0c<code>max_bin</code> <code>max_depth</code>\uff0c<code>gamma</code>\uff0c<code>min_child_weight</code>\uff0c<code>max_delta_step</code> \u8bad\u7ec3\u6d41\u7a0b\uff08\u7ed3\u679c\u76d1\u63a7\uff09 <code>verbosity</code> <code>verbosity</code> \u8bad\u7ec3\u6d41\u7a0b\uff08\u63d0\u524d\u505c\u6b62\uff09 <code>early_stopping_rounds</code> <code>early_stopping_rounds</code> \u8bad\u7ec3\u6d41\u7a0b\uff08\u589e\u91cf\u5b66\u4e60\uff09 <code>warm_start</code> \u968f\u673a\u6027\u63a7\u5236 <code>seed</code> <code>random_state</code> \u5176\u4ed6\u6d41\u7a0b <code>missing</code>\uff0c<code>scale_pos_weight</code>\uff0c<code>predictor</code>\uff0c<code>num_parallel_tree</code> <code>n_jobs</code>\uff0c<code>scale_pos_weight</code>\uff0c<code>num_parallel_tree</code>\uff0c<code>enable_categorical</code>\uff0c<code>importance_type</code>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/B/#3","title":"3. \u53c2\u6570\u89e3\u6790\u00b6","text":"<p><code>objective</code>\uff1a\u76ee\u6807\u51fd\u6570\uff08\u635f\u5931\u51fd\u6570+\u6a21\u578b\u590d\u6742</p> <p>\u5ea6\uff09 $$ Obj = \\Sigma^m_{i=1}l(y, f(x)) + \\Sigma^K_{k=1} \\Omega(g_k) \\\\  \\Omega(g_k) = \\gamma T+\u6b63\u5219\u9879(Regularization) $$</p> <p>\u5b9e\u9645\u586b\u5199<code>objective</code>\u53c2\u6570\u65f6\uff0c\u586b\u5199\u7684\u662f\u635f\u5931\u51fd\u6570\u540d\uff0c\u4e0d\u5305\u62ec\u6b63\u5219\u9879\uff08\u8be5\u53c2\u6570\u9ed8\u8ba4\u503c\u4e3a\u5e73\u65b9\u635f\u5931\uff09</p> \u4efb\u52a1 \u635f\u5931\u51fd\u6570 \u6982\u5ff5 \u56de\u5f52 <code>reg:squarederror</code> \u5e73\u65b9\u635f\u5931 \u56de\u5f52 <code>reg:squaredlogerror</code> \u5e73\u653e\u5bf9\u6570\u635f\u5931 \u5206\u7c7b <code>binary:logistic</code> \u4e8c\u5206\u7c7b\u4ea4\u53c9\u71b5\u635f\u5931\uff0c\u8f93\u51fa\u6982\u7387 \u5206\u7c7b <code>binary:logitraw</code> \u4e8c\u5206\u7c7b\u4ea4\u53c9\u71b5\u635f\u5931\uff0c\u8f93\u51faSigmoid\u4e4b\u524d\u7684\u503c \u5206\u7c7b <code>multi:softmax</code> \u591a\u5206\u7c7b\u4ea4\u53c9\u71b5\u635f\u5931\uff0c\u8f93\u51fa\u5177\u4f53\u7684\u7c7b\u522b \u5206\u7c7b <code>multi:softprob</code> \u591a\u5206\u7c7b\u4ea4\u53c9\u71b5\u635f\u5931\uff0c\u8f93\u51fa\u6bcf\u4e2a\u6837\u672c\u6bcf\u4e2a\u7c7b\u522b\u4e0b\u6982\u7387 \u2026\u2026 \u2026\u2026 \u2026\u2026 <p><code>lambda</code>\uff1a\u51b3\u5b9a\u5b8c\u6574\u76ee\u6807\u51fd\u6570\uff0cL2\u6b63\u5219\u9879\u7cfb\u6570\uff0c\u9ed8\u8ba4\u4e3a1</p> <p><code>alpha</code>\uff1a\u51b3\u5b9a\u5b8c\u6574\u76ee\u6807\u51fd\u6570\uff0cL1\u6b63\u5219\u9879\u7cfb\u6570\uff0c\u9ed8\u8ba4\u4e3a0</p> <p><code>num_boost_round</code>\uff1a\u6811\u7684\u6570\u91cf\uff0c\u9ed8\u8ba410\u3002\uff08<code>n_estimators</code>\uff1a\u9ed8\u8ba4100\uff09</p> <p><code>eta</code>\uff1a\u5b66\u4e60\u7387\uff0c\u9ed8\u8ba40.3\uff08<code>learning_rate</code>\uff1a\u9ed8\u8ba40.3\uff09</p> <p><code>verbosity</code>\uff1a\u6253\u5370\u76f8\u5173\u4fe1\u606f\u3002</p> \u53c2\u6570 \u64cd\u4f5c 0 \u4e0d\u6253\u5370\u4efb\u4f55\u5185\u5bb9 1 \u4ec5\u6253\u5370\u8b66\u544a 2 \u6253\u5370\u6811\u7684\u5168\u90e8\u4fe1\u606f 3 \u6253\u5370\u66f4\u591adebug\u4fe1\u606f <p><code>num_parallel_tree</code>\uff1a\u5141\u8bb8\u5e76\u884c\u5efa\u7acb\u7684\u6811\u7684oost\u5efa\u7acb\u968f\u673a\u68ee\u6797</p> <p><code>missing</code>\uff1a\u5bb9\u5fcd\u7f3a\u5931\u7684\u6570\u636e</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/B/","title":"\u8086\u4e28\u8c03\u53c2\u00b6","text":"<p>\u4ee5\u5b66\u4e60\u7387\u4e3a\u4f8b</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/C/","title":"\ud83c\udf33 LGBM","text":"In\u00a0[1]: Copied! <pre># \u5bfc\u5165\u52a0\u5229\u798f\u5c3c\u4e9a\u623f\u4ef7\u6570\u636e\nfrom sklearn.datasets import fetch_california_housing\nfrom sklearn.model_selection import train_test_split as TTS\n\ndata = fetch_california_housing()\nprint(data.keys())\n\n# \u5212\u5206\u6570\u636e\u96c6\nx = data['data']\ny = data['target']\ntrain_x, test_x, train_y, test_y = TTS(x, y, test_size=0.3, random_state=22)\n</pre> # \u5bfc\u5165\u52a0\u5229\u798f\u5c3c\u4e9a\u623f\u4ef7\u6570\u636e from sklearn.datasets import fetch_california_housing from sklearn.model_selection import train_test_split as TTS  data = fetch_california_housing() print(data.keys())  # \u5212\u5206\u6570\u636e\u96c6 x = data['data'] y = data['target'] train_x, test_x, train_y, test_y = TTS(x, y, test_size=0.3, random_state=22) <pre>dict_keys(['data', 'target', 'frame', 'target_names', 'feature_names', 'DESCR'])\n</pre> In\u00a0[6]: Copied! <pre>import lightgbm as lgb\n\n# \u9700\u8981\u5c06\u6570\u636e\u8f6c\u6362\u6210LGBM\u7684\u6570\u636e\u683c\u5f0f\ntrain_data = lgb.Dataset(train_x, train_y)\n\nparam = {'seed': 22}\nreg = lgb.train(param, train_data)\n</pre> import lightgbm as lgb  # \u9700\u8981\u5c06\u6570\u636e\u8f6c\u6362\u6210LGBM\u7684\u6570\u636e\u683c\u5f0f train_data = lgb.Dataset(train_x, train_y)  param = {'seed': 22} reg = lgb.train(param, train_data) <pre>[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000553 seconds.\nYou can set `force_col_wise=true` to remove the overhead.\n[LightGBM] [Info] Total Bins 1838\n[LightGBM] [Info] Number of data points in the train set: 14448, number of used features: 8\n[LightGBM] [Info] Start training from score 2.070666\n</pre> <p>\u5728LGBM\u4e2d\uff0c\u4f7f\u7528\u76f4\u65b9\u56fe\u8ba1\u7b97\u5206\u679d\u65b9\u5f0f\uff0c\u4f1a\u6309\u7167\u884c\u548c\u5217\u65b9\u5411\u8ba1\u7b97\uff0c\u6ca1\u6709\u8bbe\u7f6e\u5bf9\u5e94\u53c2\u6570\u65f6\uff0c\u4f1a\u9009\u62e9\u8fd0\u884c\u66f4\u5feb\u7684\u5206\u679d\u65b9\u5f0f</p> In\u00a0[7]: Copied! <pre># \u8bbe\u7f6e\u5206\u652f\u65b9\u5f0f\nparam = {'seed': 22, 'force_col_wise': True}\nreg = lgb.train(param, train_data, num_boost_round=10)\n</pre> # \u8bbe\u7f6e\u5206\u652f\u65b9\u5f0f param = {'seed': 22, 'force_col_wise': True} reg = lgb.train(param, train_data, num_boost_round=10) <pre>[LightGBM] [Info] Total Bins 1838\n[LightGBM] [Info] Number of data points in the train set: 14448, number of used features: 8\n[LightGBM] [Info] Start training from score 2.070666\n</pre> In\u00a0[8]: Copied! <pre># \u9884\u6d4b\nfrom sklearn.metrics import mean_squared_error as mse\n\npred = reg.predict(test_x)\nmse(test_y, pred, squared=False)\n</pre> # \u9884\u6d4b from sklearn.metrics import mean_squared_error as mse  pred = reg.predict(test_x) mse(test_y, pred, squared=False) Out[8]: <pre>0.6860233557436403</pre> In\u00a0[9]: Copied! <pre># \u4ea4\u53c9\u9a8c\u8bc1\n# stratified\u7528\u4e8e\u5206\u7c7b\u4efb\u52a1\u4e2d\u5747\u8861kfold\u4e2d\u6570\u636e\u7684\u5206\u5e03\nparam = {'seed': 22, 'metric': 'rmse', 'force_col_wise': True}\nresult = lgb.cv(param, train_data, nfold=5, num_boost_round=10, seed=22, stratified=False)\n</pre> # \u4ea4\u53c9\u9a8c\u8bc1 # stratified\u7528\u4e8e\u5206\u7c7b\u4efb\u52a1\u4e2d\u5747\u8861kfold\u4e2d\u6570\u636e\u7684\u5206\u5e03 param = {'seed': 22, 'metric': 'rmse', 'force_col_wise': True} result = lgb.cv(param, train_data, nfold=5, num_boost_round=10, seed=22, stratified=False) <pre>[LightGBM] [Info] Total Bins 1838\n[LightGBM] [Info] Number of data points in the train set: 11556, number of used features: 8\n[LightGBM] [Info] Total Bins 1838\n[LightGBM] [Info] Number of data points in the train set: 11556, number of used features: 8\n[LightGBM] [Info] Total Bins 1838\n[LightGBM] [Info] Number of data points in the train set: 11556, number of used features: 8\n[LightGBM] [Info] Total Bins 1838\n[LightGBM] [Info] Number of data points in the train set: 11556, number of used features: 8\n[LightGBM] [Info] Total Bins 1838\n[LightGBM] [Info] Number of data points in the train set: 11556, number of used features: 8\n[LightGBM] [Info] Start training from score 2.070080\n[LightGBM] [Info] Start training from score 2.067682\n[LightGBM] [Info] Start training from score 2.067000\n[LightGBM] [Info] Start training from score 2.071840\n[LightGBM] [Info] Start training from score 2.075814\n</pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/C/#lgbm","title":"\ud83c\udf33 LGBM\u00b6","text":"<p>LGBM\uff08Light Gradient Boosting Machine\uff09\uff0c\u8f7b\u91cf\u68af\u5ea6\u63d0\u5347\u6811\uff0c\u7531Microsoft\u5f00\u53d1\u3002</p> <p>\u5b98\u7f51\uff1ahttps://lightgbm.readthedocs.io/en/stable/</p> <p>\u5b89\u88c5\uff1a<code>pip install lightgbm</code></p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/C/","title":"\u58f9\u4e28\u7b80\u5355\u4f7f\u7528\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/D/","title":"\ud83c\udf61 \u6a21\u578b\u878d\u5408","text":"In\u00a0[1]: Copied! <pre># \u5bfc\u5165\u52a0\u5229\u798f\u5c3c\u4e9a\u623f\u4ef7\u6570\u636e\nfrom sklearn.datasets import fetch_california_housing\nfrom sklearn.model_selection import train_test_split as TTS\n\ndata = fetch_california_housing()\nprint(data.keys())\n\n# \u5212\u5206\u6570\u636e\u96c6\nx = data['data']\ny = data['target']\ntrain_x, test_x, train_y, test_y = TTS(x, y, test_size=0.3, random_state=22)\n</pre> # \u5bfc\u5165\u52a0\u5229\u798f\u5c3c\u4e9a\u623f\u4ef7\u6570\u636e from sklearn.datasets import fetch_california_housing from sklearn.model_selection import train_test_split as TTS  data = fetch_california_housing() print(data.keys())  # \u5212\u5206\u6570\u636e\u96c6 x = data['data'] y = data['target'] train_x, test_x, train_y, test_y = TTS(x, y, test_size=0.3, random_state=22) <pre>dict_keys(['data', 'target', 'frame', 'target_names', 'feature_names', 'DESCR'])\n</pre> In\u00a0[2]: Copied! <pre>from sklearn.ensemble import GradientBoostingRegressor\nfrom xgboost import XGBRegressor\nfrom lightgbm import LGBMRegressor\n\nfrom sklearn.model_selection import cross_val_score, KFold\nimport time\n</pre> from sklearn.ensemble import GradientBoostingRegressor from xgboost import XGBRegressor from lightgbm import LGBMRegressor  from sklearn.model_selection import cross_val_score, KFold import time In\u00a0[3]: Copied! <pre>cv = KFold(n_splits=5, shuffle=True, random_state=22)\n</pre> cv = KFold(n_splits=5, shuffle=True, random_state=22) In\u00a0[4]: Copied! <pre># 1. GBDT\ngbr = GradientBoostingRegressor(n_estimators=100, random_state=22)\nstart = time.time()\nres = cross_val_score(gbr, train_x, train_y, cv=cv, scoring='neg_mean_squared_error')\n\nprint(time.time() - start)\ntmp = (abs(res)**0.5).mean()\nprint(f'Mean(RMSE) = {tmp}')\ntmp = (abs(res)**0.5).var()\nprint(f'Var(RMSE) = {tmp}')\n</pre> # 1. GBDT gbr = GradientBoostingRegressor(n_estimators=100, random_state=22) start = time.time() res = cross_val_score(gbr, train_x, train_y, cv=cv, scoring='neg_mean_squared_error')  print(time.time() - start) tmp = (abs(res)**0.5).mean() print(f'Mean(RMSE) = {tmp}') tmp = (abs(res)**0.5).var() print(f'Var(RMSE) = {tmp}') <pre>28.284186124801636\nMean(RMSE) = 0.5435198338668081\nVar(RMSE) = 0.00023465103020537168\n</pre> In\u00a0[5]: Copied! <pre># 2. LGBM\nlgb = LGBMRegressor(n_estimators=100, force_col_wise=True,metric='rmse',random_state=22)\nstart = time.time()\nres = cross_val_score(lgb, train_x, train_y, cv=cv, scoring='neg_mean_squared_error')\n\nprint(time.time() - start)\ntmp = (abs(res)**0.5).mean()\nprint(f'Mean(RMSE) = {tmp}')\ntmp = (abs(res)**0.5).var()\nprint(f'Var(RMSE) = {tmp}')\n</pre> # 2. LGBM lgb = LGBMRegressor(n_estimators=100, force_col_wise=True,metric='rmse',random_state=22) start = time.time() res = cross_val_score(lgb, train_x, train_y, cv=cv, scoring='neg_mean_squared_error')  print(time.time() - start) tmp = (abs(res)**0.5).mean() print(f'Mean(RMSE) = {tmp}') tmp = (abs(res)**0.5).var() print(f'Var(RMSE) = {tmp}') <pre>[LightGBM] [Info] Total Bins 1837\n[LightGBM] [Info] Number of data points in the train set: 11558, number of used features: 8\n[LightGBM] [Info] Start training from score 2.070339\n[LightGBM] [Info] Total Bins 1838\n[LightGBM] [Info] Number of data points in the train set: 11558, number of used features: 8\n[LightGBM] [Info] Start training from score 2.067614\n[LightGBM] [Info] Total Bins 1837\n[LightGBM] [Info] Number of data points in the train set: 11558, number of used features: 8\n[LightGBM] [Info] Start training from score 2.067731\n[LightGBM] [Info] Total Bins 1838\n[LightGBM] [Info] Number of data points in the train set: 11559, number of used features: 8\n[LightGBM] [Info] Start training from score 2.072033\n[LightGBM] [Info] Total Bins 1838\n[LightGBM] [Info] Number of data points in the train set: 11559, number of used features: 8\n[LightGBM] [Info] Start training from score 2.075613\n1.1566441059112549\nMean(RMSE) = 0.4774297398269434\nVar(RMSE) = 0.00024916379465450555\n</pre> In\u00a0[6]: Copied! <pre># 3. XGBoost\nxgb = XGBRegressor(n_estimators=100, random_state=22)\nstart = time.time()\nres = cross_val_score(xgb, train_x, train_y, cv=cv, scoring='neg_mean_squared_error')\n\nprint(time.time() - start)\ntmp = (abs(res)**0.5).mean()\nprint(f'Mean(RMSE) = {tmp}')\ntmp = (abs(res)**0.5).var()\nprint(f'Var(RMSE) = {tmp}')\n</pre> # 3. XGBoost xgb = XGBRegressor(n_estimators=100, random_state=22) start = time.time() res = cross_val_score(xgb, train_x, train_y, cv=cv, scoring='neg_mean_squared_error')  print(time.time() - start) tmp = (abs(res)**0.5).mean() print(f'Mean(RMSE) = {tmp}') tmp = (abs(res)**0.5).var() print(f'Var(RMSE) = {tmp}') <pre>0.8879978656768799\nMean(RMSE) = 0.4830401686217102\nVar(RMSE) = 0.0002604404270682063\n</pre> <p>\u7ed3\u679c\u6c47\u603b\u5982\u4e0b\uff1a</p> \u7b97\u6cd5 RMSE \u65b9\u5dee \u7528\u65f6 GBDT 0.5435 0.0002 21.5430 LGBM 0.4774 0.0002 0.3145 XGB 0.4830 0.0003 0.61999 In\u00a0[8]: Copied! <pre>from sklearn.ensemble import VotingRegressor\n\n# \u4ee5\u5143\u7956\u7684\u5217\u8868\u65b9\u5f0f\u6784\u5efaestimators\ngbr = GradientBoostingRegressor(n_estimators=100,random_state=22)\nlgb = LGBMRegressor(n_estimators=100,random_state=22,force_col_wise=True,metric='rmse')\nxgb = XGBRegressor(n_estimators=100,random_state=22)\n</pre> from sklearn.ensemble import VotingRegressor  # \u4ee5\u5143\u7956\u7684\u5217\u8868\u65b9\u5f0f\u6784\u5efaestimators gbr = GradientBoostingRegressor(n_estimators=100,random_state=22) lgb = LGBMRegressor(n_estimators=100,random_state=22,force_col_wise=True,metric='rmse') xgb = XGBRegressor(n_estimators=100,random_state=22) In\u00a0[9]: Copied! <pre># \u4f7f\u7528\u6295\u7968\u6cd5\nestimators = [('GBR',gbr),('LGBM',lgb),('XGB',xgb)]\nmix = VotingRegressor(estimators,verbose=True)\ncv_res = cross_val_score(mix,train_x,train_y,cv=cv,scoring='neg_mean_squared_error')\n</pre> # \u4f7f\u7528\u6295\u7968\u6cd5 estimators = [('GBR',gbr),('LGBM',lgb),('XGB',xgb)] mix = VotingRegressor(estimators,verbose=True) cv_res = cross_val_score(mix,train_x,train_y,cv=cv,scoring='neg_mean_squared_error') <pre>[Voting] ...................... (1 of 3) Processing GBR, total=   5.6s\n[LightGBM] [Info] Total Bins 1837\n[LightGBM] [Info] Number of data points in the train set: 11558, number of used features: 8\n[LightGBM] [Info] Start training from score 2.070339\n[Voting] ..................... (2 of 3) Processing LGBM, total=   0.1s\n[Voting] ...................... (3 of 3) Processing XGB, total=   0.2s\n[Voting] ...................... (1 of 3) Processing GBR, total=   5.4s\n[LightGBM] [Info] Total Bins 1838\n[LightGBM] [Info] Number of data points in the train set: 11558, number of used features: 8\n[LightGBM] [Info] Start training from score 2.067614\n[Voting] ..................... (2 of 3) Processing LGBM, total=   0.2s\n[Voting] ...................... (3 of 3) Processing XGB, total=   0.2s\n[Voting] ...................... (1 of 3) Processing GBR, total=   5.4s\n[LightGBM] [Info] Total Bins 1837\n[LightGBM] [Info] Number of data points in the train set: 11558, number of used features: 8\n[LightGBM] [Info] Start training from score 2.067731\n[Voting] ..................... (2 of 3) Processing LGBM, total=   0.1s\n[Voting] ...................... (3 of 3) Processing XGB, total=   0.2s\n[Voting] ...................... (1 of 3) Processing GBR, total=   5.5s\n[LightGBM] [Info] Total Bins 1838\n[LightGBM] [Info] Number of data points in the train set: 11559, number of used features: 8\n[LightGBM] [Info] Start training from score 2.072033\n[Voting] ..................... (2 of 3) Processing LGBM, total=   0.1s\n[Voting] ...................... (3 of 3) Processing XGB, total=   0.2s\n[Voting] ...................... (1 of 3) Processing GBR, total=   5.4s\n[LightGBM] [Info] Total Bins 1838\n[LightGBM] [Info] Number of data points in the train set: 11559, number of used features: 8\n[LightGBM] [Info] Start training from score 2.075613\n[Voting] ..................... (2 of 3) Processing LGBM, total=   0.1s\n[Voting] ...................... (3 of 3) Processing XGB, total=   0.2s\n</pre> In\u00a0[10]: Copied! <pre>tmp = (abs(cv_res)**0.5).mean()\nprint(f'Mean(RMSE) = {tmp}')\ntmp = (abs(cv_res)**0.5).var()\nprint(f'Var(RMSE) = {tmp}')\n</pre> tmp = (abs(cv_res)**0.5).mean() print(f'Mean(RMSE) = {tmp}') tmp = (abs(cv_res)**0.5).var() print(f'Var(RMSE) = {tmp}') <pre>Mean(RMSE) = 0.47908001792266736\nVar(RMSE) = 0.00023419211448020937\n</pre> <p>\u878d\u5408\u6a21\u578b\u7684\u7ed3\u679c\u6ca1\u6709\u5355\u72ec\u7684LGBM\u6548\u679c\u597d\u3002\u5e73\u5747\u6cd5\u878d\u5408\u6548\u679c\u66f4\u597d\u7684\u524d\u63d0\u662f\uff1a</p> <ul> <li>\u8bc4\u4f30\u5668\u662f\u7cbe\u8c03\u4e4b\u540e\u7684\u5f3a\u5b66\u4e60\u5668</li> <li>\u88ab\u878d\u5408\u7684\u8bc4\u4f30\u5668\u5728\u4ea4\u53c9\u9a8c\u8bc1\u4e0a\u7684\u5206\u6570\u5dee\u5f02\u4e0d\u5927</li> <li>\u8bc4\u4f30\u5668\u4e0e\u8bc4\u4f30\u5668\u4e4b\u95f4\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff08\u8c03\u6574\u968f\u673a\u6027\uff0c\u4f7f\u8bc4\u4f30\u5668\u4e4b\u95f4\u7684\u5dee\u5f02\u66f4\u5927\uff09</li> </ul> In\u00a0[11]: Copied! <pre>gbr = GradientBoostingRegressor(n_estimators=300, \n                                learning_rate=0.5,\n                                max_features=0.6,\n                                random_state=22)\nstart = time.time()\nres = cross_val_score(gbr, train_x, train_y, cv=cv, scoring='neg_mean_squared_error')\n\nprint(time.time() - start)\ntmp = (abs(res)**0.5).mean()\nprint(f'Mean(RMSE) = {tmp:.4f}')\ntmp = (abs(res)**0.5).var()\nprint(f'Var(RMSE) = {tmp:.4f}')\n</pre> gbr = GradientBoostingRegressor(n_estimators=300,                                  learning_rate=0.5,                                 max_features=0.6,                                 random_state=22) start = time.time() res = cross_val_score(gbr, train_x, train_y, cv=cv, scoring='neg_mean_squared_error')  print(time.time() - start) tmp = (abs(res)**0.5).mean() print(f'Mean(RMSE) = {tmp:.4f}') tmp = (abs(res)**0.5).var() print(f'Var(RMSE) = {tmp:.4f}') <pre>44.16127824783325\nMean(RMSE) = 0.5111\nVar(RMSE) = 0.0004\n</pre> In\u00a0[12]: Copied! <pre>lgb = LGBMRegressor(n_estimators=200, \n                    learning_rate=0.5,\n                    force_col_wise=True,\n                    colsample_bytree=0.6,\n                    metric='rmse',\n                    random_state=22)\nstart = time.time()\nres = cross_val_score(lgb, train_x, train_y, cv=cv, scoring='neg_mean_squared_error')\n\nprint(time.time() - start)\ntmp = (abs(res)**0.5).mean()\nprint(f'Mean(RMSE) = {tmp:.4f}')\ntmp = (abs(res)**0.5).var()\nprint(f'Var(RMSE) = {tmp:.4f}')\n</pre> lgb = LGBMRegressor(n_estimators=200,                      learning_rate=0.5,                     force_col_wise=True,                     colsample_bytree=0.6,                     metric='rmse',                     random_state=22) start = time.time() res = cross_val_score(lgb, train_x, train_y, cv=cv, scoring='neg_mean_squared_error')  print(time.time() - start) tmp = (abs(res)**0.5).mean() print(f'Mean(RMSE) = {tmp:.4f}') tmp = (abs(res)**0.5).var() print(f'Var(RMSE) = {tmp:.4f}') <pre>[LightGBM] [Info] Total Bins 1837\n[LightGBM] [Info] Number of data points in the train set: 11558, number of used features: 8\n[LightGBM] [Info] Start training from score 2.070339\n[LightGBM] [Info] Total Bins 1838\n[LightGBM] [Info] Number of data points in the train set: 11558, number of used features: 8\n[LightGBM] [Info] Start training from score 2.067614\n[LightGBM] [Info] Total Bins 1837\n[LightGBM] [Info] Number of data points in the train set: 11558, number of used features: 8\n[LightGBM] [Info] Start training from score 2.067731\n[LightGBM] [Info] Total Bins 1838\n[LightGBM] [Info] Number of data points in the train set: 11559, number of used features: 8\n[LightGBM] [Info] Start training from score 2.072033\n[LightGBM] [Info] Total Bins 1838\n[LightGBM] [Info] Number of data points in the train set: 11559, number of used features: 8\n[LightGBM] [Info] Start training from score 2.075613\n1.304314136505127\nMean(RMSE) = 0.5187\nVar(RMSE) = 0.0002\n</pre> In\u00a0[13]: Copied! <pre>xgb = XGBRegressor(n_estimators=100,\n                   learning_rate=0.5,\n                   colsample_bytree=0.6,\n                   random_state=22)\nstart = time.time()\nres = cross_val_score(xgb, train_x, train_y, cv=cv, scoring='neg_mean_squared_error')\n\nprint(time.time() - start)\ntmp = (abs(res)**0.5).mean()\nprint(f'Mean(RMSE) = {tmp:.4f}')\ntmp = (abs(res)**0.5).var()\nprint(f'Var(RMSE) = {tmp:.4f}')\n</pre> xgb = XGBRegressor(n_estimators=100,                    learning_rate=0.5,                    colsample_bytree=0.6,                    random_state=22) start = time.time() res = cross_val_score(xgb, train_x, train_y, cv=cv, scoring='neg_mean_squared_error')  print(time.time() - start) tmp = (abs(res)**0.5).mean() print(f'Mean(RMSE) = {tmp:.4f}') tmp = (abs(res)**0.5).var() print(f'Var(RMSE) = {tmp:.4f}') <pre>0.8009979724884033\nMean(RMSE) = 0.5025\nVar(RMSE) = 0.0003\n</pre> In\u00a0[14]: Copied! <pre>estimators = [('GBR',gbr),('LGBM',lgb),('XGB',xgb)]\nmix = VotingRegressor(estimators,verbose=True)\ncv_res = cross_val_score(mix,train_x,train_y,cv=cv,scoring='neg_mean_squared_error')\n</pre> estimators = [('GBR',gbr),('LGBM',lgb),('XGB',xgb)] mix = VotingRegressor(estimators,verbose=True) cv_res = cross_val_score(mix,train_x,train_y,cv=cv,scoring='neg_mean_squared_error') <pre>[Voting] ...................... (1 of 3) Processing GBR, total=   8.5s\n[LightGBM] [Info] Total Bins 1837\n[LightGBM] [Info] Number of data points in the train set: 11558, number of used features: 8\n[LightGBM] [Info] Start training from score 2.070339\n[Voting] ..................... (2 of 3) Processing LGBM, total=   0.2s\n[Voting] ...................... (3 of 3) Processing XGB, total=   0.1s\n[Voting] ...................... (1 of 3) Processing GBR, total=   8.3s\n[LightGBM] [Info] Total Bins 1838\n[LightGBM] [Info] Number of data points in the train set: 11558, number of used features: 8\n[LightGBM] [Info] Start training from score 2.067614\n[Voting] ..................... (2 of 3) Processing LGBM, total=   0.2s\n[Voting] ...................... (3 of 3) Processing XGB, total=   0.1s\n[Voting] ...................... (1 of 3) Processing GBR, total=   8.4s\n[LightGBM] [Info] Total Bins 1837\n[LightGBM] [Info] Number of data points in the train set: 11558, number of used features: 8\n[LightGBM] [Info] Start training from score 2.067731\n[Voting] ..................... (2 of 3) Processing LGBM, total=   0.2s\n[Voting] ...................... (3 of 3) Processing XGB, total=   0.1s\n[Voting] ...................... (1 of 3) Processing GBR, total=   8.4s\n[LightGBM] [Info] Total Bins 1838\n[LightGBM] [Info] Number of data points in the train set: 11559, number of used features: 8\n[LightGBM] [Info] Start training from score 2.072033\n[Voting] ..................... (2 of 3) Processing LGBM, total=   0.2s\n[Voting] ...................... (3 of 3) Processing XGB, total=   0.1s\n[Voting] ...................... (1 of 3) Processing GBR, total=   8.2s\n[LightGBM] [Info] Total Bins 1838\n[LightGBM] [Info] Number of data points in the train set: 11559, number of used features: 8\n[LightGBM] [Info] Start training from score 2.075613\n[Voting] ..................... (2 of 3) Processing LGBM, total=   0.2s\n[Voting] ...................... (3 of 3) Processing XGB, total=   0.1s\n</pre> In\u00a0[15]: Copied! <pre>tmp = (abs(cv_res)**0.5).mean()\nprint(f'Mean(RMSE) = {tmp:.4f}')\ntmp = (abs(cv_res)**0.5).var()\nprint(f'Var(RMSE) = {tmp:.4f}')\n</pre> tmp = (abs(cv_res)**0.5).mean() print(f'Mean(RMSE) = {tmp:.4f}') tmp = (abs(cv_res)**0.5).var() print(f'Var(RMSE) = {tmp:.4f}') <pre>Mean(RMSE) = 0.4682\nVar(RMSE) = 0.0003\n</pre> <p>\u7ed3\u679c\u6c47\u603b\u5982\u4e0b\uff1a</p> \u7b97\u6cd5 RMSE \u65b9\u5dee \u7528\u65f6 Baseline\uff08LGBM\uff09 0.4774 0.0002 0.3145 GBDT 0.5111 0.0004 44.1612 LGBM 0.5187 0.0002 1.3043 XGB 0.5025 0.0003 0.8010 Averaging 0.4682 0.0003 \u2014\u2014"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/D/","title":"\ud83c\udf61 \u6a21\u578b\u878d\u5408\u00b6","text":"<p>\u878d\u5408\u591a\u4e2a\u5f3a\u5b66\u4e60\u5668\uff0c\u4fee\u6b63\u5355\u4e00\u7b97\u6cd5\u5728\u504f\u5dee\u548c\u65b9\u5dee\u7684\u95ee\u9898\u3002</p> <p>\u5747\u503c\u6cd5\uff08Averaging\uff09\uff1a</p> <ul> <li>\u5c06\u6240\u6709\u7b97\u6cd5\u7ed3\u679c\u666e\u901a\u5e73\u5747\u3001\u52a0\u6743\u5e73\u5747\u3002</li> <li>\u591a\u4e2a\u5f3a\u5b66\u4e60\u5668\u76f8\u4e92\u72ec\u7acb\u65f6\uff0c\u5f3a\u5b66\u4e60\u5668\u5e73\u5747\u540e\u7684\u8bef\u5dee\u4e00\u5b9a\u5c0f\u4e8e\u5355\u4e00\u5b66\u4e60\u5668</li> <li>\u52a0\u6743\u548c\u666e\u901a\u5e73\u5747\u6548\u679c\u4e0d\u76f8\u4e0a\u4e0b</li> </ul> <p>\u6295\u7968\u6cd5\uff08Voting\uff09</p> <ul> <li>\u5305\u542b\u591a\u6570\u6295\u7968\u3001\u76f8\u5bf9\u591a\u6570\u6295\u7968\u3001\u52a0\u6743\u6295\u7968\u3001\u8f6f\u6295\u7968\uff0c\u4ec5\u9002\u7528\u5206\u7c7b</li> <li>\u7edd\u5bf9\u591a\u6570\u6295\u7968\u8981\u6c42\u6837\u672c\u7c7b\u522b\u5360\u6bd450%\u4ee5\u4e0a\uff0c\u5426\u5219\u8f93\u51fa\u7a7a\u503c</li> <li>\u76f8\u5bf9\u591a\u6570\u6295\u7968\u5c11\u6570\u670d\u4ece\u591a\u6570</li> <li>\u8f6f\u6295\u7968\u662f\u6839\u636e\u5f3a\u5b66\u4e60\u5668\u6982\u7387\u548c\u5c11\u6570\u670d\u4ece\u591a\u6570</li> </ul> <p>\u5806\u53e0\u6cd5\uff08Stacking\uff09</p> <ul> <li>\u5efa\u7acb\u4e00\u4e2a\u5143\u5b66\u4e60\u5668\u4e0e\u4e00\u4e2a\uff08\u6216\u591a\u4e2a\uff09\u4e2a\u4f53\u5b66\u4e60\u5668\uff0c\u5c06\u539f\u59cb\u6570\u636e\u5206\u4e3atrain\u548ctest\u3002\u4f7f\u7528train\u8bad\u7ec3\u4e2a\u4f53\u5b66\u4e60\u5668\uff0c\u4f7f\u7528\u4e2a\u4f53\u5b66\u4e60\u5668\u5728train\u8f93\u51fa\u7ed3\u679c\uff0c\u4f5c\u4e3a\u5143\u5b66\u4e60\u5668\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u6700\u7ec8\u7531\u5143\u5b66\u4e60\u5668\u5728test\u4e0a\u8f93\u51fa\u7ed3\u679c</li> <li>\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u4e2a\u4f53\u5b66\u4e60\u5668\uff0c\u4f1a\u6267\u884c\u4ea4\u53c9\u9a8c\u8bc1\u5f97\u5230\u591a\u7ec4\u8f93\u51fa\u7ed3\u679c\u4f5c\u4e3a\u5143\u5b66\u4e60\u5668\u7684\u8bad\u7ec3\u6570\u636e</li> </ul> <p>\u6df7\u5408\u6cd5\uff08Blending\uff09</p> <ul> <li>\u4e00\u79cd\u7279\u6b8a\u7684Stacking</li> <li>\u5efa\u7acb\u4e00\u4e2a\u5143\u5b66\u4e60\u5668\u4e0e\u4e00\u4e2a\uff08\u6216\u591a\u4e2a\uff09\u4e2a\u4f53\u5b66\u4e60\u5668\uff0c\u5c06\u539f\u59cb\u6570\u636e\u5206\u4e3atrain\u3001val\u3001test\uff0c\u4f7f\u7528train\u8bad\u7ec3\u4e2a\u4f53\u5b66\u4e60\u5668\uff0c\u5728val\u4e0a\u8f93\u51fa\u7ed3\u679c\uff0c\u4f5c\u4e3a\u5143\u5b66\u4e60\u5668\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u6700\u7ec8\u7531\u5143\u5b66\u4e60\u5668\u5728test\u4e0a\u8f93\u51fa\u7ed3\u679c</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/D/#gbdtlgbmxgboost","title":"\u58f9\u4e28GBDT\u3001LGBM\u3001XGBoost\u8bad\u7ec3\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/D/","title":"\u8d30\u4e28\u6a21\u578b\u878d\u5408\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/D/","title":"\u53c1\u4e28\u6a21\u578b\u8c03\u53c2\u540e\u878d\u5408\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/E/","title":"\ud83e\udd51 \u6a21\u578b\u5bf9\u6bd4","text":"In\u00a0[2]: Copied! <pre>from PyAqua.aqua_plots import plot_pearsonr\nimport matplotlib.pyplot as plt\n</pre> from PyAqua.aqua_plots import plot_pearsonr import matplotlib.pyplot as plt  In\u00a0[1]: Copied! <pre># \u5bfc\u5165\u52a0\u5229\u798f\u5c3c\u4e9a\u623f\u4ef7\u6570\u636e\nfrom sklearn.datasets import fetch_california_housing\nfrom sklearn.model_selection import train_test_split as TTS\n\ndata = fetch_california_housing()\nprint(data.keys())\n\n# \u5212\u5206\u6570\u636e\u96c6\nx = data['data']\ny = data['target']\ntrain_x, test_x, train_y, test_y = TTS(x, y, test_size=0.2, random_state=22)\n</pre> # \u5bfc\u5165\u52a0\u5229\u798f\u5c3c\u4e9a\u623f\u4ef7\u6570\u636e from sklearn.datasets import fetch_california_housing from sklearn.model_selection import train_test_split as TTS  data = fetch_california_housing() print(data.keys())  # \u5212\u5206\u6570\u636e\u96c6 x = data['data'] y = data['target'] train_x, test_x, train_y, test_y = TTS(x, y, test_size=0.2, random_state=22) <pre>dict_keys(['data', 'target', 'frame', 'target_names', 'feature_names', 'DESCR'])\n</pre> In\u00a0[3]: Copied! <pre>from sklearn.linear_model import LinearRegression, ARDRegression\n\nnames = ['\u591a\u5143\u7ebf\u6027\u56de\u5f52', '\u5cad\u56de\u5f52', '\u81ea\u9002\u5e94\u7a00\u758f\u56de\u5f52']\nregs = [LinearRegression(), ARDRegression()]\nfor name, reg in zip(names, regs):\n    reg.fit(train_x, train_y)\n\n    r2 = reg.score(test_x, test_y)\n    pred = reg.predict(test_x)\n    print(f'{name}: {r2:.4f}')\n    plot_pearsonr(test_y, pred, title=f'{name} R2 = {r2:.4f}')\n    plt.show()\n</pre> from sklearn.linear_model import LinearRegression, ARDRegression  names = ['\u591a\u5143\u7ebf\u6027\u56de\u5f52', '\u5cad\u56de\u5f52', '\u81ea\u9002\u5e94\u7a00\u758f\u56de\u5f52'] regs = [LinearRegression(), ARDRegression()] for name, reg in zip(names, regs):     reg.fit(train_x, train_y)      r2 = reg.score(test_x, test_y)     pred = reg.predict(test_x)     print(f'{name}: {r2:.4f}')     plot_pearsonr(test_y, pred, title=f'{name} R2 = {r2:.4f}')     plt.show() <pre>\u591a\u5143\u7ebf\u6027\u56de\u5f52: 0.6094\n</pre> <pre>\u5cad\u56de\u5f52: 0.5969\n</pre> In\u00a0[4]: Copied! <pre>from sklearn.tree import DecisionTreeRegressor, ExtraTreeRegressor\n\nnames = ['\u51b3\u7b56\u6811\u56de\u5f52', '\u6781\u7aef\u6811\u56de\u5f52']\nregs = [DecisionTreeRegressor(), ExtraTreeRegressor()]\nfor name, reg in zip(names, regs):\n    reg.fit(train_x, train_y)\n    r2 = reg.score(test_x, test_y)\n    pred = reg.predict(test_x)\n\n    print(f'{name}: {r2:.4f}')\n    plot_pearsonr(test_y, pred, title=f'{name} R2 = {r2:.4f}')\n    plt.show()\n</pre> from sklearn.tree import DecisionTreeRegressor, ExtraTreeRegressor  names = ['\u51b3\u7b56\u6811\u56de\u5f52', '\u6781\u7aef\u6811\u56de\u5f52'] regs = [DecisionTreeRegressor(), ExtraTreeRegressor()] for name, reg in zip(names, regs):     reg.fit(train_x, train_y)     r2 = reg.score(test_x, test_y)     pred = reg.predict(test_x)      print(f'{name}: {r2:.4f}')     plot_pearsonr(test_y, pred, title=f'{name} R2 = {r2:.4f}')     plt.show() <pre>\u51b3\u7b56\u6811\u56de\u5f52: 0.6129\n</pre> <pre>\u6781\u7aef\u6811\u56de\u5f52: 0.5803\n</pre> In\u00a0[5]: Copied! <pre>from sklearn.svm import SVR\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.neural_network import MLPRegressor\n\nregs = [SVR(), KNeighborsRegressor(), MLPRegressor()]\nnames = ['SVR\u56de\u5f52', 'KNN\u56de\u5f52', '\u591a\u5c42\u611f\u77e5\u673a\u56de\u5f52']\nfor name, reg in zip(names, regs):\n    reg.fit(train_x, train_y)\n    r2 = reg.score(test_x, test_y)\n    pred = reg.predict(test_x)\n\n    print(f'{name}: {r2:.4f}')\n    plot_pearsonr(test_y, pred, title=f'{name} R2 = {r2:.4f}')\n    plt.show()\n</pre> from sklearn.svm import SVR from sklearn.neighbors import KNeighborsRegressor from sklearn.neural_network import MLPRegressor  regs = [SVR(), KNeighborsRegressor(), MLPRegressor()] names = ['SVR\u56de\u5f52', 'KNN\u56de\u5f52', '\u591a\u5c42\u611f\u77e5\u673a\u56de\u5f52'] for name, reg in zip(names, regs):     reg.fit(train_x, train_y)     r2 = reg.score(test_x, test_y)     pred = reg.predict(test_x)      print(f'{name}: {r2:.4f}')     plot_pearsonr(test_y, pred, title=f'{name} R2 = {r2:.4f}')     plt.show() <pre>SVR\u56de\u5f52: -0.0258\n</pre> <pre>KNN\u56de\u5f52: 0.1549\n</pre> <pre>\u591a\u5c42\u611f\u77e5\u673a\u56de\u5f52: -3.1114\n</pre> In\u00a0[\u00a0]: Copied! <pre>from sklearn.ensemble import GradientBoostingRegressor, HistGradientBoostingRegressor, AdaBoostRegressor\nfrom xgboost import XGBRegressor\nfrom lightgbm import LGBMRegressor\nfrom catboost import CatBoostRegressor\n\nregs = [AdaBoostRegressor(n_estimators=100, random_state=22),\n        GradientBoostingRegressor(n_estimators=100, random_state=22),\n        XGBRegressor(n_estimators=100, random_state=22),\n        LGBMRegressor(n_estimators=100, random_state=22),\n        HistGradientBoostingRegressor(random_state=22),\n        CatBoostRegressor(n_estimators=100, random_state=22)]\nnames = ['AdaBoost\u56de\u5f52', 'GBR\u56de\u5f52', 'XGBoost\u56de\u5f52', 'LightGBM\u56de\u5f52', '\u76f4\u65b9\u56fe\u68af\u5ea6\u63d0\u5347\u56de\u5f52', 'CatBoost\u56de\u5f52']\nfor name, reg in zip(names, regs):\n    reg.fit(train_x, train_y)\n    r2 = reg.score(test_x, test_y)\n    pred = reg.predict(test_x)\n\n    print(f'{name}: {r2:.4f}')\n    plot_pearsonr(test_y, pred, title=f'{name} R2 = {r2:.4f}')\n    plt.show()\n</pre> from sklearn.ensemble import GradientBoostingRegressor, HistGradientBoostingRegressor, AdaBoostRegressor from xgboost import XGBRegressor from lightgbm import LGBMRegressor from catboost import CatBoostRegressor  regs = [AdaBoostRegressor(n_estimators=100, random_state=22),         GradientBoostingRegressor(n_estimators=100, random_state=22),         XGBRegressor(n_estimators=100, random_state=22),         LGBMRegressor(n_estimators=100, random_state=22),         HistGradientBoostingRegressor(random_state=22),         CatBoostRegressor(n_estimators=100, random_state=22)] names = ['AdaBoost\u56de\u5f52', 'GBR\u56de\u5f52', 'XGBoost\u56de\u5f52', 'LightGBM\u56de\u5f52', '\u76f4\u65b9\u56fe\u68af\u5ea6\u63d0\u5347\u56de\u5f52', 'CatBoost\u56de\u5f52'] for name, reg in zip(names, regs):     reg.fit(train_x, train_y)     r2 = reg.score(test_x, test_y)     pred = reg.predict(test_x)      print(f'{name}: {r2:.4f}')     plot_pearsonr(test_y, pred, title=f'{name} R2 = {r2:.4f}')     plt.show() In\u00a0[8]: Copied! <pre>from sklearn.ensemble import RandomForestRegressor, ExtraTreesRegressor\n\nregs = [RandomForestRegressor(n_estimators=100, random_state=22),\n        ExtraTreesRegressor(n_estimators=100, random_state=22)]\nnames = ['\u968f\u673a\u68ee\u6797\u56de\u5f52', '\u6781\u7aef\u68ee\u6797\u56de\u5f52']\nfor name, reg in zip(names, regs):\n    reg.fit(train_x, train_y)\n    r2 = reg.score(test_x, test_y)\n    pred = reg.predict(test_x)\n\n    print(f'{name}: {r2:.4f}')\n    plot_pearsonr(test_y, pred, title=f'{name} R2 = {r2:.4f}')\n    plt.show()\n</pre> from sklearn.ensemble import RandomForestRegressor, ExtraTreesRegressor  regs = [RandomForestRegressor(n_estimators=100, random_state=22),         ExtraTreesRegressor(n_estimators=100, random_state=22)] names = ['\u968f\u673a\u68ee\u6797\u56de\u5f52', '\u6781\u7aef\u68ee\u6797\u56de\u5f52'] for name, reg in zip(names, regs):     reg.fit(train_x, train_y)     r2 = reg.score(test_x, test_y)     pred = reg.predict(test_x)      print(f'{name}: {r2:.4f}')     plot_pearsonr(test_y, pred, title=f'{name} R2 = {r2:.4f}')     plt.show() <pre>\u968f\u673a\u68ee\u6797\u56de\u5f52: 0.8135\n</pre> <pre>\u6781\u7aef\u68ee\u6797\u56de\u5f52: 0.8163\n</pre> <p>\u6c47\u603b\uff08\u6a21\u578b\u5747\u672a\u8c03\u53c2\uff0c\u7ed3\u679c\u7684\u610f\u4e49\u6709\u9650\uff09\uff1a</p> \u6a21\u578b R2 \u591a\u5143\u7ebf\u6027\u56de\u5f52 0.6094 \u5cad\u56de\u5f52 0.5969 \u51b3\u7b56\u6811\u56de\u5f52 0.6129 \u6781\u7aef\u6811\u56de\u5f52 0.5803 SVR\u56de\u5f52 -0.0258 KNN\u56de\u5f52 0.1549 \u591a\u5c42\u611f\u77e5\u673a\u56de\u5f52 -3.1114 AdaBoost\u56de\u5f52 0.5098 GBR\u56de\u5f52 0.7892 XGBoost\u56de\u5f52 0.8347 LightGBM\u56de\u5f52 0.8387 \u76f4\u65b9\u56fe\u68af\u5ea6\u63d0\u5347\u56de\u5f52 0.8371 CatBoost\u56de\u5f52 0.8356 \u968f\u673a\u68ee\u6797\u56de\u5f52 0.8135 \u6781\u7aef\u68ee\u6797\u56de\u5f52 0.8163 In\u00a0[9]: Copied! <pre>def plot_learning_curve(estimator, title, train_x, train_y,\n                        ylim=None,\n                        cv=None,\n                        n_jobs=None,\n                        save_path=None):\n    from sklearn.model_selection import learning_curve\n    import matplotlib.pyplot as plt\n    import numpy as np\n    train_sizes, train_scores, test_scores = learning_curve(estimator,\n                                                            train_x,\n                                                            train_y,\n                                                            cv=cv,\n                                                            random_state=22,\n                                                            n_jobs=n_jobs)\n\n    figure, ax = plt.subplots(figsize=(7.05, 3), constrained_layout=True)\n\n    ax.set_title(title)\n    if ylim is not None:\n        ax.set_ylim(*ylim)\n    ax.set_xlabel('Training Examples')\n    ax.set_ylabel('Score')\n    ax.plot(train_sizes, np.mean(train_scores, axis=1), 'o-', color='r', label='Training Score')\n    ax.plot(train_sizes, np.mean(test_scores, axis=1), 'o-', color='g', label='Test Score')\n    ax.legend(loc='upper right')\n    if save_path is None:\n        return ax\n    else:\n        plt.savefig(f'{save_path}/{title}.webp')\n        plt.close()\n</pre> def plot_learning_curve(estimator, title, train_x, train_y,                         ylim=None,                         cv=None,                         n_jobs=None,                         save_path=None):     from sklearn.model_selection import learning_curve     import matplotlib.pyplot as plt     import numpy as np     train_sizes, train_scores, test_scores = learning_curve(estimator,                                                             train_x,                                                             train_y,                                                             cv=cv,                                                             random_state=22,                                                             n_jobs=n_jobs)      figure, ax = plt.subplots(figsize=(7.05, 3), constrained_layout=True)      ax.set_title(title)     if ylim is not None:         ax.set_ylim(*ylim)     ax.set_xlabel('Training Examples')     ax.set_ylabel('Score')     ax.plot(train_sizes, np.mean(train_scores, axis=1), 'o-', color='r', label='Training Score')     ax.plot(train_sizes, np.mean(test_scores, axis=1), 'o-', color='g', label='Test Score')     ax.legend(loc='upper right')     if save_path is None:         return ax     else:         plt.savefig(f'{save_path}/{title}.webp')         plt.close() In\u00a0[10]: Copied! <pre>from sklearn.model_selection import KFold, cross_val_score\nfrom sklearn.ensemble import HistGradientBoostingRegressor\n</pre> from sklearn.model_selection import KFold, cross_val_score from sklearn.ensemble import HistGradientBoostingRegressor In\u00a0[11]: Copied! <pre>cv = KFold(n_splits=5, shuffle=True, random_state=22)\nax = plot_learning_curve(HistGradientBoostingRegressor(random_state=22), 'HGBoost', train_x, train_y, cv=cv)\nplt.show()\n</pre> cv = KFold(n_splits=5, shuffle=True, random_state=22) ax = plot_learning_curve(HistGradientBoostingRegressor(random_state=22), 'HGBoost', train_x, train_y, cv=cv) plt.show() <p>\u8861\u91cf\u6a21\u578b\u5728\u672a\u77e5\u6570\u636e\u4e0a\u51c6\u786e\u7387\u7684\u6307\u6807\uff0c\u53eb\u6cdb\u5316\u8bef\u5dee\uff08Genelization Error\uff09\uff0c\u7531\u65b9\u5dee\uff08var\uff09\u3001\u504f\u5dee\uff08bais\uff09\u548c\u566a\u58f0\uff08epslon\uff09\u51b3\u5b9a $$ E(f;D)=bias^2+var+\\epsilon^2 $$</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/E/","title":"\ud83e\udd51 \u6a21\u578b\u5bf9\u6bd4\u00b6","text":"<p>\u5bf9\u6bd4\u57fa\u7840\u673a\u5668\u5b66\u4e60\u6a21\u578b\uff0c\u5305\u62ec\uff1a</p> <ol> <li>\u7ebf\u6027\u6a21\u578b\uff1a\u591a\u5143\u7ebf\u6027\u56de\u5f52\u3001\u5cad\u56de\u5f52\u3001\u81ea\u9002\u5e94\u7a00\u758f\u56de\u5f52</li> <li>\u6811\u6a21\u578b\uff1a\u51b3\u7b56\u6811\u56de\u5f52\u3001\u6781\u7aef\u6811\u56de\u5f52</li> <li>SVM\u3001KNN\u3001MLP</li> <li>\u96c6\u6210\u5b66\u4e60\uff1a\u968f\u673a\u68ee\u6797\u56de\u5f52\u3001\u6781\u7aef\u68ee\u6797\u56de\u5f52\u3001Adaboost\u3001GBDT\u3001XGBoost\u3001LightGBM\u3001\u76f4\u65b9\u56fe\u68af\u5ea6\u63d0\u5347\u56de\u5f52\u3001CatBoost\u56de\u5f52</li> </ol>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/E/","title":"\u58f9\u4e28\u6a21\u578b\u5bf9\u6bd4\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/E/#1","title":"1. \u7ebf\u6027\u6a21\u578b\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/E/#2","title":"2. \u6811\u6a21\u578b\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/E/#3-svrknnmlp","title":"3. SVR\u3001KNN\u3001MLP\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/E/#4-boosting","title":"4. \u96c6\u6210\u5b66\u4e60-Boosting\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/E/#5-bagging","title":"5. \u96c6\u6210\u5b66\u4e60-Bagging\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/4%EF%B8%8F%E2%83%A3%20%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/E/","title":"\u8d30\u4e28\u67e5\u770b\u5b66\u4e60\u66f2\u7ebf\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/5%EF%B8%8F%E2%83%A3%20%E8%B6%85%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96/","title":"\ud83c\udf81 \u673a\u5668\u5b66\u4e60/5\ufe0f\u20e3 \u8d85\u53c2\u6570\u4f18\u5316","text":"<ul> <li> <p>A.ipynb</p> <p> Getting started</p> </li> <li> <p>B.ipynb</p> <p> Getting started</p> </li> <li> <p>C.ipynb</p> <p> Getting started</p> </li> <li> <p>D.ipynb</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/5%EF%B8%8F%E2%83%A3%20%E8%B6%85%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96/A/","title":"\ud83e\uddba \u968f\u673a\u7f51\u683c\u641c\u7d22","text":"In\u00a0[1]: Copied! <pre># \u5bfc\u5165\u52a0\u5229\u798f\u5c3c\u4e9a\u623f\u4ef7\u6570\u636e\nfrom sklearn.datasets import fetch_california_housing\nfrom sklearn.model_selection import train_test_split\n\ndata = fetch_california_housing()\nprint(data.keys())\n\n# \u5212\u5206\u6570\u636e\u96c6\nx = data['data']\ny = data['target']\ntrain_x, test_x, train_y, test_y = train_test_split(x, y, test_size=0.2, random_state=22)\n</pre> # \u5bfc\u5165\u52a0\u5229\u798f\u5c3c\u4e9a\u623f\u4ef7\u6570\u636e from sklearn.datasets import fetch_california_housing from sklearn.model_selection import train_test_split  data = fetch_california_housing() print(data.keys())  # \u5212\u5206\u6570\u636e\u96c6 x = data['data'] y = data['target'] train_x, test_x, train_y, test_y = train_test_split(x, y, test_size=0.2, random_state=22) <pre>dict_keys(['data', 'target', 'frame', 'target_names', 'feature_names', 'DESCR'])\n</pre> In\u00a0[2]: Copied! <pre>import time\nimport numpy as np\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import KFold, RandomizedSearchCV\n</pre> import time import numpy as np from sklearn.ensemble import RandomForestRegressor from sklearn.model_selection import KFold, RandomizedSearchCV In\u00a0[3]: Copied! <pre>def count_space(param_ranges):\n    \"\"\"\u8ba1\u7b97\u5168\u57df\u53c2\u6570\u7a7a\u95f4\u5927\u5c0f\"\"\"\n    space_size = 1\n    for param_range in param_ranges.values():\n        space_size *= len(param_range)\n    return space_size\n</pre> def count_space(param_ranges):     \"\"\"\u8ba1\u7b97\u5168\u57df\u53c2\u6570\u7a7a\u95f4\u5927\u5c0f\"\"\"     space_size = 1     for param_range in param_ranges.values():         space_size *= len(param_range)     return space_size In\u00a0[4]: Copied! <pre># \u521b\u9020\u53c2\u6570\u7a7a\u95f4\nparam_grid_sample = {'criterion': ['squared_error', 'poisson'],\n                     'n_estimators': [*range(20, 100, 5)],\n                     'max_depth': [*range(10, 25, 2)],\n                     'max_features': ['log2', 'sqrt', 16, 32, 64, 'auto'],\n                     'min_impurity_decrease': [*np.arange(0, 5, 10)]}\n\n# \u5efa\u7acb\u56de\u5f52\u5668\u3001\u4ea4\u53c9\u9a8c\u8bc1\nreg = RandomForestRegressor(random_state=22, verbose=True, n_jobs=-1)\ncv = KFold(n_splits=5, shuffle=True, random_state=22)\n</pre> # \u521b\u9020\u53c2\u6570\u7a7a\u95f4 param_grid_sample = {'criterion': ['squared_error', 'poisson'],                      'n_estimators': [*range(20, 100, 5)],                      'max_depth': [*range(10, 25, 2)],                      'max_features': ['log2', 'sqrt', 16, 32, 64, 'auto'],                      'min_impurity_decrease': [*np.arange(0, 5, 10)]}  # \u5efa\u7acb\u56de\u5f52\u5668\u3001\u4ea4\u53c9\u9a8c\u8bc1 reg = RandomForestRegressor(random_state=22, verbose=True, n_jobs=-1) cv = KFold(n_splits=5, shuffle=True, random_state=22) In\u00a0[5]: Copied! <pre># \u8ba1\u7b97\u5168\u57df\u53c2\u6570\u7a7a\u95f4\u5927\u5c0f\uff0c\u662f\u80fd\u591f\u62bd\u6837\u7684\u6700\u5927\u503c\ncount_space(param_grid_sample)\n</pre> # \u8ba1\u7b97\u5168\u57df\u53c2\u6570\u7a7a\u95f4\u5927\u5c0f\uff0c\u662f\u80fd\u591f\u62bd\u6837\u7684\u6700\u5927\u503c count_space(param_grid_sample) Out[5]: <pre>1536</pre> In\u00a0[6]: Copied! <pre># \u521b\u5efa\u968f\u673a\u641c\u7d22\u8bc4\u4f30\u5668\nsearch = RandomizedSearchCV(estimator=reg,\n                            param_distributions=param_grid_sample,\n                            n_iter=200,  # \u5b50\u7a7a\u95f4\u5927\u5c0f\u8bbe\u7f6e\u4e3a\u5168\u57df\u4e00\u534a\u5de6\u53f3\n                            scoring='neg_mean_squared_error',\n                            verbose=True,\n                            cv=cv,\n                            random_state=22,\n                            n_jobs=-1)\n</pre> # \u521b\u5efa\u968f\u673a\u641c\u7d22\u8bc4\u4f30\u5668 search = RandomizedSearchCV(estimator=reg,                             param_distributions=param_grid_sample,                             n_iter=200,  # \u5b50\u7a7a\u95f4\u5927\u5c0f\u8bbe\u7f6e\u4e3a\u5168\u57df\u4e00\u534a\u5de6\u53f3                             scoring='neg_mean_squared_error',                             verbose=True,                             cv=cv,                             random_state=22,                             n_jobs=-1) In\u00a0[\u00a0]: Copied! <pre># \u8bad\u7ec3\u968f\u673a\u641c\u7d22\u8bc4\u4f30\u5668\nstart = time.time()\nsearch.fit(train_x, train_y)\nprint(time.time() - start)\n</pre> # \u8bad\u7ec3\u968f\u673a\u641c\u7d22\u8bc4\u4f30\u5668 start = time.time() search.fit(train_x, train_y) print(time.time() - start) In\u00a0[8]: Copied! <pre># \u67e5\u770b\u6700\u4f18\u7684\u53c2\u6570\nprint(f'\u6700\u4f18\u53c2\u6570: {search.best_params_}\\n'\n      f'\u6700\u4f18\u7b97\u6cd5\u7ed3\u679c(RMSE): {abs(search.best_score_) ** 0.5}')\n</pre> # \u67e5\u770b\u6700\u4f18\u7684\u53c2\u6570 print(f'\u6700\u4f18\u53c2\u6570: {search.best_params_}\\n'       f'\u6700\u4f18\u7b97\u6cd5\u7ed3\u679c(RMSE): {abs(search.best_score_) ** 0.5}') <pre>\u6700\u4f18\u53c2\u6570: {'n_estimators': 90, 'min_impurity_decrease': 0, 'max_features': 'log2', 'max_depth': 18, 'criterion': 'squared_error'}\n\u6700\u4f18\u7b97\u6cd5\u7ed3\u679c(RMSE): 0.4991504254535447\n</pre> In\u00a0[9]: Copied! <pre># \u6839\u636e\u6700\u4f18\u53c2\u6570\u91cd\u5efa\u6a21\u578b\nbest_reg = RandomForestRegressor(n_estimators=85, max_depth=24, max_features='log2', min_impurity_decrease=0,\n                                 criterion='squared_error')\nbest_reg.fit(train_x, train_y)\nbest_reg.score(test_x, test_y)\n</pre> # \u6839\u636e\u6700\u4f18\u53c2\u6570\u91cd\u5efa\u6a21\u578b best_reg = RandomForestRegressor(n_estimators=85, max_depth=24, max_features='log2', min_impurity_decrease=0,                                  criterion='squared_error') best_reg.fit(train_x, train_y) best_reg.score(test_x, test_y) Out[9]: <pre>0.8223297122582989</pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/5%EF%B8%8F%E2%83%A3%20%E8%B6%85%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96/A/","title":"\ud83e\uddba \u968f\u673a\u7f51\u683c\u641c\u7d22\u00b6","text":"<p>sklearn\u4e2d\u7f51\u683c\u641c\u7d22\u4f18\u5316\u65b9\u6cd5\u5305\u62ec\u4e24\u7c7b\uff1a</p> <ol> <li>\u8c03\u6574\u641c\u7d22\u7a7a\u95f4\u3002</li> <li>\u8c03\u6574\u6bcf\u6b21\u8bad\u7ec3\u7684\u6570\u636e</li> </ol> <p>\u8c03\u6574\u641c\u7d22\u7a7a\u95f4\uff1a\u6311\u9009\u51fa\u90e8\u5206\u53c2\u6570\u7ec4\u5408\uff0c\u6784\u9020\u53c2\u6570\u5b50\u7a7a\u95f4\uff0c\u5e76\u53ea\u5728\u5b50\u7a7a\u95f4\u4e2d\u641c\u7d22\u3002\u5982<code>n_estimators</code>5\u4e2a\u53c2\u6570\u4e0e<code>max_depth</code>6\u4e2a\u53c2\u6570\u6784\u6210\u76845\u00d76=30\u7684\u7a7a\u95f4\u4e2d\u968f\u673a\u9009\u62e9\u53c2\u6570\u7ec4\u5408\u5b50\u7a7a\u95f4\uff0c\u5e76\u53ea\u5728\u8fd9\u4e9b\u4e0a\u9762\u8fdb\u884c\u641c\u7d22\u3002\u76f8\u540c\u5168\u57df\u7a7a\u95f4\u4e0b\uff0c\u53ef\u4ee5\u66f4\u5feb\uff1b\u76f8\u540c\u8bad\u7ec3\u6b21\u6570\u4e0b\uff0c\u53ef\u4ee5\u8986\u76d6\u66f4\u5927\u7a7a\u95f4\uff1b\u5f97\u5230\u7684\u6700\u5c0f\u635f\u5931\u4e0e\u7f51\u683c\u641c\u7d22\u7684\u6700\u5c0f\u635f\u5931\u5f88\u63a5\u8fd1</p> <p><code>sklearn.model_selection.RandomizedSearchCV()</code></p> Name Description <code>estimator</code> \u8bc4\u4f30\u5668\u3001\u8c03\u53c2\u5bf9\u8c61 <code>param_distributions</code> \u5168\u57df\u53c2\u6570\u7a7a\u95f4\uff0c<code>dict</code>\u3001<code>list</code> of <code>dict</code> <code>n_iter</code> \u8fed\u4ee3\u6b21\u6570 <code>scoring</code> \u8bc4\u4ef7\u6307\u6807\uff0c\u652f\u6301\u591a\u4e2a\u8f93\u51fa <code>n_jobs</code> \u7ebf\u7a0b\u6570 <code>refit</code> \u6311\u9009\u8bc4\u4f30\u6307\u6807\u548c\u6700\u4f73\u53c2\u6570\uff0c\u5728\u5b8c\u6574\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3 <code>cv</code> \u4ea4\u53c9\u9a8c\u8bc1\u6298\u6570 <code>verbose</code> \u8f93\u51fa\u5de5\u4f5c\u65e5\u5fd7 <code>pre_dispatch</code> \u591a\u4efb\u52a1\u5e76\u884c\u65f6\u4efb\u52a1\u5212\u5206\u6570\u91cf <code>random_state</code> \u968f\u673a\u6570\u79cd\u5b50 <code>error_score</code> \u7f51\u683c\u641c\u7d22\u62a5\u9519\u65f6\u8fd4\u56de\u7ed3\u679c\uff0c\u9009\u62e9<code>raise</code>\u65f6\u76f4\u63a5\u62a5\u9519\u5e76\u4e2d\u65ad\u8bad\u7ec3\u8fc7\u7a0b\uff0c\u5176\u4ed6\u60c5\u51b5\u4f1a\u663e\u793a\u8b66\u544a\u4fe1\u606f\u540e\u7ee7\u7eed\u5b8c\u6210\u8bad\u7ec3 <code>return_train_score</code> \u4ea4\u53c9\u9a8c\u8bc1\u662f\u5426\u663e\u793a\u8bad\u7ec3\u96c6\u4e2d\u53c2\u6570\u5f97\u5206"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/5%EF%B8%8F%E2%83%A3%20%E8%B6%85%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96/B/","title":"\ud83e\udd90 \u5bf9\u534a\u7f51\u683c\u641c\u7d22HalvingSearchCV","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/5%EF%B8%8F%E2%83%A3%20%E8%B6%85%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96/B/#halvingsearchcv","title":"\ud83e\udd90 \u5bf9\u534a\u7f51\u683c\u641c\u7d22HalvingSearchCV\u00b6","text":"<p>\u51b3\u5b9a\u7f51\u683c\u641c\u7d22\u8fd0\u7b97\u901f\u5ea6\u7684\u56e0\u5b50\uff1a</p> <ol> <li>\u53c2\u6570\u7a7a\u95f4\u5927\u5c0f</li> <li>\u6570\u636e\u91cf\u5927\u5c0f</li> </ol> <p>sklearn\u5448\u73b0\u4e86\u4e24\u79cd\u4f18\u5316\u65b9\u5f0f\uff1a\u8c03\u6574\u641c\u7d22\u7a7a\u95f4\uff08\u968f\u673a\u7f51\u683c\u641c\u7d22\uff09\u548c\u8c03\u6574\u6bcf\u6b21\u8bad\u7ec3\u6570\u636e\uff08\u5bf9\u534a\u7f51\u683c\u641c\u7d22\uff09</p> <p>\u4f9d\u636e\uff1a\u4efb\u610f\u5b50\u96c6\u7684\u5206\u5e03\u90fd\u4e0e\u5168\u96c6D\u7684\u5206\u5e03\u7c7b\u4f3c\u65f6\uff0c\u53c2\u6570\u5728\u5b50\u96c6\u548c\u5168\u96c6\u4e0a\u7684\u8868\u73b0\u4e00\u81f4\u3002</p> <p>\u56e0\u6b64\uff0c\u9700\u8981\u6743\u8861\u5b50\u96c6\u5927\u5c0f\u548c\u8ba1\u7b97\u6548\u7387\u7684\u95ee\u9898\u3002\u5bf9\u534a\u7f51\u683c\u641c\u7d22\u7684\u6d41\u7a0b\uff1a</p> <ol> <li>\u4ece\u5168\u96c6\u4e2d\u65e0\u653e\u56de\u968f\u673a\u62bd\u6837\u4e00\u4e2a\u5f88\u5c0f\u7684\u5b50\u96c6d0\uff0c\u5e76\u9a8c\u8bc1\u5168\u90e8\u7ec4\u5408\u7684\u6027\u80fd\uff0c\u6839\u636ed0\u4e0a\u7684\u9a8c\u8bc1\u7ed3\u679c\u6dd8\u6c70\u8bc4\u5206\u6392\u5728\u540e1/2\u7684\u53c2\u6570\u7ec4\u5408</li> <li>\u4ece\u5168\u96c6\u4e2d\u65e0\u653e\u56de\u968f\u673a\u62bd\u6837\u4e00\u4e2a\u6bd4d0\u5927\u4e00\u500d\u7684\u5b50\u96c6d1\uff0c\u5e76\u5728d1\u4e0a\u9a8c\u8bc1\u5269\u4f59\u4e00\u534a\u7684\u53c2\u6570\u7ec4\u5408\uff0c\u518d\u6dd8\u6c70\u540e1/2</li> <li>\u518d\u4ece\u5168\u96c6\u4e2d\u65e0\u653e\u56de\u62bd\u6837\u4e00\u4e2a\u6bd4d1\u5927\u4e00\u500d\u7684\u5b50\u96c6d2\uff0c\u5728d2\u4e0a\u9a8c\u8bc1\u5269\u4e0b1/4\u7684\u53c2\u6570\u7ec4\u5408\uff0c\u518d\u5c06\u540e1/2\u6dd8\u6c70</li> <li>\u6301\u7eed\u5faa\u73af</li> </ol> \u8fed\u4ee3\u6b21\u6570 \u5b50\u96c6\u6837\u672c\u91cf \u53c2\u6570\u7ec4\u5408\u6570 1 S C 2 2S 1/2C 3 4S 1/4C 4 8S 1/8C ... \u5f53C\u65e0\u6cd5\u9664\u5c3d\u65f6\uff0c\u5411\u4e0a\u53d6\u6574 <p>\u5f53\u53c2\u6570\u7ec4\u5408\u53ea\u5269\u4e0b\u4e00\u7ec4\u3001\u6216\u5269\u4f59\u53ef\u7528\u6570\u636e\u4e0d\u8db3\uff0c\u5faa\u73af\u505c\u6b62\u3002</p> <p>\u5c40\u9650\u6027\uff1a</p> <ol> <li>\u5b50\u96c6\u8d8a\u5927\uff0c\u548c\u5168\u96c6\u8d8a\u76f8\u4f3c\uff0c\u4f46\u5728\u5f00\u59cb\u65f6\u6dd8\u6c70\u4e86\u4e00\u534a\u7684\u53c2\u6570\u3002</li> <li>\u4e0d\u653e\u56de\u7684\u65b9\u5f0f\uff0c\u9700\u8981\u7684\u6837\u672c\u91cf\u5fc5\u987b\u5f88\u5927</li> </ol> <p>\u51fd\u6570\uff1a</p> <pre>from sklearn.model_selection import HalvingGridSearchCV\n</pre> Name Description <code>estimator</code> \u8bc4\u4f30\u5668\u3001\u8c03\u53c2\u5bf9\u8c61 <code>param_grid</code> \u53c2\u6570\u7a7a\u95f4\uff0c<code>dict</code>\u3001<code>list</code> of <code>dict</code> <code>factor</code> \u6bcf\u8f6e\u8fed\u4ee3\u4e2d\u65b0\u589e\u6837\u672c\u91cf\u7684\u6bd4\u4f8b\uff0c\u4e5f\u662f\u6bcf\u8f6e\u8fed\u4ee3\u540e\u5269\u4e0b\u7684\u53c2\u6570\u7ec4\u5408\u6bd4\u4f8b\u3002\u5982<code>factor=2</code>\uff0c\u4e0b\u4e00\u8f6e\u662f\u4e0a\u4e00\u8f6e\u6837\u672c\u91cf\u7684\u4e24\u500d <code>resource</code> \u8bbe\u7f6e\u6bcf\u8f6e\u8fed\u4ee3\u4e2d\u589e\u52a0\u7684\u9a8c\u8bc1\u8d44\u6e90\u7684\u7c7b\u578b <code>max_resources</code> \u4e00\u6b21\u8fed\u4ee3\u4e2d\uff0c\u5141\u8bb8\u88ab\u7528\u6765\u9a8c\u8bc1\u4efb\u610f\u53c2\u6570\u7ec4\u5408\u7684\u6700\u5927\u6837\u672c\u91cf <code>min_resources</code> \u9996\u6b21\u8fed\u4ee3\u65f6\uff0c\u7528\u4e8e\u9a8c\u8bc1\u53c2\u6570\u7ec4\u5408\u7684\u6837\u672c\u91cf <code>aggressive_elimination</code> \u662f\u5426\u4ee5\u5168\u90e8\u6570\u636e\u88ab\u4f7f\u7528\u5b8c\u4f5c\u4e3a\u505c\u6b62\u641c\u7d22\u7684\u6307\u6807\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u5219\u91c7\u53d6\u63aa\u65bd <code>cv</code> \u4ea4\u53c9\u9a8c\u8bc1\u6298\u6570 <code>scoring</code> \u8bc4\u4ef7\u6307\u6807\uff0c\u652f\u6301\u591a\u4e2a\u8f93\u51fa <code>refit</code> \u6311\u9009\u8bc4\u4f30\u6307\u6807\u548c\u6700\u4f73\u53c2\u6570\uff0c\u5728\u5b8c\u6574\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3 <code>error_score</code> \u7f51\u683c\u641c\u7d22\u62a5\u9519\u65f6\u8fd4\u56de\u7ed3\u679c\uff0c\u9009\u62e9<code>raise</code>\u65f6\u76f4\u63a5\u62a5\u9519\u5e76\u4e2d\u65ad\u8bad\u7ec3\u8fc7\u7a0b\uff0c\u5176\u4ed6\u60c5\u51b5\u4f1a\u663e\u793a\u8b66\u544a\u4fe1\u606f\u540e\u7ee7\u7eed\u5b8c\u6210\u8bad\u7ec3 <code>return_train_score</code> \u4ea4\u53c9\u9a8c\u8bc1\u662f\u5426\u663e\u793a\u8bad\u7ec3\u96c6\u4e2d\u53c2\u6570\u5f97\u5206 <code>random_state</code> \u968f\u673a\u6570\u79cd\u5b50 <code>n_jobs</code> \u7ebf\u7a0b\u6570 <code>verbose</code> \u8f93\u51fa\u5de5\u4f5c\u65e5\u5fd7"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/5%EF%B8%8F%E2%83%A3%20%E8%B6%85%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96/C/","title":"\ud83e\udd8a \u8d1d\u53f6\u65af\u4f18\u5316","text":"<p>\u4e3b\u8981\u6d41\u7a0b\uff1a</p> <p>\u7b2c\u4e00\u6b65\uff0c\u5b9a\u4e49\u76ee\u6807\u51fd\u6570\u7684\u6a21\u677f</p> <pre>def objective():\n    # \u8bc4\u4f30\u5668\n    reg = RandomForestRegressor()\n    \n    # \u4ea4\u53c9\u9a8c\u8bc1\n    cv = KFold()\n    result = cross_validate(reg,cv)\n    \n    # \u4ea4\u53c9\u9a8c\u8bc1\u7ed3\u679c\n    loss = result['test_rmse']    \n    \n    return loss\n</pre> <ol> <li><p>\u76ee\u6807\u51fd\u6570\u7684\u8f93\u5165\u5fc5\u987b\u662f\u5177\u4f53\u7684\u8d85\u53c2\u6570\uff0c\u800c\u4e0d\u662f\u6574\u4e2a\u8d85\u53c2\u6570\u7a7a\u95f4\uff0c\u66f4\u4e0d\u80fd\u662f\u6570\u636e\u3001\u7b97\u6cd5\u7b49\u8d85\u53c2\u6570\u5916\u7684\u5143\u7d20\u3002\u5728\u5b9a\u4e49\u76ee\u6807\u51fd\u6570\u65f6\uff0c\u9700\u8981\u8ba9\u8d85\u53c2\u6570\u4f5c\u4e3a\u76ee\u6807\u51fd\u6570\u8f93\u5165</p> </li> <li><p>\u8d85\u53c2\u6570\u8f93\u5165\u53ea\u80fd\u662f\u6d6e\u70b9\u6570\uff0c\u4e0d\u652f\u6301\u6574\u6570\u4e0e\u5b57\u7b26\u4e32\u3002</p> </li> <li><p>Bayes_Opt\u53ea\u652f\u6301\u5bfb\u627ef(x)\u6700\u5927\u503c\uff0c\u4e0d\u652f\u6301\u5bfb\u627e\u6700\u5c0f\u503c</p> </li> </ol> In\u00a0[9]: Copied! <pre>from bayes_opt import BayesianOptimization\nfrom sklearn.model_selection import cross_validate,KFold\nfrom sklearn.ensemble import RandomForestRegressor\nimport numpy as np\nimport time\n</pre> from bayes_opt import BayesianOptimization from sklearn.model_selection import cross_validate,KFold from sklearn.ensemble import RandomForestRegressor import numpy as np import time In\u00a0[2]: Copied! <pre># \u5bfc\u5165\u52a0\u5229\u798f\u5c3c\u4e9a\u623f\u4ef7\u6570\u636e\nfrom sklearn.datasets import fetch_california_housing\nfrom sklearn.model_selection import train_test_split\n\ndata = fetch_california_housing()\nprint(data.keys())\n\n# \u5212\u5206\u6570\u636e\u96c6\nx = data['data']\ny = data['target']\ntrain_x, test_x, train_y, test_y = train_test_split(x, y, test_size=0.2, random_state=22)\n</pre> # \u5bfc\u5165\u52a0\u5229\u798f\u5c3c\u4e9a\u623f\u4ef7\u6570\u636e from sklearn.datasets import fetch_california_housing from sklearn.model_selection import train_test_split  data = fetch_california_housing() print(data.keys())  # \u5212\u5206\u6570\u636e\u96c6 x = data['data'] y = data['target'] train_x, test_x, train_y, test_y = train_test_split(x, y, test_size=0.2, random_state=22) <pre>dict_keys(['data', 'target', 'frame', 'target_names', 'feature_names', 'DESCR'])\n</pre> In\u00a0[5]: Copied! <pre># \u7b2c\u4e00\u6b65\uff0c\u5b9a\u4e49\u76ee\u6807\u51fd\u6570\ndef bayesopt_objective(n_estimators, max_depth, max_features, min_impurity_decrease):\n    # \u5b9a\u4e49\u8bc4\u4f30\u5668\n    # \u9700\u8981\u8c03\u6574\u7684\u8d85\u53c2\u6570\u7b49\u4e8e\u76ee\u6807\u51fd\u6570\u7684\u8f93\u5165\uff0c\u4e0d\u9700\u8981\u8c03\u6574\u7684\u8d85\u53c2\u6570\u76f4\u63a5\u7b49\u4e8e\u56fa\u5b9a\u503c\n    # \u9ed8\u8ba4\u53c2\u6570\u8f93\u5165\u4e00\u5b9a\u662f\u6d6e\u70b9\u6570\uff0c\u56e0\u6b64\u9700\u8981\u5957\u4e0aint\u51fd\u6570\u5904\u7406\u6210\u6574\u6570\n    reg = RandomForestRegressor(n_estimators=int(n_estimators),\n                                max_depth=int(max_depth),\n                                max_features=int(max_features),\n                                min_impurity_decrease=min_impurity_decrease,\n                                random_state=22,\n                                verbose=False,\n                                n_jobs=-1)\n\n    # \u5b9a\u4e49\u635f\u5931\u7684\u8f93\u51fa\uff0c5\u6298\u4ea4\u53c9\u9a8c\u8bc1\u4e0b\u7684\u7ed3\u679c\uff0c\u8f93\u51fa\u8d1f\u6839\u5747\u65b9\u8bef\u5dee\uff08-RMSE\uff09\n    # \u4ea4\u53c9\u9a8c\u8bc1\u9700\u8981\u4f7f\u7528\u6570\u636e\uff0c\u4f46\u4e0d\u80fd\u8ba9\u6570\u636exy\u6210\u4e3a\u76ee\u6807\u51fd\u6570\u7684\u8f93\u5165\n    cv = KFold(n_splits=5, shuffle=True, random_state=22)\n    validation_loss = cross_validate(reg, train_x, train_y, scoring='neg_root_mean_squared_error', cv=cv,\n                                     error_score='raise')\n\n    # \u4ea4\u53c9\u9a8c\u8bc1\u8f93\u51fa\u7684\u8bc4\u4f30\u6307\u6807\u662f\u8d1f\u6839\u5747\u65b9\u8bef\u5dee\uff0c\u56e0\u6b64\u672c\u6765\u5c31\u662f\u8d1f\u503c\n    # \u76ee\u6807\u51fd\u6570\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\u6539\u635f\u5931\u7684\u5747\u503c\n    return np.mean(validation_loss['test_score'])\n</pre> # \u7b2c\u4e00\u6b65\uff0c\u5b9a\u4e49\u76ee\u6807\u51fd\u6570 def bayesopt_objective(n_estimators, max_depth, max_features, min_impurity_decrease):     # \u5b9a\u4e49\u8bc4\u4f30\u5668     # \u9700\u8981\u8c03\u6574\u7684\u8d85\u53c2\u6570\u7b49\u4e8e\u76ee\u6807\u51fd\u6570\u7684\u8f93\u5165\uff0c\u4e0d\u9700\u8981\u8c03\u6574\u7684\u8d85\u53c2\u6570\u76f4\u63a5\u7b49\u4e8e\u56fa\u5b9a\u503c     # \u9ed8\u8ba4\u53c2\u6570\u8f93\u5165\u4e00\u5b9a\u662f\u6d6e\u70b9\u6570\uff0c\u56e0\u6b64\u9700\u8981\u5957\u4e0aint\u51fd\u6570\u5904\u7406\u6210\u6574\u6570     reg = RandomForestRegressor(n_estimators=int(n_estimators),                                 max_depth=int(max_depth),                                 max_features=int(max_features),                                 min_impurity_decrease=min_impurity_decrease,                                 random_state=22,                                 verbose=False,                                 n_jobs=-1)      # \u5b9a\u4e49\u635f\u5931\u7684\u8f93\u51fa\uff0c5\u6298\u4ea4\u53c9\u9a8c\u8bc1\u4e0b\u7684\u7ed3\u679c\uff0c\u8f93\u51fa\u8d1f\u6839\u5747\u65b9\u8bef\u5dee\uff08-RMSE\uff09     # \u4ea4\u53c9\u9a8c\u8bc1\u9700\u8981\u4f7f\u7528\u6570\u636e\uff0c\u4f46\u4e0d\u80fd\u8ba9\u6570\u636exy\u6210\u4e3a\u76ee\u6807\u51fd\u6570\u7684\u8f93\u5165     cv = KFold(n_splits=5, shuffle=True, random_state=22)     validation_loss = cross_validate(reg, train_x, train_y, scoring='neg_root_mean_squared_error', cv=cv,                                      error_score='raise')      # \u4ea4\u53c9\u9a8c\u8bc1\u8f93\u51fa\u7684\u8bc4\u4f30\u6307\u6807\u662f\u8d1f\u6839\u5747\u65b9\u8bef\u5dee\uff0c\u56e0\u6b64\u672c\u6765\u5c31\u662f\u8d1f\u503c     # \u76ee\u6807\u51fd\u6570\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\u6539\u635f\u5931\u7684\u5747\u503c     return np.mean(validation_loss['test_score']) <p>\u7b2c\u4e8c\u6b65\uff0c\u5b9a\u4e49\u53c2\u6570\u7a7a\u95f4</p> <p>\u4f7f\u7528\u5b57\u5178\u65b9\u5f0f\u5b9a\u4e49\u53c2\u6570\u7a7a\u95f4\uff0c\u53d6\u503c\u8303\u56f4\u4e3a\u53cc\u5411\u95ed\u533a\u95f4</p> <p>Bayes_Opt\u53ea\u652f\u6301\u586b\u5199\u53c2\u6570\u7684\u4e0a\u4e0b\u754c\uff0c\u4e0d\u652f\u6301\u586b\u5199\u6b65\u957f\u7b49\u53c2\u6570\uff0c\u4e14\u4f1a\u8bb2\u6240\u6709\u53c2\u6570\u90fd\u5f53\u505a\u8fde\u7eed\u6027\u8d85\u53c2\u6570\u5904\u7406\uff0c\u56e0\u6b64Bayes_Opt\u4f1a\u76f4\u63a5\u53d6\u51fa\u95ed\u533a\u95f4\u4e2d\u4efb\u610f\u6d6e\u70b9\u6570\u4f5c\u4e3a\u5907\u9009\u53c2\u6570\uff08\u56e0\u6b64\u6bd4\u5176\u4ed6\u8d1d\u53f6\u65af\u4f18\u5316\u5e93\u66f4\u5927\u3001\u66f4\u5bc6\uff0c\u9700\u8981\u7684\u8fed\u4ee3\u6b21\u6570\u66f4\u591a\uff09</p> In\u00a0[6]: Copied! <pre>param_grid_simple = {'n_estimators': (80, 100),\n                     'max_depth': (10, 25),\n                     'max_features': (10, 20),\n                     'min_impurity_decrease': (0, 1)}\n</pre> param_grid_simple = {'n_estimators': (80, 100),                      'max_depth': (10, 25),                      'max_features': (10, 20),                      'min_impurity_decrease': (0, 1)} <p>\u7b2c\u4e09\u6b65\uff0c\u5b9a\u4e49\u4f18\u5316\u76ee\u6807\u51fd\u6570\u7684\u5177\u4f53\u6d41\u7a0b</p> <p>\u5728\u8d1d\u53f6\u65af\u4f18\u5316\u7684\u5b9e\u8df5\u4e2d\uff0c\u90fd\u6709\u6d89\u53ca\u968f\u673a\u6027\u7684\u8fc7\u7a0b\u3002\u5728\u5927\u90e8\u5206\u4f18\u5316\u5e93\u4e2d\uff0c\u968f\u673a\u6027\u65e0\u6cd5\u63a7\u5236\u3002\uff08\u5373\u4fbf\u662f\u63a7\u5236\u968f\u673a\u6570\u79cd\u5b50\uff0c\u4e5f\u65e0\u6cd5\u56fa\u5b9a\u4f18\u5316\u8fc7\u7a0b\uff0c\u4f46\u9009\u62e9\u51fa\u7684\u8d85\u53c2\u6570\u662f\u53ef\u4ee5\u590d\u73b0\u7684\uff09</p> In\u00a0[7]: Copied! <pre>def param_bayes_opt(init_points, n_iter):\n    # \u5b9a\u4e49\u4f18\u5316\u5668\uff0c\u5148\u5b9e\u4f8b\u5316\u4f18\u5316\u5668\n    opt = BayesianOptimization(bayesopt_objective,  # \u76ee\u6807\u51fd\u6570\n                               param_grid_simple,  # \u5907\u9009\u53c2\u6570\u7a7a\u95f4\n                               random_state=22  # \u968f\u673a\u6570\u79cd\u5b50(\u867d\u7136\u65e0\u6cd5\u63a7\u5236\u8fc7\u7a0b)\n                               )\n    \n    # \u4f7f\u7528\u4f18\u5316\u5668\uff0cBayes_Opt\u53ea\u652f\u6301\u6700\u5927\u503c\n    opt.maximize(init_points=init_points, # \u62bd\u53d6\u591a\u5c11\u4e2a\u521d\u59cb\u89c2\u6d4b\u503c\n                 n_iter=n_iter # \u4e00\u5171\u89c2\u6d4b/\u8fed\u4ee3\u591a\u5c11\u6b21\n                 )\n    \n    # \u4f18\u5316\u5b8c\u6210\uff0c\u53d6\u51fa\u6700\u4f73\u53c2\u6570\u548c\u6700\u4f73\u5206\u6570\n    param_best = opt.max['params']\n    score_best = opt.max['target']\n    \n    # \u6253\u5370\u6700\u4f73\u53c2\u6570\u4e0e\u6700\u4f73\u5206\u6570\n    print(f'Best Params: {param_best}\\n'\n          f'Best CVScore: {score_best}')\n    \n    return param_best,score_best\n</pre> def param_bayes_opt(init_points, n_iter):     # \u5b9a\u4e49\u4f18\u5316\u5668\uff0c\u5148\u5b9e\u4f8b\u5316\u4f18\u5316\u5668     opt = BayesianOptimization(bayesopt_objective,  # \u76ee\u6807\u51fd\u6570                                param_grid_simple,  # \u5907\u9009\u53c2\u6570\u7a7a\u95f4                                random_state=22  # \u968f\u673a\u6570\u79cd\u5b50(\u867d\u7136\u65e0\u6cd5\u63a7\u5236\u8fc7\u7a0b)                                )          # \u4f7f\u7528\u4f18\u5316\u5668\uff0cBayes_Opt\u53ea\u652f\u6301\u6700\u5927\u503c     opt.maximize(init_points=init_points, # \u62bd\u53d6\u591a\u5c11\u4e2a\u521d\u59cb\u89c2\u6d4b\u503c                  n_iter=n_iter # \u4e00\u5171\u89c2\u6d4b/\u8fed\u4ee3\u591a\u5c11\u6b21                  )          # \u4f18\u5316\u5b8c\u6210\uff0c\u53d6\u51fa\u6700\u4f73\u53c2\u6570\u548c\u6700\u4f73\u5206\u6570     param_best = opt.max['params']     score_best = opt.max['target']          # \u6253\u5370\u6700\u4f73\u53c2\u6570\u4e0e\u6700\u4f73\u5206\u6570     print(f'Best Params: {param_best}\\n'           f'Best CVScore: {score_best}')          return param_best,score_best <p>\u7b2c\u56db\u6b65\uff0c\u5b9a\u4e49\u9a8c\u8bc1\u51fd\u6570\uff08\u975e\u5fc5\u987b\uff09</p> <p>\u5728\u8d1d\u53f6\u65af\u4f18\u5316\u4e2d\uff0c\u76ee\u6807\u51fd\u6570\u4e2d\u4ea4\u53c9\u9a8c\u8bc1\u5373\u6570\u636e\u5206\u5272\u90fd\u662f\u53ef\u4ee5\u89c4\u5b9a\u597d\u7684\uff0c\u56e0\u6b64\u76ee\u6807\u51fd\u6570\u4e2d\u8bbe\u7f6e\u4e86\u968f\u673a\u6570\u79cd\u5b50\uff0c\u8d1d\u53f6\u65af\u4f18\u5316\u7ed9\u51fa\u7684\u6700\u4f73\u5206\u6570\u4e00\u5b9a\u662f\u4e0e\u9a8c\u8bc1\u540e\u5206\u6570\u76f8\u540c</p> In\u00a0[8]: Copied! <pre>def bayes_opt_validation(params_best):\n    reg = RandomForestRegressor(n_estimators=int(params_best['n_estimators']))\n    \n    cv = KFold(n_splits=5,shuffle=True,random_state=22)\n    validation_loss = cross_validate(reg, train_x,train_y,scoring='neg_root_mean_squared_error', cv=cv,verbose=False,njobs=-1)\n    return np.mean(validation_loss['test_score'])\n</pre> def bayes_opt_validation(params_best):     reg = RandomForestRegressor(n_estimators=int(params_best['n_estimators']))          cv = KFold(n_splits=5,shuffle=True,random_state=22)     validation_loss = cross_validate(reg, train_x,train_y,scoring='neg_root_mean_squared_error', cv=cv,verbose=False,njobs=-1)     return np.mean(validation_loss['test_score']) <p>\u7b2c\u4e94\u6b65\uff0c\u6267\u884c\u4f18\u5316\u6d41\u7a0b</p> In\u00a0[\u00a0]: Copied! <pre>start = time.time()\nparams_best,score_best = param_bayes_opt(20,280)\nprint(f'\u8017\u65f6: {(time.time()-start)/60} min')\n# validation_score = bayes_opt_validation(params_best)\n# print(f'validation_score: {validation_score}')\n</pre> start = time.time() params_best,score_best = param_bayes_opt(20,280) print(f'\u8017\u65f6: {(time.time()-start)/60} min') # validation_score = bayes_opt_validation(params_best) # print(f'validation_score: {validation_score}')"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/5%EF%B8%8F%E2%83%A3%20%E8%B6%85%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96/C/","title":"\ud83e\udd8a \u8d1d\u53f6\u65af\u4f18\u5316\u00b6","text":"<p>\u76f8\u8f83\u4e8e\u968f\u673a\u7f51\u683c\u641c\u7d22\u3001\u5bf9\u534a\u7f51\u683c\u641c\u7d22\uff0c\u8d1d\u53f6\u65af\u8fc7\u7a0b\u5e26\u6709\u5148\u9a8c\u8fc7\u7a0b\u3002</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/5%EF%B8%8F%E2%83%A3%20%E8%B6%85%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96/C/#1","title":"1. \u8d1d\u53f6\u65af\u4f18\u5316\u57fa\u672c\u6d41\u7a0b\u00b6","text":"<ol> <li>\u5b9a\u4e49\u9700\u8981\u4f30\u8ba1\u7684f(x)\u53cax\u7684\u5b9a\u4e49\u57df</li> <li>\u53d6\u51fa\u6709\u9650\u7684n\u4e2ax\uff0c\u6c42\u89e3\u5bf9\u5e94f(x)\u89c2\u6d4b\u503c</li> <li>\u6839\u636e\u6709\u9650\u7684\u89c2\u6d4b\u503c\uff0c\u5bf9\u51fd\u6570\u4f30\u8ba1\uff08\u5148\u9a8c\u77e5\u8bc6\uff09\uff0c\u5f97\u51fa\u8be5\u4f30\u8ba1f\u4e0a\u7684\u76ee\u6807\u503c</li> <li>\u5b9a\u4e49\u67d0\u79cd\u89c4\u5219\uff0c\u4ee5\u786e\u5b9a\u4e0b\u4e00\u4e2a\u9700\u8981\u8ba1\u7b97\u7684\u89c2\u6d4b\u70b9</li> </ol> <p>\u6301\u7eed\u57282-4\u6b65\u9aa4\u4e2d\u5faa\u73af\uff0c\u76f4\u81f3\u5047\u8bbe\u5206\u5e03\u4e0a\u7684\u76ee\u6807\u503c\u8fbe\u5230\u6807\u51c6\uff0c\u6216\u8005\u6240\u6709\u8ba1\u7b97\u8d44\u6e90\u88ab\u7528\u5b8c\u4e3a\u6b62</p> <ol> <li>\u5f53\u8d1d\u53f6\u65af\u4f18\u5316\u4e0d\u7528\u4e8eHPO\u65f6\uff0c\u4e00\u822cf(x)\u662f\u5b8c\u5168\u7684\u9ed1\u76d2\u51fd\u6570</li> <li>\u5728HPO\u4e2d\uff0c\u81ea\u53d8\u91cfx\u5c31\u662f\u8d85\u53c2\u6570\u7a7a\u95f4</li> <li>\u6839\u636e\u6709\u9650\u89c2\u6d4b\u503c\u3001\u5bf9\u51fd\u6570\u5206\u5e03\u8fdb\u884c\u4f30\u8ba1\u7684\u5de5\u5177\u88ab\u79f0\u4e3a\u6982\u7387\u4ee3\u7406\u6a21\u578b\u3002\u81ea\u5e26\u67d0\u4e9b\u5047\u8bbe\uff0c\u53ef\u4ee5\u6839\u636e\u6709\u9650\u4e2a\u70b9\u4f30\u8ba1\u51fa\u51fd\u6570\u5206\u5e03\u3002\u9ed8\u8ba4\u4f7f\u7528\u57fa\u4e8e\u641e\u6b7b\u6df7\u5408\u6a21\u578b\u7684TPE\u8fc7\u7a0b</li> </ol>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/5%EF%B8%8F%E2%83%A3%20%E8%B6%85%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96/C/#2","title":"2. \u8d1d\u53f6\u65af\u4f18\u5316\u7684\u5b9e\u73b0\u00b6","text":"<p>\u53ef\u4ee5\u5b9e\u73b0\u7684\u5e93\u5f88\u591a\uff0c\u5982\uff1ahttps://www.automl.org/hpo-overview/hpo-tools/hpo-packages/</p> HPO\u5e93 \u4f18\u52a3 \u63a8\u8350\u6307\u6570 bayes_opt <code>pip install bayesian-optimization</code>\u5b9e\u73b0\u57fa\u4e8e\u9ad8\u65af\u8fc7\u7a0b\u7684\u8d1d\u53f6\u65af\u4f18\u5316\u5f53\u53c2\u6570\u7a7a\u95f4\u7531\u5927\u91cf\u8fde\u7eed\u6027\u53c2\u6570\u6784\u6210\u65f6\u63a8\u8350\u5305\u542b\u5927\u91cf\u79bb\u6563\u578b\u53c2\u6570\u65f6\u907f\u514d\u4f7f\u7528\u7b97\u529b/\u65f6\u95f4\u7a00\u7f3a\u65f6\u907f\u514d\u4f7f\u7528 2 hyperopt <code>pip install hyperopt</code>\u5b9e\u73b0\u57fa\u4e8eTPE\u7684\u8d1d\u53f6\u65af\u4f18\u5316\u652f\u6301\u5404\u7c7b\u63d0\u6548\u5de5\u5177\u8fdb\u5ea6\u6761\u6e05\u6670\uff0c\u5c55\u793a\u7f8e\u89c2\uff0c\u8f83\u5c11\u602a\u5f02\u8b66\u544a\u6216\u62a5\u9519\u53ef\u63a8\u5e7f\u81f3\u6df1\u5ea6\u5b66\u4e60\u9886\u57df\u4e0d\u652f\u6301\u57fa\u4e8e\u9ad8\u65af\u8fc7\u7a0b\u7684\u8d1d\u53f6\u65af\u4f18\u5316\u4ee3\u7801\u9650\u5236\u591a\u3001\u8f83\u4e3a\u590d\u6742\u3001\u7075\u6d3b\u6027\u5dee 4 optuna <code>pip install optuna</code>\u53ef\u5b9e\u73b0\u57fa\u4e8e\u5404\u7c7b\u7b97\u6cd5\u7684\u8d1d\u53f6\u65af\u4f18\u5316\u4ee3\u7801\u6700\u7b80\u6d01\uff0c\u5177\u6709\u4e00\u5b9a\u7684\u7075\u6d3b\u6027\u53ef\u63a8\u5e7f\u81f3\u6df1\u5ea6\u5b66\u4e60\u9886\u57df\u975e\u5173\u952e\u529f\u80fd\u7ef4\u62a4\u4e0d\u4f73\uff0c\u6709\u602a\u5f02\u8b66\u544a\u4e0e\u62a5\u9519 4 Skopt <code>pip install scikit-optimize</code>\u4f5c\u4e3aOptuna\u8f85\u52a9\u5305"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/5%EF%B8%8F%E2%83%A3%20%E8%B6%85%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96/C/#bayes_opt","title":"\u8d30\u4e28Bayes_Opt\u5b9e\u73b0\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/5%EF%B8%8F%E2%83%A3%20%E8%B6%85%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96/D/","title":"\ud83e\udd55 Optuna\u8c03\u53c2","text":"In\u00a0[2]: Copied! <pre># \u5bfc\u5165\u52a0\u5229\u798f\u5c3c\u4e9a\u623f\u4ef7\u6570\u636e\nfrom sklearn.datasets import fetch_california_housing\nfrom sklearn.model_selection import train_test_split\n\ndata = fetch_california_housing()\nprint(data.keys())\n\n# \u5212\u5206\u6570\u636e\u96c6\nx = data['data']\ny = data['target']\ntrain_x, test_x, train_y, test_y = train_test_split(x, y, test_size=0.4, random_state=22)\nval_x, test_x, val_y, test_y = train_test_split(test_x, test_y, test_size=0.5, random_state=22)\n</pre> # \u5bfc\u5165\u52a0\u5229\u798f\u5c3c\u4e9a\u623f\u4ef7\u6570\u636e from sklearn.datasets import fetch_california_housing from sklearn.model_selection import train_test_split  data = fetch_california_housing() print(data.keys())  # \u5212\u5206\u6570\u636e\u96c6 x = data['data'] y = data['target'] train_x, test_x, train_y, test_y = train_test_split(x, y, test_size=0.4, random_state=22) val_x, test_x, val_y, test_y = train_test_split(test_x, test_y, test_size=0.5, random_state=22) <pre>dict_keys(['data', 'target', 'frame', 'target_names', 'feature_names', 'DESCR'])\n</pre> In\u00a0[3]: Copied! <pre>from sklearn.neural_network import MLPRegressor\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.svm import SVR\n\nfrom sklearn.metrics import mean_squared_error\n</pre> from sklearn.neural_network import MLPRegressor from sklearn.tree import DecisionTreeRegressor from sklearn.svm import SVR  from sklearn.metrics import mean_squared_error In\u00a0[4]: Copied! <pre># \u8bad\u7ec33\u4e2a\u57fa\u7840\u6a21\u578b\n\ntree = DecisionTreeRegressor()\nmlp = MLPRegressor()\nsvr = SVR()\n\nmlp.fit(train_x, train_y)\ntree.fit(train_x, train_y)\nsvr.fit(train_x, train_y)\n</pre> # \u8bad\u7ec33\u4e2a\u57fa\u7840\u6a21\u578b  tree = DecisionTreeRegressor() mlp = MLPRegressor() svr = SVR()  mlp.fit(train_x, train_y) tree.fit(train_x, train_y) svr.fit(train_x, train_y) Out[4]: <pre>SVR()</pre>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.SVR<pre>SVR()</pre> In\u00a0[5]: Copied! <pre># \u8bc4\u4f30\u6a21\u578b\u6548\u679c\ndef get_val_mse(model):\n    pred = model.predict(val_x)\n    return mean_squared_error(val_y, pred)\n\n\ndef get_test_mse(model):\n    pred = model.predict(test_x)\n    return mean_squared_error(test_y, pred)\n\n\nprint(\"mlp_score:\", get_test_mse(mlp))\nprint(\"tree_score:\", get_test_mse(tree))\nprint(\"svr_score:\", get_test_mse(svr))\n</pre> # \u8bc4\u4f30\u6a21\u578b\u6548\u679c def get_val_mse(model):     pred = model.predict(val_x)     return mean_squared_error(val_y, pred)   def get_test_mse(model):     pred = model.predict(test_x)     return mean_squared_error(test_y, pred)   print(\"mlp_score:\", get_test_mse(mlp)) print(\"tree_score:\", get_test_mse(tree)) print(\"svr_score:\", get_test_mse(svr)) <pre>mlp_score: 0.7419697061315345\ntree_score: 0.5542630847329214\nsvr_score: 1.3296374433082723\n</pre> In\u00a0[\u00a0]: Copied! <pre># Optuna\u641c\u7d22\u6743\u91cd\nimport optuna\n\npred_val = {name: (eval(name)).predict(val_x) for name in ['mlp', 'tree', 'svr']}\n\n\ndef objective(trial):\n    weights = {name: trial.suggest_int(name, 1, 100) for name in ['mlp', 'tree', 'svr']}\n    probs = sum([weights[name] * pred_val[name] for name in ['mlp', 'tree', 'svr']]) / sum(\n        [weights[name] for name in ['mlp', 'tree', 'svr']])\n\n    val_mse = mean_squared_error(val_y, probs)\n    trial.report(val_mse, 0)\n    return val_mse\n\n\nstorage_name = \"sqlite:///optuna.db\"\nstudy = optuna.create_study(\n    direction=\"minimize\",\n    study_name=\"optuna_ensemble\", storage=storage_name, load_if_exists=True\n)\nstudy.optimize(objective, n_trials=300, timeout=600)\n\nbest_params = study.best_params\nbest_value = study.best_value\nprint(\"\\n\\nbest_value = \" + str(best_value))\nprint(\"best_params:\")\nprint(best_params)\n</pre> # Optuna\u641c\u7d22\u6743\u91cd import optuna  pred_val = {name: (eval(name)).predict(val_x) for name in ['mlp', 'tree', 'svr']}   def objective(trial):     weights = {name: trial.suggest_int(name, 1, 100) for name in ['mlp', 'tree', 'svr']}     probs = sum([weights[name] * pred_val[name] for name in ['mlp', 'tree', 'svr']]) / sum(         [weights[name] for name in ['mlp', 'tree', 'svr']])      val_mse = mean_squared_error(val_y, probs)     trial.report(val_mse, 0)     return val_mse   storage_name = \"sqlite:///optuna.db\" study = optuna.create_study(     direction=\"minimize\",     study_name=\"optuna_ensemble\", storage=storage_name, load_if_exists=True ) study.optimize(objective, n_trials=300, timeout=600)  best_params = study.best_params best_value = study.best_value print(\"\\n\\nbest_value = \" + str(best_value)) print(\"best_params:\") print(best_params) In\u00a0[7]: Copied! <pre># \u8bc4\u4f30\u6a21\u578b\u878d\u5408\u6548\u679c\npreds_test = {name: (eval(name)).predict(test_x) for name in ['mlp', 'tree', 'svr']}\n\n\ndef test_score(weights):\n    probs = sum([weights[name] * preds_test[name] for name in ['mlp', 'tree', 'svr']]) / sum(\n        [weights[name] for name in ['mlp', 'tree', 'svr']])\n    test_auc = mean_squared_error(test_y, probs)\n    return test_auc\n\n\nprint('optuna_ensemble_score:', test_score(best_params))\n</pre> # \u8bc4\u4f30\u6a21\u578b\u878d\u5408\u6548\u679c preds_test = {name: (eval(name)).predict(test_x) for name in ['mlp', 'tree', 'svr']}   def test_score(weights):     probs = sum([weights[name] * preds_test[name] for name in ['mlp', 'tree', 'svr']]) / sum(         [weights[name] for name in ['mlp', 'tree', 'svr']])     test_auc = mean_squared_error(test_y, probs)     return test_auc   print('optuna_ensemble_score:', test_score(best_params)) <pre>optuna_ensemble_score: 0.4223879453526203\n</pre> MLP Tree SVR Optuna_Opt 0.7420 0.5543 1.3296 0.4223 In\u00a0[9]: Copied! <pre>from IPython.display import display\nimport optuna\nimport numpy as np\nimport pandas as pd\nimport plotly.graph_objs as go\nimport plotly.express as px\n\noptuna.logging.set_verbosity(optuna.logging.WARNING)\n\n\n# \u7b2c\u4e00\u6b65\uff0c\u5b9a\u4e49\u76ee\u6807\u51fd\u6570\u548c\u641c\u7d22\u7a7a\u95f4\u3002\u8fd9\u91cc\u4ee5z = (x-2)^2 + y\u7684\u6700\u5c0f\u503c\u4e3a\u76ee\u6807\uff0c\u6700\u5c0f\u503c\u5728x=2,y=-5\u65f6\u53d6\u5230-5\n# def objective(trial: optuna.trial.Trial):\n#     param = {'x': trial.suggest_float(\"x\", -5, 5),\n#              'y': trial.suggest_int(\"y\", -5, 5,1)}\n#     return (param['x'] - 2) ** 2 + param['y']\n\ndef objective(trial: optuna.trial.Trial):\n    x = trial.suggest_float(\"x\", -5, 5)\n    y = trial.suggest_int(\"y\", -5, 5, 1)\n    return (x - 2) ** 2 + y\n\n\n# \u7b2c\u4e8c\u6b65\uff0c\u5b9a\u4e49\u548c\u6267\u884c\u641c\u7d22\u8fc7\u7a0b\nstudy = optuna.create_study(\n    sampler=optuna.samplers.CmaEsSampler(),\n    direction=\"minimize\",\n    study_name=\"simple_task\")\n\nstudy.optimize(objective, n_trials=1000, show_progress_bar=True)\n\n# \u7b2c\u4e09\u6b65\uff0c\u83b7\u53d6\u6700\u4f18\u8d85\u53c2\nbest_params = study.best_params\nbest_value = study.best_value\nprint(\"\\n\\nbest_value = \" + str(best_value))\nprint(\"best_params:\")\nprint(best_params)\n\n# \u7b2c\u56db\u6b65\uff0c\u7ed8\u5236\u641c\u7d22\u8fc7\u7a0b\n\ndftrials = study.trials_dataframe()[[\"number\", \"value\"]]\nlosses = dftrials[\"value\"].tolist()\n\nminlosses = [np.min(losses[0:i + 1]) for i in range(len(losses))]\nsteps = range(len(losses))\n\ndflog = pd.DataFrame({\"steps\": steps, \"losses\": losses, \"minlosses\": minlosses})\nfig = px.scatter(data_frame=dflog, x=\"steps\", y=\"losses\", size_max=500, log_y=True)\nfig.update_traces(marker=dict(size=20, color=\"rgba(0,0,255,0.4)\"), name=\"all\", showlegend=True)\nfig.add_traces(go.Scatter(x=list(steps), y=minlosses, name=\"best\", showlegend=True))\nfig.update_layout(legend=dict(orientation=\"v\"))\nfig.show()\n</pre> from IPython.display import display import optuna import numpy as np import pandas as pd import plotly.graph_objs as go import plotly.express as px  optuna.logging.set_verbosity(optuna.logging.WARNING)   # \u7b2c\u4e00\u6b65\uff0c\u5b9a\u4e49\u76ee\u6807\u51fd\u6570\u548c\u641c\u7d22\u7a7a\u95f4\u3002\u8fd9\u91cc\u4ee5z = (x-2)^2 + y\u7684\u6700\u5c0f\u503c\u4e3a\u76ee\u6807\uff0c\u6700\u5c0f\u503c\u5728x=2,y=-5\u65f6\u53d6\u5230-5 # def objective(trial: optuna.trial.Trial): #     param = {'x': trial.suggest_float(\"x\", -5, 5), #              'y': trial.suggest_int(\"y\", -5, 5,1)} #     return (param['x'] - 2) ** 2 + param['y']  def objective(trial: optuna.trial.Trial):     x = trial.suggest_float(\"x\", -5, 5)     y = trial.suggest_int(\"y\", -5, 5, 1)     return (x - 2) ** 2 + y   # \u7b2c\u4e8c\u6b65\uff0c\u5b9a\u4e49\u548c\u6267\u884c\u641c\u7d22\u8fc7\u7a0b study = optuna.create_study(     sampler=optuna.samplers.CmaEsSampler(),     direction=\"minimize\",     study_name=\"simple_task\")  study.optimize(objective, n_trials=1000, show_progress_bar=True)  # \u7b2c\u4e09\u6b65\uff0c\u83b7\u53d6\u6700\u4f18\u8d85\u53c2 best_params = study.best_params best_value = study.best_value print(\"\\n\\nbest_value = \" + str(best_value)) print(\"best_params:\") print(best_params)  # \u7b2c\u56db\u6b65\uff0c\u7ed8\u5236\u641c\u7d22\u8fc7\u7a0b  dftrials = study.trials_dataframe()[[\"number\", \"value\"]] losses = dftrials[\"value\"].tolist()  minlosses = [np.min(losses[0:i + 1]) for i in range(len(losses))] steps = range(len(losses))  dflog = pd.DataFrame({\"steps\": steps, \"losses\": losses, \"minlosses\": minlosses}) fig = px.scatter(data_frame=dflog, x=\"steps\", y=\"losses\", size_max=500, log_y=True) fig.update_traces(marker=dict(size=20, color=\"rgba(0,0,255,0.4)\"), name=\"all\", showlegend=True) fig.add_traces(go.Scatter(x=list(steps), y=minlosses, name=\"best\", showlegend=True)) fig.update_layout(legend=dict(orientation=\"v\")) fig.show() <pre>  0%|          | 0/1000 [00:00&lt;?, ?it/s]</pre> <pre>\n\nbest_value = -5.0\nbest_params:\n{'x': 1.9999999970119875, 'y': -5}\n</pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/5%EF%B8%8F%E2%83%A3%20%E8%B6%85%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96/D/#optuna","title":"\ud83e\udd55 Optuna\u8c03\u53c2\u00b6","text":"<p>Optuna\u6709\u5f88\u591a\u5148\u8fdb\u7684\u8c03\u53c2\u7b97\u6cd5\uff0c\u5982\u8d1d\u53f6\u65af\u4f18\u5316\u3001\u9057\u4f20\u7b97\u6cd5\u91c7\u6837\u7b49\u3002\u914d\u5408Optuna-Dashboard\uff0c\u53ef\u4ee5\u5c06\u8c03\u53c2\u8fc7\u7a0b\u53ef\u89c6\u5316\u3002</p> <p>!!! note \"Optuna\u5176\u4ed6\u5b9e\u7528\u7684\u7279\u6027\"</p> <pre><code>1. \u901a\u8fc7\u5c06\u641c\u7d22\u7ed3\u679c\u5b58\u50a8\u5230sqlite\u6216mysql\u3001postgresql\uff0cOptuna\u652f\u6301\u65ad\u70b9\u7eed\u641c\u3002\n\n2. Optuna\u652f\u6301\u526a\u679d\u7b56\u7565\uff0c\u63d0\u524d\u7ed3\u675f\u4e00\u4e9b\u4e2d\u95f4\u8fd4\u56de\u7ed3\u679c\u8f83\u5dee\u7684\u91c7\u6837\u70b9\u4ece\u800c\u52a0\u5feb\u641c\u7d22\u8fdb\u7a0b\u3002\n\n3. Optuna\u652f\u6301\u624b\u52a8\u6307\u5b9a\u4e00\u4e9b\u8d85\u53c2\u91c7\u6837\u70b9\uff0c\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u5df2\u7ecf\u8ba1\u7b97\u8fc7\u7684\u91c7\u6837\u70b9\u53ca\u5176\u7ed3\u679c\u4f5c\u4e3a\u521d\u59cb\u5316\u6837\u672c\u70b9\u3002\n\n4. Optuna\u63d0\u4f9bask and tell \u63a5\u53e3\u6a21\u5f0f\uff0c\u65e0\u9700\u663e\u5f0f\u5b9a\u4e49\u76ee\u6807\u51fd\u6570\uff0c\u76f4\u63a5\u5728\u5faa\u73af\u4e2d\u8c03\u4f18\u8d85\u53c2\u3002\n\n5. Optuna\u5c01\u88c5\u4e86\u975e\u5e38\u4e30\u5bcc\u7684\u57fa\u4e8eplotly\u7684\u53ef\u89c6\u5316\u51fd\u6570\uff0c\u4fbf\u4e8e\u5206\u6790\u8c03\u53c2\u7ed3\u679c\u3002\n\n6. \u901a\u8fc7\u5c06\u641c\u7d22\u7ed3\u679c\u5b58\u50a8\u5230mysql\u6216postgresql\uff0c\u5e76\u8bbe\u7f6e\u5206\u5e03\u5f0f\u6a21\u5f0f\uff0cOptuna\u652f\u6301\u591a\u673a\u5206\u5e03\u5f0f\u641c\u7d22\uff0c\u901a\u8fc7\u5e76\u884c\u65b9\u5f0f\u52a0\u5feb\u641c\u7d22\u8fdb\u7a0b\u3002</code></pre> <p>\u5b89\u88c5\uff1a</p> <pre>pip install optuna\npip install optuna-dashboard\npip install plotly\n</pre> <p>\u67e5\u770b\u76d1\u63a7\u9875\u9762</p> <pre>nohup optuna-dashboard --host 0.0.0.0  --port 8083 sqlite:///optuna.db &amp;\n</pre> <p>\u6740\u6389\u8fdb\u7a0b</p> <pre>ps aux|grep optuna-dashboard \nkill -9 [PID]\n</pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/5%EF%B8%8F%E2%83%A3%20%E8%B6%85%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96/D/","title":"\u58f9\u4e28\u7b80\u5355\u793a\u4f8b\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/5%EF%B8%8F%E2%83%A3%20%E8%B6%85%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96/D/#api","title":"\u8d30\u4e28API\u8bf4\u660e\u00b6","text":"<p>Optuna\u652f\u6301\u7684\u8c03\u53c2\u7b97\u6cd5\u5305\u62ec\uff1a(\u53ef\u4ee5\u5728<code>optuna.create_study</code>\u65f6\u4f7f\u7528<code>sampler</code>\u6307\u5b9a\uff0c\u9ed8\u8ba4\u662f<code>TPESampler</code>\u7b97\u6cd5)</p> <pre># \u7f51\u683c\u641c\u7d22\u7b97\u6cd5\noptuna.samplers.GridSampler()\n# \u968f\u673a\u641c\u7d22\u7b97\u6cd5\noptuna.samplers.RandomSampler()\n# \u8d1d\u53f6\u65af\u4f18\u5316\u91c7\u6837\noptuna.samplers.TPESampler()\n# \u9057\u4f20\u7b97\u6cd5\u91c7\u6837\noptuna.samplers.NSGAIISampler()\n# \u534f\u65b9\u5dee\u77e9\u9635\u81ea\u9002\u5e94\u6f14\u5316\u7b56\u7565\u91c7\u6837\noptuna.samplers.CmaEsSampler()\n...\n</pre> <p>\u8fd8\u652f\u6301\u56fa\u5b9a\u90e8\u5206\u8d85\u53c2\u6570\uff0c\u4ec5\u5bf9\u5176\u4ed6\u53c2\u6570\u8d85\u53c2\u4f18\u5316</p> <pre>optuna.samplers.PartialFixedSampler()\n</pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/6%EF%B8%8F%E2%83%A3%20%E6%A8%A1%E5%9E%8B%E5%8F%AF%E8%A7%A3%E9%87%8A%E6%80%A7/","title":"\ud83c\udf81 \u673a\u5668\u5b66\u4e60/6\ufe0f\u20e3 \u6a21\u578b\u53ef\u89e3\u91ca\u6027","text":"<ul> <li> <p>Shapash</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/6%EF%B8%8F%E2%83%A3%20%E6%A8%A1%E5%9E%8B%E5%8F%AF%E8%A7%A3%E9%87%8A%E6%80%A7/A/","title":"\ud83c\udf41 Shapash","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/6%EF%B8%8F%E2%83%A3%20%E6%A8%A1%E5%9E%8B%E5%8F%AF%E8%A7%A3%E9%87%8A%E6%80%A7/A/#_1","title":"\u58f9\u4e28\u6982\u8ff0","text":"<p>Shapash\u65e8\u5728\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u80fd\u89e3\u91ca\u548c\u7406\u89e3\u673a\u5668\u5b66\u4e60\u3002\u5b83\u63d0\u4f9b\u4e86\u5404\u79cd\u53ef\u89c6\u5316\u6548\u679c\uff0c\u5e26\u6709\u6e05\u6670\u660e\u786e\u7684\u6807\u7b7e\uff0c\u6613\u4e8e\u6240\u6709\u4eba\u7406\u89e3\u3002\u4f7f\u7528 Shapash\uff0c\u53ef\u4ee5\u751f\u6210\u4e00\u4e2aWeb \u5e94\u7528\u7a0b\u5e8f\uff0c\u7b80\u5316\u6a21\u578b\u529f\u80fd\u4e4b\u95f4\u4ea4\u4e92\u7684\u7406\u89e3\uff0c\u5e76\u5141\u8bb8\u5728\u672c\u5730\u548c\u5168\u5c40\u53ef\u89e3\u91ca\u6027\u4e4b\u95f4\u8fdb\u884c\u65e0\u7f1d\u5bfc\u822a\u3002Shapash \u901a\u8fc7\u5728\u7efc\u5408\u62a5\u544a\u4e2d\u63d0\u4f9b\u6709\u5173\u4efb\u4f55\u6a21\u578b\u548c\u6570\u636e\u7684\u6709\u4ef7\u503c\u7684\u4fe1\u606f\uff0c\u4e3a\u6570\u636e\u79d1\u5b66\u5ba1\u8ba1\u505a\u51fa\u8d21\u732e\u3002</p> <p>Shapash \u9002\u7528\u4e8e\u56de\u5f52\u3001\u4e8c\u5143\u5206\u7c7b\u548c\u591a\u7c7b\u95ee\u9898\u3002\u5b83\u4e0e\u591a\u79cd\u6a21\u578b\u517c\u5bb9\uff0c\u5305\u62ec Catboost\u3001Xgboost\u3001LightGBM\u3001Sklearn Ensemble\u3001\u7ebf\u6027\u6a21\u578b\u548c SVM\u7b49</p> <p>\u5f00\u6e90\u94fe\u63a5\uff1ahttps://github.com/MAIF/shapash</p> <p>\u5b89\u88c5\uff1a</p> <pre><code>pip install shapash\n</code></pre> <pre><code>pip install shapash[report]\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/6%EF%B8%8F%E2%83%A3%20%E6%A8%A1%E5%9E%8B%E5%8F%AF%E8%A7%A3%E9%87%8A%E6%80%A7/A/#_2","title":"\u8d30\u4e28\u4f7f\u7528","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/6%EF%B8%8F%E2%83%A3%20%E6%A8%A1%E5%9E%8B%E5%8F%AF%E8%A7%A3%E9%87%8A%E6%80%A7/A/#1-smartexplainer","title":"1. \u521b\u5efa<code>SmartExplainer</code>\u5bf9\u8c61","text":"<pre><code>from shapash import SmartExplainer\nxpl = SmartExplainer(\n  model=regressor,\n  features_dict=house_dict,  # Optional parameter\n  preprocessing=encoder, # Optional: compile step can use inverse_transform method\n  postprocessing=postprocess, # Optional: see tutorial postprocessing  \n)\n</code></pre> <p>\u5728compile\u65b9\u6cd5\u4e2d\u67091\u4e2a\u5f3a\u5236\u53c2\u6570\uff1aModel \u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u58f0\u660efeatures dict\u6765\u6307\u5b9a\u8981\u663e\u793a\u7684\u6807\u7b7e</p> <p>\u8fd9\u91cc\u7684<code>regressor</code>\u662f\u8bad\u7ec3\u540e\u7684\u6a21\u578b</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/6%EF%B8%8F%E2%83%A3%20%E6%A8%A1%E5%9E%8B%E5%8F%AF%E8%A7%A3%E9%87%8A%E6%80%A7/A/#2","title":"2. \u7f16\u8bd1\u6570\u636e\u96c6","text":"<pre><code>xpl.compile(\n    x=xtest,    \n    y_pred=y_pred, # Optional: for your own prediction (by default: model.predict)\n    y_target=yTest, # Optional: allows to display True Values vs Predicted Values\n    additional_data=xadditional, # Optional: additional dataset of features for Webapp\n    additional_features_dict=features_dict_additional, # Optional: dict additional data    \n)\n</code></pre> <p>\u7f16\u8bd1\u65b9\u6cd5\u4e2d\u67091\u4e2a\u5f3a\u5236\u53c2\u6570\uff1aDataset</p> <p>\u8fd9\u91cc\u7684<code>x</code>\u8f93\u5165\u7684\u662f\u6d4b\u8bd5\u96c6</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/6%EF%B8%8F%E2%83%A3%20%E6%A8%A1%E5%9E%8B%E5%8F%AF%E8%A7%A3%E9%87%8A%E6%80%A7/A/#3","title":"3. \u663e\u793a\u8f93\u51fa","text":"<pre><code>app = xpl.run_app()\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/6%EF%B8%8F%E2%83%A3%20%E6%A8%A1%E5%9E%8B%E5%8F%AF%E8%A7%A3%E9%87%8A%E6%80%A7/A/#4-shapash","title":"4. \u751f\u6210shapash\u62a5\u544a","text":"<pre><code>xpl.generate_report(\n    output_file='path/to/output/report.html',\n    project_info_file='path/to/project_info.yml',\n    x_train=xtrain,\n    y_train=ytrain,\n    y_test=ytest,\n    title_story=\"House prices report\",\n    title_description=\"\"\"This document is a data science report of the kaggle house prices tutorial project.\n        It was generated using the Shapash library.\"\"\",\n    metrics=[{'name': 'MSE', 'path': 'sklearn.metrics.mean_squared_error'}]\n)\n</code></pre> <p>\u6b64\u6b65\u9aa4\u5141\u8bb8\u4f7f\u7528\u6570\u636e\u96c6\u7684\u4e0d\u540c\u5206\u5272\u4ee5\u53ca\u60a8\u4f7f\u7528\u7684\u6307\u6807\u751f\u6210\u9879\u76ee\u7684\u72ec\u7acb html \u62a5\u544a</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/6%EF%B8%8F%E2%83%A3%20%E6%A8%A1%E5%9E%8B%E5%8F%AF%E8%A7%A3%E9%87%8A%E6%80%A7/A/#5-smartpredictor","title":"5. \u4ece\u8bad\u7ec3\u5230\u90e8\u7f72\uff1aSmartPredictor \u5bf9\u8c61","text":"<pre><code>predictor = xpl.to_smartpredictor()\n</code></pre> <p>Shapash \u63d0\u4f9b\u4e86\u4e00\u4e2a SmartPredictor \u5bf9\u8c61\u6765\u90e8\u7f72\u672c\u5730\u89e3\u91ca\u7684\u6458\u8981\u4ee5\u6ee1\u8db3\u64cd\u4f5c\u9700\u6c42\u3002\u5b83\u662f\u4e00\u4e2a\u4e13\u7528\u4e8e\u90e8\u7f72\u7684\u5bf9\u8c61\uff0c\u6bd4 SmartExplainer \u66f4\u8f7b\uff0c\u5e76\u5177\u6709\u989d\u5916\u7684\u4e00\u81f4\u6027\u68c0\u67e5\u3002SmartPredictor \u53ef\u4ee5\u4e0e API \u4e00\u8d77\u4f7f\u7528\u6216\u4ee5\u6279\u5904\u7406\u6a21\u5f0f\u4f7f\u7528\u3002\u5b83\u4f7f\u7528\u9002\u5f53\u7684\u63aa\u8f9e\u63d0\u4f9b\u9884\u6d4b\u3001\u8be6\u7ec6\u6216\u603b\u7ed3\u7684\u672c\u5730\u53ef\u89e3\u91ca\u6027\u3002</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/6%EF%B8%8F%E2%83%A3%20%E6%A8%A1%E5%9E%8B%E5%8F%AF%E8%A7%A3%E9%87%8A%E6%80%A7/A/#_3","title":"\u53c1\u4e28\u62a5\u9519","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/6%EF%B8%8F%E2%83%A3%20%E6%A8%A1%E5%9E%8B%E5%8F%AF%E8%A7%A3%E9%87%8A%E6%80%A7/A/#1-unicodeencodeerror-gbk-codec-cant-encode-character-u25c4-in-position-3266591-illegal-multibyte-sequence","title":"1. UnicodeEncodeError: 'gbk' codec can't encode character '\\u25c4' in position 3266591: illegal multibyte sequence","text":"<p>\u53d1\u751f\u5728<code>xpl.generate_report()</code>\u4e2d\u8c03\u7528\u7684<code>export_and_save_report()</code>\u51fd\u6570</p> <p>\u539f\u56e0\uff1a\u4f7f\u7528<code>gbk</code>\u7f16\u7801\u9519\u8bef\uff0c\u4f7f\u7528<code>encode</code>\u65b9\u6cd5\u6307\u5b9a\u7f16\u7801\u683c\u5f0f</p> <pre><code>...\n- with open(output_file, \"w\") as file:\n+ with open(output_file, \"w\", encoding='utf-8') as file:\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/6%EF%B8%8F%E2%83%A3%20%E6%A8%A1%E5%9E%8B%E5%8F%AF%E8%A7%A3%E9%87%8A%E6%80%A7/A/#2-numpy","title":"2. numpy\u7248\u672c\u95ee\u9898","text":"<p>\u539f\u56e0\uff1a\u4f7f\u7528\u7684Py 3.11\u73af\u5883\u4e2dnumpy\u7248\u672c\u4e3a1.25.3\uff0cshapash\u9650\u5236\u4e86numpy\u7248\u672c\u4e0d\u8d85\u8fc71.25</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u627e\u5230\u62a5\u9519\u4f4d\u7f6e\uff0c\u5c06numpy\u9650\u5236\u4fee\u6539\u5230\u66f4\u9ad8\u6570\u503c</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/6%EF%B8%8F%E2%83%A3%20%E6%A8%A1%E5%9E%8B%E5%8F%AF%E8%A7%A3%E9%87%8A%E6%80%A7/A/#3_1","title":"3. \u6570\u636e\u8f93\u5165\u95ee\u9898","text":"<p>\u4f7f\u7528numpy\u8f93\u5165\u6570\u636e\u4f1a\u62a5\u9519\uff0c\u6700\u597d\u8f6c\u6210pandas\u6570\u636e\uff0c\u5c06\u7279\u5f81\u540d\u6807\u8bb0\u4e3a\u5217\u540d</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/","title":"\ud83c\udf81 \u673a\u5668\u5b66\u4e60/7\ufe0f\u20e3 \u7f6e\u4fe1\u5b66\u4e60","text":"<ul> <li> <p>cl1.ipynb</p> <p> Getting started</p> </li> <li> <p>cl2.ipynb</p> <p> Getting started</p> </li> <li> <p>cl3.ipynb</p> <p> Getting started</p> </li> <li> <p>\u7f6e\u4fe1\u5b66\u4e60</p> <p> Getting started</p> </li> <li> <p>\u95ee\u9898</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/A/","title":"\ud83c\udf41 \u7f6e\u4fe1\u5b66\u4e60","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/A/#_1","title":"\u58f9\u4e28\u7f6e\u4fe1\u5b66\u4e60","text":"<p>\u7f6e\u4fe1\u5b66\u4e60\uff08confident learning\uff0cCL\uff09\u7531MIT\u548cGoogle\u8054\u5408\u63d0\u51fa<sup>1</sup>\uff0c\u5b83\u901a\u8fc7\u8868\u5f81\u548c\u8bc6\u522b\u6570\u636e\u96c6\u4e2d\u7684\u6807\u7b7e\u9519\u8bef\u6765\u5173\u6ce8\u6807\u7b7e\u8d28\u91cf\uff0c\u5176\u539f\u7406\u662f\u4fee\u526a\u566a\u58f0\u6570\u636e\u3001\u4f7f\u7528\u6982\u7387\u9608\u503c\u8ba1\u6570\u4ee5\u4f30\u8ba1\u566a\u58f0\u4ee5\u53ca\u5bf9\u793a\u4f8b\u8fdb\u884c\u6392\u540d\u4ee5\u8fdb\u884c\u7f6e\u4fe1\u5ea6\u8bad\u7ec3\u3002</p> <p>\u66f4\u591a\u53c2\u8003\uff1a Awesome-Learning-with-Label-Noise</p> <p>\u7f6e\u4fe1\u5b66\u4e60\u7684\u4f18\u70b9\uff1a</p> <ul> <li>\u63d0\u4f9b\u7f6e\u4fe1\u533a\u95f4\uff1a\u4e3a\u6bcf\u4e2a\u9884\u6d4b\u63d0\u4f9b\u7f6e\u4fe1\u533a\u95f4\u6216\u7f6e\u4fe1\u96c6\uff0c\u589e\u52a0\u9884\u6d4b\u7ed3\u679c\u7684\u53ef\u9760\u6027\u548c\u89e3\u91ca\u6027\u3002</li> <li>\u6a21\u578b\u65e0\u5173\uff1a\u53ef\u4ee5\u4e0e\u4efb\u4f55\u673a\u5668\u5b66\u4e60\u6a21\u578b\u7ed3\u5408\u4f7f\u7528\uff0c\u5177\u6709\u9ad8\u5ea6\u7684\u7075\u6d3b\u6027\u548c\u5e7f\u6cdb\u7684\u9002\u7528\u6027\u3002</li> <li>\u4fdd\u8bc1\u8986\u76d6\u7387\uff1a\u5728\u7ed9\u5b9a\u7684\u7f6e\u4fe1\u6c34\u5e73\u4e0b\uff0c\u7406\u8bba\u4e0a\u4fdd\u8bc1\u7f6e\u4fe1\u533a\u95f4\u5305\u542b\u771f\u5b9e\u503c\u7684\u6982\u7387\u81f3\u5c11\u4e3a\u8be5\u7f6e\u4fe1\u6c34\u5e73\u3002</li> <li>\u5904\u7406\u4e0d\u786e\u5b9a\u6027\uff1a\u6709\u6548\u91cf\u5316\u548c\u5904\u7406\u6570\u636e\u4e2d\u7684\u4e0d\u786e\u5b9a\u6027\u548c\u566a\u58f0\uff0c\u5e2e\u52a9\u51b3\u7b56\u8005\u66f4\u597d\u5730\u7406\u89e3\u9884\u6d4b\u7ed3\u679c\u3002</li> <li>\u6613\u4e8e\u5b9e\u73b0\uff1a\u65b9\u6cd5\u7b80\u5355\uff0c\u6613\u4e8e\u5728\u73b0\u6709\u673a\u5668\u5b66\u4e60\u6a21\u578b\u4e0a\u8fdb\u884c\u8c03\u6574\u548c\u6269\u5c55\u3002</li> </ul> <p>\u6ce8\uff1a\u7f6e\u4fe1\u5b66\u4e60\u627e\u5230\u7684\u201c\u9519\u8bef\u6807\u6ce8\u6837\u672c\u201d\uff0c\u4e0d\u4e00\u5b9a\u662f\u771f\u5b9e\u9519\u8bef\u6837\u672c\uff0c\u8fd9\u662f\u4e00\u79cd\u57fa\u4e8e\u4e0d\u786e\u5b9a\u4f30\u8ba1\u7684\u9009\u62e9\u65b9\u6cd5</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/A/#cleanlabdont-let-your-data-do-you-dirty","title":"\u8d30\u4e28CleanLab\uff1aDon't let your data do you dirty.","text":"<p>\u5f00\u6e90\u5730\u5740\uff1acleanlab</p> <p>API\u6587\u6863\uff1acleanlab open-source documentation</p> <p>\u5b89\u88c5\uff1a</p> <pre><code>rye add cleanlab\n</code></pre> <ol> <li> <p>Northcutt, C.G., Jiang, L., &amp; Chuang, I.L. (2019). Confident Learning: Estimating Uncertainty in Dataset Labels. J. Artif. Intell. Res., 70, 1373-1411.\u00a0\u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/B/","title":"\ud83c\udf41 \u95ee\u9898","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/B/#1-cleanlabsklearn","title":"1. \u4f7f\u7528CleanLab\u67e5\u627e\u6807\u7b7e\u95ee\u9898\u65f6\uff0c\u4f7f\u7528\u7684sklearn\u6a21\u578b\u662f\u5426\u5bf9\u7ed3\u679c\u6709\u5f71\u54cd\uff1f","text":"<p><code>cleanlab</code> \u4f9d\u8d56\u4e8e\u673a\u5668\u5b66\u4e60\u6a21\u578b\u7684\u9884\u6d4b\u7ed3\u679c\u6765\u8bc6\u522b\u6f5c\u5728\u7684\u6807\u7b7e\u95ee\u9898\u3002\u56e0\u6b64\uff0c\u6a21\u578b\u7684\u6027\u80fd\u548c\u7279\u6027\u4f1a\u76f4\u63a5\u5f71\u54cd <code>cleanlab</code> \u7684\u6548\u679c\u3002</p> <ol> <li>\u6a21\u578b\u6027\u80fd\uff1a\u9ad8\u6027\u80fd\u6a21\u578b\u80fd\u51c6\u786e\u6355\u6349\u6570\u636e\u7684\u6a21\u5f0f\u548c\u7279\u5f81\uff0c\u4ece\u800c\u66f4\u6709\u6548\u8bc6\u522b\u6807\u7b7e\u9519\u8bef\u3002</li> <li>\u6a21\u578b\u7c7b\u578b\uff1a\u6df1\u5ea6\u7f51\u7edc\u53ef\u80fd\u5728\u6355\u6349\u590d\u6742\u6570\u636e\u6a21\u5f0f\u65b9\u9762\u8868\u73b0\u66f4\u597d\uff0c\u4f46\u53ef\u80fd\u9700\u8981\u66f4\u591a\u8ba1\u7b97\u8d44\u6e90</li> <li>\u6a21\u578b\u7684\u9c81\u68d2\u6027\uff1a\u4e00\u4e9b\u6a21\u578b\u5bf9\u566a\u58f0\u548c\u5f02\u5e38\u503c\u8f83\u4e3a\u654f\u611f\uff0c\u53ef\u80fd\u4f1a\u53d7\u5230\u6807\u7b7e\u9519\u8bef\u7684\u8f83\u5927\u5f71\u54cd\u3002</li> </ol>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl1/","title":"\ud83c\udf6c CleanLab\u4e4b\u4e00","text":"<p>Cleanlab \u63d0\u4f9b\u4e86\u4e00\u4e2aDatalab\u5bf9\u8c61\uff0c\u53ef\u4ee5\u8bc6\u522b\u673a\u5668\u5b66\u4e60\u6570\u636e\u96c6\u4e2d\u7684\u5404\u79cd\u95ee\u9898\uff0c\u4f8b\u5982\u5608\u6742\u7684\u6807\u7b7e\u3001\u79bb\u7fa4\u503c\u3001\uff08\u8fd1\u4f3c\uff09\u91cd\u590d\u3001\u6f02\u79fb\u4ee5\u53ca\u73b0\u5b9e\u4e16\u754c\u6570\u636e\u4e2d\u5e38\u89c1\u7684\u5176\u4ed6\u7c7b\u578b\u7684\u95ee\u9898[^1]</p> <ul> <li><p>\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u8ba1\u7b97\u6837\u672c\u6570\u636e\u96c6\u7684\u6837\u672c\u5916\u9884\u6d4b\u6982\u7387\u3002</p> </li> <li><p>\u7528\u4e8eDatalab\u8bc6\u522b\u8bf8\u5982\u566a\u58f0\u6807\u7b7e\u3001\u5f02\u5e38\u503c\u3001\uff08\u8fd1\u4f3c\uff09\u91cd\u590d\u4ee5\u53ca\u5176\u4ed6\u7c7b\u578b\u7684\u95ee\u9898</p> </li> <li><p>\u67e5\u770b\u95ee\u9898\u6458\u8981\u548c\u6709\u5173\u6837\u672c\u6570\u636e\u96c6\u7684\u5176\u4ed6\u4fe1\u606f</p> </li> </ul> <p>[^1]: Datalab: A unified audit to detect all kinds of issues in data and labels</p> In\u00a0[1]: Copied! <pre>import numpy as np\nimport pandas as pd\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import cross_val_predict\n\nfrom cleanlab import Datalab\n</pre> import numpy as np import pandas as pd from sklearn.linear_model import LogisticRegression from sklearn.model_selection import cross_val_predict  from cleanlab import Datalab In\u00a0[2]: Copied! <pre># Note: This pulldown content is for docs.cleanlab.ai, if running on local Jupyter or Colab, please ignore it.\n\nfrom sklearn.model_selection import train_test_split\nfrom cleanlab.benchmarking.noise_generation import (\n    generate_noise_matrix_from_trace,\n    generate_noisy_labels,\n)\n\nSEED = 123\nnp.random.seed(SEED)\n\nBINS = {\n    \"low\": [-np.inf, 3.3],\n    \"mid\": [3.3, 6.6],\n    \"high\": [6.6, +np.inf],\n}\n\nBINS_MAP = {\n    \"low\": 0,\n    \"mid\": 1,\n    \"high\": 2,\n}\n\n\ndef create_data():\n\n    X = np.random.rand(250, 2) * 5\n    y = np.sum(X, axis=1)\n    # Map y to bins based on the BINS dict\n    y_bin = np.array([k for y_i in y for k, v in BINS.items() if v[0] &lt;= y_i &lt; v[1]])\n    y_bin_idx = np.array([BINS_MAP[k] for k in y_bin])\n\n    # Split into train and test\n    X_train, X_test, y_train, y_test, y_train_idx, y_test_idx = train_test_split(\n        X, y_bin, y_bin_idx, test_size=0.5, random_state=SEED\n    )\n\n    # Add several (5) out-of-distribution points. Sliding them along the decision boundaries\n    # to make them look like they are out-of-frame\n    X_out = np.array(\n        [\n            [-1.5, 3.0],\n            [-1.75, 6.5],\n            [1.5, 7.2],\n            [2.5, -2.0],\n            [5.5, 7.0],\n        ]\n    )\n    # Add a near duplicate point to the last outlier, with some tiny noise added\n    near_duplicate = X_out[-1:] + np.random.rand(1, 2) * 1e-6\n    X_out = np.concatenate([X_out, near_duplicate])\n\n    y_out = np.sum(X_out, axis=1)\n    y_out_bin = np.array([k for y_i in y_out for k, v in BINS.items() if v[0] &lt;= y_i &lt; v[1]])\n    y_out_bin_idx = np.array([BINS_MAP[k] for k in y_out_bin])\n\n    # Add to train\n    X_train = np.concatenate([X_train, X_out])\n    y_train = np.concatenate([y_train, y_out])\n    y_train_idx = np.concatenate([y_train_idx, y_out_bin_idx])\n\n    # Add an exact duplicate example to the training set\n    exact_duplicate_idx = np.random.randint(0, len(X_train))\n    X_duplicate = X_train[exact_duplicate_idx, None]\n    y_duplicate = y_train[exact_duplicate_idx, None]\n    y_duplicate_idx = y_train_idx[exact_duplicate_idx, None]\n\n    # Add to train\n    X_train = np.concatenate([X_train, X_duplicate])\n    y_train = np.concatenate([y_train, y_duplicate])\n    y_train_idx = np.concatenate([y_train_idx, y_duplicate_idx])\n\n    py = np.bincount(y_train_idx) / float(len(y_train_idx))\n    m = len(BINS)\n\n    noise_matrix = generate_noise_matrix_from_trace(\n        m,\n        trace=0.9 * m,\n        py=py,\n        valid_noise_matrix=True,\n        seed=SEED,\n    )\n\n    noisy_labels_idx = generate_noisy_labels(y_train_idx, noise_matrix)\n    noisy_labels = np.array([list(BINS_MAP.keys())[i] for i in noisy_labels_idx])\n\n    return X_train, y_train_idx, noisy_labels, noisy_labels_idx, X_out, X_duplicate\n</pre> # Note: This pulldown content is for docs.cleanlab.ai, if running on local Jupyter or Colab, please ignore it.  from sklearn.model_selection import train_test_split from cleanlab.benchmarking.noise_generation import (     generate_noise_matrix_from_trace,     generate_noisy_labels, )  SEED = 123 np.random.seed(SEED)  BINS = {     \"low\": [-np.inf, 3.3],     \"mid\": [3.3, 6.6],     \"high\": [6.6, +np.inf], }  BINS_MAP = {     \"low\": 0,     \"mid\": 1,     \"high\": 2, }   def create_data():      X = np.random.rand(250, 2) * 5     y = np.sum(X, axis=1)     # Map y to bins based on the BINS dict     y_bin = np.array([k for y_i in y for k, v in BINS.items() if v[0] &lt;= y_i &lt; v[1]])     y_bin_idx = np.array([BINS_MAP[k] for k in y_bin])      # Split into train and test     X_train, X_test, y_train, y_test, y_train_idx, y_test_idx = train_test_split(         X, y_bin, y_bin_idx, test_size=0.5, random_state=SEED     )      # Add several (5) out-of-distribution points. Sliding them along the decision boundaries     # to make them look like they are out-of-frame     X_out = np.array(         [             [-1.5, 3.0],             [-1.75, 6.5],             [1.5, 7.2],             [2.5, -2.0],             [5.5, 7.0],         ]     )     # Add a near duplicate point to the last outlier, with some tiny noise added     near_duplicate = X_out[-1:] + np.random.rand(1, 2) * 1e-6     X_out = np.concatenate([X_out, near_duplicate])      y_out = np.sum(X_out, axis=1)     y_out_bin = np.array([k for y_i in y_out for k, v in BINS.items() if v[0] &lt;= y_i &lt; v[1]])     y_out_bin_idx = np.array([BINS_MAP[k] for k in y_out_bin])      # Add to train     X_train = np.concatenate([X_train, X_out])     y_train = np.concatenate([y_train, y_out])     y_train_idx = np.concatenate([y_train_idx, y_out_bin_idx])      # Add an exact duplicate example to the training set     exact_duplicate_idx = np.random.randint(0, len(X_train))     X_duplicate = X_train[exact_duplicate_idx, None]     y_duplicate = y_train[exact_duplicate_idx, None]     y_duplicate_idx = y_train_idx[exact_duplicate_idx, None]      # Add to train     X_train = np.concatenate([X_train, X_duplicate])     y_train = np.concatenate([y_train, y_duplicate])     y_train_idx = np.concatenate([y_train_idx, y_duplicate_idx])      py = np.bincount(y_train_idx) / float(len(y_train_idx))     m = len(BINS)      noise_matrix = generate_noise_matrix_from_trace(         m,         trace=0.9 * m,         py=py,         valid_noise_matrix=True,         seed=SEED,     )      noisy_labels_idx = generate_noisy_labels(y_train_idx, noise_matrix)     noisy_labels = np.array([list(BINS_MAP.keys())[i] for i in noisy_labels_idx])      return X_train, y_train_idx, noisy_labels, noisy_labels_idx, X_out, X_duplicate In\u00a0[3]: Copied! <pre>X_train, y_train_idx, noisy_labels, noisy_labels_idx, X_out, X_duplicate = create_data()\n</pre> X_train, y_train_idx, noisy_labels, noisy_labels_idx, X_out, X_duplicate = create_data() In\u00a0[4]: Copied! <pre># Note: This pulldown content is for docs.cleanlab.ai, if running on local Jupyter or Colab, please ignore it.\n\nimport matplotlib.pyplot as plt\n\ndef plot_data(X_train, y_train_idx, noisy_labels_idx, X_out, X_duplicate):\n    # Plot data with clean labels and noisy labels, use BINS_MAP for the legend\n    fig, ax = plt.subplots(figsize=(8, 6.5))\n\n    low = ax.scatter(X_train[noisy_labels_idx == 0, 0], X_train[noisy_labels_idx == 0, 1], label=\"low\")\n    mid = ax.scatter(X_train[noisy_labels_idx == 1, 0], X_train[noisy_labels_idx == 1, 1], label=\"mid\")\n    high = ax.scatter(X_train[noisy_labels_idx == 2, 0], X_train[noisy_labels_idx == 2, 1], label=\"high\")\n\n    ax.set_title(\"Noisy labels\")\n    ax.set_xlabel(r\"$x_1$\", fontsize=16)\n    ax.set_ylabel(r\"$x_2$\", fontsize=16)\n\n    # Plot true boundaries (x+y=3.3, x+y=6.6)\n    ax.set_xlim(-3.5, 9.0)\n    ax.set_ylim(-3.5, 9.0)\n    ax.plot([-0.7, 4.0], [4.0, -0.7], color=\"k\", linestyle=\"--\", alpha=0.5)\n    ax.plot([-0.7, 7.3], [7.3, -0.7], color=\"k\", linestyle=\"--\", alpha=0.5)\n\n    # Draw red circles around the points that are misclassified (i.e. the points that are in the wrong bin)\n    for i, (X, y) in enumerate(zip([X_train, X_train], [y_train_idx, noisy_labels_idx])):\n        for j, (k, v) in enumerate(BINS_MAP.items()):\n            label_err = ax.scatter(\n                X[(y == v) &amp; (y != y_train_idx), 0],\n                X[(y == v) &amp; (y != y_train_idx), 1],\n                s=180,\n                marker=\"o\",\n                facecolor=\"none\",\n                edgecolors=\"red\",\n                linewidths=2.5,\n                alpha=0.5,\n                label=\"Label error\",\n            )\n\n\n    outlier = ax.scatter(X_out[:, 0], X_out[:, 1], color=\"k\", marker=\"x\", s=100, linewidth=2, label=\"Outlier\")\n\n    # Plot the exact duplicate\n    dups = ax.scatter(\n        X_duplicate[:, 0],\n        X_duplicate[:, 1],\n        color=\"c\",\n        marker=\"x\",\n        s=100,\n        linewidth=2,\n        label=\"Duplicates\",\n    )\n\n    first_legend = ax.legend(handles=[low, mid, high], loc=[0.75, 0.7], title=\"Given Class Label\", alignment=\"left\", title_fontproperties={\"weight\":\"semibold\"})\n    second_legend = ax.legend(handles=[label_err, outlier, dups], loc=[0.75, 0.45], title=\"Type of Issue\", alignment=\"left\", title_fontproperties={\"weight\":\"semibold\"})\n\n    ax = plt.gca().add_artist(first_legend)\n    ax = plt.gca().add_artist(second_legend)\n    plt.tight_layout()\n</pre> # Note: This pulldown content is for docs.cleanlab.ai, if running on local Jupyter or Colab, please ignore it.  import matplotlib.pyplot as plt  def plot_data(X_train, y_train_idx, noisy_labels_idx, X_out, X_duplicate):     # Plot data with clean labels and noisy labels, use BINS_MAP for the legend     fig, ax = plt.subplots(figsize=(8, 6.5))      low = ax.scatter(X_train[noisy_labels_idx == 0, 0], X_train[noisy_labels_idx == 0, 1], label=\"low\")     mid = ax.scatter(X_train[noisy_labels_idx == 1, 0], X_train[noisy_labels_idx == 1, 1], label=\"mid\")     high = ax.scatter(X_train[noisy_labels_idx == 2, 0], X_train[noisy_labels_idx == 2, 1], label=\"high\")      ax.set_title(\"Noisy labels\")     ax.set_xlabel(r\"$x_1$\", fontsize=16)     ax.set_ylabel(r\"$x_2$\", fontsize=16)      # Plot true boundaries (x+y=3.3, x+y=6.6)     ax.set_xlim(-3.5, 9.0)     ax.set_ylim(-3.5, 9.0)     ax.plot([-0.7, 4.0], [4.0, -0.7], color=\"k\", linestyle=\"--\", alpha=0.5)     ax.plot([-0.7, 7.3], [7.3, -0.7], color=\"k\", linestyle=\"--\", alpha=0.5)      # Draw red circles around the points that are misclassified (i.e. the points that are in the wrong bin)     for i, (X, y) in enumerate(zip([X_train, X_train], [y_train_idx, noisy_labels_idx])):         for j, (k, v) in enumerate(BINS_MAP.items()):             label_err = ax.scatter(                 X[(y == v) &amp; (y != y_train_idx), 0],                 X[(y == v) &amp; (y != y_train_idx), 1],                 s=180,                 marker=\"o\",                 facecolor=\"none\",                 edgecolors=\"red\",                 linewidths=2.5,                 alpha=0.5,                 label=\"Label error\",             )       outlier = ax.scatter(X_out[:, 0], X_out[:, 1], color=\"k\", marker=\"x\", s=100, linewidth=2, label=\"Outlier\")      # Plot the exact duplicate     dups = ax.scatter(         X_duplicate[:, 0],         X_duplicate[:, 1],         color=\"c\",         marker=\"x\",         s=100,         linewidth=2,         label=\"Duplicates\",     )      first_legend = ax.legend(handles=[low, mid, high], loc=[0.75, 0.7], title=\"Given Class Label\", alignment=\"left\", title_fontproperties={\"weight\":\"semibold\"})     second_legend = ax.legend(handles=[label_err, outlier, dups], loc=[0.75, 0.45], title=\"Type of Issue\", alignment=\"left\", title_fontproperties={\"weight\":\"semibold\"})      ax = plt.gca().add_artist(first_legend)     ax = plt.gca().add_artist(second_legend)     plt.tight_layout() In\u00a0[5]: Copied! <pre>plot_data(X_train, y_train_idx, noisy_labels_idx, X_out, X_duplicate)\n</pre> plot_data(X_train, y_train_idx, noisy_labels_idx, X_out, X_duplicate) <p>\u4e0d\u5339\u914d\u6807\u7b7e\u7528\u7ea2\u8272\u5708\u51fa\uff0c\u5f02\u5e38\u503c\u7528\u9ed1\u8272\u7a81\u51fa\uff0c\u91cd\u590d\u503c\u7528\u9752\u8272\u7a81\u51fa</p> In\u00a0[6]: Copied! <pre># \u8f6c\u6362\u65f6\u6570\u636e\u4ee5\u4f20\u9012\u7ed9Datalab\u3002\u652f\u6301\u7684\u6570\u636e\u7c7b\u578b\u5305\u62ecHuggingFace\u6570\u636e\u96c6\u3001DataFrame\ndata = {\"X\": X_train, \"y\": noisy_labels}\n</pre> # \u8f6c\u6362\u65f6\u6570\u636e\u4ee5\u4f20\u9012\u7ed9Datalab\u3002\u652f\u6301\u7684\u6570\u636e\u7c7b\u578b\u5305\u62ecHuggingFace\u6570\u636e\u96c6\u3001DataFrame data = {\"X\": X_train, \"y\": noisy_labels} In\u00a0[7]: Copied! <pre>model = LogisticRegression()\npred_probs = cross_val_predict(\n    estimator=model, X=data[\"X\"], y=data[\"y\"], cv=5, method=\"predict_proba\"\n)\n</pre> model = LogisticRegression() pred_probs = cross_val_predict(     estimator=model, X=data[\"X\"], y=data[\"y\"], cv=5, method=\"predict_proba\" ) In\u00a0[8]: Copied! <pre>lab = Datalab(data, label_name=\"y\")\nlab.find_issues(pred_probs=pred_probs, features=data[\"X\"])\n</pre> lab = Datalab(data, label_name=\"y\") lab.find_issues(pred_probs=pred_probs, features=data[\"X\"]) <pre>Finding null issues ...\nFinding label issues ...\nFinding outlier issues ...\nFinding near_duplicate issues ...\nFinding non_iid issues ...\nFinding class_imbalance issues ...\nFinding underperforming_group issues ...\n\nAudit complete. 21 issues found in the dataset.\n</pre> <pre>C:\\Users\\Artmallo\\PycharmProjects\\MyNote\\.venv\\Lib\\site-packages\\sklearn\\neighbors\\_base.py:246: EfficiencyWarning: Precomputed sparse input was not sorted by row values. Use the function sklearn.neighbors.sort_graph_by_row_values to sort the input by row values, with warn_when_not_sorted=False to remove this warning.\n  warnings.warn(\n</pre> In\u00a0[9]: Copied! <pre>lab.report()\n</pre> lab.report() <pre>Dataset Information: num_examples: 132, num_classes: 3\n\nHere is a summary of various issues found in your data:\n\n    issue_type  num_issues\n         label          11\n       outlier           6\nnear_duplicate           4\n\nLearn about each issue: https://docs.cleanlab.ai/stable/cleanlab/datalab/guide/issue_type_description.html\nSee which examples in your dataset exhibit each issue via: `datalab.get_issues(&lt;ISSUE_NAME&gt;)`\n\nData indices corresponding to top examples of each issue are shown below.\n\n\n----------------------- label issues -----------------------\n\nAbout this issue:\n\tExamples whose given label is estimated to be potentially incorrect\n    (e.g. due to annotation error) are flagged as having label issues.\n    \n\nNumber of examples with this issue: 11\nOverall dataset quality in terms of this issue: 0.9318\n\nExamples representing most severe instances of this issue:\n     is_label_issue  label_score given_label predicted_label\n77             True     0.006940        high             mid\n7              True     0.007830         low             mid\n40             True     0.014828         mid             low\n107            True     0.021241        high             mid\n120            True     0.026407        high             mid\n\n\n---------------------- outlier issues ----------------------\n\nAbout this issue:\n\tExamples that are very different from the rest of the dataset \n    (i.e. potentially out-of-distribution or rare/anomalous instances).\n    \n\nNumber of examples with this issue: 6\nOverall dataset quality in terms of this issue: 0.3558\n\nExamples representing most severe instances of this issue:\n     is_outlier_issue  outlier_score\n126              True       0.006636\n130              True       0.012571\n129              True       0.012571\n127              True       0.014909\n128              True       0.017443\n\n\n------------------ near_duplicate issues -------------------\n\nAbout this issue:\n\tA (near) duplicate issue refers to two or more examples in\n    a dataset that are extremely similar to each other, relative\n    to the rest of the dataset.  The examples flagged with this issue\n    may be exactly duplicated, or lie atypically close together when\n    represented as vectors (i.e. feature embeddings).\n    \n\nNumber of examples with this issue: 4\nOverall dataset quality in terms of this issue: 0.6160\n\nExamples representing most severe instances of this issue:\n     is_near_duplicate_issue  near_duplicate_score near_duplicate_sets  distance_to_nearest_neighbor\n131                     True              0.000000               [123]                  0.000000e+00\n123                     True              0.000000               [131]                  0.000000e+00\n129                     True              0.000002               [130]                  4.463180e-07\n130                     True              0.000002               [129]                  4.463180e-07\n51                     False              0.161148                  []                  3.859087e-02\n</pre> In\u00a0[10]: Copied! <pre># \u83b7\u53d6\u6574\u4e2a\u6570\u636e\u96c6\u4e2d\u6bcf\u79cd\u95ee\u9898\u603b\u4f53\u4e25\u91cd\u7a0b\u5ea6\u6c47\u603b\nlab.get_issue_summary()\n</pre> # \u83b7\u53d6\u6574\u4e2a\u6570\u636e\u96c6\u4e2d\u6bcf\u79cd\u95ee\u9898\u603b\u4f53\u4e25\u91cd\u7a0b\u5ea6\u6c47\u603b lab.get_issue_summary() Out[10]: issue_type score num_issues 0 null 1.000000 0 1 label 0.931818 11 2 outlier 0.355772 6 3 near_duplicate 0.616034 4 4 non_iid 0.819250 0 5 class_imbalance 0.212121 0 6 underperforming_group 0.906167 0 <p>score\u5217\uff1a\u8f83\u4f4e\u503c\u8868\u793a\u8fd9\u79cd\u7c7b\u578b\u7684\u95ee\u9898\u603b\u4f53\u4e0a\u66f4\u4e25\u91cd</p> <p>num_issues\u5217\uff1a\u8f83\u9ad8\u503c\u8868\u793a\u95ee\u9898\u4e25\u91cd</p> In\u00a0[11]: Copied! <pre># \u67e5\u770b\u7279\u5b9a\u7c7b\u578b\u7684\u95ee\u9898\nlab.get_issue_summary(\"label\")\n</pre> # \u67e5\u770b\u7279\u5b9a\u7c7b\u578b\u7684\u95ee\u9898 lab.get_issue_summary(\"label\") Out[11]: issue_type score num_issues 0 label 0.931818 11 In\u00a0[12]: Copied! <pre>lab.get_issues().head()\n</pre> lab.get_issues().head() Out[12]: is_null_issue null_score is_label_issue label_score is_outlier_issue outlier_score is_near_duplicate_issue near_duplicate_score is_non_iid_issue non_iid_score is_class_imbalance_issue class_imbalance_score is_underperforming_group_issue underperforming_group_score 0 False 1.0 False 0.864148 False 0.417707 False 0.664083 False 0.970324 False 1.000000 False 1.0 1 False 1.0 False 0.825554 False 0.375317 False 0.641516 False 0.890575 False 1.000000 False 1.0 2 False 1.0 False 0.533286 False 0.460593 False 0.601188 False 0.826147 False 0.212121 False 1.0 3 False 1.0 False 0.755685 False 0.321635 False 0.562539 False 0.948362 False 1.000000 False 1.0 4 False 1.0 True 0.133654 False 0.472909 False 0.746763 False 0.878267 False 1.000000 False 1.0 In\u00a0[13]: Copied! <pre># \u5c06\u95ee\u9898\u7c7b\u578b\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff0c\u4ee5`get_issues`\u83b7\u53d6\u7279\u5b9a\u7c7b\u578b\u7684\u95ee\u9898\nexamples_w_issue = (\n    lab.get_issues(\"label\")\n    .query(\"is_label_issue\")\n    .sort_values(\"label_score\")\n)\n</pre> # \u5c06\u95ee\u9898\u7c7b\u578b\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff0c\u4ee5`get_issues`\u83b7\u53d6\u7279\u5b9a\u7c7b\u578b\u7684\u95ee\u9898 examples_w_issue = (     lab.get_issues(\"label\")     .query(\"is_label_issue\")     .sort_values(\"label_score\") ) In\u00a0[14]: Copied! <pre>examples_w_issue.head()\n</pre> examples_w_issue.head() Out[14]: is_label_issue label_score given_label predicted_label 77 True 0.006940 high mid 7 True 0.007830 low mid 40 True 0.014828 mid low 107 True 0.021241 high mid 120 True 0.026407 high mid In\u00a0[15]: Copied! <pre># \u8bbf\u95ee\u7279\u5b9a\u95ee\u9898\u7c7b\u578b\u76f8\u5173\u7684\u5404\u79cd\u9644\u52a0\u4fe1\u606f\nlabel_issues_info = lab.get_info(\"label\")\nlabel_issues_info[\"classes_by_label_quality\"]\n</pre> # \u8bbf\u95ee\u7279\u5b9a\u95ee\u9898\u7c7b\u578b\u76f8\u5173\u7684\u5404\u79cd\u9644\u52a0\u4fe1\u606f label_issues_info = lab.get_info(\"label\") label_issues_info[\"classes_by_label_quality\"] Out[15]: Class Name Class Index Label Issues Inverse Label Issues Label Noise Inverse Label Noise Label Quality Score 0 high 0 6 1 0.206897 0.041667 0.793103 1 low 1 2 3 0.071429 0.103448 0.928571 2 mid 2 4 8 0.053333 0.101266 0.946667 In\u00a0[16]: Copied! <pre># \u67e5\u770b\u8fd1\u4f3c\u91cd\u590d\u6837\u672c\nlab.get_issues(\"near_duplicate\").query(\"is_near_duplicate_issue\").sort_values(\"near_duplicate_score\")\n</pre> # \u67e5\u770b\u8fd1\u4f3c\u91cd\u590d\u6837\u672c lab.get_issues(\"near_duplicate\").query(\"is_near_duplicate_issue\").sort_values(\"near_duplicate_score\") Out[16]: is_near_duplicate_issue near_duplicate_score near_duplicate_sets distance_to_nearest_neighbor 123 True 0.000000 [131] 0.000000e+00 131 True 0.000000 [123] 0.000000e+00 129 True 0.000002 [130] 4.463180e-07 130 True 0.000002 [129] 4.463180e-07"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl1/#cleanlab","title":"\ud83c\udf6c CleanLab\u4e4b\u4e00\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl1/","title":"\u58f9\u4e28\u5bfc\u5165\u4f9d\u8d56\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl1/","title":"\u8d30\u4e28\u52a0\u8f7d\u6570\u636e\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl1/","title":"\u53c1\u4e28\u4ece\u5206\u7c7b\u5668\u83b7\u53d6\u6837\u672c\u5916\u9884\u6d4b\u6982\u7387\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl1/#datalab","title":"\u8086\u4e28\u4f7f\u7528Datalab\u67e5\u627e\u6570\u636e\u96c6\u4e2d\u7684\u95ee\u9898\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl1/","title":"\u67e5\u770b\u5ba1\u8ba1\u7ed3\u679c\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl1/","title":"\u4f0d\u4e28\u8be6\u7ec6\u4e86\u89e3\u6570\u636e\u96c6\u4e2d\u7684\u95ee\u9898\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl2/","title":"\ud83c\udf7f CleanLab\u4e4b\u4e8c","text":"<p>Datalab\u901a\u8fc7\u5229\u7528\u4efb\u4f55\u5df2\u7ecf\u8bad\u7ec3\u8fc7\u7684 ML \u6a21\u578b\u6216\u5176\u5b66\u4e60\u5230\u7684\u6570\u636e\u8868\u793a\u7684\uff08\u6982\u7387\uff09\u9884\u6d4b\u6765\u6267\u884c\u8fd9\u4e9b\u68c0\u67e5\u3002[^1]</p> <ul> <li><p>\u589e\u91cf\u95ee\u9898\u641c\u7d22</p> </li> <li><p>\u6307\u5b9a\u975e\u9ed8\u8ba4\u53c2\u6570\u6765\u53d1\u51fa\u68c0\u67e5</p> </li> <li><p>\u4fdd\u5b58\u5e76\u52a0\u8f7d Datalab \u5bf9\u8c61</p> </li> <li><p>\u6dfb\u52a0\u81ea\u5b9a\u4e49 IssueManager</p> </li> </ul> <p>[^1]: Datalab: Advanced workflows to audit your data</p> In\u00a0[1]: Copied! <pre>import numpy as np\nimport pandas as pd\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import cross_val_predict\n\nfrom cleanlab import Datalab\n</pre> import numpy as np import pandas as pd from sklearn.linear_model import LogisticRegression from sklearn.model_selection import cross_val_predict  from cleanlab import Datalab In\u00a0[2]: Copied! <pre># Note: This pulldown content is for docs.cleanlab.ai, if running on local Jupyter or Colab, please ignore it.\n\nfrom sklearn.model_selection import train_test_split\nfrom cleanlab.benchmarking.noise_generation import (\n    generate_noise_matrix_from_trace,\n    generate_noisy_labels,\n)\n\nSEED = 123\nnp.random.seed(SEED)\n\nBINS = {\n    \"low\": [-np.inf, 3.3],\n    \"mid\": [3.3, 6.6],\n    \"high\": [6.6, +np.inf],\n}\n\nBINS_MAP = {\n    \"low\": 0,\n    \"mid\": 1,\n    \"high\": 2,\n}\n\n\ndef create_data():\n\n    X = np.random.rand(250, 2) * 5\n    y = np.sum(X, axis=1)\n    # Map y to bins based on the BINS dict\n    y_bin = np.array([k for y_i in y for k, v in BINS.items() if v[0] &lt;= y_i &lt; v[1]])\n    y_bin_idx = np.array([BINS_MAP[k] for k in y_bin])\n\n    # Split into train and test\n    X_train, X_test, y_train, y_test, y_train_idx, y_test_idx = train_test_split(\n        X, y_bin, y_bin_idx, test_size=0.5, random_state=SEED\n    )\n\n    # Add several (5) out-of-distribution points. Sliding them along the decision boundaries\n    # to make them look like they are out-of-frame\n    X_out = np.array(\n        [\n            [-1.5, 3.0],\n            [-1.75, 6.5],\n            [1.5, 7.2],\n            [2.5, -2.0],\n            [5.5, 7.0],\n        ]\n    )\n    # Add a near duplicate point to the last outlier, with some tiny noise added\n    near_duplicate = X_out[-1:] + np.random.rand(1, 2) * 1e-6\n    X_out = np.concatenate([X_out, near_duplicate])\n\n    y_out = np.sum(X_out, axis=1)\n    y_out_bin = np.array([k for y_i in y_out for k, v in BINS.items() if v[0] &lt;= y_i &lt; v[1]])\n    y_out_bin_idx = np.array([BINS_MAP[k] for k in y_out_bin])\n\n    # Add to train\n    X_train = np.concatenate([X_train, X_out])\n    y_train = np.concatenate([y_train, y_out])\n    y_train_idx = np.concatenate([y_train_idx, y_out_bin_idx])\n\n    # Add an exact duplicate example to the training set\n    exact_duplicate_idx = np.random.randint(0, len(X_train))\n    X_duplicate = X_train[exact_duplicate_idx, None]\n    y_duplicate = y_train[exact_duplicate_idx, None]\n    y_duplicate_idx = y_train_idx[exact_duplicate_idx, None]\n\n    # Add to train\n    X_train = np.concatenate([X_train, X_duplicate])\n    y_train = np.concatenate([y_train, y_duplicate])\n    y_train_idx = np.concatenate([y_train_idx, y_duplicate_idx])\n\n    py = np.bincount(y_train_idx) / float(len(y_train_idx))\n    m = len(BINS)\n\n    noise_matrix = generate_noise_matrix_from_trace(\n        m,\n        trace=0.9 * m,\n        py=py,\n        valid_noise_matrix=True,\n        seed=SEED,\n    )\n\n    noisy_labels_idx = generate_noisy_labels(y_train_idx, noise_matrix)\n    noisy_labels = np.array([list(BINS_MAP.keys())[i] for i in noisy_labels_idx])\n\n    return X_train, y_train_idx, noisy_labels, noisy_labels_idx, X_out, X_duplicate\n</pre> # Note: This pulldown content is for docs.cleanlab.ai, if running on local Jupyter or Colab, please ignore it.  from sklearn.model_selection import train_test_split from cleanlab.benchmarking.noise_generation import (     generate_noise_matrix_from_trace,     generate_noisy_labels, )  SEED = 123 np.random.seed(SEED)  BINS = {     \"low\": [-np.inf, 3.3],     \"mid\": [3.3, 6.6],     \"high\": [6.6, +np.inf], }  BINS_MAP = {     \"low\": 0,     \"mid\": 1,     \"high\": 2, }   def create_data():      X = np.random.rand(250, 2) * 5     y = np.sum(X, axis=1)     # Map y to bins based on the BINS dict     y_bin = np.array([k for y_i in y for k, v in BINS.items() if v[0] &lt;= y_i &lt; v[1]])     y_bin_idx = np.array([BINS_MAP[k] for k in y_bin])      # Split into train and test     X_train, X_test, y_train, y_test, y_train_idx, y_test_idx = train_test_split(         X, y_bin, y_bin_idx, test_size=0.5, random_state=SEED     )      # Add several (5) out-of-distribution points. Sliding them along the decision boundaries     # to make them look like they are out-of-frame     X_out = np.array(         [             [-1.5, 3.0],             [-1.75, 6.5],             [1.5, 7.2],             [2.5, -2.0],             [5.5, 7.0],         ]     )     # Add a near duplicate point to the last outlier, with some tiny noise added     near_duplicate = X_out[-1:] + np.random.rand(1, 2) * 1e-6     X_out = np.concatenate([X_out, near_duplicate])      y_out = np.sum(X_out, axis=1)     y_out_bin = np.array([k for y_i in y_out for k, v in BINS.items() if v[0] &lt;= y_i &lt; v[1]])     y_out_bin_idx = np.array([BINS_MAP[k] for k in y_out_bin])      # Add to train     X_train = np.concatenate([X_train, X_out])     y_train = np.concatenate([y_train, y_out])     y_train_idx = np.concatenate([y_train_idx, y_out_bin_idx])      # Add an exact duplicate example to the training set     exact_duplicate_idx = np.random.randint(0, len(X_train))     X_duplicate = X_train[exact_duplicate_idx, None]     y_duplicate = y_train[exact_duplicate_idx, None]     y_duplicate_idx = y_train_idx[exact_duplicate_idx, None]      # Add to train     X_train = np.concatenate([X_train, X_duplicate])     y_train = np.concatenate([y_train, y_duplicate])     y_train_idx = np.concatenate([y_train_idx, y_duplicate_idx])      py = np.bincount(y_train_idx) / float(len(y_train_idx))     m = len(BINS)      noise_matrix = generate_noise_matrix_from_trace(         m,         trace=0.9 * m,         py=py,         valid_noise_matrix=True,         seed=SEED,     )      noisy_labels_idx = generate_noisy_labels(y_train_idx, noise_matrix)     noisy_labels = np.array([list(BINS_MAP.keys())[i] for i in noisy_labels_idx])      return X_train, y_train_idx, noisy_labels, noisy_labels_idx, X_out, X_duplicate In\u00a0[3]: Copied! <pre>X_train, y_train_idx, noisy_labels, noisy_labels_idx, X_out, X_duplicate = create_data()\n</pre> X_train, y_train_idx, noisy_labels, noisy_labels_idx, X_out, X_duplicate = create_data() In\u00a0[4]: Copied! <pre># Note: This pulldown content is for docs.cleanlab.ai, if running on local Jupyter or Colab, please ignore it.\n\nimport matplotlib.pyplot as plt\n\ndef plot_data(X_train, y_train_idx, noisy_labels_idx, X_out, X_duplicate):\n    # Plot data with clean labels and noisy labels, use BINS_MAP for the legend\n    fig, ax = plt.subplots(figsize=(8, 6.5))\n\n    low = ax.scatter(X_train[noisy_labels_idx == 0, 0], X_train[noisy_labels_idx == 0, 1], label=\"low\")\n    mid = ax.scatter(X_train[noisy_labels_idx == 1, 0], X_train[noisy_labels_idx == 1, 1], label=\"mid\")\n    high = ax.scatter(X_train[noisy_labels_idx == 2, 0], X_train[noisy_labels_idx == 2, 1], label=\"high\")\n\n    ax.set_title(\"Noisy labels\")\n    ax.set_xlabel(r\"$x_1$\", fontsize=16)\n    ax.set_ylabel(r\"$x_2$\", fontsize=16)\n\n    # Plot true boundaries (x+y=3.3, x+y=6.6)\n    ax.set_xlim(-3.5, 9.0)\n    ax.set_ylim(-3.5, 9.0)\n    ax.plot([-0.7, 4.0], [4.0, -0.7], color=\"k\", linestyle=\"--\", alpha=0.5)\n    ax.plot([-0.7, 7.3], [7.3, -0.7], color=\"k\", linestyle=\"--\", alpha=0.5)\n\n    # Draw red circles around the points that are misclassified (i.e. the points that are in the wrong bin)\n    for i, (X, y) in enumerate(zip([X_train, X_train], [y_train_idx, noisy_labels_idx])):\n        for j, (k, v) in enumerate(BINS_MAP.items()):\n            label_err = ax.scatter(\n                X[(y == v) &amp; (y != y_train_idx), 0],\n                X[(y == v) &amp; (y != y_train_idx), 1],\n                s=180,\n                marker=\"o\",\n                facecolor=\"none\",\n                edgecolors=\"red\",\n                linewidths=2.5,\n                alpha=0.5,\n                label=\"Label error\",\n            )\n\n\n    outlier = ax.scatter(X_out[:, 0], X_out[:, 1], color=\"k\", marker=\"x\", s=100, linewidth=2, label=\"Outlier\")\n\n    # Plot the exact duplicate\n    dups = ax.scatter(\n        X_duplicate[:, 0],\n        X_duplicate[:, 1],\n        color=\"c\",\n        marker=\"x\",\n        s=100,\n        linewidth=2,\n        label=\"Duplicates\",\n    )\n\n    first_legend = ax.legend(handles=[low, mid, high], loc=[0.75, 0.7], title=\"Given Class Label\", alignment=\"left\", title_fontproperties={\"weight\":\"semibold\"})\n    second_legend = ax.legend(handles=[label_err, outlier, dups], loc=[0.75, 0.45], title=\"Type of Issue\", alignment=\"left\", title_fontproperties={\"weight\":\"semibold\"})\n\n    ax = plt.gca().add_artist(first_legend)\n    ax = plt.gca().add_artist(second_legend)\n    plt.tight_layout()\n</pre> # Note: This pulldown content is for docs.cleanlab.ai, if running on local Jupyter or Colab, please ignore it.  import matplotlib.pyplot as plt  def plot_data(X_train, y_train_idx, noisy_labels_idx, X_out, X_duplicate):     # Plot data with clean labels and noisy labels, use BINS_MAP for the legend     fig, ax = plt.subplots(figsize=(8, 6.5))      low = ax.scatter(X_train[noisy_labels_idx == 0, 0], X_train[noisy_labels_idx == 0, 1], label=\"low\")     mid = ax.scatter(X_train[noisy_labels_idx == 1, 0], X_train[noisy_labels_idx == 1, 1], label=\"mid\")     high = ax.scatter(X_train[noisy_labels_idx == 2, 0], X_train[noisy_labels_idx == 2, 1], label=\"high\")      ax.set_title(\"Noisy labels\")     ax.set_xlabel(r\"$x_1$\", fontsize=16)     ax.set_ylabel(r\"$x_2$\", fontsize=16)      # Plot true boundaries (x+y=3.3, x+y=6.6)     ax.set_xlim(-3.5, 9.0)     ax.set_ylim(-3.5, 9.0)     ax.plot([-0.7, 4.0], [4.0, -0.7], color=\"k\", linestyle=\"--\", alpha=0.5)     ax.plot([-0.7, 7.3], [7.3, -0.7], color=\"k\", linestyle=\"--\", alpha=0.5)      # Draw red circles around the points that are misclassified (i.e. the points that are in the wrong bin)     for i, (X, y) in enumerate(zip([X_train, X_train], [y_train_idx, noisy_labels_idx])):         for j, (k, v) in enumerate(BINS_MAP.items()):             label_err = ax.scatter(                 X[(y == v) &amp; (y != y_train_idx), 0],                 X[(y == v) &amp; (y != y_train_idx), 1],                 s=180,                 marker=\"o\",                 facecolor=\"none\",                 edgecolors=\"red\",                 linewidths=2.5,                 alpha=0.5,                 label=\"Label error\",             )       outlier = ax.scatter(X_out[:, 0], X_out[:, 1], color=\"k\", marker=\"x\", s=100, linewidth=2, label=\"Outlier\")      # Plot the exact duplicate     dups = ax.scatter(         X_duplicate[:, 0],         X_duplicate[:, 1],         color=\"c\",         marker=\"x\",         s=100,         linewidth=2,         label=\"Duplicates\",     )      first_legend = ax.legend(handles=[low, mid, high], loc=[0.75, 0.7], title=\"Given Class Label\", alignment=\"left\", title_fontproperties={\"weight\":\"semibold\"})     second_legend = ax.legend(handles=[label_err, outlier, dups], loc=[0.75, 0.45], title=\"Type of Issue\", alignment=\"left\", title_fontproperties={\"weight\":\"semibold\"})      ax = plt.gca().add_artist(first_legend)     ax = plt.gca().add_artist(second_legend)     plt.tight_layout() In\u00a0[5]: Copied! <pre>plot_data(X_train, y_train_idx, noisy_labels_idx, X_out, X_duplicate)\n</pre> plot_data(X_train, y_train_idx, noisy_labels_idx, X_out, X_duplicate) In\u00a0[6]: Copied! <pre>model = LogisticRegression()\npred_probs = cross_val_predict(\n    estimator=model, X=X_train, y=noisy_labels, cv=5, method=\"predict_proba\"\n)\n</pre> model = LogisticRegression() pred_probs = cross_val_predict(     estimator=model, X=X_train, y=noisy_labels, cv=5, method=\"predict_proba\" ) In\u00a0[7]: Copied! <pre># \u652f\u6301\u7684\u6570\u636e\u7c7b\u578b\u5305\u62ec\uff1aHuggingFace\u6570\u636e\u96c6\u3001DataFrame\ndata = {\"X\": X_train, \"y\": noisy_labels}\n\nlab = Datalab(data, label_name=\"y\")\n</pre> # \u652f\u6301\u7684\u6570\u636e\u7c7b\u578b\u5305\u62ec\uff1aHuggingFace\u6570\u636e\u96c6\u3001DataFrame data = {\"X\": X_train, \"y\": noisy_labels}  lab = Datalab(data, label_name=\"y\") In\u00a0[8]: Copied! <pre>lab.find_issues(pred_probs=pred_probs, issue_types={\"label\": {}})\nlab.report()\n</pre> lab.find_issues(pred_probs=pred_probs, issue_types={\"label\": {}}) lab.report() <pre>Finding label issues ...\n\nAudit complete. 11 issues found in the dataset.\nDataset Information: num_examples: 132, num_classes: 3\n\nHere is a summary of various issues found in your data:\n\nissue_type  num_issues\n     label          11\n\nLearn about each issue: https://docs.cleanlab.ai/stable/cleanlab/datalab/guide/issue_type_description.html\nSee which examples in your dataset exhibit each issue via: `datalab.get_issues(&lt;ISSUE_NAME&gt;)`\n\nData indices corresponding to top examples of each issue are shown below.\n\n\n----------------------- label issues -----------------------\n\nAbout this issue:\n\tExamples whose given label is estimated to be potentially incorrect\n    (e.g. due to annotation error) are flagged as having label issues.\n    \n\nNumber of examples with this issue: 11\nOverall dataset quality in terms of this issue: 0.9318\n\nExamples representing most severe instances of this issue:\n     is_label_issue  label_score given_label predicted_label\n77             True     0.006940        high             mid\n7              True     0.007830         low             mid\n40             True     0.014828         mid             low\n107            True     0.021241        high             mid\n120            True     0.026407        high             mid\n</pre> <p>\u53ef\u4ee5\u7ee7\u7eed\u76d1\u6d4b\u5f02\u5e38\u503c\u548c\u8fd1\u4f3c\u91cd\u590d\u503c\uff0c\u90fd\u5229\u7528\u4e86\u6570\u636e\u7684\u7279\u5f81</p> <p>\u7b2c\u4e8c\u6b21\u8c03\u7528\u4f1a\u66f4\u65b0\u8f93\u51fa<code>report()</code>\uff0c\u53ef\u4ee5\u770b\u5230\u4e0e\u65b0\u95ee\u9898\u4e00\u8d77\u76d1\u6d4b\u5230\u7684\u73b0\u6709\u6807\u7b7e\u95ee\u9898</p> In\u00a0[9]: Copied! <pre>lab.find_issues(features=data[\"X\"], issue_types={\"outlier\": {}, \"near_duplicate\": {}})\nlab.report()\n</pre> lab.find_issues(features=data[\"X\"], issue_types={\"outlier\": {}, \"near_duplicate\": {}}) lab.report() <pre>Finding outlier issues ...\nFinding near_duplicate issues ...\n\nAudit complete. 21 issues found in the dataset.\nDataset Information: num_examples: 132, num_classes: 3\n\nHere is a summary of various issues found in your data:\n\n    issue_type  num_issues\n         label          11\n       outlier           6\nnear_duplicate           4\n\nLearn about each issue: https://docs.cleanlab.ai/stable/cleanlab/datalab/guide/issue_type_description.html\nSee which examples in your dataset exhibit each issue via: `datalab.get_issues(&lt;ISSUE_NAME&gt;)`\n\nData indices corresponding to top examples of each issue are shown below.\n\n\n----------------------- label issues -----------------------\n\nAbout this issue:\n\tExamples whose given label is estimated to be potentially incorrect\n    (e.g. due to annotation error) are flagged as having label issues.\n    \n\nNumber of examples with this issue: 11\nOverall dataset quality in terms of this issue: 0.9318\n\nExamples representing most severe instances of this issue:\n     is_label_issue  label_score given_label predicted_label\n77             True     0.006940        high             mid\n7              True     0.007830         low             mid\n40             True     0.014828         mid             low\n107            True     0.021241        high             mid\n120            True     0.026407        high             mid\n\n\n---------------------- outlier issues ----------------------\n\nAbout this issue:\n\tExamples that are very different from the rest of the dataset \n    (i.e. potentially out-of-distribution or rare/anomalous instances).\n    \n\nNumber of examples with this issue: 6\nOverall dataset quality in terms of this issue: 0.3558\n\nExamples representing most severe instances of this issue:\n     is_outlier_issue  outlier_score\n126              True       0.006636\n130              True       0.012571\n129              True       0.012571\n127              True       0.014909\n128              True       0.017443\n\n\n------------------ near_duplicate issues -------------------\n\nAbout this issue:\n\tA (near) duplicate issue refers to two or more examples in\n    a dataset that are extremely similar to each other, relative\n    to the rest of the dataset.  The examples flagged with this issue\n    may be exactly duplicated, or lie atypically close together when\n    represented as vectors (i.e. feature embeddings).\n    \n\nNumber of examples with this issue: 4\nOverall dataset quality in terms of this issue: 0.6160\n\nExamples representing most severe instances of this issue:\n     is_near_duplicate_issue  near_duplicate_score near_duplicate_sets  distance_to_nearest_neighbor\n131                     True              0.000000               [123]                  0.000000e+00\n123                     True              0.000000               [131]                  0.000000e+00\n129                     True              0.000002               [130]                  4.463180e-07\n130                     True              0.000002               [129]                  4.463180e-07\n51                     False              0.161148                  []                  3.859087e-02\n</pre> In\u00a0[10]: Copied! <pre>lab.find_issues(features=data[\"X\"], issue_types={\"outlier\": {\"k\": 30}})\nlab.report()\n</pre> lab.find_issues(features=data[\"X\"], issue_types={\"outlier\": {\"k\": 30}}) lab.report() <pre>Finding outlier issues ...\n\nAudit complete. 22 issues found in the dataset.\nDataset Information: num_examples: 132, num_classes: 3\n\nHere is a summary of various issues found in your data:\n\n    issue_type  num_issues\n         label          11\n       outlier           7\nnear_duplicate           4\n\nLearn about each issue: https://docs.cleanlab.ai/stable/cleanlab/datalab/guide/issue_type_description.html\nSee which examples in your dataset exhibit each issue via: `datalab.get_issues(&lt;ISSUE_NAME&gt;)`\n\nData indices corresponding to top examples of each issue are shown below.\n\n\n----------------------- label issues -----------------------\n\nAbout this issue:\n\tExamples whose given label is estimated to be potentially incorrect\n    (e.g. due to annotation error) are flagged as having label issues.\n    \n\nNumber of examples with this issue: 11\nOverall dataset quality in terms of this issue: 0.9318\n\nExamples representing most severe instances of this issue:\n     is_label_issue  label_score given_label predicted_label\n77             True     0.006940        high             mid\n7              True     0.007830         low             mid\n40             True     0.014828         mid             low\n107            True     0.021241        high             mid\n120            True     0.026407        high             mid\n\n\n---------------------- outlier issues ----------------------\n\nAbout this issue:\n\tExamples that are very different from the rest of the dataset \n    (i.e. potentially out-of-distribution or rare/anomalous instances).\n    \n\nNumber of examples with this issue: 7\nOverall dataset quality in terms of this issue: 0.3453\n\nExamples representing most severe instances of this issue:\n     is_outlier_issue  outlier_score\n126              True       0.029542\n130              True       0.031182\n129              True       0.031182\n128              True       0.057961\n127              True       0.058244\n\n\n------------------ near_duplicate issues -------------------\n\nAbout this issue:\n\tA (near) duplicate issue refers to two or more examples in\n    a dataset that are extremely similar to each other, relative\n    to the rest of the dataset.  The examples flagged with this issue\n    may be exactly duplicated, or lie atypically close together when\n    represented as vectors (i.e. feature embeddings).\n    \n\nNumber of examples with this issue: 4\nOverall dataset quality in terms of this issue: 0.6160\n\nExamples representing most severe instances of this issue:\n     is_near_duplicate_issue  near_duplicate_score near_duplicate_sets  distance_to_nearest_neighbor\n131                     True              0.000000               [123]                  0.000000e+00\n123                     True              0.000000               [131]                  0.000000e+00\n129                     True              0.000002               [130]                  4.463180e-07\n130                     True              0.000002               [129]                  4.463180e-07\n51                     False              0.161148                  []                  3.859087e-02\n</pre> <pre>C:\\Users\\Artmallo\\PycharmProjects\\MyNote\\.venv\\Lib\\site-packages\\cleanlab\\datalab\\internal\\data_issues.py:348: UserWarning: Overwriting columns ['outlier_score', 'is_outlier_issue'] in self.issues with columns from issue manager OutlierIssueManager.\n  warnings.warn(\nC:\\Users\\Artmallo\\PycharmProjects\\MyNote\\.venv\\Lib\\site-packages\\cleanlab\\datalab\\internal\\data_issues.py:378: UserWarning: Overwriting row in self.issue_summary with row from issue manager OutlierIssueManager.\n  warnings.warn(\nC:\\Users\\Artmallo\\PycharmProjects\\MyNote\\.venv\\Lib\\site-packages\\cleanlab\\datalab\\internal\\data_issues.py:357: UserWarning: Overwriting key outlier in self.info\n  warnings.warn(f\"Overwriting key {issue_name} in self.info\")\n</pre> <p>\u8fd8\u53ef\u4ee5\u589e\u52a0<code>report</code>\u8be6\u7ec6\u7a0b\u5ea6\u4ee5\u67e5\u770b\u6709\u5173\u6570\u636e\u95ee\u9898\u7684\u5176\u4ed6\u4fe1\u606f\uff0c\u5e76\u63a7\u5236\u6bcf\u4e2a\u95ee\u9898\u663e\u793a\u591a\u5c11\u4e2a\u6392\u540d\u9760\u524d\u7684\u793a\u4f8b</p> In\u00a0[11]: Copied! <pre>lab.report(num_examples=10, verbosity=2)\n</pre> lab.report(num_examples=10, verbosity=2) <pre>Dataset Information: num_examples: 132, num_classes: 3\n\nHere is a summary of various issues found in your data:\n\n    issue_type  num_issues\n         label          11\n       outlier           7\nnear_duplicate           4\n\nLearn about each issue: https://docs.cleanlab.ai/stable/cleanlab/datalab/guide/issue_type_description.html\nSee which examples in your dataset exhibit each issue via: `datalab.get_issues(&lt;ISSUE_NAME&gt;)`\n\nData indices corresponding to top examples of each issue are shown below.\n\n\n----------------------- label issues -----------------------\n\nAbout this issue:\n\tExamples whose given label is estimated to be potentially incorrect\n    (e.g. due to annotation error) are flagged as having label issues.\n    \n\nNumber of examples with this issue: 11\nOverall dataset quality in terms of this issue: 0.9318\n\nExamples representing most severe instances of this issue:\n     is_label_issue  label_score given_label predicted_label\n77             True     0.006940        high             mid\n7              True     0.007830         low             mid\n40             True     0.014828         mid             low\n107            True     0.021241        high             mid\n120            True     0.026407        high             mid\n54             True     0.039122         mid             low\n53             True     0.044598        high             mid\n105            True     0.105196         mid            high\n4              True     0.133654        high             mid\n43             True     0.168033        high             mid\n\n\n---------------------- outlier issues ----------------------\n\nAbout this issue:\n\tExamples that are very different from the rest of the dataset \n    (i.e. potentially out-of-distribution or rare/anomalous instances).\n    \n\nNumber of examples with this issue: 7\nOverall dataset quality in terms of this issue: 0.3453\n\nExamples representing most severe instances of this issue:\n     is_outlier_issue  outlier_score\n126              True       0.029542\n130              True       0.031182\n129              True       0.031182\n128              True       0.057961\n127              True       0.058244\n125              True       0.101107\n37               True       0.183382\n109             False       0.209259\n35              False       0.211042\n5               False       0.221316\n\nAdditional Information: \naverage_ood_score: 0.34530442089193386\n\n\n------------------ near_duplicate issues -------------------\n\nAbout this issue:\n\tA (near) duplicate issue refers to two or more examples in\n    a dataset that are extremely similar to each other, relative\n    to the rest of the dataset.  The examples flagged with this issue\n    may be exactly duplicated, or lie atypically close together when\n    represented as vectors (i.e. feature embeddings).\n    \n\nNumber of examples with this issue: 4\nOverall dataset quality in terms of this issue: 0.6160\n\nExamples representing most severe instances of this issue:\n     is_near_duplicate_issue  near_duplicate_score near_duplicate_sets  distance_to_nearest_neighbor\n131                     True              0.000000               [123]                  0.000000e+00\n123                     True              0.000000               [131]                  0.000000e+00\n129                     True              0.000002               [130]                  4.463180e-07\n130                     True              0.000002               [129]                  4.463180e-07\n51                     False              0.161148                  []                  3.859087e-02\n52                     False              0.161148                  []                  3.859087e-02\n5                      False              0.169820                  []                  4.087324e-02\n89                     False              0.169820                  []                  4.087324e-02\n92                     False              0.259024                  []                  6.583757e-02\n91                     False              0.346458                  []                  9.341292e-02\n\nAdditional Information: \nthreshold: 0.13\n</pre> In\u00a0[12]: Copied! <pre>path = \"datalab-files\"\nlab.save(path, force=True)\n</pre> path = \"datalab-files\" lab.save(path, force=True) <pre>Saving the dataset (0/1 shards):   0%|          | 0/132 [00:00&lt;?, ? examples/s]</pre> <pre>Saved Datalab to folder: datalab-files\n</pre> <p>\u52a0\u8f7dDatalab\u6587\u4ef6\u4e2d\u7684\u5bf9\u8c61\u5e76\u67e5\u770b\u5148\u524d\u7684\u68c0\u6d4b\u7ed3\u679c</p> In\u00a0[13]: Copied! <pre>new_lab = Datalab.load(path)\nnew_lab.report()\n</pre> new_lab = Datalab.load(path) new_lab.report() <pre>Datalab loaded from folder: datalab-files\nDataset Information: num_examples: 132, num_classes: 3\n\nHere is a summary of various issues found in your data:\n\n    issue_type  num_issues\n         label          11\n       outlier           7\nnear_duplicate           4\n\nLearn about each issue: https://docs.cleanlab.ai/stable/cleanlab/datalab/guide/issue_type_description.html\nSee which examples in your dataset exhibit each issue via: `datalab.get_issues(&lt;ISSUE_NAME&gt;)`\n\nData indices corresponding to top examples of each issue are shown below.\n\n\n----------------------- label issues -----------------------\n\nAbout this issue:\n\tExamples whose given label is estimated to be potentially incorrect\n    (e.g. due to annotation error) are flagged as having label issues.\n    \n\nNumber of examples with this issue: 11\nOverall dataset quality in terms of this issue: 0.9318\n\nExamples representing most severe instances of this issue:\n     is_label_issue  label_score given_label predicted_label\n77             True     0.006940        high             mid\n7              True     0.007830         low             mid\n40             True     0.014828         mid             low\n107            True     0.021241        high             mid\n120            True     0.026407        high             mid\n\n\n---------------------- outlier issues ----------------------\n\nAbout this issue:\n\tExamples that are very different from the rest of the dataset \n    (i.e. potentially out-of-distribution or rare/anomalous instances).\n    \n\nNumber of examples with this issue: 7\nOverall dataset quality in terms of this issue: 0.3453\n\nExamples representing most severe instances of this issue:\n     is_outlier_issue  outlier_score\n126              True       0.029542\n130              True       0.031182\n129              True       0.031182\n128              True       0.057961\n127              True       0.058244\n\n\n------------------ near_duplicate issues -------------------\n\nAbout this issue:\n\tA (near) duplicate issue refers to two or more examples in\n    a dataset that are extremely similar to each other, relative\n    to the rest of the dataset.  The examples flagged with this issue\n    may be exactly duplicated, or lie atypically close together when\n    represented as vectors (i.e. feature embeddings).\n    \n\nNumber of examples with this issue: 4\nOverall dataset quality in terms of this issue: 0.6160\n\nExamples representing most severe instances of this issue:\n     is_near_duplicate_issue  near_duplicate_score near_duplicate_sets  distance_to_nearest_neighbor\n131                     True              0.000000               [123]                  0.000000e+00\n123                     True              0.000000               [131]                  0.000000e+00\n129                     True              0.000002               [130]                  4.463180e-07\n130                     True              0.000002               [129]                  4.463180e-07\n51                     False              0.161148                  []                  3.859087e-02\n</pre> <p>Datalab\u4e2d\u6240\u6709\u95ee\u9898\u7c7b\u578b\u90fd\u662f\u7ee7\u627f<code>IssueManager</code>\uff0c\u53ea\u9700\u8981\u6ce8\u518c\u4e3a\u5176\u5b50\u7c7b\u5373\u53ef\u81ea\u5b9a\u4e49\u95ee\u9898\u7c7b\u578b</p> In\u00a0[14]: Copied! <pre>from cleanlab.datalab.internal.issue_manager import IssueManager\nfrom cleanlab.datalab.internal.issue_manager_factory import register\n\n\ndef scoring_function(idx: int, div: int = 13) -&gt; float:\n    if idx == 0:\n        # Zero excluded from the divisibility check, gets the highest score\n        return 1\n    rem = idx % div\n    inv_scale = idx // div\n    if rem == 0:\n        return 0.5 * (1 - np.exp(-0.1*(inv_scale-1)))\n    else:\n        return 1 - 0.49 * (1 - np.exp(-inv_scale**0.5))*rem/div\n\n\n@register  # register this issue type for use with Datalab\nclass SuperstitionIssueManager(IssueManager):\n    \"\"\"A custom issue manager that keeps track of issue indices that\n    are divisible by 13.\n    \"\"\"\n    description: str = \"Examples with indices that are divisible by 13 may be unlucky.\"  # Optional\n    issue_name: str = \"superstition\"\n\n    def find_issues(self, div=13, **_) -&gt; None:\n        ids = self.datalab.issues.index.to_series()\n        issues_mask = ids.apply(lambda idx: idx % div == 0 and idx != 0)\n        scores = ids.apply(lambda idx: scoring_function(idx, div))\n        self.issues = pd.DataFrame(\n            {\n                f\"is_{self.issue_name}_issue\": issues_mask,\n                self.issue_score_key: scores,\n            },\n        )\n        summary_score = 1 - sum(issues_mask) / len(issues_mask)\n        self.summary = self.make_summary(score = summary_score)\n</pre> from cleanlab.datalab.internal.issue_manager import IssueManager from cleanlab.datalab.internal.issue_manager_factory import register   def scoring_function(idx: int, div: int = 13) -&gt; float:     if idx == 0:         # Zero excluded from the divisibility check, gets the highest score         return 1     rem = idx % div     inv_scale = idx // div     if rem == 0:         return 0.5 * (1 - np.exp(-0.1*(inv_scale-1)))     else:         return 1 - 0.49 * (1 - np.exp(-inv_scale**0.5))*rem/div   @register  # register this issue type for use with Datalab class SuperstitionIssueManager(IssueManager):     \"\"\"A custom issue manager that keeps track of issue indices that     are divisible by 13.     \"\"\"     description: str = \"Examples with indices that are divisible by 13 may be unlucky.\"  # Optional     issue_name: str = \"superstition\"      def find_issues(self, div=13, **_) -&gt; None:         ids = self.datalab.issues.index.to_series()         issues_mask = ids.apply(lambda idx: idx % div == 0 and idx != 0)         scores = ids.apply(lambda idx: scoring_function(idx, div))         self.issues = pd.DataFrame(             {                 f\"is_{self.issue_name}_issue\": issues_mask,                 self.issue_score_key: scores,             },         )         summary_score = 1 - sum(issues_mask) / len(issues_mask)         self.summary = self.make_summary(score = summary_score) In\u00a0[15]: Copied! <pre>lab.find_issues(issue_types={\"superstition\": {}})\nlab.report()\n</pre> lab.find_issues(issue_types={\"superstition\": {}}) lab.report() <pre>Finding superstition issues ...\n\nAudit complete. 32 issues found in the dataset.\nDataset Information: num_examples: 132, num_classes: 3\n\nHere is a summary of various issues found in your data:\n\n    issue_type  num_issues\n         label          11\n  superstition          10\n       outlier           7\nnear_duplicate           4\n\nLearn about each issue: https://docs.cleanlab.ai/stable/cleanlab/datalab/guide/issue_type_description.html\nSee which examples in your dataset exhibit each issue via: `datalab.get_issues(&lt;ISSUE_NAME&gt;)`\n\nData indices corresponding to top examples of each issue are shown below.\n\n\n----------------------- label issues -----------------------\n\nAbout this issue:\n\tExamples whose given label is estimated to be potentially incorrect\n    (e.g. due to annotation error) are flagged as having label issues.\n    \n\nNumber of examples with this issue: 11\nOverall dataset quality in terms of this issue: 0.9318\n\nExamples representing most severe instances of this issue:\n     is_label_issue  label_score given_label predicted_label\n77             True     0.006940        high             mid\n7              True     0.007830         low             mid\n40             True     0.014828         mid             low\n107            True     0.021241        high             mid\n120            True     0.026407        high             mid\n\n\n------------------- superstition issues --------------------\n\nAbout this issue:\n\tExamples with indices that are divisible by 13 may be unlucky.\n\nNumber of examples with this issue: 10\nOverall dataset quality in terms of this issue: 0.9242\n\nExamples representing most severe instances of this issue:\n    is_superstition_issue  superstition_score\n13                   True            0.000000\n26                   True            0.047581\n39                   True            0.090635\n52                   True            0.129591\n65                   True            0.164840\n\n\n---------------------- outlier issues ----------------------\n\nAbout this issue:\n\tExamples that are very different from the rest of the dataset \n    (i.e. potentially out-of-distribution or rare/anomalous instances).\n    \n\nNumber of examples with this issue: 7\nOverall dataset quality in terms of this issue: 0.3453\n\nExamples representing most severe instances of this issue:\n     is_outlier_issue  outlier_score\n126              True       0.029542\n130              True       0.031182\n129              True       0.031182\n128              True       0.057961\n127              True       0.058244\n\n\n------------------ near_duplicate issues -------------------\n\nAbout this issue:\n\tA (near) duplicate issue refers to two or more examples in\n    a dataset that are extremely similar to each other, relative\n    to the rest of the dataset.  The examples flagged with this issue\n    may be exactly duplicated, or lie atypically close together when\n    represented as vectors (i.e. feature embeddings).\n    \n\nNumber of examples with this issue: 4\nOverall dataset quality in terms of this issue: 0.6160\n\nExamples representing most severe instances of this issue:\n     is_near_duplicate_issue  near_duplicate_score near_duplicate_sets  distance_to_nearest_neighbor\n131                     True              0.000000               [123]                  0.000000e+00\n123                     True              0.000000               [131]                  0.000000e+00\n129                     True              0.000002               [130]                  4.463180e-07\n130                     True              0.000002               [129]                  4.463180e-07\n51                     False              0.161148                  []                  3.859087e-02\n</pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl2/#cleanlab","title":"\ud83c\udf7f CleanLab\u4e4b\u4e8c\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl2/","title":"\u58f9\u4e28\u5bfc\u5165\u4f9d\u8d56\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl2/","title":"\u8d30\u4e28\u521b\u5efa\u5e76\u52a0\u8f7d\u6570\u636e\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl2/#1","title":"1. \u521b\u5efa\u6570\u636e\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl2/#2","title":"2. \u53ef\u89c6\u5316\u6570\u636e\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl2/","title":"\u8d30\u4e28\u4ece\u5206\u7c7b\u5668\u83b7\u53d6\u6837\u672c\u5916\u7684\u9884\u6d4b\u6982\u7387\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl2/#datalab","title":"\u53c1\u4e28\u5b9e\u4f8b\u5316Datalab\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl2/#1","title":"\u529f\u80fd1\uff1a\u589e\u91cf\u95ee\u9898\u641c\u7d22\u00b6","text":"<p>\u53ef\u4ee5\u4f7f\u7528<code>find_issues</code>\u591a\u6b21\u8c03\u7528\u4e00\u4e2a<code>Datalab</code>\u5bf9\u8c61\u6765\u68c0\u6d4b\u4e00\u79cd\u7c7b\u578b\u7684\u95ee\u9898</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl2/#2","title":"\u529f\u80fd2\uff1a\u6307\u5b9a\u975e\u9ed8\u8ba4\u53c2\u6570\u00b6","text":"<p>\u4e0b\u9762\u4ee5\u68c0\u67e5\u5f02\u5e38\u503c\u4e3a\u4f8b\uff0c\u8bf4\u660e\u5982\u4f55\u4f7f\u7528\u4e0d\u540c\u7684\u8bbe\u7f6e\u91cd\u65b0\u8fd0\u884c\u68c0\u67e5\uff0c\u5e76\u8986\u76d6\u539f\u6709\u7ed3\u679c</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl2/#3datalab","title":"\u529f\u80fd3\uff1a\u4fdd\u5b58\u548c\u52a0\u8f7dDatalab\u5bf9\u8c61\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl2/#4issuemanager","title":"\u529f\u80fd4\uff1a\u6dfb\u52a0\u81ea\u5b9a\u4e49IssueManager\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl3/","title":"\ud83c\udf88 CleanLab\u4e4b\u4e09\uff1a\u56de\u5f52\u95ee\u9898","text":"In\u00a0[1]: Copied! <pre>import pandas as pd\nfrom sklearn.ensemble import HistGradientBoostingRegressor\nfrom sklearn.model_selection import cross_val_predict\nfrom sklearn.metrics import r2_score\n\nfrom cleanlab.regression.learn import CleanLearning\n</pre> import pandas as pd from sklearn.ensemble import HistGradientBoostingRegressor from sklearn.model_selection import cross_val_predict from sklearn.metrics import r2_score  from cleanlab.regression.learn import CleanLearning In\u00a0[2]: Copied! <pre>import pandas as pd\n\ntrain_data = pd.read_csv(\"https://s.cleanlab.ai/student_grades_r/train.csv\")\ntest_data = pd.read_csv(\"https://s.cleanlab.ai/student_grades_r/test.csv\")\ntrain_data.head()\n</pre> import pandas as pd  train_data = pd.read_csv(\"https://s.cleanlab.ai/student_grades_r/train.csv\") test_data = pd.read_csv(\"https://s.cleanlab.ai/student_grades_r/test.csv\") train_data.head() Out[2]: exam_1 exam_2 exam_3 notes final_score true_final_score 0 72 81 80 NaN 73.3 73.3 1 89 62 93 NaN 83.8 83.8 2 97 0 94 NaN 73.5 73.5 3 80 76 96 missed class frequently -10 78.6 78.6 4 67 87 95 missed homework frequently -10 74.1 74.1 <p><code>final_score</code>\u4e3a\u566a\u58f0\u5206\u6570\uff0c<code>true_final_score</code>\u4e3a\u771f\u5b9e\u5206\u6570\u3002</p> <p>\u771f\u5b9e\u5206\u6570\u5728\u73b0\u5b9e\u4e2d\u5f80\u5f80\u4e0d\u53ef\u83b7\u53d6\uff0c\u8fd9\u91cc\u4ec5\u505a\u6f14\u793a</p> In\u00a0[3]: Copied! <pre># Note: This pulldown content is for docs.cleanlab.ai, if running on local Jupyter or Colab, please ignore it.\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\n\ndef plot_data(train_data, errors_idx):\n    fig = plt.figure()\n    ax = fig.add_subplot(111, projection='3d')\n\n    x, y, z = train_data[\"exam_1\"], train_data[\"exam_2\"], train_data[\"exam_3\"]\n    labels = train_data[\"final_score\"]\n\n    img = ax.scatter(x, y, z, c=labels, cmap=\"jet\")\n    fig.colorbar(img)\n\n    ax.plot(\n        x.iloc[errors_idx],\n        y.iloc[errors_idx],\n        z.iloc[errors_idx],\n        \"x\",\n        markeredgecolor=\"black\",\n        markersize=10,\n        markeredgewidth=2.5,\n        alpha=0.8,\n        label=\"Label Errors\"\n    )\n    ax.legend()\n</pre> # Note: This pulldown content is for docs.cleanlab.ai, if running on local Jupyter or Colab, please ignore it.  import numpy as np import matplotlib.pyplot as plt from mpl_toolkits.mplot3d import Axes3D  def plot_data(train_data, errors_idx):     fig = plt.figure()     ax = fig.add_subplot(111, projection='3d')      x, y, z = train_data[\"exam_1\"], train_data[\"exam_2\"], train_data[\"exam_3\"]     labels = train_data[\"final_score\"]      img = ax.scatter(x, y, z, c=labels, cmap=\"jet\")     fig.colorbar(img)      ax.plot(         x.iloc[errors_idx],         y.iloc[errors_idx],         z.iloc[errors_idx],         \"x\",         markeredgecolor=\"black\",         markersize=10,         markeredgewidth=2.5,         alpha=0.8,         label=\"Label Errors\"     )     ax.legend() In\u00a0[4]: Copied! <pre>errors_mask = train_data[\"final_score\"] != train_data[\"true_final_score\"]\nerrors_idx = np.where(errors_mask == 1)\n\nplot_data(train_data, errors_idx)\n</pre> errors_mask = train_data[\"final_score\"] != train_data[\"true_final_score\"] errors_idx = np.where(errors_mask == 1)  plot_data(train_data, errors_idx) In\u00a0[5]: Copied! <pre>feature_columns = [\"exam_1\", \"exam_2\", \"exam_3\", \"notes\"]\npredicted_column = \"final_score\"\n\nX_train_raw, y_train = train_data[feature_columns], train_data[predicted_column]\nX_test_raw, y_test = test_data[feature_columns], test_data[predicted_column]\n</pre> feature_columns = [\"exam_1\", \"exam_2\", \"exam_3\", \"notes\"] predicted_column = \"final_score\"  X_train_raw, y_train = train_data[feature_columns], train_data[predicted_column] X_test_raw, y_test = test_data[feature_columns], test_data[predicted_column] <p>\u4f7f\u7528\u72ec\u70ed\u7f16\u7801\u9884\u5904\u7406\u6570\u636e</p> In\u00a0[6]: Copied! <pre>categorical_features = [\"notes\"]\nX_train = pd.get_dummies(X_train_raw, columns=categorical_features)\nX_test = pd.get_dummies(X_test_raw, columns=categorical_features)\n</pre> categorical_features = [\"notes\"] X_train = pd.get_dummies(X_train_raw, columns=categorical_features) X_test = pd.get_dummies(X_test_raw, columns=categorical_features) In\u00a0[7]: Copied! <pre>model = HistGradientBoostingRegressor()\ncl = CleanLearning(model)\n\nlabel_issues = cl.find_label_issues(X_train, y_train)\n</pre> model = HistGradientBoostingRegressor() cl = CleanLearning(model)  label_issues = cl.find_label_issues(X_train, y_train) <p>\u6b64\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2aDataFrame\uff0c\u5305\u542b\u6bcf\u4e2a\u6837\u672c\u7684\u6807\u7b7e\u8d28\u91cf\u5206\u6570\uff080-1\u4e4b\u95f4\uff09\u3002\u5206\u6570\u8d8a\u4f4e\uff0c\u88ab\u9519\u8bef\u6807\u8bb0\u7684\u53ef\u80fd\u6027\u5c31\u8d8a\u5927\u3002</p> In\u00a0[8]: Copied! <pre>label_issues.head()\n</pre> label_issues.head() Out[8]: is_label_issue label_quality given_label predicted_label 0 False 0.230476 73.3 77.058670 1 False 0.804244 83.8 83.212808 2 True 0.050572 73.5 62.947544 3 False 0.280991 78.6 75.172543 4 False 0.466165 74.1 76.343107 In\u00a0[9]: Copied! <pre># \u53ef\u4ee5\u83b7\u53d6\u6807\u8bb0\u6709\u6807\u7b7e\u95ee\u9898\u7684\u6837\u672c\u5b50\u96c6\u6309\u7167\u6807\u7b7e\u8d28\u91cf\u5206\u6570\u6392\u5e8f\u4ee5\u627e\u5230\u6700\u6709\u53ef\u80fd\u6807\u8bb0\u9519\u8bef\u768410\u4e2a\u6837\u672c\u7684\u7d22\u5f15\nidentified_issues = label_issues[label_issues[\"is_label_issue\"] == True]\nlowest_quality_labels = label_issues[\"label_quality\"].argsort()[:10].to_numpy()\nprint(\n    f\"cleanlab found {len(identified_issues)} potential label errors in the dataset.\\n\"\n    f\"Here are indices of the top 10 most likely errors: \\n {lowest_quality_labels}\"\n)\n</pre> # \u53ef\u4ee5\u83b7\u53d6\u6807\u8bb0\u6709\u6807\u7b7e\u95ee\u9898\u7684\u6837\u672c\u5b50\u96c6\u6309\u7167\u6807\u7b7e\u8d28\u91cf\u5206\u6570\u6392\u5e8f\u4ee5\u627e\u5230\u6700\u6709\u53ef\u80fd\u6807\u8bb0\u9519\u8bef\u768410\u4e2a\u6837\u672c\u7684\u7d22\u5f15 identified_issues = label_issues[label_issues[\"is_label_issue\"] == True] lowest_quality_labels = label_issues[\"label_quality\"].argsort()[:10].to_numpy() print(     f\"cleanlab found {len(identified_issues)} potential label errors in the dataset.\\n\"     f\"Here are indices of the top 10 most likely errors: \\n {lowest_quality_labels}\" ) <pre>cleanlab found 141 potential label errors in the dataset.\nHere are indices of the top 10 most likely errors: \n [659  56 318 367 688 560 657 685 305 289]\n</pre> In\u00a0[10]: Copied! <pre>def view_datapoint(index):\n    given_labels = label_issues[\"given_label\"]\n    predicted_labels = label_issues[\"predicted_label\"].round(1)\n    return pd.concat(\n        [X_train_raw, given_labels, predicted_labels], axis=1\n    ).iloc[index]\n\nview_datapoint(lowest_quality_labels[:5])\n</pre> def view_datapoint(index):     given_labels = label_issues[\"given_label\"]     predicted_labels = label_issues[\"predicted_label\"].round(1)     return pd.concat(         [X_train_raw, given_labels, predicted_labels], axis=1     ).iloc[index]  view_datapoint(lowest_quality_labels[:5]) Out[10]: exam_1 exam_2 exam_3 notes given_label predicted_label 659 67 93 93 NaN 17.4 84.7 56 75 83 69 NaN 8.9 72.5 318 41 88 98 missed class frequently -10 0.0 67.0 367 78 0 86 NaN 0.0 57.9 688 91 68 88 NaN 36.3 80.6 In\u00a0[11]: Copied! <pre>baseline_model = HistGradientBoostingRegressor()\nbaseline_model.fit(X_train, y_train)\n\npreds_og = baseline_model.predict(X_test)\nr2_og = r2_score(y_test, preds_og)\nprint(f\"r-squared score of original model: {r2_og:.3f}\")\n</pre> baseline_model = HistGradientBoostingRegressor() baseline_model.fit(X_train, y_train)  preds_og = baseline_model.predict(X_test) r2_og = r2_score(y_test, preds_og) print(f\"r-squared score of original model: {r2_og:.3f}\") <pre>r-squared score of original model: 0.838\n</pre> <p>\u901a\u8fc7<code>label_issues</code>\u53c2\u6570\u4f20\u9012\u5df2\u7ecf\u8ba1\u7b97\u7684\u6807\u7b7e\u95ee\u9898\u3002</p> <p>\u4e0d\u4f20\u9012<code>label_issues</code>\u65f6\uff0c\u5c06\u901a\u8fc7\u4ea4\u53c9\u9a8c\u8bc1\u91cd\u65b0\u4f30\u8ba1</p> In\u00a0[12]: Copied! <pre>found_label_issues = cl.get_label_issues()\ncl.fit(X_train, y_train, label_issues=found_label_issues)\n\npreds_cl = cl.predict(X_test)\nr2_cl = r2_score(y_test, preds_cl)\nprint(f\"r-squared score of cleanlab's model: {r2_cl:.3f}\")\n</pre> found_label_issues = cl.get_label_issues() cl.fit(X_train, y_train, label_issues=found_label_issues)  preds_cl = cl.predict(X_test) r2_cl = r2_score(y_test, preds_cl) print(f\"r-squared score of cleanlab's model: {r2_cl:.3f}\") <pre>r-squared score of cleanlab's model: 0.916\n</pre> In\u00a0[13]: Copied! <pre># Get out-of-sample predictions using cross-validation:\nmodel = HistGradientBoostingRegressor()\npredictions = cross_val_predict(estimator=model, X=X_train, y=y_train)\n\n\nfrom cleanlab import Datalab\n\nlab = Datalab(\n    data=train_data.drop(columns=[\"true_final_score\"]),\n    label_name=\"final_score\",\n    task=\"regression\",\n)\n\nlab.find_issues(\n    pred_probs=predictions,\n    issue_types={\"label\": {}},  # specify we're only interested in label issues here\n)\n\n\nlabel_issues = lab.get_issues(\"label\")\n</pre> # Get out-of-sample predictions using cross-validation: model = HistGradientBoostingRegressor() predictions = cross_val_predict(estimator=model, X=X_train, y=y_train)   from cleanlab import Datalab  lab = Datalab(     data=train_data.drop(columns=[\"true_final_score\"]),     label_name=\"final_score\",     task=\"regression\", )  lab.find_issues(     pred_probs=predictions,     issue_types={\"label\": {}},  # specify we're only interested in label issues here )   label_issues = lab.get_issues(\"label\") <pre>Finding label issues ...\n\nAudit complete. 50 issues found in the dataset.\n</pre> In\u00a0[14]: Copied! <pre>label_issues.sort_values(\"label_score\").head()\n</pre> label_issues.sort_values(\"label_score\").head() Out[14]: is_label_issue label_score given_label predicted_label 318 True 1.968627e-09 0.0 78.228799 659 True 2.646674e-08 17.4 86.402962 56 True 4.323818e-08 8.9 75.952758 160 True 2.422144e-07 0.0 60.456908 367 True 8.465815e-07 0.0 55.753968 <p>\u5efa\u8bae\u4f7f\u7528<code>CleanLearning</code>\u5305\u88c5\u56de\u5f52\u6a21\u578b\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u63d0\u4f9b\u9884\u6d4b\u7ed3\u679c\u3002</p> <p>\u8fd9\u6837\u505a\u53ef\u4ee5\u66f4\u597d\u7684\u8003\u8651\u56de\u5f52\u6a21\u578b\u4e2d\u7684\u4e0d\u786e\u5b9a\u6027\uff08\u5305\u62ec\u968f\u673a\u4e0d\u786e\u5b9a\u6027\u548c\u6a21\u578b\u4e0d\u786e\u5b9a\u6027\uff09</p> In\u00a0[15]: Copied! <pre>lab = Datalab(\n    data=train_data.drop(columns=[\"true_final_score\"]),\n    label_name=\"final_score\",\n    task=\"regression\",\n)\n\nlab.find_issues(\n    features=X_train,\n    issue_types={  # Optional drop this to simultaneously detect many types of data/label issues\n        \"label\": {\n            # Optional: Specify which type of sklearn-compatible regression model is used to find label errors\n            \"clean_learning_kwargs\": {\"model\": HistGradientBoostingRegressor()}\n        }\n    },\n)\n</pre> lab = Datalab(     data=train_data.drop(columns=[\"true_final_score\"]),     label_name=\"final_score\",     task=\"regression\", )  lab.find_issues(     features=X_train,     issue_types={  # Optional drop this to simultaneously detect many types of data/label issues         \"label\": {             # Optional: Specify which type of sklearn-compatible regression model is used to find label errors             \"clean_learning_kwargs\": {\"model\": HistGradientBoostingRegressor()}         }     }, )  <pre>Finding label issues ...\n\nAudit complete. 150 issues found in the dataset.\n</pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl3/#cleanlab","title":"\ud83c\udf88 CleanLab\u4e4b\u4e09\uff1a\u56de\u5f52\u95ee\u9898\u00b6","text":"<p>\u56de\u5f52\u9884\u6d4b\u7684\u662f\u4ef7\u683c\u3001\u6536\u5165\u3001\u5e74\u9f84\u7b49\u6570\u503c\u3002\u56de\u5f52\u6570\u636e\u96c6\u4e2d\u7684\u54cd\u5e94\u503c\u53ef\u80fd\u7531\u4e8e\u4ee5\u4e0b\u539f\u56e0\u800c\u635f\u574f\uff1a\u6570\u636e\u8f93\u5165\u6216\u6d4b\u91cf\u9519\u8bef\u3001\u4f20\u611f\u5668\u6216\u5176\u4ed6\u8fc7\u7a0b\u7684\u566a\u58f0\u6216\u6570\u636e\u7ba1\u9053\u635f\u574f\u3002\u4e3a\u4e86\u67e5\u627e\u6570\u5b57\u5217\u4e2d\u7684\u635f\u574f\u503c\uff0c\u6211\u4eec\u5c06\u5176\u89c6\u4e3a\u76ee\u6807\u503c\uff08\u5373\u6807\u7b7e\uff09\uff0c\u7531\u56de\u5f52\u6a21\u578b\u8fdb\u884c\u9884\u6d4b\uff0c\u7136\u540e\u4f7f\u7528 cleanlab \u786e\u5b9a\u6a21\u578b\u9884\u6d4b\u5728\u504f\u79bb\u89c2\u5bdf\u5230\u7684\u6807\u7b7e\u503c\u65f6\u662f\u5426\u53ef\u4fe1\u3002[^1]</p> <p>[^1]: Find Noisy Labels in Regression Datasets</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl3/","title":"\u58f9\u4e28\u5bfc\u5165\u4f9d\u8d56\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl3/","title":"\u8d30\u4e28\u52a0\u8f7d\u5e76\u5904\u7406\u6570\u636e\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl3/#cleanlab","title":"\u53c1\u4e28\u5b9a\u4e49\u56de\u5f52\u6a21\u578b\u5e76\u4f7f\u7528CleanLab\u67e5\u627e\u6f5c\u5728\u6807\u7b7e\u9519\u8bef\u00b6","text":"<p>\u5b9a\u4e49\u4e00\u4e2a\u76f4\u65b9\u56fe\u68af\u5ea6\u63d0\u5347\u6a21\u578b\uff0c\u5e76\u4f7f\u7528<code>find_label_issues</code>\u65b9\u6cd5\u67e5\u627e\u6570\u636e\u96c6\u7684\u6570\u5b57\u6807\u7b7e\u5217\u4e2d\u7684\u6f5c\u5728\u9519\u8bef\u3002</p> <p>\u53ef\u4ee5\u66ff\u6362\u6210\u4efb\u4f55\u5176\u4ed6\u4e0esklearn\u517c\u5bb9\u7684\u56de\u5f52\u6a21\u578b</p> <p><code>CleanLearning</code>\u901a\u8fc7\u4ea4\u53c9\u9a8c\u8bc1\u548c\u5f15\u5bfc\u6cd5\u5728\u5185\u90e8\u62df\u5408\u56de\u5f52\u6a21\u578b\u7684\u591a\u4e2a\u526f\u672c\uff0c\u4ee5\u8ba1\u7b97\u6570\u636e\u96c6\u7684\u9884\u6d4b\u548c\u4e0d\u786e\u5b9a\u6027\uff0c\u7528\u4e8e\u8bc6\u522b\u6807\u7b7e\u95ee\u9898\u3002</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl3/","title":"\u8086\u4e28\u4ece\u566a\u58f0\u6807\u7b7e\u4e2d\u8bad\u7ec3\u51fa\u66f4\u9c81\u68d2\u7684\u6a21\u578b\u00b6","text":"<p>cleanlab\u53ef\u4ee5\u8fc7\u6ee4\u5608\u6742\u7684\u6837\u672c\u5e76\u5728\u5269\u4f59\u5e72\u51c0\u7684\u6570\u636e\u4e0a\u8bad\u7ec3\u6a21\u578b</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl3/#1","title":"1. \u5efa\u7acb\u57fa\u51c6\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/7%EF%B8%8F%E2%83%A3%20%E7%BD%AE%E4%BF%A1%E5%AD%A6%E4%B9%A0/cl3/","title":"\u4f0d\u4e28\u5728\u56de\u5f52\u6570\u636e\u96c6\u4e2d\u67e5\u627e\u566a\u58f0\u6807\u7b7e\u7684\u5176\u4ed6\u65b9\u6cd5\u00b6","text":"<p>\u5982\u679c\u6a21\u578b\u6216\u6570\u636e\u4e0eCleanLearning\u4e0d\u517c\u5bb9\uff0c\u53ef\u4ee5\u5bf9\u56de\u5f52\u6a21\u578b\u8fd0\u884c\u4ea4\u53c9\u9a8c\u8bc1\u4ee5\u83b7\u53d6\u6837\u672c\u5916\u9884\u6d4b\uff0c\u7136\u540e\u4f7f\u7528Datalab\u8bc4\u4f30\u6570\u636e\u96c6\u4e2d\u6bcf\u4e2a\u6837\u672c\u7684\u8d28\u91cf\u5206\u6570</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/","title":"\ud83c\udf81 \u673a\u5668\u5b66\u4e60/8\ufe0f\u20e3 NGBoost","text":"<ul> <li> <p>NGBoost\u603b\u89c8</p> <p> Getting started</p> </li> <li> <p>B.ipynb</p> <p> Getting started</p> </li> <li> <p>C.ipynb</p> <p> Getting started</p> </li> <li> <p>D.ipynb</p> <p> Getting started</p> </li> <li> <p>E.ipynb</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/A/","title":"\ud83e\udd37\ud83c\udffb NGBoost\u603b\u89c8","text":"<p>NGBoost\u662f\u7ee7xgboost\u3001lightGBM\u3001catboost\u4e4b\u540eboosting\u5bb6\u65cf\u7684\u65b0\u6210\u5458\uff0c\u62e5\u6709\u66f4\u9ad8\u7684\u7cbe\u5ea6\u3001\u4f46\u662f\u7531\u4e8e\u8ba1\u7b97\u590d\u6742\u5ea6\u9ad8\u5bfc\u81f4\u8bad\u7ec3\u548c\u63a8\u7406\u901f\u5ea6\u66f4\u6162\u3002</p> <p>\u5b98\u65b9\u6587\u6863\uff1aUser Guide</p> <p>\u8bba\u6587<sup>2</sup>\uff1ahttps://arxiv.org/abs/1910.03225</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/A/#ngboost","title":"\u58f9\u4e28NGBoost","text":"<p>NGBoost\uff08Natural Gradient Boosting\uff09\u662f\u4e00\u79cd\u6982\u7387\u9884\u6d4b\u6a21\u578b\uff0c\u5b83\u7ed3\u5408\u4e86\u68af\u5ea6\u63d0\u5347\u6811\u548c\u81ea\u7136\u68af\u5ea6\u4e0b\u964d\u7684\u601d\u60f3\u3002</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/A/#1","title":"1. \u6280\u672f\u5206\u6790<sup>3</sup>","text":"<p>\u76f8\u5bf9\u795e\u7ecf\u7f51\u7edc\u7684\u65b9\u6cd5\uff0c\u68af\u5ea6\u63d0\u5347\u65b9\u6cd5\u5728\u7ed3\u6784\u5316\u6216\u8868\u683c\u8f93\u5165\u6570\u636e\u7684\u9884\u6d4b\u51c6\u786e\u5ea6\u65b9\u9762\u901a\u5e38\u8868\u73b0\u66f4\u4f73\u3002</p> <p>NgBoost\u7684\u6838\u5fc3\u601d\u60f3\u662f\u9010\u6b21\u6700\u5c0f\u5316\u8d1f\u68af\u5ea6\u5bf9\u6570\u4f3c\u7136\uff08NLL\uff09\u6765\u6784\u5efa\u4e00\u4e2a\u52a0\u6027\u6a21\u578b\uff0c\u5141\u8bb8\u6211\u4eec\u4ee5\u9012\u589e\u7684\u65b9\u5f0f\u6784\u5efa\u590d\u6742\u7684\u6982\u7387\u6a21\u578b\u3002NGBoost\u901a\u8fc7\u6982\u7387\u9884\u6d4b\uff08\u5305\u62ec\u5b9e\u503c\u8f93\u51fa\uff09\u5b9e\u73b0\u68af\u5ea6\u63d0\u5347\u7684\u9884\u6d4b\u4e0d\u786e\u5b9a\u6027\u4f30\u8ba1\u3002\u81ea\u7136\u68af\u5ea6\u7684\u4f7f\u7528\u514b\u670d\u4e86\u68af\u5ea6\u63d0\u5347\u901a\u7528\u6982\u7387\u9884\u6d4b\u56f0\u96be\u7684\u6280\u672f\u6311\u6218\u3002</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/A/#2","title":"2. \u5e94\u7528\u573a\u666f","text":"<ol> <li>\u98ce\u9669\u8bc4\u4f30\uff1a\u5982\u91d1\u878d\u9886\u57df\u7684\u4fe1\u8d37\u98ce\u9669\u6216\u4fdd\u9669\u884c\u4e1a\u7684\u7d22\u8d54\u6982\u7387\u9884\u6d4b\u3002</li> <li>\u533b\u7597\u8bca\u65ad\uff1a\u9884\u6d4b\u75be\u75c5\u7684\u53d1\u751f\u6982\u7387\u3002</li> <li>\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff1a\u5bf9\u6587\u672c\u5206\u7c7b\u4efb\u52a1\u4e2d\u7684\u7f6e\u4fe1\u5ea6\u8fdb\u884c\u5efa\u6a21\u3002</li> <li>\u65f6\u95f4\u5e8f\u5217\u5206\u6790\uff1a\u9884\u6d4b\u672a\u6765\u8d8b\u52bf\u7684\u6982\u7387\u5206\u5e03\u3002</li> </ol>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/A/#ngboost_1","title":"\u8d30\u4e28NGBoost\u7684\u8d85\u53c2\u6570<sup>1</sup>","text":"NGBRegressorNGBClassifier <pre><code>class NGBRegressor(NGBoost, BaseEstimator):\n    def __init__(\n        self,\n        Dist=Normal,\n        Score=LogScore,\n        Base=default_tree_learner,\n        natural_gradient=True,\n        n_estimators=500,\n        learning_rate=0.01,\n        minibatch_frac=1.0,\n        col_sample=1.0,\n        verbose=True,\n        verbose_eval=100,\n        tol=1e-4,\n        random_state=None,\n        validation_fraction=0.1,\n        early_stopping_rounds=None,\n    ):\n</code></pre> <pre><code>class NGBClassifier(NGBoost, BaseEstimator):\n    def __init__(\n        self,\n        Dist=Bernoulli,\n        Score=LogScore,\n        Base=default_tree_learner,\n        natural_gradient=True,\n        n_estimators=500,\n        learning_rate=0.01,\n        minibatch_frac=1.0,\n        col_sample=1.0,\n        verbose=True,\n        verbose_eval=100,\n        tol=1e-4,\n        random_state=None,\n    ):\n</code></pre> \u53c2\u6570 \u8bf4\u660e \u9ed8\u8ba4 \u53d6\u503c <code>Dist</code> \u6807\u7b7ey\u7684\u5206\u5e03 \u5206\u7c7b\uff1a<code>Bernoulli</code> \u56de\u5f52\uff1a<code>Normal</code> \u5206\u7c7b\uff1a<code>k_categorical</code>\u3001<code>Bernoulli</code> \u56de\u5f52\uff1a<code>Normal</code>\u3001<code>LogNormal</code>\u3001<code>Exponential</code> <code>Score</code> \u635f\u5931\u51fd\u6570 <code>LogScore</code> <code>LogScore</code>\u3001<code>CRPScore</code> <code>Base</code> \u57fa\u5b66\u4e60\u5668 <code>default_tree_learner</code> (max_depth\u4e3a3\u7684\u51b3\u7b56\u6811) \u4efb\u610fsklearn\u56de\u5f52\u6a21\u578b <code>natural_gradient</code> \u81ea\u7136\u68af\u5ea6 <code>True</code> <code>True</code>\uff1a\u81ea\u7136\u68af\u5ea6 <code>False</code>\uff1a\u5e38\u89c4\u68af\u5ea6 <code>n_estimators</code> \u8fed\u4ee3\u6b21\u6570 <code>500</code> <code>int</code> <code>learning_rate</code> \u5b66\u4e60\u901f\u7387 <code>0.01</code> <code>float</code> <code>minibatch_frac</code> \u5c0f\u6279\u91cf\u5927\u5c0f <code>1.0</code> <code>float 0~1</code> <code>col_sample</code> \u5217\u91c7\u6837 <code>1.0</code> <code>float 0~1</code> \u968f\u673a\u9009\u62e9\u7279\u5f81\u6bd4\u4f8b <code>verbose</code> \u53ef\u89c6\u5316 <code>True</code> <code>bool</code> <code>verbose_eval</code> \u65e5\u5fd7\u8be6\u7ec6\u7a0b\u5ea6 <code>100</code> <code>True</code>\uff1a\u6bcf\u4e2a\u8bad\u7ec3\u5468\u671f\u7ed3\u675f\u8f93\u51fa\u8bad\u7ec3\u4fe1\u606f <code>False</code>\uff1a\u4e0d\u8f93\u51fa\u4efb\u4f55\u8bad\u7ec3\u4fe1\u606f <code>int</code>\uff1a\u9694\u591a\u5c11\u4e2a\u8bad\u7ec3\u5468\u671f\u8f93\u51fa\u4e00\u6b21 <code>tol</code> \u635f\u5931\u51fd\u6570\u9608\u503c <code>1e-4</code> <code>float</code> \u635f\u5931\u51fd\u6570\u53d8\u5316\u5c0f\u4e8etol\u65f6\u8bad\u7ec3\u505c\u6b62 <code>random_state</code> \u968f\u673a\u6570\u79cd\u5b50 <code>None</code> <code>int</code> <code>validation_fraction</code> \u9a8c\u8bc1\u6837\u672c\u6bd4\u4f8b <code>0.1</code> <code>float</code> \u8bad\u7ec3\u4e2d\u5212\u5206\u4e00\u90e8\u5206\u6570\u636e\u8bc4\u4f30\u6a21\u578b\u6027\u80fd <code>early_stopping_rounds</code> \u63d0\u524d\u505c\u6b62\u8f6e\u6b21 <code>None</code> <code>int</code> \u8bad\u7ec3\u4e2d\u5728\u6307\u5b9a\u8f6e\u6b21\u5185\u6ca1\u6709\u6539\u5584\uff0c\u5219\u505c\u6b62\u8bad\u7ec3"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/A/#_1","title":"\u53c1\u4e28\u6ce8\u610f\u70b9","text":"<ol> <li>\u4e0d\u652f\u6301\u7c7b\u522b\u578b\u53d8\u91cf\uff08Categorical Variable\uff09\u5165\u6a21\uff0c\u9700\u8981\u81ea\u884c\u7f16\u7801</li> <li>\u4e0d\u652f\u6301\u786e\u5b9e\u6570\u636e\u5165\u6a21\uff0c\u9700\u8981\u81ea\u884c\u586b\u5145</li> <li>\u6a21\u578b\u590d\u6742\u5ea6\u9ad8\uff0c\u8bad\u7ec3\u3001\u63a8\u7406\u901f\u5ea6\u6162\uff0c\u4f46\u901a\u7528\u53c2\u6570\u6548\u679c\u4f9d\u7136\u597d</li> </ol>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/A/#_2","title":"\u53c2\u8003","text":"<ol> <li> <p>\u535a\u5ba2\u56ed\uff0c@ds\u98ce\u63a7\uff0cNGBoost\u53c2\u6570\u8be6\u89e3\u53ca\u5b9e\u6218 \u21a9</p> </li> <li> <p>CSDN\uff0c@\u5b66\u5427\u5b66\u5427\u7ec8\u6210\u5b66\u9738\uff0c\u96c6\u6210\u5b66\u4e60\u2014\u2014NGBoost\u8bba\u6587\u7814\u8bfb\u4e0e\u539f\u7406\u7406\u89e3  \u21a9</p> </li> <li> <p>CSDN\uff0c@\u660e\u4fea\u94a7\uff0c\u63a2\u7d22NgBoost\uff1a\u65af\u5766\u798f\u5927\u5b66\u7684\u9ad8\u6548\u6982\u7387\u9884\u6d4b\u5e93 \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/B/","title":"\ud83e\udd26\ud83c\udffb \u7528\u6cd5","text":"In\u00a0[1]: Copied! <pre>from sklearn.datasets import fetch_california_housing\nfrom sklearn.model_selection import train_test_split\n\nX, Y = fetch_california_housing(return_X_y=True, as_frame=True)\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2)\n</pre> from sklearn.datasets import fetch_california_housing from sklearn.model_selection import train_test_split  X, Y = fetch_california_housing(return_X_y=True, as_frame=True) X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2) In\u00a0[2]: Copied! <pre>from ngboost import NGBRegressor\n\nngb = NGBRegressor().fit(X_train, Y_train)\nY_preds = ngb.predict(X_test)\nY_dists = ngb.pred_dist(X_test)\n</pre> from ngboost import NGBRegressor  ngb = NGBRegressor().fit(X_train, Y_train) Y_preds = ngb.predict(X_test) Y_dists = ngb.pred_dist(X_test) <pre>[iter 0] loss=1.5670 val_loss=0.0000 scale=1.0000 norm=1.1092\n[iter 100] loss=1.1400 val_loss=0.0000 scale=2.0000 norm=1.5566\n[iter 200] loss=0.9289 val_loss=0.0000 scale=1.0000 norm=0.7054\n[iter 300] loss=0.7743 val_loss=0.0000 scale=1.0000 norm=0.6778\n[iter 400] loss=0.7006 val_loss=0.0000 scale=1.0000 norm=0.6768\n</pre> In\u00a0[3]: Copied! <pre>from sklearn.metrics import mean_squared_error\n\n# \u8ba1\u7b97mse\ntest_MSE = mean_squared_error(Y_preds, Y_test)\nprint('Test MSE', test_MSE)\n\n# \u8ba1\u7b97\u8d1f\u4f3c\u7136\u5bf9\u6570\ntest_NLL = -Y_dists.logpdf(Y_test).mean()\nprint('Test NLL', test_NLL)\n</pre> from sklearn.metrics import mean_squared_error  # \u8ba1\u7b97mse test_MSE = mean_squared_error(Y_preds, Y_test) print('Test MSE', test_MSE)  # \u8ba1\u7b97\u8d1f\u4f3c\u7136\u5bf9\u6570 test_NLL = -Y_dists.logpdf(Y_test).mean() print('Test NLL', test_NLL) <pre>Test MSE 0.31496311191332554\nTest NLL 0.7043259666977987\n</pre> In\u00a0[4]: Copied! <pre># \u83b7\u53d6\u4e00\u7ec4\u70b9\u7684\u4f30\u8ba1\u5206\u5e03\u53c2\u6570\nY_dists[0:5].params\n</pre> # \u83b7\u53d6\u4e00\u7ec4\u70b9\u7684\u4f30\u8ba1\u5206\u5e03\u53c2\u6570 Y_dists[0:5].params Out[4]: <pre>{'loc': array([1.42271054, 2.86045558, 2.14404235, 2.06860307, 2.14030303]),\n 'scale': array([0.31714014, 0.51342792, 0.63051949, 0.55790625, 0.37466855])}</pre> <p>NGBoost\u53ef\u4ee5\u4e0e\u591a\u79cd\u5206\u5e03\u4e00\u8d77\u4f7f\u7528\u3002\u5305\u62ec\u56de\u5f52\u5206\u5e03\u548c\u5206\u7c7b\u5206\u5e03</p> <p>\u56de\u5f52\u5206\u5e03\uff1a\u901a\u8fc7<code>NGBRegressor()</code>\u6784\u9020\u51fd\u6570\u4f20\u9012<code>Dist</code>\u53c2\u6570\uff0c\u9ed8\u8ba4\u662f<code>Normal</code></p> \u5206\u5e03 \u53c2\u6570 \u8bc4\u5206\u6307\u6807 \u53c2\u8003 <code>Normal</code> <code>loc</code>\uff0c<code>scale</code> <code>LogScore</code>\uff0c<code>CRPScore</code> <code>scipy.stats.norm</code> <code>LogNormal</code> <code>s</code>\uff0c<code>scale</code> <code>LogScore</code>\uff0c<code>CRPScore</code> <code>scipy.stats.lognorm</code> <code>Exponential</code> <code>scale</code> <code>LogScore</code>\uff0c<code>CRPScore</code> <code>scipy.stats.expon</code> In\u00a0[5]: Copied! <pre>from ngboost.distns import Exponential,Normal\n\nX_reg_train, X_reg_test, Y_reg_train, Y_reg_test = train_test_split(X, Y, test_size=0.2)\n\nngb_norm = NGBRegressor(Dist=Normal, verbose=False).fit(X_reg_train, Y_reg_train)\nngb_exp = NGBRegressor(Dist=Exponential, verbose=False).fit(X_reg_train, Y_reg_train)\n</pre> from ngboost.distns import Exponential,Normal  X_reg_train, X_reg_test, Y_reg_train, Y_reg_test = train_test_split(X, Y, test_size=0.2)  ngb_norm = NGBRegressor(Dist=Normal, verbose=False).fit(X_reg_train, Y_reg_train) ngb_exp = NGBRegressor(Dist=Exponential, verbose=False).fit(X_reg_train, Y_reg_train) <p>\u4e24\u79cd\u9884\u6d4b\u65b9\u6cd5\uff1a</p> <ol> <li><code>predict()</code>\uff0c\u8fd4\u56de\u70b9\u9884\u6d4b</li> <li><code>pred_dist()</code>\uff0c\u8fd4\u56de\u5206\u5e03\u5bf9\u8c61</li> </ol> In\u00a0[6]: Copied! <pre>ngb_norm.predict(X_reg_test)[0:5]\nngb_exp.predict(X_reg_test)[0:5]\nngb_exp.pred_dist(X_reg_test)[0:5].params\n</pre> ngb_norm.predict(X_reg_test)[0:5] ngb_exp.predict(X_reg_test)[0:5] ngb_exp.pred_dist(X_reg_test)[0:5].params Out[6]: <pre>{'scale': array([4.10204883, 3.67173243, 1.88355812, 3.62738977, 1.79807525])}</pre> <p>NGBoost\u4f7f\u7528\u5220\u5931\u4f3c\u7136\u4f5c\u4e3a\u8bc4\u5206\u89c4\u5219\u6765\u5904\u7406\u53f3\u5220\u5931\u6570\u636e\uff0c\u4f7f\u5f97NGBoost\u80fd\u591f\u4f30\u8ba1\u751f\u5b58\u65f6\u95f4\u5206\u5e03\u3002</p> <p>\u76ee\u524d(2024.08)\u5df2\u7ecf\u5b9e\u73b0<code>LogNormal</code>\u3001<code>Exponential</code>\u7684\u53f3\u5220\u5931\u7248\u672c</p> <p>\u53f3\u5220\u5931\u6570\u636e\uff1a\u77e5\u9053\u67d0\u4e2a\u65f6\u95f4\u53d1\u751f\u5728\u65f6\u95f4\u70b9\u540e\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u786e\u5207\u7684\u65f6\u95f4\u3002\u5982\uff1a\u4e00\u9879\u7814\u7a76\u8ddf\u8e2a\u60a3\u80055\u5e74\uff0c\u4e00\u4e9b\u60a3\u8005\u5728\u8ddf\u8e2a\u7ed3\u675f\u65f6\u4f9d\u7136\u6d3b\u7740\uff0c\u90a3\u4e48\u8fd9\u4e9b\u60a3\u8005\u7684\u751f\u5b58\u65f6\u95f4\u662f\u53f3\u5220\u5931\u7684</p> In\u00a0[7]: Copied! <pre>import numpy as np\nfrom ngboost import NGBSurvival\nfrom ngboost.distns import LogNormal\n\nX_surv_train, X_surv_test, Y_surv_train, Y_surv_test = train_test_split(X, Y, test_size=0.2)\n\n# \u5f15\u5165\u7ba1\u7406\u5ba1\u67e5\u6a21\u62df\u751f\u5b58\u6570\u636e\nT_surv_train = np.minimum(Y_surv_train, 3) # \u4e8b\u4ef6\u6216\u5ba1\u67e5\u7684\u65f6\u95f4\nE_surv_train = Y_surv_train &gt; 3 # \u5982\u679c\u662f\u4e8b\u4ef6\u65f6\u95f4\u5219\u4e3a1\uff0c\u5982\u679c\u662f\u5ba1\u67e5\u65f6\u95f4\u5219\u4e3a0\n\nngb = NGBSurvival(Dist=LogNormal).fit(X_surv_train, T_surv_train, E_surv_train)\n</pre> import numpy as np from ngboost import NGBSurvival from ngboost.distns import LogNormal  X_surv_train, X_surv_test, Y_surv_train, Y_surv_test = train_test_split(X, Y, test_size=0.2)  # \u5f15\u5165\u7ba1\u7406\u5ba1\u67e5\u6a21\u62df\u751f\u5b58\u6570\u636e T_surv_train = np.minimum(Y_surv_train, 3) # \u4e8b\u4ef6\u6216\u5ba1\u67e5\u7684\u65f6\u95f4 E_surv_train = Y_surv_train &gt; 3 # \u5982\u679c\u662f\u4e8b\u4ef6\u65f6\u95f4\u5219\u4e3a1\uff0c\u5982\u679c\u662f\u5ba1\u67e5\u65f6\u95f4\u5219\u4e3a0  ngb = NGBSurvival(Dist=LogNormal).fit(X_surv_train, T_surv_train, E_surv_train) <pre>[iter 0] loss=0.9572 val_loss=0.0000 scale=4.0000 norm=2.4033\n[iter 100] loss=0.3118 val_loss=0.0000 scale=2.0000 norm=0.5934\n[iter 200] loss=0.0546 val_loss=0.0000 scale=4.0000 norm=1.0242\n[iter 300] loss=-0.1323 val_loss=0.0000 scale=2.0000 norm=0.4097\n[iter 400] loss=-0.2071 val_loss=0.0000 scale=1.0000 norm=0.1794\n</pre> In\u00a0[8]: Copied! <pre>ngb.predict(X_surv_test)\n</pre> ngb.predict(X_surv_test) Out[8]: <pre>array([2.34018201, 3.05263929, 3.14951764, ..., 2.29411069, 2.97176873,\n       2.85810047])</pre> In\u00a0[9]: Copied! <pre>from ngboost import NGBClassifier\nfrom ngboost.distns import k_categorical, Bernoulli\nfrom sklearn.datasets import load_breast_cancer\n\nX, y = load_breast_cancer(return_X_y=True,as_frame=True)\ny[0:15] = 2 # \u624b\u52a8\u5c062\u5206\u7c7b\u95ee\u9898\u4fee\u6539\u62103\u5206\u7c7b\u95ee\u9898\u5bf9\u5e94\u4e0b\u9762\u7684`Dist=k_categorical(3)`\nX_cls_train, X_cls_test, Y_cls_train, Y_cls_test  = train_test_split(X, y, test_size=0.2)\n\nngb_cat = NGBClassifier(Dist=k_categorical(3), verbose=False)\n_ = ngb_cat.fit(X_cls_train, Y_cls_train) # Y should have only 3 values: {0,1,2}\n</pre> from ngboost import NGBClassifier from ngboost.distns import k_categorical, Bernoulli from sklearn.datasets import load_breast_cancer  X, y = load_breast_cancer(return_X_y=True,as_frame=True) y[0:15] = 2 # \u624b\u52a8\u5c062\u5206\u7c7b\u95ee\u9898\u4fee\u6539\u62103\u5206\u7c7b\u95ee\u9898\u5bf9\u5e94\u4e0b\u9762\u7684`Dist=k_categorical(3)` X_cls_train, X_cls_test, Y_cls_train, Y_cls_test  = train_test_split(X, y, test_size=0.2)  ngb_cat = NGBClassifier(Dist=k_categorical(3), verbose=False) _ = ngb_cat.fit(X_cls_train, Y_cls_train) # Y should have only 3 values: {0,1,2} In\u00a0[10]: Copied! <pre>ngb_cat.predict(X_cls_test)[0:5]#%%\nngb_cat.predict_proba(X_cls_test)[0:5]\nngb_cat.pred_dist(X_cls_test)[0:5].params\n</pre> ngb_cat.predict(X_cls_test)[0:5]#%% ngb_cat.predict_proba(X_cls_test)[0:5] ngb_cat.pred_dist(X_cls_test)[0:5].params Out[10]: <pre>{'p0': array([0.0045647 , 0.99269303, 0.00541314, 0.00409154, 0.09781032]),\n 'p1': array([0.99517851, 0.00686771, 0.99302614, 0.99553533, 0.90158408]),\n 'p2': array([0.00025679, 0.00043926, 0.00156072, 0.00037313, 0.00060561])}</pre> In\u00a0[11]: Copied! <pre>from ngboost.scores import LogScore, CRPScore\n\nNGBRegressor(Dist=Exponential, Score=CRPScore, verbose=False).fit(X_reg_train, Y_reg_train)\nNGBClassifier(Dist=k_categorical(3), Score=LogScore, verbose=False).fit(X_cls_train, Y_cls_train)\n</pre> from ngboost.scores import LogScore, CRPScore  NGBRegressor(Dist=Exponential, Score=CRPScore, verbose=False).fit(X_reg_train, Y_reg_train) NGBClassifier(Dist=k_categorical(3), Score=LogScore, verbose=False).fit(X_cls_train, Y_cls_train) Out[11]: <pre>NGBClassifier(random_state=RandomState(MT19937) at 0x1BAC684D540, verbose=False)</pre>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.\u00a0NGBClassifieriNot fitted<pre>NGBClassifier(random_state=RandomState(MT19937) at 0x1BAC684D540, verbose=False)</pre> Base: DecisionTreeRegressor<pre>DecisionTreeRegressor(criterion='friedman_mse', max_depth=3)</pre> \u00a0DecisionTreeRegressor?Documentation for DecisionTreeRegressor<pre>DecisionTreeRegressor(criterion='friedman_mse', max_depth=3)</pre> In\u00a0[12]: Copied! <pre>from sklearn.tree import DecisionTreeRegressor\n\nlearner = DecisionTreeRegressor(criterion='friedman_mse', max_depth=5)\nNGBSurvival(Dist=Exponential,Score=CRPScore,Base=learner,verbose=True).fit(X_surv_train,T_surv_train,E_surv_train)\n</pre> from sklearn.tree import DecisionTreeRegressor  learner = DecisionTreeRegressor(criterion='friedman_mse', max_depth=5) NGBSurvival(Dist=Exponential,Score=CRPScore,Base=learner,verbose=True).fit(X_surv_train,T_surv_train,E_surv_train) <pre>[iter 0] loss=0.5616 val_loss=0.0000 scale=2.0000 norm=0.9975\n[iter 100] loss=0.4483 val_loss=0.0000 scale=2.0000 norm=0.4613\n[iter 200] loss=0.4358 val_loss=0.0000 scale=2.0000 norm=0.3779\n[iter 300] loss=0.4329 val_loss=0.0000 scale=1.0000 norm=0.1789\n[iter 400] loss=0.4308 val_loss=0.0000 scale=1.0000 norm=0.1714\n</pre> Out[12]: <pre>NGBSurvival(Base=DecisionTreeRegressor(criterion='friedman_mse', max_depth=5),\n            Dist=&lt;class 'ngboost.distns.utils.SurvivalDistnClass.&lt;locals&gt;.SurvivalDistn'&gt;,\n            Score=&lt;class 'ngboost.scores.CRPScore'&gt;,\n            random_state=RandomState(MT19937) at 0x1BAC684D540)</pre>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.\u00a0NGBSurvivaliNot fitted<pre>NGBSurvival(Base=DecisionTreeRegressor(criterion='friedman_mse', max_depth=5),\n            Dist=&lt;class 'ngboost.distns.utils.SurvivalDistnClass.&lt;locals&gt;.SurvivalDistn'&gt;,\n            Score=&lt;class 'ngboost.scores.CRPScore'&gt;,\n            random_state=RandomState(MT19937) at 0x1BAC684D540)</pre> Base: DecisionTreeRegressor<pre>DecisionTreeRegressor(criterion='friedman_mse', max_depth=5)</pre> \u00a0DecisionTreeRegressor?Documentation for DecisionTreeRegressor<pre>DecisionTreeRegressor(criterion='friedman_mse', max_depth=5)</pre> In\u00a0[13]: Copied! <pre>ngb = NGBRegressor(n_estimators=100, learning_rate=0.01,\n                   minibatch_frac=0.5, col_sample=0.5)\nngb.fit(X_reg_train, Y_reg_train)\n</pre> ngb = NGBRegressor(n_estimators=100, learning_rate=0.01,                    minibatch_frac=0.5, col_sample=0.5) ngb.fit(X_reg_train, Y_reg_train) <pre>[iter 0] loss=1.5589 val_loss=0.0000 scale=1.0000 norm=1.1022\n</pre> Out[13]: <pre>NGBRegressor(col_sample=0.5, minibatch_frac=0.5, n_estimators=100,\n             random_state=RandomState(MT19937) at 0x1BAC684D540)</pre>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.\u00a0NGBRegressoriNot fitted<pre>NGBRegressor(col_sample=0.5, minibatch_frac=0.5, n_estimators=100,\n             random_state=RandomState(MT19937) at 0x1BAC684D540)</pre> Base: DecisionTreeRegressor<pre>DecisionTreeRegressor(criterion='friedman_mse', max_depth=3)</pre> \u00a0DecisionTreeRegressor?Documentation for DecisionTreeRegressor<pre>DecisionTreeRegressor(criterion='friedman_mse', max_depth=3)</pre> In\u00a0[14]: Copied! <pre>ngb = NGBRegressor(n_estimators=100, learning_rate=0.01,\n                   minibatch_frac=0.5, col_sample=0.5)\nweights = np.random.random(Y_reg_train.shape)\nngb.fit(X_reg_train, Y_reg_train, sample_weight=weights)\n</pre> ngb = NGBRegressor(n_estimators=100, learning_rate=0.01,                    minibatch_frac=0.5, col_sample=0.5) weights = np.random.random(Y_reg_train.shape) ngb.fit(X_reg_train, Y_reg_train, sample_weight=weights) <pre>[iter 0] loss=1.5539 val_loss=0.0000 scale=1.0000 norm=1.0987\n</pre> Out[14]: <pre>NGBRegressor(col_sample=0.5, minibatch_frac=0.5, n_estimators=100,\n             random_state=RandomState(MT19937) at 0x1BAC684D540)</pre>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.\u00a0NGBRegressoriNot fitted<pre>NGBRegressor(col_sample=0.5, minibatch_frac=0.5, n_estimators=100,\n             random_state=RandomState(MT19937) at 0x1BAC684D540)</pre> Base: DecisionTreeRegressor<pre>DecisionTreeRegressor(criterion='friedman_mse', max_depth=3)</pre> \u00a0DecisionTreeRegressor?Documentation for DecisionTreeRegressor<pre>DecisionTreeRegressor(criterion='friedman_mse', max_depth=3)</pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/B/","title":"\ud83e\udd26\ud83c\udffb \u7528\u6cd5\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/B/#2","title":"2. \u5206\u7c7b\u5206\u5e03\u00b6","text":"<p>\u5206\u7c7b\u5206\u5e03\uff1a\u901a\u8fc7<code>NGBClassifier()</code>\u6784\u9020\u51fd\u6570\uff0c\u5e76\u901a\u8fc7<code>Dist</code>\u53c2\u6570\u4f20\u5165\u5206\u7c7b\u5206\u5e03\uff0c\u9ed8\u8ba4\u662f<code>Bernoulli</code>\uff0c\u76f8\u5f53\u4e8e<code>k_categorical(2)</code></p> \u5206\u5e03 \u53c2\u6570 \u8bc4\u5206\u6307\u6807 \u53c2\u8003 <code>k_categorical(K)</code> <code>p0</code>\uff0c<code>p1</code>...<code>p{K-1}</code> <code>LogScore</code> Categorical distribution on Wikipedia <code>Bernoulli</code> <code>p</code> <code>LogScore</code> Bernoulli distribution on Wikipedia <p><code>NGBClassifier</code>\u5bf9\u8c61\u6709\u4e09\u79cd\u9884\u6d4b\u65b9\u6cd5\uff1a</p> <ul> <li><code>predict()</code>\uff1a\u8fd4\u56de\u6700\u53ef\u80fd\u7684\u7c7b</li> <li><code>predict_proba()</code>\uff1a\u8fd4\u56de\u7c7b\u6982\u7387</li> <li><code>pred_dist()</code>\uff1a\u8fd4\u56de\u5206\u5e03\u5bf9\u8c61</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/B/","title":"\u8bc4\u4ef7\u5206\u6570\u00b6","text":"<p><code>NGBoost</code>\u652f\u6301<code>LogScore</code>(\u5bf9\u6570\u5206\u6570\uff0c\u4e5f\u79f0\u8d1f\u5bf9\u6570\u4f3c\u7136)\u548c<code>CRPScore</code>\uff0c\u7531\u6784\u9020\u51fd\u6570\u4e2d\u7684<code>Score</code>\u53c2\u6570\u6307\u5b9a</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/B/","title":"\u57fa\u5b66\u4e60\u5668\u00b6","text":"<p><code>NGBoost</code>\u53ef\u4ee5\u4e0e\u4efb\u4f55<code>sklearn</code>\u56de\u5f52\u5668\u4f7f\u7528\u4f5c\u4e3a\u57fa\u7840\u5b66\u4e60\u5668\uff0c\u7531\u6784\u9020\u51fd\u6570\u4e2d<code>Base</code>\u53c2\u6570\u6307\u5b9a\u3002\u9ed8\u8ba4\u662f\u6df1\u5ea6\u4e3a3\u7684\u56de\u5f52\u6811</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/B/","title":"\u5176\u4ed6\u53c2\u6570\u00b6","text":"<p>\u6784\u9020\u51fd\u6570\u4e2d\u914d\u7f6e\uff1a</p> <p><code>learning_rate</code>\uff1a\u5b66\u4e60\u7387</p> <p><code>n_estimators</code>\uff1a\u4f30\u8ba1\u5668\u6570\u91cf</p> <p><code>minibatch_frac</code>\uff1a\u5c0f\u6279\u91cf\u5206\u6570</p> <p><code>col_sample</code>\uff1a\u5217\u5b50\u91c7\u6837</p> <p><code>fit</code>\u51fd\u6570\u4e2d\u914d\u7f6e\uff1a</p> <p><code>sample_weight</code>\uff1a\u6837\u672c\u6743\u91cd</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/C/","title":"\ud83d\ude46\ud83c\udffb \u6a21\u578b\u5fae\u8c03","text":"In\u00a0[1]: Copied! <pre>from sklearn.datasets import load_breast_cancer\nfrom sklearn.model_selection import train_test_split\n\nX, y = load_breast_cancer(return_X_y=True, as_frame=True)\ny[0:15] = 2  # \u624b\u52a8\u5c062\u5206\u7c7b\u95ee\u9898\u4fee\u6539\u62103\u5206\u7c7b\u95ee\u9898\u5bf9\u5e94\u4e0b\u9762\u7684`Dist=k_categorical(3)`\nX_cls_train, X_cls_test, Y_cls_train, Y_cls_test = train_test_split(X, y, test_size=0.2)\n</pre> from sklearn.datasets import load_breast_cancer from sklearn.model_selection import train_test_split  X, y = load_breast_cancer(return_X_y=True, as_frame=True) y[0:15] = 2  # \u624b\u52a8\u5c062\u5206\u7c7b\u95ee\u9898\u4fee\u6539\u62103\u5206\u7c7b\u95ee\u9898\u5bf9\u5e94\u4e0b\u9762\u7684`Dist=k_categorical(3)` X_cls_train, X_cls_test, Y_cls_train, Y_cls_test = train_test_split(X, y, test_size=0.2) In\u00a0[2]: Copied! <pre>from ngboost import NGBClassifier\nfrom ngboost.distns import k_categorical, Bernoulli\nfrom ngboost.scores import LogScore\n\nngb_cls = NGBClassifier(Dist=k_categorical(3), Score=LogScore, n_estimators=500, verbose=False).fit(X_cls_train, Y_cls_train)\n</pre> from ngboost import NGBClassifier from ngboost.distns import k_categorical, Bernoulli from ngboost.scores import LogScore  ngb_cls = NGBClassifier(Dist=k_categorical(3), Score=LogScore, n_estimators=500, verbose=False).fit(X_cls_train, Y_cls_train) In\u00a0[\u00a0]: Copied! <pre>ngb_cls.staged_predict(X_cls_train)\n</pre> ngb_cls.staged_predict(X_cls_train) In\u00a0[4]: Copied! <pre>from ngboost import NGBRegressor\n\nfrom sklearn.datasets import fetch_california_housing\nfrom sklearn.model_selection import train_test_split\n\nX, Y = fetch_california_housing(return_X_y=True, as_frame=True)\nX_reg_train, X_reg_test, Y_reg_train, Y_reg_test = train_test_split(X, Y, test_size=0.2)\n\n_ = NGBRegressor().fit(X_reg_train, Y_reg_train, X_val=X_reg_test, Y_val=Y_reg_test, early_stopping_rounds=2)\n</pre> from ngboost import NGBRegressor  from sklearn.datasets import fetch_california_housing from sklearn.model_selection import train_test_split  X, Y = fetch_california_housing(return_X_y=True, as_frame=True) X_reg_train, X_reg_test, Y_reg_train, Y_reg_test = train_test_split(X, Y, test_size=0.2)  _ = NGBRegressor().fit(X_reg_train, Y_reg_train, X_val=X_reg_test, Y_val=Y_reg_test, early_stopping_rounds=2) <pre>[iter 0] loss=1.5641 val_loss=1.5444 scale=1.0000 norm=1.1066\n[iter 100] loss=1.1366 val_loss=1.1271 scale=2.0000 norm=1.5541\n[iter 200] loss=0.9167 val_loss=0.9139 scale=1.0000 norm=0.7047\n[iter 300] loss=0.7755 val_loss=0.7840 scale=1.0000 norm=0.6812\n[iter 400] loss=0.7027 val_loss=0.7235 scale=1.0000 norm=0.6786\n</pre> In\u00a0[5]: Copied! <pre>from sklearn.model_selection import GridSearchCV\nfrom sklearn.tree import DecisionTreeRegressor\nfrom ngboost.distns import Exponential,Normal\n\nb1 = DecisionTreeRegressor(criterion='friedman_mse', max_depth=2)\nb2 = DecisionTreeRegressor(criterion='friedman_mse', max_depth=4)\n\nparam_grid = {\n    'minibatch_frac': [1.0, 0.5],\n    'Base': [b1, b2]\n}\n\nngb = NGBRegressor(Dist=Normal, verbose=False)\n\ngrid_search = GridSearchCV(ngb, param_grid=param_grid, cv=5)\ngrid_search.fit(X_reg_train, Y_reg_train)\nprint(grid_search.best_params_)\n</pre> from sklearn.model_selection import GridSearchCV from sklearn.tree import DecisionTreeRegressor from ngboost.distns import Exponential,Normal  b1 = DecisionTreeRegressor(criterion='friedman_mse', max_depth=2) b2 = DecisionTreeRegressor(criterion='friedman_mse', max_depth=4)  param_grid = {     'minibatch_frac': [1.0, 0.5],     'Base': [b1, b2] }  ngb = NGBRegressor(Dist=Normal, verbose=False)  grid_search = GridSearchCV(ngb, param_grid=param_grid, cv=5) grid_search.fit(X_reg_train, Y_reg_train) print(grid_search.best_params_) <pre>{'Base': DecisionTreeRegressor(criterion='friedman_mse', max_depth=2), 'minibatch_frac': 1.0}\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/C/","title":"\ud83d\ude46\ud83c\udffb \u6a21\u578b\u5fae\u8c03\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/C/","title":"\u58f9\u4e28\u5206\u9636\u6bb5\u9884\u6d4b\u00b6","text":"<p>NGBoost \u7684 Staged Prediction \u662f\u4e00\u79cd\u7528\u4e8e\u83b7\u53d6\u6a21\u578b\u5728\u4e0d\u540c\u8bad\u7ec3\u9636\u6bb5\u7684\u9884\u6d4b\u7ed3\u679c\u7684\u529f\u80fd\u3002\u8fd9\u79cd\u65b9\u6cd5\u5141\u8bb8\u7528\u6237\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u67e5\u770b\u6a21\u578b\u5728\u6bcf\u4e2a\u9636\u6bb5\u7684\u6027\u80fd</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/C/","title":"\u8d30\u4e28\u63d0\u524d\u7ed3\u675f\u00b6","text":"<p>\u5c06\u4e00\u4e2a\u6574\u6570<code>early_stopping_rounds</code>\u548c\u4e00\u4e2a\u9a8c\u8bc1\u96c6(<code>X_val</code>, <code>Y_val</code>)\u4f20\u9012\u7ed9<code>fit()</code>\uff0c\u5219\u4f1a\u5728\u9a8c\u8bc1\u635f\u5931+<code>early_stopping_rounds</code>\u540e\u505c\u6b62\u7b97\u6cd5</p> <p>\u9a8c\u8bc1\u96c6\u6570\u636e\u6743\u91cd\u53ef\u4ee5\u901a\u8fc7<code>val_sample_weight</code>\u53c2\u6570\u4f20\u7ed9<code>fit()</code></p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/C/#sklearn","title":"\u53c1\u4e28\u4f7f\u7528sklearn\u6a21\u578b\u9009\u62e9\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/D/","title":"\ud83d\ude4d\ud83c\udffb \u6a21\u578b\u53ef\u89e3\u91ca\u6027","text":"In\u00a0[1]: Copied! <pre>from ngboost import NGBRegressor\n\nfrom sklearn.datasets import fetch_california_housing\nfrom sklearn.model_selection import train_test_split\n\nX, Y = fetch_california_housing(return_X_y=True, as_frame=True)\nX_reg_train, X_reg_test, Y_reg_train, Y_reg_test = train_test_split(X, Y, test_size=0.2)\n\nngb = NGBRegressor(verbose=False).fit(X_reg_train, Y_reg_train)\n\n# \u4f4d\u7f6e\u6811\u7684\u7279\u5f81\u91cd\u8981\u6027\nfeature_importance_loc = ngb.feature_importances_[0]\n\n# \u5c3a\u5ea6\u6811\u7684\u7279\u5f81\u91cd\u8981\u6027\nfeature_importance_scale = ngb.feature_importances_[1]\n</pre> from ngboost import NGBRegressor  from sklearn.datasets import fetch_california_housing from sklearn.model_selection import train_test_split  X, Y = fetch_california_housing(return_X_y=True, as_frame=True) X_reg_train, X_reg_test, Y_reg_train, Y_reg_test = train_test_split(X, Y, test_size=0.2)  ngb = NGBRegressor(verbose=False).fit(X_reg_train, Y_reg_train)  # \u4f4d\u7f6e\u6811\u7684\u7279\u5f81\u91cd\u8981\u6027 feature_importance_loc = ngb.feature_importances_[0]  # \u5c3a\u5ea6\u6811\u7684\u7279\u5f81\u91cd\u8981\u6027 feature_importance_scale = ngb.feature_importances_[1] In\u00a0[2]: Copied! <pre>import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndf_loc = pd.DataFrame({'feature':fetch_california_housing()['feature_names'],\n                       'importance':feature_importance_loc}) \\\n    .sort_values('importance',ascending=False)\ndf_scale = pd.DataFrame({'feature':fetch_california_housing()['feature_names'],\n                         'importance':feature_importance_scale}) \\\n    .sort_values('importance',ascending=False)\n\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(13,6))\nfig.suptitle(\"Feature importance plot for distribution parameters\", fontsize=17)\nsns.barplot(x='importance',y='feature',ax=ax1,data=df_loc, color=\"skyblue\").set_title('loc param')\nsns.barplot(x='importance',y='feature',ax=ax2,data=df_scale, color=\"skyblue\").set_title('scale param')\n</pre> import pandas as pd import matplotlib.pyplot as plt import seaborn as sns  df_loc = pd.DataFrame({'feature':fetch_california_housing()['feature_names'],                        'importance':feature_importance_loc}) \\     .sort_values('importance',ascending=False) df_scale = pd.DataFrame({'feature':fetch_california_housing()['feature_names'],                          'importance':feature_importance_scale}) \\     .sort_values('importance',ascending=False)  fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(13,6)) fig.suptitle(\"Feature importance plot for distribution parameters\", fontsize=17) sns.barplot(x='importance',y='feature',ax=ax1,data=df_loc, color=\"skyblue\").set_title('loc param') sns.barplot(x='importance',y='feature',ax=ax2,data=df_scale, color=\"skyblue\").set_title('scale param') Out[2]: <pre>Text(0.5, 1.0, 'scale param')</pre> In\u00a0[3]: Copied! <pre>import shap\nshap.initjs()\n\n# \u4e3a\u4f4d\u7f6e\u6811\u7ed8\u5236SHAP\u56fe\nexplainer = shap.TreeExplainer(ngb, model_output=0) # model_output = 1 \u662f\u5c3a\u5ea6\u6811\nshap_values = explainer.shap_values(X_reg_train)\nshap.summary_plot(shap_values, X_reg_train, feature_names=fetch_california_housing()['feature_names'])\n</pre> import shap shap.initjs()  # \u4e3a\u4f4d\u7f6e\u6811\u7ed8\u5236SHAP\u56fe explainer = shap.TreeExplainer(ngb, model_output=0) # model_output = 1 \u662f\u5c3a\u5ea6\u6811 shap_values = explainer.shap_values(X_reg_train) shap.summary_plot(shap_values, X_reg_train, feature_names=fetch_california_housing()['feature_names'])"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/D/","title":"\ud83d\ude4d\ud83c\udffb \u6a21\u578b\u53ef\u89e3\u91ca\u6027\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/D/","title":"\u58f9\u4e28\u7279\u5f81\u91cd\u8981\u6027\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/D/#shap","title":"\u8d30\u4e28SHAP\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/E/","title":"\ud83d\ude4b\ud83c\udffb \u6a21\u578b\u4fdd\u5b58&amp;\u52a0\u8f7d","text":"In\u00a0[1]: Copied! <pre>from ngboost import NGBRegressor\n\nfrom sklearn.datasets import fetch_california_housing\nfrom sklearn.model_selection import train_test_split\n\nX, Y = fetch_california_housing(return_X_y=True, as_frame=True)\nX_reg_train, X_reg_test, Y_reg_train, Y_reg_test = train_test_split(X, Y, test_size=0.2)\n\nngb = NGBRegressor().fit(X_reg_train, Y_reg_train)\n</pre> from ngboost import NGBRegressor  from sklearn.datasets import fetch_california_housing from sklearn.model_selection import train_test_split  X, Y = fetch_california_housing(return_X_y=True, as_frame=True) X_reg_train, X_reg_test, Y_reg_train, Y_reg_test = train_test_split(X, Y, test_size=0.2)  ngb = NGBRegressor().fit(X_reg_train, Y_reg_train) <pre>[iter 0] loss=1.5650 val_loss=0.0000 scale=1.0000 norm=1.1076\n[iter 100] loss=1.1282 val_loss=0.0000 scale=1.0000 norm=0.7727\n[iter 200] loss=0.9069 val_loss=0.0000 scale=1.0000 norm=0.7003\n[iter 300] loss=0.7586 val_loss=0.0000 scale=2.0000 norm=1.3529\n[iter 400] loss=0.6875 val_loss=0.0000 scale=1.0000 norm=0.6776\n</pre> In\u00a0[2]: Copied! <pre>import pickle\nfrom pathlib import Path\n\n# file_path = Path.home()/'Desktop'/'ngbtest.p'\nfile_path = Path.cwd()/'ngtest.p'\n\nwith file_path.open(\"wb\") as f:\n    pickle.dump(ngb, f)\n</pre> import pickle from pathlib import Path  # file_path = Path.home()/'Desktop'/'ngbtest.p' file_path = Path.cwd()/'ngtest.p'  with file_path.open(\"wb\") as f:     pickle.dump(ngb, f) In\u00a0[3]: Copied! <pre>with file_path.open(\"rb\") as f:\n    ngb_unpickled = pickle.load(f)\n</pre> with file_path.open(\"rb\") as f:     ngb_unpickled = pickle.load(f) In\u00a0[4]: Copied! <pre>Y_preds = ngb_unpickled.predict(X_reg_test)\nY_dists = ngb_unpickled.pred_dist(X_reg_test)\n\nY_dists[0:5].params\n</pre> Y_preds = ngb_unpickled.predict(X_reg_test) Y_dists = ngb_unpickled.pred_dist(X_reg_test)  Y_dists[0:5].params Out[4]: <pre>{'loc': array([2.51734662, 2.67314501, 1.27700306, 1.95835727, 2.35964955]),\n 'scale': array([0.592938  , 0.61716588, 0.49899312, 0.39302516, 0.63571354])}</pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/E/","title":"\ud83d\ude4b\ud83c\udffb \u6a21\u578b\u4fdd\u5b58&amp;\u52a0\u8f7d\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/8%EF%B8%8F%E2%83%A3%20NGBoost/E/","title":"\u8d30\u4e28\u52a0\u8f7d\u6a21\u578b\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/","title":"\ud83c\udf81 \u673a\u5668\u5b66\u4e60/9\ufe0f\u20e3 CatBoost","text":"<ul> <li> <p>A0.ipynb</p> <p> Getting started</p> </li> <li> <p>fit</p> <p> Getting started</p> </li> <li> <p>predict</p> <p> Getting started</p> </li> <li> <p>calc_feature_statistics</p> <p> Getting started</p> </li> <li> <p>calc_leaf_indexes</p> <p> Getting started</p> </li> <li> <p>compare</p> <p> Getting started</p> </li> <li> <p>copy</p> <p> Getting started</p> </li> <li> <p>eval_metrics</p> <p> Getting started</p> </li> <li> <p>get_all_params</p> <p> Getting started</p> </li> <li> <p>get_best_iteration</p> <p> Getting started</p> </li> <li> <p>get_best_score</p> <p> Getting started</p> </li> <li> <p>get_borders</p> <p> Getting started</p> </li> <li> <p>get_evals_result</p> <p> Getting started</p> </li> <li> <p>get_feature_importance</p> <p> Getting started</p> </li> <li> <p>get_object_importance</p> <p> Getting started</p> </li> <li> <p>get_param</p> <p> Getting started</p> </li> <li> <p>get_params</p> <p> Getting started</p> </li> <li> <p>get_scale_and_bias</p> <p> Getting started</p> </li> <li> <p>get_test_eval</p> <p> Getting started</p> </li> <li> <p>grid_search</p> <p> Getting started</p> </li> <li> <p>is_fitted</p> <p> Getting started</p> </li> <li> <p>load_model</p> <p> Getting started</p> </li> <li> <p>plot_predictions</p> <p> Getting started</p> </li> <li> <p>plot_tree</p> <p> Getting started</p> </li> <li> <p>randomized_search</p> <p> Getting started</p> </li> <li> <p>save_borders</p> <p> Getting started</p> </li> <li> <p>save_model</p> <p> Getting started</p> </li> <li> <p>select_features</p> <p> Getting started</p> </li> <li> <p>set_feature_names</p> <p> Getting started</p> </li> <li> <p>set_params</p> <p> Getting started</p> </li> <li> <p>set_scale_and_bias</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/A0/","title":"\u26c4 Catboost\u5b9e\u4f8b","text":"In\u00a0[1]: Copied! <pre>from sklearn.datasets import fetch_california_housing\nfrom sklearn.model_selection import train_test_split\n\nX, Y = fetch_california_housing(return_X_y=True, as_frame=True)\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2)\n</pre> from sklearn.datasets import fetch_california_housing from sklearn.model_selection import train_test_split  X, Y = fetch_california_housing(return_X_y=True, as_frame=True) X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2) In\u00a0[2]: Copied! <pre>from catboost import CatBoost\n\nmodel = CatBoost()\nmodel.fit(X_train, Y_train, verbose=False)\n</pre> from catboost import CatBoost  model = CatBoost() model.fit(X_train, Y_train, verbose=False) Out[2]: <pre>&lt;catboost.core.CatBoost at 0x246dee8a150&gt;</pre> In\u00a0[3]: Copied! <pre>importance = model.get_feature_importance()\nfor fea, imp in zip(X_train.columns, importance):\n    print(f'{fea}: {imp}')\n</pre> importance = model.get_feature_importance() for fea, imp in zip(X_train.columns, importance):     print(f'{fea}: {imp}') <pre>MedInc: 30.774356710560976\nHouseAge: 5.728022305942434\nAveRooms: 3.8344068851602797\nAveBedrms: 2.0907452725644298\nPopulation: 2.0092406800410108\nAveOccup: 14.202824834331983\nLatitude: 21.857852690426384\nLongitude: 19.502550620972524\n</pre> In\u00a0[5]: Copied! <pre>res = model.calc_feature_statistics(X_train,\n                                    Y_train,\n                                    feature=['MedInc', 'HouseAge', 'Latitude'],\n                                    plot=True)\n</pre> res = model.calc_feature_statistics(X_train,                                     Y_train,                                     feature=['MedInc', 'HouseAge', 'Latitude'],                                     plot=True)"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/A0/#catboost","title":"\u26c4 Catboost\u5b9e\u4f8b\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/A0/#1","title":"1.\u8f7d\u5165\u6570\u636e\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/A0/#2","title":"2. \u8bad\u7ec3\u6a21\u578b\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/A0/#3","title":"3. \u8ba1\u7b97\u7279\u5f81\u8d21\u732e\u5ea6\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/A0/#4","title":"4. \u7279\u5f81\u7edf\u8ba1\u00b6","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/","title":"\ud83d\udc14 fit","text":"<p>\u8fd9\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u4e86 CatBoost \u4e2d fit \u65b9\u6cd5\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7528\u4e8e\u8bad\u7ec3\u6a21\u578b\u30021</p> <p>\u6ce8\u610f\uff1a \u8981\u5728 GPU \u4e0a\u8bad\u7ec3\u6a21\u578b\uff0c\u8bf7\u5728\u7c7b\u6784\u9020\u51fd\u6570\u4e2d\u5c06 <code>task_type</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>GPU</code>\u3002\u5728 GPU \u4e0a\u8bad\u7ec3\u9700\u8981\u7248\u672c\u4e3a 450.xx \u6216\u66f4\u9ad8\u7248\u672c\u7684 NVIDIA \u9a71\u52a8\u7a0b\u5e8f\u30021</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>fit(X,\n    y=None,\n    cat_features=None,\n    text_features=None,\n    embedding_features=None,\n    pairs=None,\n    graph=None,\n    sample_weight=None,\n    group_id=None,\n    group_weight=None,\n    subgroup_id=None,\n    pairs_weight=None,\n    baseline=None,\n    use_best_model=None,\n    eval_set=None,\n    verbose=None,\n    logging_level=None,\n    plot=False,\n    plot_file=None,\n    column_description=None,\n    verbose_eval=None,\n    metric_period=None,\n    silent=None,\n    early_stopping_rounds=None,\n    save_snapshot=None,\n    snapshot_file=None,\n    snapshot_interval=None,\n    init_model=None,\n    log_cout=sys.stdout,\n    log_cerr=sys.stderr)\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#_2","title":"\u53c2\u6570\u8bf4\u660e","text":"<p>\u4e00\u4e9b\u53c2\u6570\u4e0e CatBoost \u7c7b\u6784\u9020\u51fd\u6570\u4e2d\u6307\u5b9a\u7684\u53c2\u6570\u91cd\u590d\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4e3a fit \u65b9\u6cd5\u6307\u5b9a\u7684\u503c\u4f18\u5148\u3002\u5176\u4f59\u7684\u8bad\u7ec3\u53c2\u6570\u5fc5\u987b\u5728 CatBoost \u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u8bbe\u7f6e\u30021</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#x","title":"X","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u6839\u636e\u53ef\u80fd\u7684\u7c7b\u578b\u7ec4\uff0c\u63cf\u8ff0\u6709\u6240\u4e0d\u540c\u3002<ul> <li><code>catboost.Pool</code>\uff1a\u8f93\u5165\u8bad\u7ec3\u6570\u636e\u96c6\u3002     \u6ce8\u610f\uff1a \u5982\u679c\u5728\u6b64\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u6307\u5b9a\u4e86 <code>cat_features</code> \u53c2\u6570\u7684\u975e\u5e73\u51e1\u503c\uff0c\u5219 CatBoost \u4f1a\u68c0\u67e5\u6784\u9020\u51fd\u6570\u53c2\u6570\u548c\u6b64 Pool \u7c7b\u4e2d\u5206\u7c7b\u7279\u5f81\u7d22\u5f15\u89c4\u8303\u7684\u7b49\u6548\u6027\u3002</li> <li><code>list</code>\uff0c<code>numpy.ndarray</code>\uff0c<code>pandas.DataFrame</code>\uff0c<code>pandas.Series</code>\uff1a\u4e8c\u7ef4\u7279\u5f81\u77e9\u9635\u5f62\u5f0f\u7684\u8f93\u5165\u8bad\u7ec3\u6570\u636e\u96c6\u3002</li> <li><code>pandas.SparseDataFrame</code>\uff0c<code>scipy.sparse.spmatrix</code>\uff08<code>dia_matrix</code> \u9664\u5916\u7684\u6240\u6709\u5b50\u7c7b\uff09\uff1a\u4e8c\u7ef4\u7a00\u758f\u7279\u5f81\u77e9\u9635\u5f62\u5f0f\u7684\u8f93\u5165\u8bad\u7ec3\u6570\u636e\u96c6\u3002</li> </ul> </li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570</li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#y","title":"y","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8bad\u7ec3\u6570\u636e\u96c6\u7684\u76ee\u6807\u53d8\u91cf\uff08\u6362\u53e5\u8bdd\u8bf4\uff0c\u5bf9\u8c61\u7684\u6807\u7b7e\u503c\uff09\u3002\u5fc5\u987b\u91c7\u7528\u4e00\u7ef4\u6216\u4e8c\u7ef4\u6570\u7ec4\u7684\u5f62\u5f0f\u3002\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u53d6\u51b3\u4e8e\u8981\u89e3\u51b3\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\uff1a<ul> <li>\u56de\u5f52\u548c\u6392\u540d\uff1a\u4e00\u7ef4\u6570\u503c\u6570\u7ec4\u3002</li> <li>\u591a\u5143\u56de\u5f52\uff1a\u4e8c\u7ef4\u6570\u503c\u6570\u7ec4\u3002\u7b2c\u4e00\u4e2a\u7d22\u5f15\u7528\u4e8e\u7ef4\u5ea6\uff0c\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u7528\u4e8e\u5bf9\u8c61\u3002</li> <li>\u4e8c\u5143\u5206\u7c7b\uff1a\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\u4e4b\u4e00\u7684\u4e00\u7ef4\u6570\u7ec4\uff1a<ul> <li>\u8868\u793a\u7c7b\u6807\u7b7e\u7684\u5e03\u5c14\u503c\u3001\u6574\u6570\u6216\u5b57\u7b26\u4e32\uff08\u53ea\u6709\u4e24\u4e2a\u552f\u4e00\u503c\uff09\u3002</li> <li>\u6570\u503c\u3002\u6570\u503c\u7684\u89e3\u91ca\u53d6\u51b3\u4e8e\u6240\u9009\u7684\u635f\u5931\u51fd\u6570\uff1a<ul> <li><code>Logloss</code>\uff1a\u5982\u679c\u8be5\u503c\u4e25\u683c\u5927\u4e8e <code>target_border</code> \u8bad\u7ec3\u53c2\u6570\u7684\u503c\uff0c\u5219\u8be5\u503c\u88ab\u89c6\u4e3a\u6b63\u7c7b\u3002\u5426\u5219\uff0c\u5b83\u88ab\u89c6\u4e3a\u8d1f\u7c7b\u3002</li> <li><code>CrossEntropy</code>\uff1a\u8be5\u503c\u88ab\u89e3\u91ca\u4e3a\u6570\u636e\u96c6\u5bf9\u8c61\u5c5e\u4e8e\u6b63\u7c7b\u7684\u6982\u7387\u3002\u53ef\u80fd\u7684\u503c\u5728 [0; 1] \u8303\u56f4\u5185\u3002</li> </ul> </li> </ul> </li> <li>\u591a\u5206\u7c7b\uff1a\u8868\u793a\u7c7b\u6807\u7b7e\u7684\u4e00\u7ef4\u6574\u6570\u6216\u5b57\u7b26\u4e32\u6570\u7ec4\u3002</li> <li>\u591a\u6807\u7b7e\u5206\u7c7b\uff1a\u4e8c\u7ef4\u6570\u7ec4\u3002\u7b2c\u4e00\u4e2a\u7d22\u5f15\u7528\u4e8e\u6807\u7b7e/\u7c7b\uff0c\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u7528\u4e8e\u5bf9\u8c61\u3002\u53ef\u80fd\u7684\u503c\u53d6\u51b3\u4e8e\u6240\u9009\u7684\u635f\u5931\u51fd\u6570\uff1a<ul> <li><code>MultiLogloss</code>\uff1a\u4ec5\u5141\u8bb8 {0, 1} \u6216 {False, True} \u503c\uff0c\u7528\u4e8e\u6307\u5b9a\u5bf9\u8c61\u662f\u5426\u5c5e\u4e8e\u4e0e\u7b2c\u4e00\u4e2a\u7d22\u5f15\u5bf9\u5e94\u7684\u7c7b\u3002</li> <li><code>MultiCrossEntropy</code>\uff1a[0; 1] \u8303\u56f4\u5185\u7684\u6570\u503c\uff0c\u89e3\u91ca\u4e3a\u6570\u636e\u96c6\u5bf9\u8c61\u5c5e\u4e8e\u4e0e\u7b2c\u4e00\u4e2a\u7d22\u5f15\u5bf9\u5e94\u7684\u7c7b\u7684\u6982\u7387\u3002</li> </ul> </li> </ul> </li> <li>\u6ce8\u610f\uff1a \u5982\u679c\u8f93\u5165\u8bad\u7ec3\u6570\u636e\u96c6\uff08\u5728 <code>X</code> \u53c2\u6570\u4e2d\u6307\u5b9a\uff09\u7c7b\u578b\u4e3a <code>catboost.Pool</code>\uff0c\u8bf7\u4e0d\u8981\u4f7f\u7528\u6b64\u53c2\u6570\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>list</code>\uff0c<code>numpy.ndarray</code>\uff0c<code>pandas.DataFrame</code>\uff0c<code>pandas.Series</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code></li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#cat_features","title":"cat_features","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u5206\u7c7b\u5217\u7d22\u5f15\u7684\u4e00\u7ef4\u6570\u7ec4\u3002\u4ec5\u5f53 <code>X</code> \u53c2\u6570\u662f\u4e8c\u7ef4\u7279\u5f81\u77e9\u9635\uff08\u5177\u6709\u4ee5\u4e0b\u7c7b\u578b\u4e4b\u4e00\uff1a<code>list</code>\uff0c<code>numpy.ndarray</code>\uff0c<code>pandas.DataFrame</code>\uff0c<code>pandas.Series</code>\uff09\u65f6\u624d\u4f7f\u7528\u5b83\u3002</li> <li>\u6ce8\u610f\uff1a <code>cat_features</code> \u53c2\u6570\u4e5f\u53ef\u4ee5\u5728\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u6307\u5b9a\u3002\u5982\u679c\u662f\u8fd9\u6837\uff0cCatBoost \u4f1a\u68c0\u67e5\u5728\u6b64\u65b9\u6cd5\u548c\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u6307\u5b9a\u7684 <code>cat_features</code> \u53c2\u6570\u7684\u7b49\u6548\u6027\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>list</code>\uff0c<code>numpy.ndarray</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code>\uff08\u6240\u6709\u7279\u5f81\u90fd\u88ab\u89c6\u4e3a\u6570\u503c\u6216\u5176\u4ed6\u7c7b\u578b\uff0c\u5982\u679c\u7cbe\u786e\u6307\u5b9a\uff09</li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#text_features","title":"text_features","text":"<ul> <li>\u63cf\u8ff0\uff1a \u6587\u672c\u5217\u7d22\u5f15\uff08\u6307\u5b9a\u4e3a\u6574\u6570\uff09\u6216\u540d\u79f0\uff08\u6307\u5b9a\u4e3a\u5b57\u7b26\u4e32\uff09\u7684\u4e00\u7ef4\u6570\u7ec4\u3002\u4ec5\u5f53 <code>data</code> \u53c2\u6570\u662f\u4e8c\u7ef4\u7279\u5f81\u77e9\u9635\uff08\u5177\u6709\u4ee5\u4e0b\u7c7b\u578b\u4e4b\u4e00\uff1a<code>list</code>\uff0c<code>numpy.ndarray</code>\uff0c<code>pandas.DataFrame</code>\uff0c<code>pandas.Series</code>\uff09\u65f6\u624d\u4f7f\u7528\u3002\u5982\u679c\u6b64\u6570\u7ec4\u4e2d\u7684\u4efb\u4f55\u5143\u7d20\u6307\u5b9a\u4e3a\u540d\u79f0\u800c\u4e0d\u662f\u7d22\u5f15\uff0c\u5219\u5fc5\u987b\u63d0\u4f9b\u6240\u6709\u5217\u7684\u540d\u79f0\u3002\u4e3a\u6b64\uff0c\u8bf7\u4f7f\u7528\u6b64\u6784\u9020\u51fd\u6570\u7684 <code>feature_names</code> \u53c2\u6570\u663e\u5f0f\u6307\u5b9a\u5b83\u4eec\uff0c\u6216\u4f20\u9012\u5728 <code>data</code> \u53c2\u6570\u4e2d\u6307\u5b9a\u4e86\u5217\u540d\u79f0\u7684 <code>pandas.DataFrame</code>\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>list</code>\uff0c<code>numpy.ndarray</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code>\uff08\u6240\u6709\u7279\u5f81\u90fd\u88ab\u89c6\u4e3a\u6570\u503c\u6216\u5176\u4ed6\u7c7b\u578b\uff0c\u5982\u679c\u7cbe\u786e\u6307\u5b9a\uff09</li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 2</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#embedding_features","title":"embedding_features","text":"<ul> <li>\u63cf\u8ff0\uff1a embedding \u5217\u7d22\u5f15\uff08\u6307\u5b9a\u4e3a\u6574\u6570\uff09\u6216\u540d\u79f0\uff08\u6307\u5b9a\u4e3a\u5b57\u7b26\u4e32\uff09\u7684\u4e00\u7ef4\u6570\u7ec4\u3002\u4ec5\u5f53 <code>data</code> \u53c2\u6570\u662f\u4e8c\u7ef4\u7279\u5f81\u77e9\u9635\uff08\u5177\u6709\u4ee5\u4e0b\u7c7b\u578b\u4e4b\u4e00\uff1a<code>list</code>\uff0c<code>numpy.ndarray</code>\uff0c<code>pandas.DataFrame</code>\uff0c<code>pandas.Series</code>\uff09\u65f6\u624d\u4f7f\u7528\u3002\u5982\u679c\u6b64\u6570\u7ec4\u4e2d\u7684\u4efb\u4f55\u5143\u7d20\u6307\u5b9a\u4e3a\u540d\u79f0\u800c\u4e0d\u662f\u7d22\u5f15\uff0c\u5219\u5fc5\u987b\u63d0\u4f9b\u6240\u6709\u5217\u7684\u540d\u79f0\u3002\u4e3a\u6b64\uff0c\u8bf7\u4f7f\u7528\u6b64\u6784\u9020\u51fd\u6570\u7684 <code>feature_names</code> \u53c2\u6570\u663e\u5f0f\u6307\u5b9a\u5b83\u4eec\uff0c\u6216\u4f20\u9012\u5728 <code>data</code> \u53c2\u6570\u4e2d\u6307\u5b9a\u4e86\u5217\u540d\u79f0\u7684 <code>pandas.DataFrame</code>\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>list</code>\uff0c<code>numpy.ndarray</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code>\uff08\u6240\u6709\u7279\u5f81\u90fd\u88ab\u89c6\u4e3a\u6570\u503c\u6216\u5176\u4ed6\u7c7b\u578b\uff0c\u5982\u679c\u7cbe\u786e\u6307\u5b9a\uff09</li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 2</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#pairs","title":"pairs","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u7528\u4e8e\u6210\u5bf9\u6bd4\u8f83\u7684\u8bad\u7ec3\u6570\u636e\u96c6\u3002<ul> <li>\u652f\u6301\u7684\u683c\u5f0f\uff1a<ul> <li><code>list</code> / <code>numpy.ndarray</code> / <code>pandas.DataFrame</code>: \u5305\u542b\u5bf9\u8c61\u7d22\u5f15\u5bf9\u7684\u4e09\u5143\u7ec4\uff08\u7d22\u5f15\u3001\u7d22\u5f15\u3001\u76ee\u6807\uff09\u3002\u76ee\u6807\u662f\u7b2c\u4e00\u4e2a\u5bf9\u8c61\u76f8\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u5bf9\u8c61\u7684\u4f18\u52bf\u3002</li> <li><code>catboost.PairsData</code>: \u5305\u542b\u5bf9\u8c61\u7d22\u5f15\u5bf9\u548c\u76ee\u6807\u7684\u7c7b\u3002</li> </ul> </li> </ul> </li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code></li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#graph","title":"graph","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u7528\u4e8e\u56fe\u503c\u6570\u636e\u8bad\u7ec3\u7684\u56fe\u7ed3\u6784\u3002<ul> <li>\u652f\u6301\u7684\u683c\u5f0f\uff1a<ul> <li><code>list</code> / <code>numpy.ndarray</code>: \u5305\u542b\u8fb9\u5217\u8868\u7684\u4e8c\u7ef4\u6570\u7ec4\u3002</li> <li><code>catboost.GraphData</code>: \u5305\u542b\u56fe\u7ed3\u6784\u7684\u7c7b\u3002</li> </ul> </li> </ul> </li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code></li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#sample_weight","title":"sample_weight","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u5bf9\u8c61\u6743\u91cd\u3002<ul> <li>\u652f\u6301\u7684\u683c\u5f0f\uff1a<ul> <li><code>list</code> / <code>numpy.ndarray</code>: \u5305\u542b\u5bf9\u8c61\u6743\u91cd\u7684\u4e00\u7ef4\u6570\u7ec4\u3002</li> <li><code>pandas.Series</code>: \u5305\u542b\u5bf9\u8c61\u6743\u91cd\u7684 <code>pandas.Series</code>\u3002</li> </ul> </li> </ul> </li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code>\uff08\u6240\u6709\u5bf9\u8c61\u6743\u91cd\u5747\u5047\u5b9a\u4e3a 1\uff09</li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#group_id","title":"group_id","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u5bf9\u8c61\u7ec4\u3002CatBoost \u5728\u7ec4\u5185\u6267\u884c\u6709\u5e8f\u63d0\u5347\u3002<ul> <li>\u652f\u6301\u7684\u683c\u5f0f\uff1a<ul> <li><code>list</code> / <code>numpy.ndarray</code>: \u5305\u542b\u7ec4\u6807\u8bc6\u7b26\u7684\u4e00\u7ef4\u6570\u7ec4\u3002\u5982\u679c\u5355\u4e2a\u5bf9\u8c61\u5c5e\u4e8e\u591a\u4e2a\u7ec4\uff0c\u5219\u5176\u6807\u8bc6\u7b26\u5c06\u51fa\u73b0\u5728\u6b64\u6570\u7ec4\u4e2d\u591a\u6b21\uff0c\u6bcf\u4e2a\u7ec4\u5bf9\u5e94\u4e00\u6b21\u3002</li> <li><code>pandas.Series</code>: \u5305\u542b\u7ec4\u6807\u8bc6\u7b26\u7684 <code>pandas.Series</code>\u3002\u5982\u679c\u5355\u4e2a\u5bf9\u8c61\u5c5e\u4e8e\u591a\u4e2a\u7ec4\uff0c\u5219\u5176\u6807\u8bc6\u7b26\u5c06\u51fa\u73b0\u5728\u6b64\u6570\u7ec4\u4e2d\u591a\u6b21\uff0c\u6bcf\u4e2a\u7ec4\u5bf9\u5e94\u4e00\u6b21\u3002</li> </ul> </li> </ul> </li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code></li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#group_weight","title":"group_weight","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u7ec4\u6743\u91cd\u3002\u8fd9\u4e9b\u6743\u91cd\u4f1a\u5f71\u54cd\u635f\u5931\u51fd\u6570\u4e2d\u76f8\u5e94\u7ec4\u7684\u8d21\u732e\u3002<ul> <li>\u652f\u6301\u7684\u683c\u5f0f\uff1a <code>list</code> / <code>numpy.ndarray</code>: \u5305\u542b\u7ec4\u6743\u91cd\u7684\u4e00\u7ef4\u6570\u7ec4\u3002</li> </ul> </li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code>\uff08\u6240\u6709\u7ec4\u6743\u91cd\u5747\u5047\u5b9a\u4e3a 1\uff09</li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#subgroup_id","title":"subgroup_id","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u5bf9\u8c61\u5b50\u7ec4\u3002CatBoost \u5728\u5b50\u7ec4\u5185\u6267\u884c\u6709\u5e8f\u63d0\u5347\u3002<ul> <li>\u652f\u6301\u7684\u683c\u5f0f\uff1a<ul> <li><code>list</code> / <code>numpy.ndarray</code>: \u5305\u542b\u5b50\u7ec4\u6807\u8bc6\u7b26\u7684\u4e00\u7ef4\u6570\u7ec4\u3002\u5982\u679c\u5355\u4e2a\u5bf9\u8c61\u5c5e\u4e8e\u591a\u4e2a\u5b50\u7ec4\uff0c\u5219\u5176\u6807\u8bc6\u7b26\u5c06\u51fa\u73b0\u5728\u6b64\u6570\u7ec4\u4e2d\u591a\u6b21\uff0c\u6bcf\u4e2a\u5b50\u7ec4\u5bf9\u5e94\u4e00\u6b21\u3002</li> <li><code>pandas.Series</code>: \u5305\u542b\u5b50\u7ec4\u6807\u8bc6\u7b26\u7684 <code>pandas.Series</code>\u3002\u5982\u679c\u5355\u4e2a\u5bf9\u8c61\u5c5e\u4e8e\u591a\u4e2a\u5b50\u7ec4\uff0c\u5219\u5176\u6807\u8bc6\u7b26\u5c06\u51fa\u73b0\u5728\u6b64\u6570\u7ec4\u4e2d\u591a\u6b21\uff0c\u6bcf\u4e2a\u5b50\u7ec4\u5bf9\u5e94\u4e00\u6b21\u3002</li> </ul> </li> </ul> </li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code></li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#pairs_weight","title":"pairs_weight","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u5bf9\u8c61\u5bf9\u6743\u91cd\u3002\u8fd9\u4e9b\u6743\u91cd\u4f1a\u5f71\u54cd\u635f\u5931\u51fd\u6570\u4e2d\u76f8\u5e94\u5bf9\u8c61\u5bf9\u7684\u8d21\u732e\u3002<ul> <li>\u652f\u6301\u7684\u683c\u5f0f\uff1a <code>list</code> / <code>numpy.ndarray</code>: \u5305\u542b\u5bf9\u8c61\u5bf9\u6743\u91cd\u7684\u4e00\u7ef4\u6570\u7ec4\u3002</li> </ul> </li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code>\uff08\u6240\u6709\u5bf9\u8c61\u5bf9\u6743\u91cd\u5747\u5047\u5b9a\u4e3a 1\uff09</li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#baseline","title":"baseline","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u521d\u59cb\u9884\u6d4b\u503c\u3002<ul> <li>\u652f\u6301\u7684\u683c\u5f0f\uff1a<ul> <li><code>list</code> / <code>numpy.ndarray</code>: \u5305\u542b\u521d\u59cb\u9884\u6d4b\u503c\u7684\u4e00\u7ef4\u6216\u4e8c\u7ef4\u6570\u7ec4\u3002</li> <li><code>pandas.DataFrame</code>: \u5305\u542b\u521d\u59cb\u9884\u6d4b\u503c\u7684 <code>pandas.DataFrame</code>\u3002</li> </ul> </li> </ul> </li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code></li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#use_best_model","title":"use_best_model","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u5982\u679c\u5728 <code>eval_set</code> \u53c2\u6570\u4e2d\u4f20\u9012\u4e86\u9a8c\u8bc1\u6570\u636e\u96c6\uff0c\u5219\u4f7f\u7528\u6b64\u53c2\u6570\u6307\u5b9a\u662f\u5426\u4f7f\u7528\u9a8c\u8bc1\u6570\u636e\u96c6\u4e0a\u83b7\u5f97\u7684\u6700\u4f73\u6a21\u578b\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a</li> <li>\u5982\u679c\u5728 <code>eval_set</code> \u53c2\u6570\u4e2d\u4f20\u9012\u4e86\u9a8c\u8bc1\u6570\u636e\u96c6\uff0c\u5219\u4e3a <code>True</code>\u3002</li> <li>\u5426\u5219\u4e3a <code>False</code>\u3002</li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#eval_set","title":"eval_set","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u9a8c\u8bc1\u6570\u636e\u96c6\u3002</li> <li>\u652f\u6301\u7684\u683c\u5f0f\uff1a<ul> <li><code>catboost.Pool</code>: \u9a8c\u8bc1\u6570\u636e\u96c6\u3002</li> <li><code>list</code> / <code>numpy.ndarray</code> / <code>pandas.DataFrame</code> / <code>pandas.Series</code>: \u4e8c\u7ef4\u7279\u5f81\u77e9\u9635\u5f62\u5f0f\u7684\u9a8c\u8bc1\u6570\u636e\u96c6\u3002</li> <li><code>tuple</code>: \u5305\u542b\u4e8c\u7ef4\u7279\u5f81\u77e9\u9635\u5f62\u5f0f\u7684\u9a8c\u8bc1\u6570\u636e\u96c6\u53ca\u5176\u6807\u7b7e\uff08y\uff09\u7684\u5143\u7ec4\u3002</li> <li><code>list</code> \u7684 <code>list</code>: \u5305\u542b\u591a\u4e2a\u9a8c\u8bc1\u6570\u636e\u96c6\u7684\u5217\u8868\u3002</li> </ul> </li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code></li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#verbose","title":"verbose","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u8f93\u51fa\u8bad\u7ec3\u8fc7\u7a0b\u7684\u9891\u7387\u3002</li> <li>\u652f\u6301\u7684\u503c\uff1a<ul> <li><code>False</code>: \u4e0d\u8f93\u51fa\u8bad\u7ec3\u8fc7\u7a0b\u3002</li> <li><code>True</code>: \u6bcf\u4e2a\u8fed\u4ee3\u540e\u8f93\u51fa\u8bad\u7ec3\u8fc7\u7a0b\u3002</li> <li>\u6574\u6570\uff1a\u6bcf\u6307\u5b9a\u8fed\u4ee3\u6b21\u6570\u540e\u8f93\u51fa\u8bad\u7ec3\u8fc7\u7a0b\u3002</li> </ul> </li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code>\uff0c<code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>True</code></li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#logging_level","title":"logging_level","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u65e5\u5fd7\u8be6\u7ec6\u7a0b\u5ea6\u3002</li> <li>\u53ef\u80fd\u7684\u503c\uff1a<ul> <li><code>Silent</code>: \u4e0d\u8f93\u51fa\u4efb\u4f55\u65e5\u5fd7\u6d88\u606f\u3002</li> <li><code>Verbose</code>: \u8f93\u51fa\u6240\u6709\u4fe1\u606f\u3002</li> <li><code>Info</code>: \u8f93\u51fa\u4fe1\u606f\u6d88\u606f\u3002</li> <li><code>Debug</code>: \u8f93\u51fa\u8c03\u8bd5\u6d88\u606f\u3002</li> </ul> </li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>string</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code>\uff08\u4f7f\u7528 CatBoost \u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u6307\u5b9a\u7684 <code>logging_level</code> \u53c2\u6570\u7684\u503c\uff09</li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#plot","title":"plot","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u662f\u5426\u53ef\u89c6\u5316\u8bad\u7ec3\u8fc7\u7a0b\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>False</code></li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#plot_file","title":"plot_file","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u7528\u4e8e\u4fdd\u5b58\u8bad\u7ec3\u8fc7\u7a0b\u53ef\u89c6\u5316\u7ed3\u679c\u7684\u6587\u4ef6\u7684\u540d\u79f0\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>string</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code></li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#column_description","title":"column_description","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u5305\u542b\u8bad\u7ec3\u6570\u636e\u96c6\u5217\u63cf\u8ff0\u7684\u6587\u4ef6\u7684\u8def\u5f84\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>string</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code></li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#verbose_eval","title":"verbose_eval","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u5982\u679c\u5728 <code>eval_set</code> \u53c2\u6570\u4e2d\u4f20\u9012\u4e86\u9a8c\u8bc1\u6570\u636e\u96c6\uff0c\u5219\u4f7f\u7528\u6b64\u53c2\u6570\u6307\u5b9a\u8f93\u51fa\u5ea6\u91cf\u8ba1\u7b97\u7ed3\u679c\u7684\u9891\u7387\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code>\uff0c<code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code>\uff08\u4f7f\u7528 CatBoost \u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u6307\u5b9a\u7684 <code>verbose_eval</code> \u53c2\u6570\u7684\u503c\uff09</li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#metric_period","title":"metric_period","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u8ba1\u7b97\u5ea6\u91cf\u7684\u9891\u7387\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code>\uff08\u4f7f\u7528 CatBoost \u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u6307\u5b9a\u7684 <code>metric_period</code> \u53c2\u6570\u7684\u503c\uff09</li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#silent","title":"silent","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u662f\u5426\u9759\u9ed8\u6a21\u5f0f\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code>\uff08\u4f7f\u7528 CatBoost \u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u6307\u5b9a\u7684 <code>silent</code> \u53c2\u6570\u7684\u503c\uff09</li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#early_stopping_rounds","title":"early_stopping_rounds","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u5982\u679c\u5728 <code>eval_set</code> \u53c2\u6570\u4e2d\u4f20\u9012\u4e86\u9a8c\u8bc1\u6570\u636e\u96c6\uff0c\u5219\u4f7f\u7528\u6b64\u53c2\u6570\u505c\u6b62\u8bad\u7ec3\uff0c\u5982\u679c\u5728\u6307\u5b9a\u7684\u8fed\u4ee3\u6b21\u6570\u5185\u6700\u4f73\u5ea6\u91cf\u503c\u6ca1\u6709\u6539\u5584\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code>\uff08\u4f7f\u7528 CatBoost \u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u6307\u5b9a\u7684 <code>early_stopping_rounds</code> \u53c2\u6570\u7684\u503c\uff09</li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#save_snapshot","title":"save_snapshot","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u662f\u5426\u5c06\u5feb\u7167\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code>\uff08\u4f7f\u7528 CatBoost \u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u6307\u5b9a\u7684 <code>save_snapshot</code> \u53c2\u6570\u7684\u503c\uff09</li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#snapshot_file","title":"snapshot_file","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u7528\u4e8e\u4fdd\u5b58\u5feb\u7167\u7684\u6587\u4ef6\u7684\u540d\u79f0\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>string</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code>\uff08\u4f7f\u7528 CatBoost \u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u6307\u5b9a\u7684 <code>snapshot_file</code> \u53c2\u6570\u7684\u503c\uff09</li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#snapshot_interval","title":"snapshot_interval","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u4fdd\u5b58\u5feb\u7167\u7684\u65f6\u95f4\u95f4\u9694\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code>\uff08\u4f7f\u7528 CatBoost \u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u6307\u5b9a\u7684 <code>snapshot_interval</code> \u53c2\u6570\u7684\u503c\uff09</li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#init_model","title":"init_model","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u7528\u4e8e\u521d\u59cb\u5316\u6a21\u578b\u7684\u6a21\u578b\u7684\u8def\u5f84\u6216\u6a21\u578b\u672c\u8eab\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>string</code>\uff0c<code>catboost.CatBoost</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code></li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#log_cout","title":"log_cout","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u7528\u4e8e\u8f93\u51fa\u6807\u51c6 C++ \u6d41\u7684\u5bf9\u8c61\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>object</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>sys.stdout</code></li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Afit/#log_cerr","title":"log_cerr","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u7528\u4e8e\u8f93\u51fa\u9519\u8bef C++ \u6d41\u7684\u5bf9\u8c61\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>object</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>sys.stderr</code></li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Bpredict/","title":"\ud83e\udda2 predict","text":"<p>\u8fd9\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u4e86 CatBoost \u4e2d predict \u65b9\u6cd5\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7528\u4e8e\u83b7\u53d6\u8bad\u7ec3\u6a21\u578b\u7684\u9884\u6d4b\u7ed3\u679c\u30027</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Bpredict/#_1","title":"\u58f9\u4e28\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>predict(data,\n        prediction_type='RawFormula',\n        ntree_start=0,\n        ntree_end=0,\n        thread_count=-1,\n        verbose=None)\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Bpredict/#_2","title":"\u8d30\u4e28\u53c2\u6570\u8bf4\u660e","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Bpredict/#data","title":"data","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u83b7\u53d6\u9884\u6d4b\u7ed3\u679c\u7684\u6570\u636e\u96c6\u3002</li> <li>\u652f\u6301\u7684\u683c\u5f0f\uff1a<ul> <li><code>catboost.Pool</code></li> <li><code>list</code>\uff0c<code>numpy.ndarray</code>\uff0c<code>pandas.DataFrame</code>\uff0c<code>pandas.Series</code>\uff1a\u4e8c\u7ef4\u7279\u5f81\u77e9\u9635\u3002</li> <li><code>pandas.SparseDataFrame</code>\uff0c<code>scipy.sparse.spmatrix</code>\uff08<code>dia_matrix</code> \u9664\u5916\u7684\u6240\u6709\u5b50\u7c7b\uff09\uff1a\u4e8c\u7ef4\u7a00\u758f\u7279\u5f81\u77e9\u9635\u3002</li> </ul> </li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570</li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 7</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Bpredict/#prediction_type","title":"prediction_type","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u8fd4\u56de\u9884\u6d4b\u7ed3\u679c\u7684\u7c7b\u578b\u3002</li> <li>\u53ef\u80fd\u7684\u503c\uff1a<ul> <li><code>RawFormula</code>\uff1a\u6a21\u578b\u9884\u6d4b\u503c\uff08\u5e94\u7528\u635f\u5931\u51fd\u6570\u4e4b\u524d\uff09\u3002</li> <li><code>Class</code>:  \u9884\u6d4b\u7c7b\u6807\u7b7e\uff08\u4ec5\u9002\u7528\u4e8e\u5206\u7c7b\u95ee\u9898\uff09\u3002</li> <li><code>Probability</code>: \u9884\u6d4b\u5bf9\u8c61\u5c5e\u4e8e\u6bcf\u4e2a\u7c7b\u7684\u6982\u7387\uff08\u4ec5\u9002\u7528\u4e8e\u5206\u7c7b\u95ee\u9898\uff09\u3002</li> <li><code>Exponent</code>:  <code>RawFormula</code> \u503c\u7684\u6307\u6570\u3002</li> </ul> </li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>string</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>'RawFormula'</code></li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 7</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Bpredict/#ntree_start","title":"ntree_start","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u7528\u4e8e\u9884\u6d4b\u7684\u6811\u7684\u8d77\u59cb\u7d22\u5f15\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>0</code></li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 7</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Bpredict/#ntree_end","title":"ntree_end","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u7528\u4e8e\u9884\u6d4b\u7684\u6811\u7684\u6700\u540e\u4e00\u4e2a\u7d22\u5f15\u3002<code>0</code> \u503c\u5bf9\u5e94\u4e8e\u6700\u540e\u4e00\u68f5\u6811\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>0</code></li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 7</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Bpredict/#thread_count","title":"thread_count","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u7528\u4e8e\u8ba1\u7b97\u9884\u6d4b\u7ed3\u679c\u7684\u7ebf\u7a0b\u6570\u3002</li> <li>\u53ef\u80fd\u7684\u503c\uff1a<ul> <li>\u6574\u6570\uff1a\u4f7f\u7528\u7684\u7ebf\u7a0b\u6570\u3002</li> <li><code>-1</code>\uff1a\u4f7f\u7528\u6240\u6709\u53ef\u7528\u7684\u6838\u5fc3\u3002</li> </ul> </li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>-1</code></li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 7</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/Bpredict/#verbose","title":"verbose","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u662f\u5426\u8f93\u51fa\u8ba1\u7b97\u9884\u6d4b\u7ed3\u679c\u7684\u8fc7\u7a0b\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code>\uff08\u4f7f\u7528 CatBoost \u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u6307\u5b9a\u7684 <code>verbose</code> \u53c2\u6570\u7684\u503c\uff09</li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 7</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/calc_feature_statistics/","title":"\ud83c\udfd0 calc_feature_statistics","text":"<p>\u8fd9\u4e2a\u9875\u9762\u4ecb\u7ecd\u4e86 CatBoost \u4e2d <code>calc_feature_statistics</code> \u65b9\u6cd5\u7684\u4f7f\u7528\uff0c\u8be5\u65b9\u6cd5\u7528\u4e8e\u8ba1\u7b97\u548c\u7ed8\u5236\u6240\u9009\u7279\u5f81\u7684\u7edf\u8ba1\u4fe1\u606f\u300214</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/calc_feature_statistics/#_1","title":"\u58f9\u4e28\u7ed8\u5236\u7edf\u8ba1\u4fe1\u606f\u89e3\u8bfb\uff1a","text":"<p>\u7ed3\u679c\u56fe\u8868\u7684 X \u8f74\u5305\u542b\u88ab\u5206\u6210\u591a\u4e2a\u6876\u7684\u7279\u5f81\u503c\u3002\u5bf9\u4e8e\u6570\u503c\u7279\u5f81\uff0c\u6876\u4e4b\u95f4\u7684\u5206\u5272\u8868\u793a\u6a21\u578b\u6811\u4e2d\u7684\u6761\u4ef6\uff08<code>feature &lt; value</code>\uff09\u3002\u5bf9\u4e8e\u5206\u7c7b\u7279\u5f81\uff0c\u6bcf\u4e2a\u6876\u4ee3\u8868\u4e00\u4e2a\u7c7b\u522b\u300214</p> <p>\u7ed3\u679c\u56fe\u8868\u7684 Y \u8f74\u5305\u542b\u4ee5\u4e0b\u56fe\u5f62\uff1a</p> <ul> <li>\u6876\u4e2d\u7684\u5e73\u5747\u76ee\u6807\uff08\u6807\u7b7e\uff09\u503c\u3002</li> <li>\u6876\u4e2d\u7684\u5e73\u5747\u9884\u6d4b\u503c\u3002</li> <li>\u6876\u4e2d\u7684\u5bf9\u8c61\u6570\u91cf\u3002</li> <li>\u7279\u5f81\u4e0d\u540c\u503c\u4e0a\u7684\u5e73\u5747\u9884\u6d4b\u503c\u3002\u4e3a\u4e86\u8ba1\u7b97\u5b83\uff0c\u7279\u5f81\u503c\u88ab\u8fde\u7eed\u66f4\u6539\u4ee5\u843d\u5165\u6bcf\u4e2a\u8f93\u5165\u5bf9\u8c61\u7684\u6bcf\u4e2a\u6876\u4e2d\u3002\u56fe\u5f62\u4e0a\u4e00\u4e2a\u6876\u7684\u503c\u8ba1\u7b97\u4e3a\u6240\u6709\u5bf9\u8c61\u5728\u5176\u7279\u5f81\u503c\u88ab\u66f4\u6539\u4ee5\u843d\u5165\u8be5\u6876\u65f6\u7684\u5e73\u5747\u503c\u30021</li> </ul> <p>\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u503c\u5305\u542b\u6765\u81ea\u8fd9\u4e9b\u56fe\u5f62\u7684\u6570\u636e\u30021</p> <p>\u8ba1\u7b97\u4f7f\u7528\u4ee5\u4e0b\u4fe1\u606f\uff1a</p> <ul> <li>\u8bad\u7ec3\u597d\u7684\u6a21\u578b</li> <li>\u6570\u636e\u96c6</li> <li>\u6807\u7b7e\u503c</li> </ul> <p>\u6ce8\u610f\uff1a \u4ec5\u652f\u6301\u5177\u6709\u72ec\u70ed\u7f16\u7801\u5206\u7c7b\u7279\u5f81\u7684\u6a21\u578b\u3002\u5c06 <code>one_hot_max_size</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a\u8f83\u5927\u7684\u503c\uff0c\u4ee5\u786e\u4fdd\u5bf9\u6a21\u578b\u4e2d\u7684\u6240\u6709\u5206\u7c7b\u7279\u5f81\u5e94\u7528\u72ec\u70ed\u7f16\u7801\u3002\u4e0d\u652f\u6301\u591a\u5206\u7c7b\u6a21\u5f0f\u30021</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/calc_feature_statistics/#_2","title":"\u8d30\u4e28\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>calc_feature_statistics(data,\n                        target=None,\n                        feature=None,\n                        prediction_type=None,\n                        cat_feature_values=None,\n                        plot=True,\n                        max_cat_features_on_plot=10,\n                        thread_count=-1,\n                        plot_file=None)\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/calc_feature_statistics/#_3","title":"\u53c1\u4e28\u53c2\u6570\u8bf4\u660e","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/calc_feature_statistics/#data","title":"data","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u7528\u4e8e\u8ba1\u7b97\u7edf\u8ba1\u4fe1\u606f\u7684\u6570\u636e\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>numpy.ndarray</code>\uff0c<code>pandas.DataFrame</code>\uff0c<code>pandas.SparseDataFrame</code>\uff0c<code>scipy.sparse.spmatrix</code>\uff08<code>dia_matrix</code> \u9664\u5916\u7684\u6240\u6709\u5b50\u7c7b\uff09</li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/calc_feature_statistics/#target","title":"target","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u6765\u81ea\u8f93\u5165\u6570\u636e\u7684\u5bf9\u8c61\u7684\u6807\u7b7e\u503c\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>numpy.ndarray</code>\uff0c<code>pandas.Series</code></li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/calc_feature_statistics/#feature","title":"feature","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u8981\u4e3a\u5176\u8ba1\u7b97\u7edf\u8ba1\u4fe1\u606f\u7684\u7279\u5f81\u7d22\u5f15\u3001\u540d\u79f0\u6216\u5b83\u4eec\u7684\u4efb\u4f55\u7ec4\u5408\u7684\u5217\u8868\u3002</li> <li>\u4f7f\u7528\u793a\u4f8b\uff1a<ul> <li>\u8f93\u51fa\u6709\u5173\u7d22\u5f15\u4e3a 0 \u7684\u5355\u4e2a\u7279\u5f81\u7684\u4fe1\u606f\uff1a<code>feature=0</code></li> <li>\u8f93\u51fa\u6709\u5173\u4e24\u4e2a\u7279\u5f81\u7684\u4fe1\u606f\uff0c\u5176\u4e2d\u4e00\u4e2a\u540d\u4e3a <code>age</code>\uff0c\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u4e3a 10\uff1a<code>feature=[\"age\", 10]</code></li> </ul> </li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code>\uff0c<code>string</code>\uff0c<code>int</code>\u3001<code>string</code> \u6216\u5176\u7ec4\u5408\u7684\u5217\u8868</li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/calc_feature_statistics/#prediction_type","title":"prediction_type","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u7528\u4e8e\u8ba1\u7b97\u5e73\u5747\u9884\u6d4b\u503c\u7684\u9884\u6d4b\u7c7b\u578b\u3002</li> <li>\u53ef\u80fd\u7684\u503c\uff1a <code>Probability</code>\uff0c<code>Class</code>\uff0c<code>RawFormulaVal</code>\uff0c<code>Exponent</code>\uff0c<code>LogProbability</code></li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>string</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code>\uff08\u5bf9\u4e8e <code>Logloss</code> \u548c <code>CrossEntropy</code> \u4e3a <code>Probability</code>\uff0c\u5bf9\u4e8e\u6240\u6709\u5176\u4ed6\u635f\u5931\u51fd\u6570\u4e3a <code>RawFormulaVal</code>\uff09 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/calc_feature_statistics/#cat_feature_values","title":"cat_feature_values","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u8981\u4e3a\u5176\u8ba1\u7b97\u7edf\u8ba1\u4fe1\u606f\u7684\u5206\u7c7b\u7279\u5f81\u503c\u7684\u5217\u8868\u3002\u5982\u679c\u4e3a\u5206\u7c7b\u7279\u5f81\u8ba1\u7b97\u7edf\u8ba1\u4fe1\u606f\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>list</code>\uff0c<code>numpy.ndarray</code>\uff0c<code>pandas.Series</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code>\uff08\u4e3a\u5206\u7c7b\u7279\u5f81\u7684\u6240\u6709\u503c\u8ba1\u7b97\u7edf\u8ba1\u4fe1\u606f\uff09 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/calc_feature_statistics/#plot","title":"plot","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u6839\u636e\u8ba1\u7b97\u7684\u7edf\u8ba1\u4fe1\u606f\u7ed8\u5236 Jupyter Notebook \u56fe\u8868\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>True</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/calc_feature_statistics/#max_cat_features_on_plot","title":"max_cat_features_on_plot","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u8981\u5728\u5355\u4e2a\u56fe\u8868\u4e0a\u8f93\u51fa\u7684\u5206\u7c7b\u7279\u5f81\u7684\u4e0d\u540c\u503c\u7684\u6700\u5927\u6570\u91cf\u3002\u5982\u679c\u6240\u9009\u5206\u7c7b\u7279\u5f81\u91c7\u7528\u7684\u4e0d\u540c\u503c\u591a\u4e8e\u6b64\u53c2\u6570\u4e2d\u8bbe\u7f6e\u7684\u503c\uff0c\u5219\u4f1a\u7ed8\u5236\u591a\u4e2a\u56fe\u8868\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>10</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/calc_feature_statistics/#thread_count","title":"thread_count","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u7528\u4e8e\u8ba1\u7b97\u7edf\u8ba1\u4fe1\u606f\u7684\u7ebf\u7a0b\u6570\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>-1</code>\uff08\u7ebf\u7a0b\u6570\u7b49\u4e8e\u5904\u7406\u5668\u6838\u5fc3\u6570\uff09 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/calc_feature_statistics/#plot_file","title":"plot_file","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u7528\u4e8e\u4fdd\u5b58\u56fe\u8868</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/calc_leaf_indexes/","title":"\u26c4 calc_leaf_indexes","text":"<p>\u8fd9\u4e2a\u9875\u9762\u4ecb\u7ecd\u4e86 CatBoost \u4e2d <code>calc_leaf_indexes</code> \u65b9\u6cd5\u7684\u4f7f\u7528\uff0c\u8be5\u65b9\u6cd5\u8fd4\u56de\u6c60\u4e2d\u5bf9\u8c61\u88ab\u6a21\u578b\u6811\u6620\u5c04\u5230\u7684\u53f6\u5b50\u7684\u7d22\u5f15\u30021</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/calc_leaf_indexes/#_1","title":"\u58f9\u4e28\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>calc_leaf_indexes(data,\n                    ntree_start=0,\n                    ntree_end=0,\n                    thread_count=-1,\n                    verbose=False)\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/calc_leaf_indexes/#_2","title":"\u8d30\u4e28\u53c2\u6570\u8bf4\u660e","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/calc_leaf_indexes/#data","title":"data","text":"<ul> <li>\u63cf\u8ff0\uff1a \u5305\u542b\u8f93\u5165\u6570\u636e\u96c6\u7684\u6587\u4ef6\u6216\u77e9\u9635\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>catboost.Pool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/calc_leaf_indexes/#ntree_start","title":"ntree_start","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8981\u51cf\u5c11\u6a21\u578b\u5e94\u7528\u6216\u6307\u6807\u8ba1\u7b97\u65f6\u4f7f\u7528\u7684\u6811\u7684\u6570\u91cf\uff0c\u8bf7\u5c06\u6811\u7d22\u5f15\u8303\u56f4\u8bbe\u7f6e\u4e3a <code>[ntree_start; ntree_end)</code>\u3002\u6b64\u53c2\u6570\u5b9a\u4e49\u5e94\u7528\u6a21\u578b\u6216\u8ba1\u7b97\u6307\u6807\u65f6\u8981\u4f7f\u7528\u7684\u7b2c\u4e00\u68f5\u6811\u7684\u7d22\u5f15\uff08\u8303\u56f4\u7684\u5305\u542b\u5de6\u8fb9\u754c\uff09\u3002\u7d22\u5f15\u4ece\u96f6\u5f00\u59cb\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>0</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/calc_leaf_indexes/#ntree_end","title":"ntree_end","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8981\u51cf\u5c11\u6a21\u578b\u5e94\u7528\u6216\u6307\u6807\u8ba1\u7b97\u65f6\u4f7f\u7528\u7684\u6811\u7684\u6570\u91cf\uff0c\u8bf7\u5c06\u6811\u7d22\u5f15\u8303\u56f4\u8bbe\u7f6e\u4e3a <code>[ntree_start; ntree_end)</code>\uff0c\u5e76\u5c06\u8981\u4f7f\u7528\u7684\u6811\u7684\u6b65\u957f\u8bbe\u7f6e\u4e3a <code>eval_period</code>\u3002\u6b64\u53c2\u6570\u5b9a\u4e49\u5e94\u7528\u6a21\u578b\u6216\u8ba1\u7b97\u6307\u6807\u65f6**\u4e0d**\u4f7f\u7528\u7684\u7b2c\u4e00\u68f5\u6811\u7684\u7d22\u5f15\uff08\u8303\u56f4\u7684\u72ec\u5360\u53f3\u8fb9\u754c\uff09\u3002\u7d22\u5f15\u4ece\u96f6\u5f00\u59cb\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>0</code>\uff08\u8981\u4f7f\u7528\u7684\u6700\u540e\u4e00\u68f5\u6811\u7684\u7d22\u5f15\u7b49\u4e8e\u6a21\u578b\u4e2d\u7684\u6811\u7684\u6570\u91cf\u51cf\u4e00\uff09 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/calc_leaf_indexes/#thread_count","title":"thread_count","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u64cd\u4f5c\u7684\u7ebf\u7a0b\u6570\u3002\u4f18\u5316\u6267\u884c\u901f\u5ea6\u3002\u6b64\u53c2\u6570\u4e0d\u5f71\u54cd\u7ed3\u679c\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>-1</code>\uff08\u7ebf\u7a0b\u6570\u7b49\u4e8e\u5904\u7406\u5668\u6838\u5fc3\u6570\uff09 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/calc_leaf_indexes/#verbose","title":"verbose","text":"<ul> <li>\u63cf\u8ff0\uff1a \u542f\u7528\u8c03\u8bd5\u65e5\u5fd7\u8bb0\u5f55\u7ea7\u522b\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>False</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/calc_leaf_indexes/#_3","title":"\u8fd4\u56de\u503c\u7c7b\u578b","text":"<p><code>leaf_indexes</code>\uff1a\u5f62\u72b6\u4e3a <code>(\u5bf9\u8c61\u6570\u91cf, ntree_end - ntree_start)</code> \u7684\u4e8c\u7ef4 <code>numpy.ndarray</code>\uff0c\u7c7b\u578b\u4e3a <code>numpy.uint32</code>\u3002\u7b2c i \u884c\u662f\u7b2c i \u4e2a\u5bf9\u8c61\u7684\u53f6\u5b50\u7d22\u5f15\u6570\u7ec4\u3002 1</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/compare/","title":"\u26c4 compare","text":"<p>\u8fd9\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u4e86 CatBoost \u4e2d <code>compare</code> \u65b9\u6cd5\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7528\u4e8e\u6bd4\u8f83\u4e24\u4e2a\u8bad\u7ec3\u597d\u7684 CatBoost \u6a21\u578b\u30021</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/compare/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>compare(model,\n        data=None,\n        metrics=None,\n        ntree_start=0,\n        ntree_end=0,\n        eval_period=1,\n        thread_count=-1,\n        tmp_dir=None,\n        log_cout=sys.stdout,\n        log_cerr=sys.stderr)\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/compare/#_2","title":"\u53c2\u6570\u8bf4\u660e","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/compare/#model","title":"model","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8981\u6bd4\u8f83\u7684 CatBoost \u6a21\u578b\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>CatBoost Model</code></li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/compare/#metrics","title":"metrics","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8981\u8ba1\u7b97\u7684\u6307\u6807\u5217\u8868\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>list</code> of <code>string</code></li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/compare/#data","title":"data","text":"<ul> <li>\u63cf\u8ff0\uff1a \u5305\u542b\u8981\u6bd4\u8f83\u7684\u6307\u6807\u503c\u7684\u6570\u636e\u96c6\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>catboost.Pool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/compare/#ntree_start","title":"ntree_start","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8981\u51cf\u5c11\u6a21\u578b\u5e94\u7528\u6216\u6307\u6807\u8ba1\u7b97\u65f6\u4f7f\u7528\u7684\u6811\u7684\u6570\u91cf\uff0c\u8bf7\u5c06\u6811\u7d22\u5f15\u8303\u56f4\u8bbe\u7f6e\u4e3a <code>[ntree_start; ntree_end)</code>\uff0c\u5e76\u5c06\u8981\u4f7f\u7528\u7684\u6811\u7684\u6b65\u957f\u8bbe\u7f6e\u4e3a <code>eval_period</code>\u3002\u6b64\u53c2\u6570\u5b9a\u4e49\u5e94\u7528\u6a21\u578b\u6216\u8ba1\u7b97\u6307\u6807\u65f6\u8981\u4f7f\u7528\u7684\u7b2c\u4e00\u68f5\u6811\u7684\u7d22\u5f15\uff08\u8303\u56f4\u7684\u5305\u542b\u5de6\u8fb9\u754c\uff09\u3002\u7d22\u5f15\u4ece\u96f6\u5f00\u59cb\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>0</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/compare/#ntree_end","title":"ntree_end","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8981\u51cf\u5c11\u6a21\u578b\u5e94\u7528\u6216\u6307\u6807\u8ba1\u7b97\u65f6\u4f7f\u7528\u7684\u6811\u7684\u6570\u91cf\uff0c\u8bf7\u5c06\u6811\u7d22\u5f15\u8303\u56f4\u8bbe\u7f6e\u4e3a <code>[ntree_start; ntree_end)</code>\uff0c\u5e76\u5c06\u8981\u4f7f\u7528\u7684\u6811\u7684\u6b65\u957f\u8bbe\u7f6e\u4e3a <code>eval_period</code>\u3002\u6b64\u53c2\u6570\u5b9a\u4e49\u5e94\u7528\u6a21\u578b\u6216\u8ba1\u7b97\u6307\u6807\u65f6**\u4e0d**\u4f7f\u7528\u7684\u7b2c\u4e00\u68f5\u6811\u7684\u7d22\u5f15\uff08\u8303\u56f4\u7684\u72ec\u5360\u53f3\u8fb9\u754c\uff09\u3002\u7d22\u5f15\u4ece\u96f6\u5f00\u59cb\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>0</code>\uff08\u8981\u4f7f\u7528\u7684\u6700\u540e\u4e00\u68f5\u6811\u7684\u7d22\u5f15\u7b49\u4e8e\u6a21\u578b\u4e2d\u7684\u6811\u7684\u6570\u91cf\u51cf\u4e00\uff09 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/compare/#eval_period","title":"eval_period","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8981\u51cf\u5c11\u6a21\u578b\u5e94\u7528\u6216\u6307\u6807\u8ba1\u7b97\u65f6\u4f7f\u7528\u7684\u6811\u7684\u6570\u91cf\uff0c\u8bf7\u5c06\u6811\u7d22\u5f15\u8303\u56f4\u8bbe\u7f6e\u4e3a <code>[ntree_start; ntree_end)</code>\uff0c\u5e76\u5c06\u8981\u4f7f\u7528\u7684\u6811\u7684\u6b65\u957f\u8bbe\u7f6e\u4e3a <code>eval_period</code>\u3002\u6b64\u53c2\u6570\u5b9a\u4e49\u5e94\u7528\u6a21\u578b\u6216\u8ba1\u7b97\u6307\u6807\u65f6\u8981\u4f7f\u7528\u7684\u6811\u7684\u6b65\u957f\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u8bbe\u7f6e\u4e86\u4ee5\u4e0b\u53c2\u6570\u503c\uff1a</li> <li><code>ntree_start</code> \u8bbe\u7f6e\u4e3a <code>0</code></li> <li><code>ntree_end</code> \u8bbe\u7f6e\u4e3a <code>N</code>\uff08\u603b\u6811\u6570\u91cf\uff09</li> <li><code>eval_period</code> \u8bbe\u7f6e\u4e3a <code>2</code>     \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5c06\u4e3a\u4ee5\u4e0b\u6811\u8303\u56f4\u8ba1\u7b97\u6307\u6807\uff1a<code>[0, 2)</code>\uff0c<code>[0, 4)</code>\uff0c...\uff0c<code>[0, N)</code></li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>1</code>\uff08\u6811\u6309\u987a\u5e8f\u5e94\u7528\uff1a\u7b2c\u4e00\u68f5\u6811\uff0c\u7136\u540e\u524d\u4e24\u68f5\u6811\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff09 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/compare/#thread_count","title":"thread_count","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u64cd\u4f5c\u7684\u7ebf\u7a0b\u6570\u3002\u4f18\u5316\u6267\u884c\u901f\u5ea6\u3002\u6b64\u53c2\u6570\u4e0d\u5f71\u54cd\u7ed3\u679c\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>-1</code>\uff08\u7ebf\u7a0b\u6570\u7b49\u4e8e\u5904\u7406\u5668\u6838\u5fc3\u6570\uff09 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/compare/#tmp_dir","title":"tmp_dir","text":"<ul> <li>\u63cf\u8ff0\uff1a \u4e2d\u95f4\u7ed3\u679c\u7684\u4e34\u65f6\u76ee\u5f55\u7684\u540d\u79f0\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>string</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code>\uff08\u540d\u79f0\u5c06\u88ab\u751f\u6210\uff09 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/compare/#log_cout","title":"log_cout","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u8f93\u51fa\u6807\u51c6 C++ \u6d41\u7684\u5bf9\u8c61\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>object</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>sys.stdout</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/compare/#log_cerr","title":"log_cerr","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u8f93\u51fa\u9519\u8bef C++ \u6d41\u7684\u5bf9\u8c61\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>object</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>sys.stderr</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/compare/#_3","title":"\u8fd4\u56de\u503c\u7c7b\u578b","text":"<p><code>compare</code> \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a <code>pandas.DataFrame</code>\uff0c\u5176\u4e2d\u5305\u542b\u4e24\u4e2a\u6a21\u578b\u5728\u4e0d\u540c\u6811\u6570\u91cf\u4e0b\u7684\u6307\u6807\u503c\u3002 1</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/compare/#_4","title":"\u793a\u4f8b","text":"<pre><code>from catboost import Pool, CatBoostClassifier\n\ntrain_data = [[0, 3],\n              [4, 1],\n              [8, 1],\n              [9, 1]]\ntrain_labels = [0, 0, 1, 1]\n\neval_data = [[1, 3],\n             [4, 2],\n             [8, 2],\n             [8, 3]]\n\neval_labels = [1, 0, 0, 1]\n\ntrain_dataset = Pool(train_data, train_labels)\n\neval_dataset = Pool(eval_data, eval_labels)\n\nmodel1 = CatBoostClassifier(iterations=100, learning_rate=0.1)\nmodel1.fit(train_dataset, verbose=False)\n\nmodel2 = CatBoostClassifier(iterations=100, learning_rate=0.3)\nmodel2.fit(train_dataset, verbose=False)\n\nmodel1.compare(model2, eval_dataset, ['Logloss'])\n</code></pre> <p>\u8fd9\u4e2a\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 <code>compare</code> \u65b9\u6cd5\u6bd4\u8f83\u4e24\u4e2a CatBoost \u6a21\u578b\u5728\u9a8c\u8bc1\u6570\u636e\u96c6\u4e0a\u7684 <code>Logloss</code> \u6307\u6807\u3002 1</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/copy/","title":"\u26c4 copy","text":"<p>\u590d\u5236catboost\u5bf9\u8c61</p> <p>\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f\uff1a</p> <pre><code>copy()\n</code></pre> <p>\u8fd4\u56de\u503c\u7c7b\u578b\uff1a</p> <p>CatBoost\u5bf9\u8c61\u3002CatBoost\u5bf9\u8c61\u7684\u7cbe\u786e\u526f\u672c\u3002</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/eval_metrics/","title":"\u26c4 eval_metrics","text":"<p>\u8fd9\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u4e86 CatBoost \u4e2d <code>eval_metrics</code> \u65b9\u6cd5\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7528\u4e8e\u8ba1\u7b97\u6307\u5b9a\u6570\u636e\u96c6\u4e0a\u7684\u6307\u5b9a\u6307\u6807\u30021</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/eval_metrics/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>eval_metrics(data,\n             metrics,\n             ntree_start=0,\n             ntree_end=0,\n             eval_period=1,\n             thread_count=-1,\n             log_cout=sys.stdout,\n             log_cerr=sys.stderr)\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/eval_metrics/#_2","title":"\u53c2\u6570\u8bf4\u660e","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/eval_metrics/#data","title":"data","text":"<ul> <li>\u63cf\u8ff0\uff1a \u5305\u542b\u8f93\u5165\u6570\u636e\u96c6\u7684\u6587\u4ef6\u6216\u77e9\u9635\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>catboost.Pool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/eval_metrics/#metrics","title":"metrics","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8981\u8ba1\u7b97\u7684\u6307\u6807\u5217\u8868\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>list</code> of <code>string</code></li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/eval_metrics/#ntree_start","title":"ntree_start","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8981\u51cf\u5c11\u6a21\u578b\u5e94\u7528\u6216\u6307\u6807\u8ba1\u7b97\u65f6\u4f7f\u7528\u7684\u6811\u7684\u6570\u91cf\uff0c\u8bf7\u5c06\u6811\u7d22\u5f15\u8303\u56f4\u8bbe\u7f6e\u4e3a <code>[ntree_start; ntree_end)</code>\uff0c\u5e76\u5c06\u8981\u4f7f\u7528\u7684\u6811\u7684\u6b65\u957f\u8bbe\u7f6e\u4e3a <code>eval_period</code>\u3002\u6b64\u53c2\u6570\u5b9a\u4e49\u5e94\u7528\u6a21\u578b\u6216\u8ba1\u7b97\u6307\u6807\u65f6\u8981\u4f7f\u7528\u7684\u7b2c\u4e00\u68f5\u6811\u7684\u7d22\u5f15\uff08\u8303\u56f4\u7684\u5305\u542b\u5de6\u8fb9\u754c\uff09\u3002\u7d22\u5f15\u4ece\u96f6\u5f00\u59cb\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>0</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/eval_metrics/#ntree_end","title":"ntree_end","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8981\u51cf\u5c11\u6a21\u578b\u5e94\u7528\u6216\u6307\u6807\u8ba1\u7b97\u65f6\u4f7f\u7528\u7684\u6811\u7684\u6570\u91cf\uff0c\u8bf7\u5c06\u6811\u7d22\u5f15\u8303\u56f4\u8bbe\u7f6e\u4e3a <code>[ntree_start; ntree_end)</code>\uff0c\u5e76\u5c06\u8981\u4f7f\u7528\u7684\u6811\u7684\u6b65\u957f\u8bbe\u7f6e\u4e3a <code>eval_period</code>\u3002\u6b64\u53c2\u6570\u5b9a\u4e49\u5e94\u7528\u6a21\u578b\u6216\u8ba1\u7b97\u6307\u6807\u65f6**\u4e0d**\u4f7f\u7528\u7684\u7b2c\u4e00\u68f5\u6811\u7684\u7d22\u5f15\uff08\u8303\u56f4\u7684\u72ec\u5360\u53f3\u8fb9\u754c\uff09\u3002\u7d22\u5f15\u4ece\u96f6\u5f00\u59cb\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>0</code>\uff08\u8981\u4f7f\u7528\u7684\u6700\u540e\u4e00\u68f5\u6811\u7684\u7d22\u5f15\u7b49\u4e8e\u6a21\u578b\u4e2d\u7684\u6811\u7684\u6570\u91cf\u51cf\u4e00\uff09 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/eval_metrics/#eval_period","title":"eval_period","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8981\u51cf\u5c11\u6a21\u578b\u5e94\u7528\u6216\u6307\u6807\u8ba1\u7b97\u65f6\u4f7f\u7528\u7684\u6811\u7684\u6570\u91cf\uff0c\u8bf7\u5c06\u6811\u7d22\u5f15\u8303\u56f4\u8bbe\u7f6e\u4e3a <code>[ntree_start; ntree_end)</code>\uff0c\u5e76\u5c06\u8981\u4f7f\u7528\u7684\u6811\u7684\u6b65\u957f\u8bbe\u7f6e\u4e3a <code>eval_period</code>\u3002\u6b64\u53c2\u6570\u5b9a\u4e49\u5e94\u7528\u6a21\u578b\u6216\u8ba1\u7b97\u6307\u6807\u65f6\u8981\u4f7f\u7528\u7684\u6811\u7684\u6b65\u957f\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u8bbe\u7f6e\u4e86\u4ee5\u4e0b\u53c2\u6570\u503c\uff1a</li> <li><code>ntree_start</code> \u8bbe\u7f6e\u4e3a <code>0</code></li> <li><code>ntree_end</code> \u8bbe\u7f6e\u4e3a <code>N</code>\uff08\u603b\u6811\u6570\u91cf\uff09</li> <li><code>eval_period</code> \u8bbe\u7f6e\u4e3a <code>2</code>     \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5c06\u4e3a\u4ee5\u4e0b\u6811\u8303\u56f4\u8ba1\u7b97\u6307\u6807\uff1a<code>[0, 2)</code>\uff0c<code>[0, 4)</code>\uff0c...\uff0c<code>[0, N)</code></li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>1</code>\uff08\u6811\u6309\u987a\u5e8f\u5e94\u7528\uff1a\u7b2c\u4e00\u68f5\u6811\uff0c\u7136\u540e\u524d\u4e24\u68f5\u6811\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff09 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/eval_metrics/#thread_count","title":"thread_count","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u64cd\u4f5c\u7684\u7ebf\u7a0b\u6570\u3002\u4f18\u5316\u6267\u884c\u901f\u5ea6\u3002\u6b64\u53c2\u6570\u4e0d\u5f71\u54cd\u7ed3\u679c\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>-1</code>\uff08\u7ebf\u7a0b\u6570\u7b49\u4e8e\u5904\u7406\u5668\u6838\u5fc3\u6570\uff09 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/eval_metrics/#log_cout","title":"log_cout","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u8f93\u51fa\u6807\u51c6 C++ \u6d41\u7684\u5bf9\u8c61\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>object</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>sys.stdout</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/eval_metrics/#log_cerr","title":"log_cerr","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u8f93\u51fa\u9519\u8bef C++ \u6d41\u7684\u5bf9\u8c61\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>object</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>sys.stderr</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/eval_metrics/#_3","title":"\u8fd4\u56de\u503c\u7c7b\u578b","text":"<p><code>eval_metrics</code> \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u5b57\u5178\uff0c\u5176\u4e2d\u5305\u542b\u6bcf\u4e2a\u6307\u6807\u7684\u8ba1\u7b97\u7ed3\u679c\u3002\u6bcf\u4e2a\u6307\u6807\u7684\u503c\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u5176\u957f\u5ea6\u7b49\u4e8e <code>(ntree_end - ntree_start) / eval_period</code>\u3002 1</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/eval_metrics/#_4","title":"\u793a\u4f8b","text":"<pre><code>from catboost import Pool, CatBoostClassifier\n\ntrain_data = [[0, 3],\n              [4, 1],\n              [8, 1],\n              [9, 1]]\ntrain_labels = [0, 0, 1, 1]\n\neval_data = [[1, 3],\n             [4, 2],\n             [8, 2],\n             [8, 3]]\n\neval_labels = [1, 0, 0, 1]\n\ntrain_dataset = Pool(train_data, train_labels)\n\neval_dataset = Pool(eval_data, eval_labels)\n\nmodel = CatBoostClassifier(iterations=100, learning_rate=0.1)\nmodel.fit(train_dataset, verbose=False)\n\nmodel.eval_metrics(eval_dataset, ['Logloss', 'AUC'])\n</code></pre> <p>\u8fd9\u4e2a\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 <code>eval_metrics</code> \u65b9\u6cd5\u8ba1\u7b97\u9a8c\u8bc1\u6570\u636e\u96c6\u4e0a\u7684 <code>Logloss</code> \u548c <code>AUC</code> \u6307\u6807\u3002 1</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_all_params/","title":"\u26c4 get_all_params","text":"<p>\u8fd4\u56de\u6240\u6709\u8bad\u7ec3\u53c2\u6570\u7684\u503c\uff08\u5305\u62ec\u7528\u6237\u672a\u660e\u786e\u6307\u5b9a\u7684\u53c2\u6570\u503c\uff09\u3002</p> <p>\u5982\u679c\u672a\u660e\u786e\u6307\u5b9a\u53c2\u6570\u7684\u503c\uff0c\u5219\u5c06\u5176\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u503c\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u9ed8\u8ba4\u503c\u4f1a\u6839\u636e\u6570\u636e\u96c6\u5c5e\u6027\u548c\u7528\u6237\u5b9a\u4e49\u53c2\u6570\u7684\u503c\u52a8\u6001\u53d8\u5316\u3002\u4f8b\u5982\uff0c\u5728\u5206\u7c7b\u6a21\u5f0f\u4e0b\uff0c\u9ed8\u8ba4\u5b66\u4e60\u7387\u4f1a\u6839\u636e\u8fed\u4ee3\u6b21\u6570\u548c\u6570\u636e\u96c6\u5927\u5c0f\u800c\u53d8\u5316\u3002\u6b64\u65b9\u6cd5\u8fd4\u56de\u6240\u6709\u53c2\u6570\u7684\u503c\uff0c\u5305\u62ec\u5728\u8bad\u7ec3\u671f\u95f4\u8ba1\u7b97\u7684\u53c2\u6570\u503c\u3002</p> <p>\u4f7f\u7528 get_params\u65b9\u6cd5\u4ec5\u83b7\u53d6\u8bad\u7ec3\u524d\u660e\u786e\u6307\u5b9a\u7684\u53c2\u6570</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_all_params/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>get_all_params()\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_all_params/#_2","title":"\u8fd4\u56de\u503c\u7c7b\u578b","text":"<p>\u5b57\u5178</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_all_params/#_3","title":"\u4f8b\u5b50","text":"<pre><code>from catboost import CatBoostRegressor\n\ntrain_data = [[1, 4, 5, 6],\n              [4, 5, 6, 7],\n              [30, 40, 50, 60]]\n\neval_data = [[2, 4, 6, 8],\n             [1, 4, 50, 60]]\n\ntrain_labels = [10, 20, 30]\n\nmodel = CatBoostRegressor()\n\nmodel.fit(train_data,\n          train_labels,\n          verbose=False)\n\nprint(model.get_all_params())\nprint(model.get_params())\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_best_iteration/","title":"\u26c4 get_best_iteration","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_best_iteration/#_1","title":"\u6982\u8ff0","text":"<p><code>get_best_iteration</code> \u65b9\u6cd5\u7528\u4e8e\u83b7\u53d6\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u8868\u73b0\u6700\u597d\u7684\u8fed\u4ee3\u6b21\u6570\u3002</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_best_iteration/#_2","title":"\u65b9\u6cd5\u7b7e\u540d","text":"<pre><code>get_best_iteration() -&gt; int\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_best_iteration/#_3","title":"\u8fd4\u56de\u503c","text":"<p>\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u8868\u73b0\u6700\u597d\u7684\u8fed\u4ee3\u6b21\u6570\u3002</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_best_iteration/#_4","title":"\u793a\u4f8b","text":"<pre><code>from catboost import CatBoostClassifier, Pool\n\ntrain_data = [[0, 3],\n              [4, 1],\n              [8, 1],\n              [9, 1]]\n\ntrain_labels = [0, 0, 1, 1]\n\neval_data = [[2, 1],\n             [3, 1],\n             [9, 0],\n             [5, 3]]\n\neval_labels = [0, 1, 1, 0]\n\neval_dataset = Pool(eval_data,\n                    eval_labels)\n\nmodel = CatBoostClassifier(learning_rate=0.03,\n                           eval_metric='AUC')\n\nmodel.fit(train_data,\n          train_labels,\n          eval_set=eval_dataset,\n          verbose=False)\n\nprint(model.get_best_iteration())\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_best_score/","title":"\u26c4 get_best_score","text":"<p>\u8fd4\u56de\u5728\u6bcf\u4e2a\u9a8c\u8bc1\u6570\u636e\u96c6\u4e0a\u8ba1\u7b97\u7684\u6bcf\u4e2a\u6307\u6807\u7684\u6700\u4f73\u7ed3\u679c\u3002</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_best_score/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>get_best_score()\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_best_score/#_2","title":"\u8fd4\u56de\u503c\u7c7b\u578b","text":"<p>\u5b57\u5178</p> <p>\u8f93\u51fa\u683c\u5f0f\uff1a</p> <pre><code>{pool_name_1: {metric_1: value,..., metric_N: value}, ..., pool_name_M: {metric_1: value,..., metric_N: value}\n</code></pre> <p>\u4f8b\u5982\uff1a</p> <pre><code>{'validation': {'Logloss': 0.6085537606941837, 'AUC': 0.0}}\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_best_score/#_3","title":"\u793a\u4f8b","text":"<pre><code>from catboost import CatBoostClassifier, Pool\n\ntrain_data = [[0, 3],\n              [4, 1],\n              [8, 1],\n              [9, 1]]\n\ntrain_labels = [0, 0, 1, 1]\n\neval_data = [[2, 1],\n             [3, 1],\n             [9, 0],\n             [5, 3]]\n\neval_labels = [0, 1, 1, 0]\n\neval_dataset = Pool(eval_data,\n                    eval_labels)\n\nmodel = CatBoostClassifier(learning_rate=0.03,\n                           custom_metric=['Logloss',\n                                          'AUC:hints=skip_train~false'])\n\nmodel.fit(train_data,\n          train_labels,\n          eval_set=eval_dataset,\n          verbose=False)\n\nprint(model.get_best_score())\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_borders/","title":"\u26c4 get_borders","text":"<p>\u8fd4\u56de\u6570\u503c\u7279\u5f81\u7684\u8fb9\u754c\u5217\u8868\u3002</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_borders/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>get_borders()\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_borders/#_2","title":"\u4f8b\u5b50","text":"<pre><code>from catboost import CatBoostClassifier, Pool\n\nX_train = [[1, 2, 30], [4, 5, 60], [7, 8, 90]]\ny_train = [0, 1, 0]\n\nfeature_names = ['feature_1', 'feature_2', 'feature_3']\n\ntrain_pool = Pool(X_train, y_train, feature_names=feature_names)\n\nmodel = CatBoostClassifier(iterations=10, depth=2, learning_rate=1, loss_function='Logloss',verbose=False)\nmodel.fit(train_pool)\n\nborders = model.get_borders()\nprint(\"Borders:\", borders)\n\nfor feature_name, border in zip(feature_names, borders):\n    print(f\"Borders for {feature_name}: {borders[border]}\")\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_evals_result/","title":"\u26c4 get_evals_result","text":"<p>\u8fd4\u56de\u8bad\u7ec3\u671f\u95f4\u8ba1\u7b97\u7684\u6307\u6807\u503c\u3002</p> <p>\u4ec5\u8f93\u51fa\u8ba1\u7b97\u6307\u6807\u7684\u503c\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e0d\u4f1a\u4e3a\u8bad\u7ec3\u6570\u636e\u96c6\u8ba1\u7b97\u4ee5\u4e0b\u6307\u6807\uff0c\u56e0\u6b64\u4e0d\u4f1a\u8f93\u51fa\u8fd9\u4e9b\u6307\u6807\uff1a</p> <p>PFound\u3001YetiRank\u3001NDCG\u3001YetiRankPairwise\u3001AUC\u3001NormalizedGini\u3001FilteredDCG\u3001DCG</p> <p>\u4f7f\u7528<code>hints=skip_train~false</code>\u53c2\u6570\u542f\u7528\u8ba1\u7b97\u3002\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u542f\u7528\u3001\u7981\u7528\u548c\u914d\u7f6e\u6307\u6807\u8ba1\u7b97\u90e8\u5206\u3002</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_evals_result/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>get_evals_result()\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_evals_result/#_2","title":"\u8fd4\u56de\u503c\u7c7b\u578b","text":"<p>\u5b57\u5178</p> <p>\u8f93\u51fa\u683c\u5f0f\uff1a</p> <pre><code>{pool_name: {metric_name_1-1: [value_1, value_2, .., value_N]}, .., {metric_name_1-M: [value_1, value_2, .., value_N]}}\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_feature_importance/","title":"\u26c4 get_feature_importance","text":"<p>\u8fd9\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u4e86 CatBoost \u4e2d <code>get_feature_importance</code> \u65b9\u6cd5\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7528\u4e8e\u8ba1\u7b97\u548c\u8fd4\u56de\u7279\u5f81\u91cd\u8981\u6027\u30021</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_feature_importance/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>get_feature_importance(data=None,\n                       reference_data=None,\n                       type=FstrType.FeatureImportance,\n                       prettified=False,\n                       thread_count=-1,\n                       verbose=False,\n                       log_cout=sys.stdout,\n                       log_cerr=sys.stderr)\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_feature_importance/#_2","title":"\u53c2\u6570\u8bf4\u660e","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_feature_importance/#data","title":"data","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u8ba1\u7b97\u7279\u5f81\u91cd\u8981\u6027\u7684\u6570\u636e\u96c6\u3002\u6240\u9700\u6570\u636e\u96c6\u53d6\u51b3\u4e8e\u6240\u9009\u7684\u7279\u5f81\u91cd\u8981\u6027\u8ba1\u7b97\u7c7b\u578b\uff08\u5728 <code>type</code> \u53c2\u6570\u4e2d\u6307\u5b9a\uff09\uff1a</li> <li><code>PredictionValuesChange</code>\uff1a\u5982\u679c\u6a21\u578b\u4e0d\u5305\u542b\u6709\u5173\u53f6\u5b50\u6743\u91cd\u7684\u4fe1\u606f\uff0c\u5219\u4e3a <code>None</code> \u6216\u4e0e\u8bad\u7ec3\u65f6\u4f7f\u7528\u7684\u76f8\u540c\u6570\u636e\u96c6\u3002\u6240\u6709\u4f7f\u7528 CatBoost \u7248\u672c 0.9 \u6216\u66f4\u9ad8\u7248\u672c\u8bad\u7ec3\u7684\u6a21\u578b\u9ed8\u8ba4\u5305\u542b\u53f6\u5b50\u6743\u91cd\u4fe1\u606f\u3002</li> <li><code>LossFunctionChange</code>\uff1a\u4efb\u4f55\u6570\u636e\u96c6\u3002\u5bf9\u4e8e\u5927\u578b\u6570\u636e\u96c6\uff0c\u7279\u5f81\u91cd\u8981\u6027\u662f\u5728\u5b50\u96c6\u4e0a\u8ba1\u7b97\u7684\u3002</li> <li><code>PredictionDiff</code>\uff1a\u5bf9\u8c61\u5bf9\u7684\u5217\u8868\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>catboost.Pool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a  \u5bf9\u4e8e <code>LossFunctionChange</code> \u548c <code>ShapValues</code> \u7c7b\u578b\u7684\u7279\u5f81\u91cd\u8981\u6027\u4ee5\u53ca\u6a21\u578b\u4e0d\u5305\u542b\u6709\u5173\u53f6\u5b50\u6743\u91cd\u4fe1\u606f\u7684\u60c5\u51b5\u4e0b\uff0c\u6b64\u53c2\u6570\u4e3a\u5fc5\u586b\u53c2\u6570\u3002</li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_feature_importance/#reference_data","title":"reference_data","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u4ece\u53ef\u89e3\u91ca\u6811\u7684 AI \u4e2d\u83b7\u53d6\u72ec\u7acb\u6811 SHAP \u503c\u7684\u53c2\u8003\u6570\u636e\uff1a\u4ece\u5c40\u90e8\u89e3\u91ca\u5230\u5168\u5c40\u7406\u89e3\u3002\u5982\u679c <code>type</code> \u4e3a <code>ShapValues</code> \u4e14 <code>reference_data</code> \u4e0d\u4e3a <code>None</code>\uff0c\u5219\u8ba1\u7b97\u72ec\u7acb\u6811 SHAP \u503c\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>catboost.Pool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code></li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_feature_importance/#type","title":"type","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8981\u8ba1\u7b97\u7684\u7279\u5f81\u91cd\u8981\u6027\u7c7b\u578b\u3002</li> <li>\u53ef\u80fd\u7684\u503c\uff1a<ul> <li><code>FeatureImportance</code>\uff1a\u5bf9\u4e8e\u975e\u6392\u5e8f\u6307\u6807\u7b49\u4e8e <code>PredictionValuesChange</code>\uff0c\u5bf9\u4e8e\u6392\u5e8f\u6307\u6807\u7b49\u4e8e <code>LossFunctionChange</code>\uff08\u503c\u7531\u7cfb\u7edf\u81ea\u52a8\u786e\u5b9a\uff09\u3002</li> <li><code>ShapValues</code>\uff1a\u4e00\u4e2a\u5411\u91cf\uff0c\u5305\u542b\u6bcf\u4e2a\u7279\u5f81\u5bf9\u6bcf\u4e2a\u8f93\u5165\u5bf9\u8c61\u7684\u9884\u6d4b\u7684\u8d21\u732e\u4ee5\u53ca\u6a21\u578b\u5bf9\u8be5\u5bf9\u8c61\u7684\u9884\u6d4b\u7684\u671f\u671b\u503c\uff08\u5728\u6ca1\u6709\u5173\u4e8e\u8be5\u5bf9\u8c61\u7684\u4efb\u4f55\u77e5\u8bc6\u7684\u60c5\u51b5\u4e0b\uff0c\u5e73\u5747\u9884\u6d4b\uff09\u3002</li> <li><code>Interaction</code>\uff1a\u6bcf\u4e2a\u7279\u5f81\u5bf9\u7684\u7279\u5f81\u4ea4\u4e92\u5f3a\u5ea6\u503c\u3002</li> <li><code>PredictionDiff</code>\uff1a\u4e00\u4e2a\u5411\u91cf\uff0c\u5305\u542b\u6bcf\u4e2a\u7279\u5f81\u5bf9\u6bcf\u4e2a\u5bf9\u8c61\u5bf9\u7684 <code>RawFormulaVal</code> \u5dee\u5f02\u7684\u8d21\u732e\u3002</li> </ul> </li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>catboost.FstrType</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>FeatureImportance</code></li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_feature_importance/#prettified","title":"prettified","text":"<ul> <li>\u63cf\u8ff0\uff1a  \u662f\u5426\u4ee5\u6392\u5e8f\u7684 (\u7279\u5f81 ID, \u7279\u5f81\u91cd\u8981\u6027) \u5bf9\u5217\u8868\u7684\u5f62\u5f0f\u8fd4\u56de\u7279\u5f81\u91cd\u8981\u6027\u3002\u5982\u679c\u9009\u62e9\u4ee5\u4e0b <code>type</code> \u53c2\u6570\u503c\u4e4b\u4e00\uff0c\u5219\u5e94\u4f7f\u7528\u6b64\u53c2\u6570\uff1a</li> <li><code>PredictionValuesChange</code></li> <li><code>LossFunctionChange</code></li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>False</code></li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_feature_importance/#thread_count","title":"thread_count","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u8ba1\u7b97\u7279\u5f81\u91cd\u8981\u6027\u7684\u7ebf\u7a0b\u6570\u3002\u4f18\u5316\u6267\u884c\u901f\u5ea6\u3002\u6b64\u53c2\u6570\u4e0d\u5f71\u54cd\u7ed3\u679c\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>-1</code>\uff08\u7ebf\u7a0b\u6570\u7b49\u4e8e\u5904\u7406\u5668\u6838\u5fc3\u6570\uff09</li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_feature_importance/#verbose","title":"verbose","text":"<ul> <li>\u63cf\u8ff0\uff1a \u6b64\u53c2\u6570\u7684\u7528\u9014\u53d6\u51b3\u4e8e\u7ed9\u5b9a\u503c\u7684\u7c7b\u578b\uff1a</li> <li><code>bool</code>\uff1a\u5c06\u8fdb\u5ea6\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\u3002\u9002\u7528\u4e8e <code>ShapValues</code> \u7c7b\u578b\u7684\u7279\u5f81\u91cd\u8981\u6027\u8ba1\u7b97\u3002</li> <li><code>int</code>\uff1a\u65e5\u5fd7\u8bb0\u5f55\u5468\u671f\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code> \u6216 <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>False</code></li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_feature_importance/#log_cout","title":"log_cout","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u65e5\u5fd7\u8bb0\u5f55\u7684\u8f93\u51fa\u6d41\u6216\u56de\u8c03\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a \u53ef\u8c03\u7528 Python \u5bf9\u8c61\uff0c\u63d0\u4f9b <code>write()</code> \u65b9\u6cd5</li> <li>\u9ed8\u8ba4\u503c\uff1a <code>sys.stdout</code></li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_feature_importance/#log_cerr","title":"log_cerr","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u65e5\u5fd7\u8bb0\u5f55\u7684\u9519\u8bef\u6d41\u6216\u56de\u8c03\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a \u53ef\u8c03\u7528 Python \u5bf9\u8c61\uff0c\u63d0\u4f9b <code>write()</code> \u65b9\u6cd5</li> <li>\u9ed8\u8ba4\u503c\uff1a <code>sys.stderr</code></li> <li>\u652f\u6301\u7684\u5904\u7406\u5355\u5143\uff1a CPU \u548c GPU 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_feature_importance/#_3","title":"\u8fd4\u56de\u503c\u7c7b\u578b","text":"<p>\u8fd4\u56de\u503c\u7c7b\u578b\u53d6\u51b3\u4e8e\u6240\u9009\u7684\u7279\u5f81\u5f3a\u5ea6\u8ba1\u7b97\u65b9\u6cd5\uff1a</p> <ul> <li><code>PredictionValuesChange</code>\u3001<code>LossFunctionChange</code> \u6216 <code>PredictionValuesChange</code> \u4e14 <code>prettified</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>False</code>\uff1a\u957f\u5ea6\u4e3a <code>[n_features]</code> \u7684\u5217\u8868\uff0c\u5305\u542b\u6bcf\u4e2a\u7279\u5f81\u7684\u6d6e\u70b9\u578b\u7279\u5f81\u91cd\u8981\u6027\u503c\u3002</li> <li><code>PredictionValuesChange</code> \u6216 <code>LossFunctionChange</code> \u4e14 <code>prettified</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>True</code>\uff1a\u957f\u5ea6\u4e3a <code>[n_features]</code> \u7684\u5217\u8868\uff0c\u5305\u542b (\u7279\u5f81 ID (\u5b57\u7b26\u4e32), \u7279\u5f81\u91cd\u8981\u6027 (\u6d6e\u70b9\u578b)) \u5bf9\uff0c\u6309\u7279\u5f81\u91cd\u8981\u6027\u503c\u964d\u5e8f\u6392\u5e8f\u3002</li> <li><code>ShapValues</code>\uff1a\u5f62\u72b6\u4e3a <code>(n_objects, n_features + 1)</code> \u7684 <code>np.array</code>\uff0c\u5305\u542b\u6bcf\u4e2a (\u5bf9\u8c61, \u7279\u5f81) \u7684\u6d6e\u70b9\u578b SHAP \u503c\u3002</li> <li><code>Interaction</code>\uff1a\u957f\u5ea6\u4e3a <code>[n_features]</code> \u7684\u5217\u8868\uff0c\u5305\u542b\u4e09\u4e2a\u5143\u7d20\u7684\u5217\u8868\uff0c\u5f62\u5f0f\u4e3a (\u7b2c\u4e00\u4e2a\u7279\u5f81\u7d22\u5f15, \u7b2c\u4e8c\u4e2a\u7279\u5f81\u7d22\u5f15, \u4ea4\u4e92\u5206\u6570 (\u6d6e\u70b9\u578b))\u3002</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_feature_importance/#_4","title":"\u793a\u4f8b","text":"<pre><code>from catboost import CatBoost\n\nmodel = CatBoost()\nmodel.fit(X_train, Y_train, verbose=False)\n\nres = model.calc_feature_statistics(X_train,\n                                    Y_train,\n                                    feature=['MedInc', 'HouseAge', 'Latitude'],\n                                    plot=True)\n\nimportance = model.get_feature_importance()\nfor fea, imp in zip(X_train.columns, importance):\n    print(f'{fea}: {imp}')\n</code></pre> <p><code>catboost.CatBoost.get_feature_importance</code> \u65b9\u6cd5\u7684 <code>type</code> \u53c2\u6570\u5141\u8bb8\u4f60\u9009\u62e9\u4e0d\u540c\u7684\u7279\u5f81\u91cd\u8981\u6027\u8ba1\u7b97\u65b9\u6cd5\u3002\u4e0d\u540c\u7684 <code>type</code> \u503c\u4f1a\u4f7f\u7528\u4e0d\u540c\u7684\u7b97\u6cd5\u6765\u8ba1\u7b97\u7279\u5f81\u7684\u91cd\u8981\u6027\uff0c\u4ece\u800c\u63d0\u4f9b\u4e0d\u540c\u7684\u89c6\u89d2\u6765\u7406\u89e3\u6a21\u578b\u7684\u884c\u4e3a\u3002</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_feature_importance/#type_1","title":"<code>type</code> \u53c2\u6570\u7684\u9009\u9879","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_feature_importance/#1-featureimportance","title":"1. <code>FeatureImportance</code>","text":"<ul> <li>\u63cf\u8ff0\uff1a\u8fd9\u662f\u9ed8\u8ba4\u7684\u7279\u5f81\u91cd\u8981\u6027\u8ba1\u7b97\u65b9\u6cd5\uff0c\u57fa\u4e8e\u635f\u5931\u51fd\u6570\u7684\u7279\u5f81\u91cd\u8981\u6027\u3002</li> <li>\u8ba1\u7b97\u65b9\u6cd5\uff1a\u901a\u8fc7\u8ba1\u7b97\u6bcf\u4e2a\u7279\u5f81\u5bf9\u635f\u5931\u51fd\u6570\u7684\u8d21\u732e\u6765\u786e\u5b9a\u7279\u5f81\u7684\u91cd\u8981\u6027\u3002</li> <li>\u9002\u7528\u573a\u666f\uff1a\u9002\u7528\u4e8e\u5927\u591a\u6570\u60c5\u51b5\uff0c\u63d0\u4f9b\u4e00\u4e2a\u6574\u4f53\u7684\u7279\u5f81\u91cd\u8981\u6027\u89c6\u89d2\u3002</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_feature_importance/#2-predictionvalueschange","title":"2. <code>PredictionValuesChange</code>","text":"<ul> <li>\u63cf\u8ff0\uff1a\u57fa\u4e8e\u9884\u6d4b\u503c\u53d8\u5316\u7684\u7279\u5f81\u91cd\u8981\u6027\u3002</li> <li>\u8ba1\u7b97\u65b9\u6cd5\uff1a\u901a\u8fc7\u6d4b\u91cf\u6bcf\u4e2a\u7279\u5f81\u5bf9\u9884\u6d4b\u503c\u7684\u53d8\u5316\u6765\u786e\u5b9a\u7279\u5f81\u7684\u91cd\u8981\u6027\u3002</li> <li>\u9002\u7528\u573a\u666f\uff1a\u5f53\u4f60\u5bf9\u7279\u5f81\u5bf9\u9884\u6d4b\u7ed3\u679c\u7684\u76f4\u63a5\u5f71\u54cd\u611f\u5174\u8da3\u65f6\uff0c\u8fd9\u79cd\u65b9\u6cd5\u975e\u5e38\u6709\u7528\u3002</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_feature_importance/#3-lossfunctionchange","title":"3. <code>LossFunctionChange</code>","text":"<ul> <li>\u63cf\u8ff0\uff1a\u57fa\u4e8e\u635f\u5931\u51fd\u6570\u53d8\u5316\u7684\u7279\u5f81\u91cd\u8981\u6027\u3002</li> <li>\u8ba1\u7b97\u65b9\u6cd5\uff1a\u901a\u8fc7\u6d4b\u91cf\u6bcf\u4e2a\u7279\u5f81\u5bf9\u635f\u5931\u51fd\u6570\u7684\u53d8\u5316\u6765\u786e\u5b9a\u7279\u5f81\u7684\u91cd\u8981\u6027\u3002</li> <li>\u9002\u7528\u573a\u666f\uff1a\u5f53\u4f60\u5bf9\u7279\u5f81\u5bf9\u6a21\u578b\u6027\u80fd\u7684\u5f71\u54cd\u611f\u5174\u8da3\u65f6\uff0c\u8fd9\u79cd\u65b9\u6cd5\u975e\u5e38\u6709\u7528\u3002</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_feature_importance/#4-shapvalues","title":"4. <code>ShapValues</code>","text":"<ul> <li>\u63cf\u8ff0\uff1a\u57fa\u4e8e SHAP \u503c\u7684\u7279\u5f81\u91cd\u8981\u6027\u3002</li> <li>\u8ba1\u7b97\u65b9\u6cd5\uff1a\u4f7f\u7528 SHAP\uff08SHapley Additive exPlanations\uff09\u7b97\u6cd5\u6765\u8ba1\u7b97\u7279\u5f81\u7684\u91cd\u8981\u6027\u3002</li> <li>\u9002\u7528\u573a\u666f\uff1a\u63d0\u4f9b\u4e00\u4e2a\u4e00\u81f4\u4e14\u516c\u5e73\u7684\u7279\u5f81\u91cd\u8981\u6027\u89c6\u89d2\uff0c\u7279\u522b\u9002\u7528\u4e8e\u89e3\u91ca\u6a21\u578b\u7684\u5c40\u90e8\u548c\u5168\u5c40\u884c\u4e3a\u3002</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_feature_importance/#5-interaction","title":"5. <code>Interaction</code>","text":"<ul> <li>\u63cf\u8ff0\uff1a\u57fa\u4e8e\u7279\u5f81\u4ea4\u4e92\u7684\u7279\u5f81\u91cd\u8981\u6027\u3002</li> <li>\u8ba1\u7b97\u65b9\u6cd5\uff1a\u901a\u8fc7\u6d4b\u91cf\u7279\u5f81\u4e4b\u95f4\u7684\u4ea4\u4e92\u4f5c\u7528\u6765\u786e\u5b9a\u7279\u5f81\u7684\u91cd\u8981\u6027\u3002</li> <li>\u9002\u7528\u573a\u666f\uff1a\u5f53\u4f60\u5bf9\u7279\u5f81\u4e4b\u95f4\u7684\u4ea4\u4e92\u4f5c\u7528\u611f\u5174\u8da3\u65f6\uff0c\u8fd9\u79cd\u65b9\u6cd5\u975e\u5e38\u6709\u7528\u3002</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_feature_importance/#_5","title":"\u793a\u4f8b","text":"<pre><code>from catboost import CatBoostClassifier, Pool\n\n# \u793a\u4f8b\u6570\u636e\nX_train = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\ny_train = [0, 1, 0]\n\n# \u521b\u5efa\u6570\u636e\u6c60\ntrain_pool = Pool(X_train, y_train)\n\n# \u521d\u59cb\u5316\u5206\u7c7b\u5668\nmodel = CatBoostClassifier(iterations=10, depth=2, learning_rate=1, loss_function='Logloss')\n\n# \u8bad\u7ec3\u6a21\u578b\nmodel.fit(train_pool, verbose=False)\n\n# \u83b7\u53d6\u4e0d\u540c\u7c7b\u578b\u7684\u7279\u5f81\u91cd\u8981\u6027\nfeature_importance_prediction = model.get_feature_importance(type='PredictionValuesChange')\nprint(\"Feature Importance (PredictionValuesChange):\", feature_importance_prediction)\nfeature_importance_loss = model.get_feature_importance(train_pool, type='LossFunctionChange')\nprint(\"Feature Importance (LossFunctionChange):\", feature_importance_loss)\nfeature_importance_default = model.get_feature_importance(type='FeatureImportance')\nprint(\"Feature Importance (Default):\", feature_importance_default)\nfeature_importance_shap = model.get_feature_importance(train_pool, type='ShapValues')\nprint(\"Feature Importance (ShapValues):\", feature_importance_shap)\nfeature_importance_shap_inter = model.get_feature_importance(train_pool, type='ShapInteractionValues')\nprint(\"Feature Importance (ShapInteractionValues):\", feature_importance_shap_inter)\nfeature_importance_interaction = model.get_feature_importance(type='Interaction')\nprint(\"Feature Importance (Interaction):\", feature_importance_interaction)\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_object_importance/","title":"\u26c4 get_object_importance","text":"<p>\u8fd9\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u4e86 CatBoost \u4e2d <code>get_object_importance</code> \u65b9\u6cd5\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7528\u4e8e\u8ba1\u7b97\u8bad\u7ec3\u6570\u636e\u96c6\u4e2d\u6bcf\u4e2a\u5bf9\u8c61\u5bf9\u4f18\u5316\u6307\u6807\u7684\u5f71\u54cd\u30021</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_object_importance/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>get_object_importance(pool,\n                      train_pool,\n                      top_size=-1,\n                      type='Average',\n                      update_method='SinglePoint',\n                      importance_values_sign='All',\n                      thread_count=-1,\n                      verbose=False,\n                      log_cout=sys.stdout,\n                      log_cerr=sys.stderr)\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_object_importance/#_2","title":"\u53c2\u6570\u8bf4\u660e","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_object_importance/#pool","title":"pool","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u8ba1\u7b97\u5bf9\u8c61\u91cd\u8981\u6027\u7684\u6570\u636e\u96c6\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>catboost.Pool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_object_importance/#train_pool","title":"train_pool","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u8bad\u7ec3\u6a21\u578b\u7684\u6570\u636e\u96c6\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>catboost.Pool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_object_importance/#top_size","title":"top_size","text":"<ul> <li>\u63cf\u8ff0\uff1a \u5b9a\u4e49\u4ece\u8bad\u7ec3\u6570\u636e\u96c6\u4e2d\u8fd4\u56de\u7684\u6700\u91cd\u8981\u5bf9\u8c61\u7684\u6570\u76ee\u3002\u8fd4\u56de\u5bf9\u8c61\u7684\u6570\u76ee\u5c06\u9650\u5236\u5728\u8fd9\u4e2a\u6570\u76ee\u4ee5\u5185\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>-1</code>\uff08\u4e0d\u9650\u5236\u8fd4\u56de\u5bf9\u8c61\u7684\u6570\u76ee\uff09 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_object_importance/#type","title":"type","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8ba1\u7b97\u5bf9\u8c61\u91cd\u8981\u6027\u7684\u65b9\u6cd5\u3002</li> <li>\u53ef\u80fd\u7684\u503c\uff1a</li> <li><code>Average</code>\uff1a\u8bad\u7ec3\u6570\u636e\u96c6\u4e2d\u6bcf\u4e2a\u5bf9\u8c61\u5728\u8f93\u5165\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61\u4e0a\u7684\u5206\u6570\u7684\u5e73\u5747\u503c\u3002</li> <li><code>PerObject</code>\uff1a\u8bad\u7ec3\u6570\u636e\u96c6\u4e2d\u6bcf\u4e2a\u5bf9\u8c61\u5728\u8f93\u5165\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61\u4e0a\u7684\u5206\u6570\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>string</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>Average</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_object_importance/#update_method","title":"update_method","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7b97\u6cd5\u7cbe\u5ea6\u65b9\u6cd5\u3002</li> <li>\u53ef\u80fd\u7684\u503c\uff1a</li> <li><code>SinglePoint</code>\uff1a\u6700\u5feb\u4f46\u7cbe\u5ea6\u6700\u4f4e\u7684\u65b9\u6cd5\u3002</li> <li><code>TopKLeaves</code>\uff1a\u6307\u5b9a\u53f6\u5b50\u7684\u6570\u91cf\u3002\u503c\u8d8a\u5927\uff0c\u8ba1\u7b97\u8d8a\u7cbe\u786e\uff0c\u4f46\u901f\u5ea6\u8d8a\u6162\u3002</li> <li><code>AllPoints</code>\uff1a\u6700\u6162\u4f46\u7cbe\u5ea6\u6700\u9ad8\u7684\u65b9\u6cd5\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>string</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>SinglePoint</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_object_importance/#importance_values_sign","title":"importance_values_sign","text":"<ul> <li>\u63cf\u8ff0\uff1a \u5b9a\u4e49\u8bad\u7ec3\u6570\u636e\u96c6\u4e2d\u5bf9\u8c61\u5bf9\u8f93\u5165\u6570\u636e\u96c6\u4e2d\u7684\u5bf9\u8c61\u4f18\u5316\u6307\u6807\u503c\u7684\u5f71\u54cd\u7c7b\u578b\u3002\u4ec5\u8f93\u51fa\u76f8\u5e94\u7684\u5bf9\u8c61\u3002</li> <li>\u53ef\u80fd\u7684\u503c\uff1a</li> <li><code>Positive</code>\uff1a\u8bad\u7ec3\u6570\u636e\u96c6\u4e2d\u5bf9\u8c61\u5bf9\u8f93\u5165\u6570\u636e\u96c6\u4e2d\u7684\u5bf9\u8c61\u4f18\u5316\u6307\u6807\u503c\u7684\u5f71\u54cd\u4e3a\u6b63\u3002</li> <li><code>Negative</code>\uff1a\u8bad\u7ec3\u6570\u636e\u96c6\u4e2d\u5bf9\u8c61\u5bf9\u8f93\u5165\u6570\u636e\u96c6\u4e2d\u7684\u5bf9\u8c61\u4f18\u5316\u6307\u6807\u503c\u7684\u5f71\u54cd\u4e3a\u8d1f\u3002</li> <li><code>All</code>\uff1a\u8bad\u7ec3\u6570\u636e\u96c6\u4e2d\u5bf9\u8c61\u5bf9\u8f93\u5165\u6570\u636e\u96c6\u4e2d\u7684\u5bf9\u8c61\u4f18\u5316\u6307\u6807\u503c\u7684\u5f71\u54cd\u4e3a\u6b63\u6216\u8d1f\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>string</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>All</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_object_importance/#thread_count","title":"thread_count","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u64cd\u4f5c\u7684\u7ebf\u7a0b\u6570\u3002\u4f18\u5316\u6267\u884c\u901f\u5ea6\u3002\u6b64\u53c2\u6570\u4e0d\u5f71\u54cd\u7ed3\u679c\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>-1</code>\uff08\u7ebf\u7a0b\u6570\u7b49\u4e8e\u5904\u7406\u5668\u6838\u5fc3\u6570\uff09 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_object_importance/#verbose","title":"verbose","text":"<ul> <li>\u63cf\u8ff0\uff1a \u542f\u7528\u8c03\u8bd5\u65e5\u5fd7\u8bb0\u5f55\u7ea7\u522b\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>False</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_object_importance/#log_cout","title":"log_cout","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u8f93\u51fa\u6807\u51c6 C++ \u6d41\u7684\u5bf9\u8c61\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>object</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>sys.stdout</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_object_importance/#log_cerr","title":"log_cerr","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u8f93\u51fa\u9519\u8bef C++ \u6d41\u7684\u5bf9\u8c61\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>object</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>sys.stderr</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_object_importance/#_3","title":"\u8fd4\u56de\u503c\u7c7b\u578b","text":"<p><code>get_object_importance</code> \u65b9\u6cd5\u8fd4\u56de\u4e24\u4e2a\u5217\u8868\uff1a</p> <ul> <li>\u7b2c\u4e00\u4e2a\u5217\u8868\uff1a \u5305\u542b\u7d22\u5f15\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u7d22\u5f15\u5bf9\u5e94\u4e8e\u8bad\u7ec3\u6570\u636e\u96c6\u4e2d\u4e00\u4e2a\u5bf9\u8c61\u3002</li> <li>\u7b2c\u4e8c\u4e2a\u5217\u8868\uff1a \u5305\u542b\u5206\u6570\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u5206\u6570\u5bf9\u5e94\u4e8e\u8bad\u7ec3\u6570\u636e\u96c6\u4e2d\u4e00\u4e2a\u5bf9\u8c61\u5bf9\u8f93\u5165\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61\u7684\u5f71\u54cd\u3002</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_object_importance/#_4","title":"\u793a\u4f8b","text":"<pre><code>from catboost import Pool, CatBoostClassifier\n\ntrain_data = [[0, 3], [4, 1], [8, 1], [9, 1]]\ntrain_labels = [0, 0, 1, 1]\n\ninput_data = [[1, 3], [4, 2], [8, 2], [8, 3]]\ninput_labels = [0, 1, 0, 1]\n\ntrain_pool = Pool(train_data, train_labels)\ninput_pool = Pool(input_data,input_labels)\n\nmodel = CatBoostClassifier(iterations=10, learning_rate=0.1)\nmodel.fit(train_pool, verbose=False)\n\nobject_importance = model.get_object_importance(input_pool, train_pool)\n\nprint(object_importance)\n</code></pre> <p>\u8fd9\u4e2a\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 <code>get_object_importance</code> \u65b9\u6cd5\u8ba1\u7b97\u8bad\u7ec3\u6570\u636e\u96c6\u4e2d\u6bcf\u4e2a\u5bf9\u8c61\u5bf9\u8f93\u5165\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61\u7684\u5f71\u54cd\u3002 1</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_param/","title":"\u26c4 get_param","text":"<p>\u5982\u679c\u7528\u6237\u5728\u5f00\u59cb\u8bad\u7ec3\u4e4b\u524d\u660e\u786e\u6307\u5b9a\u4e86\u7ed9\u5b9a\u53c2\u6570\u7684\u503c\uff0c\u5219\u8fd4\u56de\u8be5\u53c2\u6570\u7684\u503c\u3002\u5982\u679c\u6b64\u53c2\u6570\u4e0e\u9ed8\u8ba4\u503c\u4e00\u8d77\u4f7f\u7528\uff0c\u5219\u6b64\u51fd\u6570\u8fd4\u56de None\u3002</p> <p>\u4f7f\u7528 get_all_params\u65b9\u6cd5\u83b7\u53d6\u6240\u6709\u8bad\u7ec3\u53c2\u6570\u7684\u503c\uff08\u9ed8\u8ba4\u3001\u7528\u6237\u5b9a\u4e49\u548c\u52a8\u6001\u8ba1\u7b97\uff09\u3002</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_param/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>get_param(key)\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_param/#_2","title":"\u53c2\u6570","text":"<p>key \u2014\u2014 \u952e\u503c</p> <p>\u53ef\u80fd\u7684\u7c7b\u578b</p> <p>string</p> <p>\u9ed8\u8ba4\u503c</p> <p>\u5fc5\u9700\u53c2\u6570</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_param/#_3","title":"\u8fd4\u56de\u503c\u7c7b\u578b","text":"<p>\u6307\u5b9a\u952e\u7684\u503c\u3002\u5982\u679c\u53c2\u6570\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de None\u3002</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_params/","title":"\u26c4 get_params","text":"<p>\u8fd4\u56de\u7528\u6237\u660e\u786e\u6307\u5b9a\u7684\u8bad\u7ec3\u53c2\u6570\u7684\u503c\u3002\u5982\u679c\u6240\u6709\u53c2\u6570\u90fd\u4f7f\u7528\u5176\u9ed8\u8ba4\u503c\uff0c\u5219\u6b64\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5b57\u5178\u3002</p> <p>\u4f7f\u7528 get_all_params\u65b9\u6cd5\u83b7\u53d6\u6240\u6709\u8bad\u7ec3\u53c2\u6570\u7684\u503c\uff08\u9ed8\u8ba4\u3001\u7528\u6237\u5b9a\u4e49\u548c\u52a8\u6001\u8ba1\u7b97\uff09\u3002</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_params/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>get_params()\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_params/#_2","title":"\u8fd4\u56de\u503c\u7c7b\u578b","text":"<p>\u5b57\u5178</p> <p>\u5305\u542b\u6240\u6709\u6a21\u578b\u53c2\u6570\u53ca\u5176\u5bf9\u5e94\u503c\u7684\u5217\u8868\u7684\u5b57\u5178\u3002</p> <p>\u683c\u5f0f\uff1a</p> <pre><code>{param_key: value}\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_params/#_3","title":"\u793a\u4f8b","text":"<pre><code>model.get_params()\n# {'iterations': 10, 'learning_rate': 0.1}\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_scale_and_bias/","title":"\u26c4 get_scale_and_bias","text":"<p>\u8fd4\u56de\u6a21\u578b\u7684\u89c4\u6a21\u548c\u504f\u5dee\u3002</p> <p>\u8fd9\u4e9b\u503c\u4f1a\u5f71\u54cd\u5e94\u7528\u6a21\u578b\u7684\u7ed3\u679c\uff0c\u56e0\u4e3a\u6a21\u578b\u9884\u6d4b\u7ed3\u679c\u7684\u8ba1\u7b97\u65b9\u5f0f\u5982\u4e0b\uff1a $$ \\sum leaf_values \u00b7 scale + bias $$</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_scale_and_bias/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>get_scale_and_bias()\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_scale_and_bias/#_2","title":"\u8fd4\u56de\u503c\u7c7b\u578b","text":"<p>\u5143\u7ec4</p> <pre><code>from catboost import CatBoost\nimport numpy as np\n\ntrain_data = np.random.randint(1, 100, size=(100, 10))\ntrain_labels = np.random.randint(2, size=100)\n\nmodel = CatBoost()\nprint(model.get_scale_and_bias())\n\nmodel.fit(train_data, train_labels, verbose=False)\nprint(model.get_scale_and_bias())\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_test_eval/","title":"\u26c4 get_test_eval","text":"<p>\u8fd4\u56de\u6839\u636e\u7528\u4e8e\u8bad\u7ec3\u7684\u9a8c\u8bc1\u6570\u636e\u96c6\u4e3a\u5bf9\u8c61\u8ba1\u7b97\u7684\u516c\u5f0f\u503c\u3002</p> <p>\u4ec5\u652f\u6301\u4f7f\u7528\u9a8c\u8bc1\u6570\u636e\u96c6\u8bad\u7ec3\u7684\u6a21\u578b\u3002\u5982\u679c\u8f93\u5165\u6a21\u578b\u672a\u7ecf\u8bad\u7ec3\u6216\u5728\u6ca1\u6709\u9a8c\u8bc1\u6570\u636e\u96c6\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u8bad\u7ec3\uff0c\u6b64\u65b9\u6cd5\u5c06\u5f15\u53d1\u5f02\u5e38\u3002</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_test_eval/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>get_test_eval()\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/get_test_eval/#_2","title":"\u8fd4\u56de\u503c\u7c7b\u578b","text":"<p>\u53d6\u51b3\u4e8e\u8981\u89e3\u51b3\u7684\u673a\u5668\u5b66\u4e60\u95ee\u9898\uff1a</p> <ul> <li>\u56de\u5f52\u548c\u4e8c\u5143\u5206\u7c7b\uff1a\u4e00\u7ef4\u6570\u7ec4</li> <li>\u591a\u5206\u7c7b\uff1a\u4e8c\u7ef4\u6570\u7ec4</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/grid_search/","title":"\u26c4 grid_search","text":"<p>\u8fd9\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u4e86 CatBoost \u4e2d <code>grid_search</code> \u65b9\u6cd5\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7528\u4e8e\u5728\u6307\u5b9a\u53c2\u6570\u8303\u56f4\u5185\u641c\u7d22\u6700\u4f73\u6a21\u578b\u53c2\u6570\u30021</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/grid_search/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>grid_search(param_grid,\n            X,\n            y=None,\n            cv=3,\n            partition_random_seed=0,\n            calc_cv_statistics=True,\n            search_by_train_test_split=True,\n            refit=True,\n            shuffle=True,\n            stratified=None,\n            train_size=0.8,\n            verbose=True,\n            plot=False,\n            log_cout=sys.stdout,\n            log_cerr=sys.stderr)\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/grid_search/#_2","title":"\u53c2\u6570\u8bf4\u660e","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/grid_search/#param_grid","title":"param_grid","text":"<ul> <li>\u63cf\u8ff0\uff1a \u5305\u542b\u53c2\u6570\u540d\u79f0\uff08\u5b57\u7b26\u4e32\uff09\u4f5c\u4e3a\u952e\uff0c\u4ee5\u53ca\u8981\u5c1d\u8bd5\u7684\u53c2\u6570\u8bbe\u7f6e\u5217\u8868\u4f5c\u4e3a\u503c\u7684\u5b57\u5178\uff0c\u6216\u8005\u5305\u542b\u6b64\u7c7b\u5b57\u5178\u7684\u5217\u8868\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5c06\u63a2\u7d22\u6bcf\u4e2a\u5b57\u5178\u4e2d\u8de8\u8d8a\u7684\u7f51\u683c\u3002\u8fd9\u4f7f\u5f97\u80fd\u591f\u641c\u7d22\u4efb\u4f55\u53c2\u6570\u8bbe\u7f6e\u5e8f\u5217\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>dict</code> \u6216 <code>list</code></li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/grid_search/#x","title":"X","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8f93\u5165\u8bad\u7ec3\u6570\u636e\u96c6\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a<ul> <li><code>catboost.Pool</code>\uff1a\u8f93\u5165\u8bad\u7ec3\u6570\u636e\u96c6\u3002\u6ce8\u610f\uff0c\u5982\u679c\u5728\u8be5\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u6307\u5b9a\u4e86\u975e\u5e73\u51e1\u7684 <code>cat_features</code> \u53c2\u6570\u503c\uff0cCatBoost \u4f1a\u68c0\u67e5\u6784\u9020\u51fd\u6570\u53c2\u6570\u4e2d\u6307\u5b9a\u7684\u5206\u7c7b\u7279\u5f81\u7d22\u5f15\u4e0e\u8be5 <code>Pool</code> \u7c7b\u4e2d\u7684\u7d22\u5f15\u662f\u5426\u4e00\u81f4\u3002</li> <li><code>numpy.ndarray</code>\u3001<code>pandas.DataFrame</code>\uff1a\u8f93\u5165\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u4ee5\u4e8c\u7ef4\u7279\u5f81\u77e9\u9635\u7684\u5f62\u5f0f\u3002</li> <li><code>pandas.SparseDataFrame</code>\u3001<code>scipy.sparse.spmatrix</code>\uff08\u9664 <code>dia_matrix</code> \u4ee5\u5916\u7684\u6240\u6709\u5b50\u7c7b\uff09\uff1a\u8f93\u5165\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u4ee5\u4e8c\u7ef4\u7a00\u758f\u7279\u5f81\u77e9\u9635\u7684\u5f62\u5f0f\u3002</li> </ul> </li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/grid_search/#y","title":"y","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8bad\u7ec3\u6570\u636e\u96c6\u7684\u76ee\u6807\u53d8\u91cf\uff08\u6362\u53e5\u8bdd\u8bf4\uff0c\u5bf9\u8c61\u7684\u6807\u7b7e\u503c\uff09\u3002\u5fc5\u987b\u4ee5\u4e00\u7ef4\u6216\u4e8c\u7ef4\u6570\u7ec4\u7684\u5f62\u5f0f\u3002\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u53d6\u51b3\u4e8e\u8981\u89e3\u51b3\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\uff1a</li> <li>\u56de\u5f52\u548c\u6392\u5e8f\uff1a\u4e00\u7ef4\u6570\u503c\u6570\u7ec4\u3002</li> <li>\u591a\u5143\u56de\u5f52\uff1a\u4e8c\u7ef4\u6570\u503c\u6570\u7ec4\u3002\u7b2c\u4e00\u4e2a\u7d22\u5f15\u7528\u4e8e\u7ef4\u5ea6\uff0c\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u7528\u4e8e\u5bf9\u8c61\u3002</li> <li>\u4e8c\u5143\u5206\u7c7b\uff1a\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\u4e4b\u4e00\u7684\u4e00\u7ef4\u6570\u7ec4\uff1a<ul> <li>\u5e03\u5c14\u503c\u3001\u6574\u6570\u6216\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u7c7b\u7684\u6807\u7b7e\uff08\u53ea\u6709\u4e24\u4e2a\u552f\u4e00\u503c\uff09\u3002</li> <li>\u6570\u503c\u3002\u6570\u503c\u7684\u89e3\u91ca\u53d6\u51b3\u4e8e\u6240\u9009\u7684\u635f\u5931\u51fd\u6570\uff1a</li> <li><code>Logloss</code>\uff1a\u5982\u679c\u4e25\u683c\u5927\u4e8e <code>target_border</code> \u8bad\u7ec3\u53c2\u6570\u7684\u503c\uff0c\u5219\u8be5\u503c\u88ab\u89c6\u4e3a\u6b63\u7c7b\u3002\u5426\u5219\uff0c\u5b83\u88ab\u89c6\u4e3a\u8d1f\u7c7b\u3002</li> <li><code>CrossEntropy</code>\uff1a\u8be5\u503c\u88ab\u89e3\u91ca\u4e3a\u6570\u636e\u96c6\u5bf9\u8c61\u5c5e\u4e8e\u6b63\u7c7b\u7684\u6982\u7387\u3002\u53ef\u80fd\u7684\u503c\u5728 [0; 1] \u8303\u56f4\u5185\u3002</li> </ul> </li> <li>\u591a\u5206\u7c7b\uff1a\u4e00\u7ef4\u6574\u6570\u6216\u5b57\u7b26\u4e32\u6570\u7ec4\uff0c\u8868\u793a\u7c7b\u7684\u6807\u7b7e\u3002</li> <li>\u591a\u6807\u7b7e\u5206\u7c7b\uff1a\u4e8c\u7ef4\u6570\u7ec4\u3002\u7b2c\u4e00\u4e2a\u7d22\u5f15\u7528\u4e8e\u6807\u7b7e/\u7c7b\uff0c\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u7528\u4e8e\u5bf9\u8c61\u3002\u53ef\u80fd\u7684\u503c\u53d6\u51b3\u4e8e\u6240\u9009\u7684\u635f\u5931\u51fd\u6570\uff1a<ul> <li><code>MultiLogloss</code>\uff1a\u4ec5\u5141\u8bb8 {0, 1} \u6216 {False, True} \u503c\uff0c\u6307\u5b9a\u5bf9\u8c61\u662f\u5426\u5c5e\u4e8e\u5bf9\u5e94\u4e8e\u7b2c\u4e00\u4e2a\u7d22\u5f15\u7684\u7c7b\u3002</li> <li><code>MultiCrossEntropy</code>\uff1a\u8303\u56f4\u5728 [0; 1] \u5185\u7684\u6570\u503c\uff0c\u88ab\u89e3\u91ca\u4e3a\u6570\u636e\u96c6\u5bf9\u8c61\u5c5e\u4e8e\u5bf9\u5e94\u4e8e\u7b2c\u4e00\u4e2a\u7d22\u5f15\u7684\u7c7b\u7684\u6982\u7387\u3002</li> </ul> </li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>list</code>\u3001<code>numpy.ndarray</code>\u3001<code>pandas.DataFrame</code>\u3001<code>pandas.Series</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code></li> <li>\u6ce8\u610f\uff1a \u5982\u679c\u8f93\u5165\u8bad\u7ec3\u6570\u636e\u96c6\uff08\u5728 <code>X</code> \u53c2\u6570\u4e2d\u6307\u5b9a\uff09\u7684\u7c7b\u578b\u4e3a <code>catboost.Pool</code>\uff0c\u5219\u4e0d\u8981\u4f7f\u7528\u6b64\u53c2\u6570\u3002 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/grid_search/#cv","title":"cv","text":"<ul> <li>\u63cf\u8ff0\uff1a \u4ea4\u53c9\u9a8c\u8bc1\u62c6\u5206\u7b56\u7565\u3002\u6b64\u53c2\u6570\u7684\u89e3\u91ca\u53d6\u51b3\u4e8e\u8f93\u5165\u6570\u636e\u7c7b\u578b\uff1a</li> <li><code>None</code>\uff1a\u4f7f\u7528\u9ed8\u8ba4\u7684\u4e09\u6298\u4ea4\u53c9\u9a8c\u8bc1\u3002</li> <li><code>int</code>\uff1a\u4ea4\u53c9\u9a8c\u8bc1\u4e2d\u7684\u6298\u6570\u3002</li> <li><code>(Stratified)KFold</code> \u5bf9\u8c61\uff1ascikit-learn \u62c6\u5206\u5668\u7c7b\u4e4b\u4e00\uff0c\u5177\u6709 <code>split</code> \u65b9\u6cd5\u3002</li> <li>\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u751f\u6210\u8bad\u7ec3\u548c\u6d4b\u8bd5\u62c6\u5206\u4f5c\u4e3a\u7d22\u5f15\u6570\u7ec4\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code>\u3001<code>scikit-learn splitter object</code>\u3001<code>cross-validation generator iterable</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/grid_search/#partition_random_seed","title":"partition_random_seed","text":"<ul> <li>\u63cf\u8ff0\uff1a \u5c06\u6b64\u4f5c\u4e3a\u6570\u636e\u968f\u673a\u6392\u5217\u7684\u79cd\u5b50\u503c\u3002\u6392\u5217\u5728\u62c6\u5206\u6570\u636e\u8fdb\u884c\u4ea4\u53c9\u9a8c\u8bc1\u4e4b\u524d\u6267\u884c\u3002\u6bcf\u4e2a\u79cd\u5b50\u751f\u6210\u552f\u4e00\u7684\u62c6\u5206\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>0</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/grid_search/#calc_cv_statistics","title":"calc_cv_statistics","text":"<ul> <li>\u63cf\u8ff0\uff1a \u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u548c\u627e\u5230\u7684\u6700\u4f73\u53c2\u6570\u6765\u4f30\u8ba1\u8d28\u91cf\u3002\u6a21\u578b\u4f7f\u7528\u8fd9\u4e9b\u53c2\u6570\u8fdb\u884c\u62df\u5408\u3002\u5982\u679c <code>search_by_train_test_split</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>True</code>\uff0c\u5219\u53ef\u4ee5\u542f\u7528\u6b64\u9009\u9879\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>True</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/grid_search/#search_by_train_test_split","title":"search_by_train_test_split","text":"<ul> <li>\u63cf\u8ff0\uff1a \u5c06\u6e90\u6570\u636e\u96c6\u62c6\u5206\u4e3a\u8bad\u7ec3\u548c\u6d4b\u8bd5\u90e8\u5206\u3002\u6a21\u578b\u5728\u8bad\u7ec3\u90e8\u5206\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u800c\u53c2\u6570\u901a\u8fc7\u6d4b\u8bd5\u6570\u636e\u96c6\u4e0a\u7684\u635f\u5931\u51fd\u6570\u5f97\u5206\u8fdb\u884c\u6bd4\u8f83\u3002\u5efa\u8bae\u5bf9\u5927\u578b\u6570\u636e\u96c6\u542f\u7528\u6b64\u9009\u9879\uff0c\u800c\u5bf9\u5c0f\u578b\u6570\u636e\u96c6\u7981\u7528\u6b64\u9009\u9879\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>True</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/grid_search/#refit","title":"refit","text":"<ul> <li>\u63cf\u8ff0\uff1a \u4f7f\u7528\u627e\u5230\u7684\u6700\u4f73\u53c2\u6570\u5728\u6574\u4e2a\u6570\u636e\u96c6\u4e0a\u91cd\u65b0\u62df\u5408\u4f30\u8ba1\u5668\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>True</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/grid_search/#shuffle","title":"shuffle","text":"<ul> <li>\u63cf\u8ff0\uff1a \u6253\u4e71\u6570\u636e\u96c6\u5bf9\u8c61\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>True</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/grid_search/#stratified","title":"stratified","text":"<ul> <li>\u63cf\u8ff0\uff1a \u662f\u5426\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u5c42\u91c7\u6837\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/grid_search/#train_size","title":"train_size","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8bad\u7ec3\u96c6\u7684\u5927\u5c0f\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>float</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>0.8</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/grid_search/#verbose","title":"verbose","text":"<ul> <li>\u63cf\u8ff0\uff1a \u542f\u7528\u8be6\u7ec6\u8f93\u51fa\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>True</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/grid_search/#plot","title":"plot","text":"<ul> <li>\u63cf\u8ff0\uff1a \u662f\u5426\u7ed8\u5236\u7ed3\u679c\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>False</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/grid_search/#log_cout","title":"log_cout","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u8f93\u51fa\u6807\u51c6 C++ \u6d41\u7684\u5bf9\u8c61\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>object</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>sys.stdout</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/grid_search/#log_cerr","title":"log_cerr","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u8f93\u51fa\u9519\u8bef C++ \u6d41\u7684\u5bf9\u8c61\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>object</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>sys.stderr</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/grid_search/#_3","title":"\u8fd4\u56de\u503c\u7c7b\u578b","text":"<p><code>grid_search</code> \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a <code>catboost.CatBoostModel</code> \u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u5df2\u4f7f\u7528\u627e\u5230\u7684\u6700\u4f73\u53c2\u6570\u8fdb\u884c\u62df\u5408\u3002 1</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/grid_search/#_4","title":"\u793a\u4f8b","text":"<pre><code>from catboost import CatBoost\nimport numpy as np\n\ntrain_data = np.random.randint(1, 100, size=(100, 10))\ntrain_labels = np.random.randint(2, size=100)\n\nmodel = CatBoost()\n\ngrid = {'learning_rate': [0.03, 0.1],\n        'depth': [4, 6, 10],\n        'l2_leaf_reg': [1, 3, 5, 7, 9]}\n\ngrid_search_result = model.grid_search(grid,\n                                       X=train_data,\n                                       y=train_labels,\n                                       plot=True)\nmodel.get_params()\n</code></pre> <p>\u8fd9\u4e2a\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 <code>grid_search</code> \u65b9\u6cd5\u5728\u6307\u5b9a\u53c2\u6570\u8303\u56f4\u5185\u641c\u7d22\u6700\u4f73\u6a21\u578b\u53c2\u6570\u3002 1</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/is_fitted/","title":"\u26c4 is_fitted","text":"<p>\u68c0\u67e5\u6a21\u578b\u662f\u5426\u8bad\u7ec3\u5b8c\u6bd5\u3002</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/is_fitted/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>is_fitted()\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/is_fitted/#_2","title":"\u8fd4\u56de\u503c\u7c7b\u578b","text":"<p>\u5e03\u5c14\u503c</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/load_model/","title":"\u26c4 load_model","text":"<p>\u8fd9\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u4e86 CatBoost \u4e2d <code>load_model</code> \u65b9\u6cd5\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7528\u4e8e\u4ece\u6587\u4ef6\u52a0\u8f7d\u8bad\u7ec3\u597d\u7684 CatBoost \u6a21\u578b\u30021</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/load_model/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>load_model(fname, format='cbm')\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/load_model/#_2","title":"\u53c2\u6570\u8bf4\u660e","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/load_model/#fname","title":"fname","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8f93\u5165\u6a21\u578b\u7684\u8def\u5f84\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>string</code></li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/load_model/#format","title":"format","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8f93\u5165\u6a21\u578b\u7684\u683c\u5f0f\u3002</li> <li>\u53ef\u80fd\u7684\u503c\uff1a</li> <li><code>cbm</code>\uff1aCatBoost \u4e8c\u8fdb\u5236\u683c\u5f0f\u3002</li> <li><code>AppleCoreML</code>\uff1aApple CoreML \u683c\u5f0f\uff08\u76ee\u524d\u4ec5\u652f\u6301\u6ca1\u6709\u5206\u7c7b\u7279\u5f81\u7684\u6570\u636e\u96c6\uff09\u3002</li> <li><code>json</code>\uff1aJSON \u683c\u5f0f\u3002\u6709\u5173\u683c\u5f0f\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 CatBoost JSON \u6a21\u578b\u6559\u7a0b\u3002</li> <li><code>onnx</code>\uff1aONNX-ML \u683c\u5f0f\uff08\u76ee\u524d\u4ec5\u652f\u6301\u6ca1\u6709\u5206\u7c7b\u7279\u5f81\u7684\u6570\u636e\u96c6\uff09\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 https://onnx.ai/\u3002\u6709\u5173\u5e94\u7528\u7ed3\u679c\u6a21\u578b\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 ONNX \u90e8\u5206\u3002</li> <li><code>CpuSnapshot</code>\uff1aCatBoost \u8bad\u7ec3\u5feb\u7167\u683c\u5f0f\uff08\u76ee\u524d\u4ec5\u652f\u6301 CPU \u548c\u6ca1\u6709\u5206\u7c7b\u7279\u5f81\u7684\u6570\u636e\u96c6\uff09\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>string</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>cbm</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/load_model/#_3","title":"\u8fd4\u56de\u503c\u7c7b\u578b","text":"<p><code>load_model</code> \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a <code>catboost.CatBoostModel</code> \u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u5df2\u4ece\u6307\u5b9a\u6587\u4ef6\u52a0\u8f7d\u3002 1</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/load_model/#_4","title":"\u793a\u4f8b","text":"<pre><code>from catboost import CatBoostClassifier, Pool\n\n# \u8bad\u7ec3\u6570\u636e\ntrain_data = [[1, 3], [0, 4], [1, 7]]\ntrain_labels = [1, 0, 1]\n\n# \u521b\u5efa\u6570\u636e\u96c6\ntrain_pool = Pool(train_data, train_labels)\n\n# \u8bad\u7ec3\u6a21\u578b\nmodel = CatBoostClassifier(learning_rate=0.03)\nmodel.fit(train_pool, verbose=False)\n\n# \u4fdd\u5b58\u6a21\u578b\nmodel.save_model(\"model\")\n\n# \u52a0\u8f7d\u6a21\u578b\nfrom_file = CatBoostClassifier()\nfrom_file.load_model(\"model\")\n</code></pre> <p>\u8fd9\u4e2a\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 <code>load_model</code> \u65b9\u6cd5\u4ece\u6587\u4ef6\u52a0\u8f7d\u8bad\u7ec3\u597d\u7684 CatBoost \u6a21\u578b\u3002 1</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/plot_predictions/","title":"\u26c4 plot_predictions","text":"<p>\u8fd9\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u4e86 CatBoost \u4e2d <code>plot_predictions</code> \u65b9\u6cd5\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7528\u4e8e\u7ed8\u5236\u6307\u5b9a\u7279\u5f81\u503c\u53d8\u5316\u65f6\u6a21\u578b\u9884\u6d4b\u503c\u7684\u56fe\u8868\u30021</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/plot_predictions/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>plot_predictions(data,\n                 features_to_change,\n                 plot=True,\n                 plot_file=None)\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/plot_predictions/#_2","title":"\u53c2\u6570\u8bf4\u660e","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/plot_predictions/#data","title":"data","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u7ed8\u5236\u9884\u6d4b\u503c\u7684\u8f93\u5165\u6570\u636e\u96c6\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528\u539f\u59cb\u6570\u636e\u96c6\u7684\u4e24\u4e2a\u6587\u6863\u5207\u7247\uff08\u53c2\u89c1\u4e0b\u9762\u7684\u793a\u4f8b\uff09\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a</li> <li><code>numpy.ndarray</code></li> <li><code>pandas.DataFrame</code></li> <li><code>pandas.SparseDataFrame</code></li> <li><code>scipy.sparse.spmatrix</code>\uff08\u9664 <code>dia_matrix</code> \u4ee5\u5916\u7684\u6240\u6709\u5b50\u7c7b\uff09</li> <li><code>catboost.Pool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/plot_predictions/#features_to_change","title":"features_to_change","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8981\u6539\u53d8\u9884\u6d4b\u503c\u4ee5\u7ed8\u5236\u56fe\u8868\u7684\u6570\u503c\u7279\u5f81\u5217\u8868\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u901a\u8fc7\u9009\u62e9\u6839\u636e\u9884\u6d4b\u5dee\u5f02\uff08PredictionDiff\uff09\u5bf9\u4e00\u5bf9\u5bf9\u8c61\u9884\u6d4b\u7ed3\u679c\u5f71\u54cd\u6700\u5927\u7684\u524d N \u4e2a\u91cd\u8981\u7279\u5f81\u6765\u9009\u62e9\u6240\u9700\u7279\u5f81\uff08\u53c2\u89c1\u4e0b\u9762\u7684\u793a\u4f8b\uff09\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a</li> <li><code>list</code> of <code>int</code></li> <li><code>string</code></li> <li><code>list</code> of <code>int</code> &amp; <code>string</code> \u7684\u7ec4\u5408</li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/plot_predictions/#plot","title":"plot","text":"<ul> <li>\u63cf\u8ff0\uff1a \u662f\u5426\u7ed8\u5236 Jupyter Notebook \u56fe\u8868\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>True</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/plot_predictions/#plot_file","title":"plot_file","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8981\u4fdd\u5b58\u56fe\u8868\u7684\u8f93\u51fa HTML \u6587\u4ef6\u540d\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>string</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code>\uff08\u4e0d\u4fdd\u5b58\u6587\u4ef6\uff09 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/plot_predictions/#_3","title":"\u8fd4\u56de\u503c\u7c7b\u578b","text":"<p><code>plot_predictions</code> \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u5b57\u5178\uff0c\u5305\u542b\u4e24\u4e2a\u5b57\u6bb5\uff1a</p> <ul> <li>\u7b2c\u4e00\u4e2a\u5b57\u6bb5\uff1a \u5305\u542b\u6240\u6709\u6570\u636e\u96c6\u4e2d\u5bf9\u8c61\u7684\u9884\u6d4b\u503c\u7684\u5b57\u5178\u5217\u8868\u3002</li> <li>\u7b2c\u4e8c\u4e2a\u5b57\u6bb5\uff1a \u5305\u542b\u6bcf\u4e2a\u7279\u5f81\u7d22\u5f15\u548c\u5bf9\u5e94\u7279\u5f81\u503c\u6876\u7684\u9884\u6d4b\u503c\u5217\u8868\u7684\u5b57\u5178\u3002</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/plot_predictions/#_4","title":"\u793a\u4f8b","text":"<pre><code>import numpy as np\nfrom catboost import Pool, CatBoostClassifier\n\n# \u8bad\u7ec3\u6570\u636e\ntrain_data = np.random.randint(0, 100, size=(100, 10))\ntrain_label = np.random.randint(0, 1000, size=(100))\ntrain_pool = Pool(train_data, train_label)\n\n# \u6570\u636e\u96c6\u5207\u7247\ntrain_pool_slice = train_pool.slice([2, 3])\n\n# \u8bad\u7ec3\u6a21\u578b\nmodel = CatBoostClassifier()\nmodel.fit(train_pool)\n\n# \u83b7\u53d6\u7279\u5f81\u91cd\u8981\u6027\nprediction_diff = model.get_feature_importance(train_pool_slice, type='PredictionDiff', prettified=True)\n\n# \u7ed8\u5236\u9884\u6d4b\u503c\u56fe\u8868\nmodel.plot_predictions(data=train_pool_slice,\n                       features_to_change=prediction_diff[\"Feature Id\"][:2],\n                       plot=True,\n                       plot_file=\"plot_predictions_file.html\")\n</code></pre> <p>\u8fd9\u4e2a\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 <code>plot_predictions</code> \u65b9\u6cd5\u7ed8\u5236\u6307\u5b9a\u7279\u5f81\u503c\u53d8\u5316\u65f6\u6a21\u578b\u9884\u6d4b\u503c\u7684\u56fe\u8868\u3002 1</p> <p>\u6ce8\u610f\uff1a \u4ec5\u652f\u6301\u5728\u4e0d\u5305\u542b\u5206\u7c7b\u7279\u5f81\u7684\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u7684\u6a21\u578b\u3002\u4e0d\u652f\u6301\u591a\u5206\u7c7b\u6a21\u5f0f\u3002 1</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/plot_tree/","title":"\u26c4 plot_tree","text":"<p>\u8fd9\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u4e86 CatBoost \u4e2d <code>plot_tree</code> \u65b9\u6cd5\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7528\u4e8e\u53ef\u89c6\u5316 CatBoost \u6a21\u578b\u4e2d\u7684\u51b3\u7b56\u6811\u30021</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/plot_tree/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>plot_tree(tree_idx, pool=None)\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/plot_tree/#_2","title":"\u53c2\u6570\u8bf4\u660e","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/plot_tree/#tree_idx","title":"tree_idx","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8981\u53ef\u89c6\u5316\u7684\u6811\u7684\u7d22\u5f15\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/plot_tree/#pool","title":"pool","text":"<ul> <li>\u63cf\u8ff0\uff1a \u4ec5\u9002\u7528\u4e8e\u5305\u542b\u6d6e\u70b9\u578b\u7279\u5f81\u7684\u6a21\u578b\u3002\u5141\u8bb8\u4f20\u9012\u4e00\u4e2a\u6570\u636e\u96c6\uff0c\u5e76\u4f7f\u7528\u8be5\u6570\u636e\u96c6\u4e2d\u7684\u5916\u90e8\u7d22\u5f15\u5bf9\u6807\u7b7e\u7279\u5f81\u8fdb\u884c\u6807\u8bb0\u3002\u5982\u679c\u672a\u8f93\u5165\u6570\u636e\u96c6\uff0c\u5219\u4f7f\u7528\u5185\u90e8\u7d22\u5f15\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4ee5\u5206\u53f7\u5206\u9694\u7684\u5305\u542b\u4e24\u4e2a\u7279\u5f81 <code>f1;label;f2</code> \u7684\u6570\u636e\u96c6\uff0c\u5916\u90e8\u7279\u5f81\u7d22\u5f15\u5206\u522b\u4e3a 0 \u548c 2\uff0c\u800c\u5185\u90e8\u7d22\u5f15\u5206\u522b\u4e3a 0 \u548c 1\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>catboost.Pool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code></li> <li>\u6ce8\u610f\uff1a \u5bf9\u4e8e\u5305\u542b\u72ec\u70ed\u7f16\u7801\u5206\u7c7b\u7279\u5f81\u7684\u6a21\u578b\uff0c\u6b64\u53c2\u6570\u4e3a\u5fc5\u586b\u53c2\u6570\u3002 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/plot_tree/#_3","title":"\u8fd4\u56de\u503c\u7c7b\u578b","text":"<p><code>plot_tree</code> \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a <code>graphviz.dot.Digraph</code> \u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u63cf\u8ff0\u4e86\u53ef\u89c6\u5316\u7684\u6811\u3002\u6811\u7684\u5185\u90e8\u8282\u70b9\u5bf9\u5e94\u4e8e\u5206\u5272\uff0c\u5e76\u6307\u5b9a\u4e86\u5206\u5272\u4e2d\u4f7f\u7528\u7684\u56e0\u5b50\u540d\u79f0\u548c\u8fb9\u754c\u3002\u53f6\u5b50\u8282\u70b9\u5305\u542b\u6811\u9884\u6d4b\u7684\u539f\u59cb\u503c\uff08RawFormulaVal\uff0c\u53c2\u89c1\u6a21\u578b\u503c\uff09\u3002\u5bf9\u4e8e\u591a\u5206\u7c7b\u6a21\u578b\uff0c\u53f6\u5b50\u8282\u70b9\u5305\u542b ClassCount \u503c\uff08\u603b\u548c\u4e3a\u96f6\uff09\u3002\u53f6\u5b50\u8282\u70b9\u7684\u7c7b\u522b\u53ef\u4ee5\u901a\u8fc7\u83b7\u53d6\u53f6\u5b50\u8282\u70b9\u4e2d\u8be5\u503c\u6570\u7ec4\u7684 argMax \u6765\u83b7\u5f97\u3002\u5bf9\u4e8e MultiRMSE \u6a21\u578b\uff0c\u53f6\u5b50\u8282\u70b9\u5305\u542b\u6bcf\u4e2a\u6807\u7b7e\u7684\u4e00\u4e2a\u503c\u3002 1</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/plot_tree/#_4","title":"\u793a\u4f8b","text":"<pre><code>import numpy as np\nfrom catboost import CatBoostClassifier, Pool\n\n# \u8bad\u7ec3\u6570\u636e\ntrain_data = np.random.randint(0, 100, size=(100, 10))\ntrain_label = np.random.randint(0, 1000, size=(100))\ntrain_pool = Pool(train_data, train_label)\n\n# \u8bad\u7ec3\u6a21\u578b\nmodel = CatBoostClassifier(max_depth=2, verbose=False, max_ctr_complexity=1, iterations=2)\nmodel.fit(train_pool)\n\n# \u53ef\u89c6\u5316\u6811\nmodel.plot_tree(tree_idx=0, pool=train_pool)\n</code></pre> <p>\u8fd9\u4e2a\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 <code>plot_tree</code> \u65b9\u6cd5\u53ef\u89c6\u5316 CatBoost \u6a21\u578b\u4e2d\u7684\u51b3\u7b56\u6811\u3002 1</p> <p>\u6ce8\u610f\uff1a \u4e3a\u4e86\u4f7f\u7528 <code>plot_tree</code> \u65b9\u6cd5\uff0c\u9700\u8981\u5b89\u88c5 <code>graphviz</code> \u5305\u3002 1</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/randomized_search/","title":"\u26c4 randomized_search","text":"<p>\u8fd9\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u4e86 CatBoost \u4e2d <code>randomized_search</code> \u65b9\u6cd5\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7528\u4e8e\u5728\u6307\u5b9a\u53c2\u6570\u8303\u56f4\u5185\u968f\u673a\u641c\u7d22\u6700\u4f73\u6a21\u578b\u53c2\u6570\u30021</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/randomized_search/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>randomized_search(param_distributions,\n                  X,\n                  y=None,\n                  cv=3,\n                  n_iter=10,\n                  partition_random_seed=0,\n                  calc_cv_statistics=True,\n                  search_by_train_test_split=True,\n                  refit=True,\n                  shuffle=True,\n                  stratified=None,\n                  train_size=0.8,\n                  verbose=True,\n                  plot=False,\n                  log_cout=sys.stdout,\n                  log_cerr=sys.stderr)\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/randomized_search/#_2","title":"\u53c2\u6570\u8bf4\u660e","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/randomized_search/#param_distributions","title":"param_distributions","text":"<ul> <li>\u63cf\u8ff0\uff1a \u5305\u542b\u53c2\u6570\u540d\u79f0\uff08\u5b57\u7b26\u4e32\uff09\u4f5c\u4e3a\u952e\uff0c\u4ee5\u53ca\u8981\u5c1d\u8bd5\u7684\u53c2\u6570\u8bbe\u7f6e\u5206\u5e03\u6216\u5217\u8868\u4f5c\u4e3a\u503c\u7684\u5b57\u5178\u3002\u5206\u5e03\u5fc5\u987b\u63d0\u4f9b <code>rvs</code> \u65b9\u6cd5\u7528\u4e8e\u91c7\u6837\uff08\u4f8b\u5982\uff0c\u6765\u81ea <code>scipy.stats.distributions</code> \u7684\u90a3\u4e9b\uff09\u3002\u5982\u679c\u7ed9\u5b9a\u5217\u8868\uff0c\u5219\u5c06\u4ece\u8be5\u5217\u8868\u4e2d\u5747\u5300\u91c7\u6837\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>dict</code></li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/randomized_search/#x","title":"X","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8f93\u5165\u8bad\u7ec3\u6570\u636e\u96c6\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a<ul> <li><code>catboost.Pool</code>\uff1a\u8f93\u5165\u8bad\u7ec3\u6570\u636e\u96c6\u3002\u6ce8\u610f\uff0c\u5982\u679c\u5728\u8be5\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u6307\u5b9a\u4e86\u975e\u5e73\u51e1\u7684 <code>cat_features</code> \u53c2\u6570\u503c\uff0cCatBoost \u4f1a\u68c0\u67e5\u6784\u9020\u51fd\u6570\u53c2\u6570\u4e2d\u6307\u5b9a\u7684\u5206\u7c7b\u7279\u5f81\u7d22\u5f15\u4e0e\u8be5 <code>Pool</code> \u7c7b\u4e2d\u7684\u7d22\u5f15\u662f\u5426\u4e00\u81f4\u3002</li> <li><code>numpy.ndarray</code>\u3001<code>pandas.DataFrame</code>\uff1a\u8f93\u5165\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u4ee5\u4e8c\u7ef4\u7279\u5f81\u77e9\u9635\u7684\u5f62\u5f0f\u3002</li> <li><code>pandas.SparseDataFrame</code>\u3001<code>scipy.sparse.spmatrix</code>\uff08\u9664 <code>dia_matrix</code> \u4ee5\u5916\u7684\u6240\u6709\u5b50\u7c7b\uff09\uff1a\u8f93\u5165\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u4ee5\u4e8c\u7ef4\u7a00\u758f\u7279\u5f81\u77e9\u9635\u7684\u5f62\u5f0f\u3002</li> </ul> </li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/randomized_search/#y","title":"y","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8bad\u7ec3\u6570\u636e\u96c6\u7684\u76ee\u6807\u53d8\u91cf\uff08\u6362\u53e5\u8bdd\u8bf4\uff0c\u5bf9\u8c61\u7684\u6807\u7b7e\u503c\uff09\u3002\u5fc5\u987b\u4ee5\u4e00\u7ef4\u6216\u4e8c\u7ef4\u6570\u7ec4\u7684\u5f62\u5f0f\u3002\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u53d6\u51b3\u4e8e\u8981\u89e3\u51b3\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\uff1a</li> <li>\u56de\u5f52\u548c\u6392\u5e8f\uff1a\u4e00\u7ef4\u6570\u503c\u6570\u7ec4\u3002</li> <li>\u591a\u5143\u56de\u5f52\uff1a\u4e8c\u7ef4\u6570\u503c\u6570\u7ec4\u3002\u7b2c\u4e00\u4e2a\u7d22\u5f15\u7528\u4e8e\u7ef4\u5ea6\uff0c\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u7528\u4e8e\u5bf9\u8c61\u3002</li> <li>\u4e8c\u5143\u5206\u7c7b\uff1a\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\u4e4b\u4e00\u7684\u4e00\u7ef4\u6570\u7ec4\uff1a<ul> <li>\u5e03\u5c14\u503c\u3001\u6574\u6570\u6216\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u7c7b\u7684\u6807\u7b7e\uff08\u53ea\u6709\u4e24\u4e2a\u552f\u4e00\u503c\uff09\u3002</li> <li>\u6570\u503c\u3002\u6570\u503c\u7684\u89e3\u91ca\u53d6\u51b3\u4e8e\u6240\u9009\u7684\u635f\u5931\u51fd\u6570\uff1a</li> <li><code>Logloss</code>\uff1a\u5982\u679c\u4e25\u683c\u5927\u4e8e <code>target_border</code> \u8bad\u7ec3\u53c2\u6570\u7684\u503c\uff0c\u5219\u8be5\u503c\u88ab\u89c6\u4e3a\u6b63\u7c7b\u3002\u5426\u5219\uff0c\u5b83\u88ab\u89c6\u4e3a\u8d1f\u7c7b\u3002</li> <li><code>CrossEntropy</code>\uff1a\u8be5\u503c\u88ab\u89e3\u91ca\u4e3a\u6570\u636e\u96c6\u5bf9\u8c61\u5c5e\u4e8e\u6b63\u7c7b\u7684\u6982\u7387\u3002\u53ef\u80fd\u7684\u503c\u5728 [0; 1] \u8303\u56f4\u5185\u3002</li> </ul> </li> <li>\u591a\u5206\u7c7b\uff1a\u4e00\u7ef4\u6574\u6570\u6216\u5b57\u7b26\u4e32\u6570\u7ec4\uff0c\u8868\u793a\u7c7b\u7684\u6807\u7b7e\u3002</li> <li>\u591a\u6807\u7b7e\u5206\u7c7b\uff1a\u4e8c\u7ef4\u6570\u7ec4\u3002\u7b2c\u4e00\u4e2a\u7d22\u5f15\u7528\u4e8e\u6807\u7b7e/\u7c7b\uff0c\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u7528\u4e8e\u5bf9\u8c61\u3002\u53ef\u80fd\u7684\u503c\u53d6\u51b3\u4e8e\u6240\u9009\u7684\u635f\u5931\u51fd\u6570\uff1a<ul> <li><code>MultiLogloss</code>\uff1a\u4ec5\u5141\u8bb8 {0, 1} \u6216 {False, True} \u503c\uff0c\u6307\u5b9a\u5bf9\u8c61\u662f\u5426\u5c5e\u4e8e\u5bf9\u5e94\u4e8e\u7b2c\u4e00\u4e2a\u7d22\u5f15\u7684\u7c7b\u3002</li> <li><code>MultiCrossEntropy</code>\uff1a\u8303\u56f4\u5728 [0; 1] \u5185\u7684\u6570\u503c\uff0c\u88ab\u89e3\u91ca\u4e3a\u6570\u636e\u96c6\u5bf9\u8c61\u5c5e\u4e8e\u5bf9\u5e94\u4e8e\u7b2c\u4e00\u4e2a\u7d22\u5f15\u7684\u7c7b\u7684\u6982\u7387\u3002</li> </ul> </li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>list</code>\u3001<code>numpy.ndarray</code>\u3001<code>pandas.DataFrame</code>\u3001<code>pandas.Series</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code></li> <li>\u6ce8\u610f\uff1a \u5982\u679c\u8f93\u5165\u8bad\u7ec3\u6570\u636e\u96c6\uff08\u5728 <code>X</code> \u53c2\u6570\u4e2d\u6307\u5b9a\uff09\u7684\u7c7b\u578b\u4e3a <code>catboost.Pool</code>\uff0c\u5219\u4e0d\u8981\u4f7f\u7528\u6b64\u53c2\u6570\u3002 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/randomized_search/#cv","title":"cv","text":"<ul> <li>\u63cf\u8ff0\uff1a \u4ea4\u53c9\u9a8c\u8bc1\u62c6\u5206\u7b56\u7565\u3002\u6b64\u53c2\u6570\u7684\u89e3\u91ca\u53d6\u51b3\u4e8e\u8f93\u5165\u6570\u636e\u7c7b\u578b\uff1a</li> <li><code>None</code>\uff1a\u4f7f\u7528\u9ed8\u8ba4\u7684\u4e09\u6298\u4ea4\u53c9\u9a8c\u8bc1\u3002</li> <li><code>int</code>\uff1a\u4ea4\u53c9\u9a8c\u8bc1\u4e2d\u7684\u6298\u6570\u3002</li> <li><code>(Stratified)KFold</code> \u5bf9\u8c61\uff1ascikit-learn \u62c6\u5206\u5668\u7c7b\u4e4b\u4e00\uff0c\u5177\u6709 <code>split</code> \u65b9\u6cd5\u3002</li> <li>\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u751f\u6210\u8bad\u7ec3\u548c\u6d4b\u8bd5\u62c6\u5206\u4f5c\u4e3a\u7d22\u5f15\u6570\u7ec4\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code>\u3001<code>scikit-learn splitter object</code>\u3001<code>cross-validation generator iterable</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/randomized_search/#n_iter","title":"n_iter","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8981\u91c7\u6837\u7684\u53c2\u6570\u8bbe\u7f6e\u6570\u91cf\u3002\u6b64\u53c2\u6570\u6743\u8861\u8fd0\u884c\u65f6\u95f4\u4e0e\u89e3\u51b3\u65b9\u6848\u7684\u8d28\u91cf\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>10</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/randomized_search/#partition_random_seed","title":"partition_random_seed","text":"<ul> <li>\u63cf\u8ff0\uff1a \u5c06\u6b64\u4f5c\u4e3a\u6570\u636e\u968f\u673a\u6392\u5217\u7684\u79cd\u5b50\u503c\u3002\u6392\u5217\u5728\u62c6\u5206\u6570\u636e\u8fdb\u884c\u4ea4\u53c9\u9a8c\u8bc1\u4e4b\u524d\u6267\u884c\u3002\u6bcf\u4e2a\u79cd\u5b50\u751f\u6210\u552f\u4e00\u7684\u62c6\u5206\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>0</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/randomized_search/#calc_cv_statistics","title":"calc_cv_statistics","text":"<ul> <li>\u63cf\u8ff0\uff1a \u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u548c\u627e\u5230\u7684\u6700\u4f73\u53c2\u6570\u6765\u4f30\u8ba1\u8d28\u91cf\u3002\u6a21\u578b\u4f7f\u7528\u8fd9\u4e9b\u53c2\u6570\u8fdb\u884c\u62df\u5408\u3002\u5982\u679c <code>search_by_train_test_split</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>True</code>\uff0c\u5219\u53ef\u4ee5\u542f\u7528\u6b64\u9009\u9879\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>True</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/randomized_search/#search_by_train_test_split","title":"search_by_train_test_split","text":"<ul> <li>\u63cf\u8ff0\uff1a \u5c06\u6e90\u6570\u636e\u96c6\u62c6\u5206\u4e3a\u8bad\u7ec3\u548c\u6d4b\u8bd5\u90e8\u5206\u3002\u6a21\u578b\u5728\u8bad\u7ec3\u90e8\u5206\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u800c\u53c2\u6570\u901a\u8fc7\u6d4b\u8bd5\u6570\u636e\u96c6\u4e0a\u7684\u635f\u5931\u51fd\u6570\u5f97\u5206\u8fdb\u884c\u6bd4\u8f83\u3002\u5efa\u8bae\u5bf9\u5927\u578b\u6570\u636e\u96c6\u542f\u7528\u6b64\u9009\u9879\uff0c\u800c\u5bf9\u5c0f\u578b\u6570\u636e\u96c6\u7981\u7528\u6b64\u9009\u9879\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>True</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/randomized_search/#refit","title":"refit","text":"<ul> <li>\u63cf\u8ff0\uff1a \u4f7f\u7528\u627e\u5230\u7684\u6700\u4f73\u53c2\u6570\u5728\u6574\u4e2a\u6570\u636e\u96c6\u4e0a\u91cd\u65b0\u62df\u5408\u4f30\u8ba1\u5668\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>True</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/randomized_search/#shuffle","title":"shuffle","text":"<ul> <li>\u63cf\u8ff0\uff1a \u6253\u4e71\u6570\u636e\u96c6\u5bf9\u8c61\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>True</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/randomized_search/#stratified","title":"stratified","text":"<ul> <li>\u63cf\u8ff0\uff1a \u662f\u5426\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u5c42\u91c7\u6837\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/randomized_search/#train_size","title":"train_size","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8bad\u7ec3\u96c6\u7684\u5927\u5c0f\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>float</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>0.8</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/randomized_search/#verbose","title":"verbose","text":"<ul> <li>\u63cf\u8ff0\uff1a \u542f\u7528\u8be6\u7ec6\u8f93\u51fa\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>True</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/randomized_search/#plot","title":"plot","text":"<ul> <li>\u63cf\u8ff0\uff1a \u662f\u5426\u7ed8\u5236\u7ed3\u679c\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>False</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/randomized_search/#log_cout","title":"log_cout","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u8f93\u51fa\u6807\u51c6 C++ \u6d41\u7684\u5bf9\u8c61\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>object</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>sys.stdout</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/randomized_search/#log_cerr","title":"log_cerr","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u8f93\u51fa\u9519\u8bef C++ \u6d41\u7684\u5bf9\u8c61\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>object</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>sys.stderr</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/randomized_search/#_3","title":"\u8fd4\u56de\u503c\u7c7b\u578b","text":"<p><code>randomized_search</code> \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a <code>catboost.CatBoostModel</code> \u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u5df2\u4f7f\u7528\u627e\u5230\u7684\u6700\u4f73\u53c2\u6570\u8fdb\u884c\u62df\u5408\u3002 1</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/randomized_search/#_4","title":"\u793a\u4f8b","text":"<pre><code>from catboost import CatBoost\n\ntrain_data = [[1, 4, 5, 6],\n              [4, 5, 6, 7],\n              [30, 40, 50, 60],\n              [20, 30, 70, 60],\n              [10, 80, 40, 30],\n              [10, 10, 20, 30]]\ntrain_labels = [10, 20, 30, 15, 10, 25]\nmodel = CatBoost()\n\ngrid = {'learning_rate': [0.03, 0.1],\n        'depth': [4, 6, 10],\n        'l2_leaf_reg': [1, 3, 5, 7, 9]}\n\nrandomized_search_result = model.randomized_search(grid,\n                                                   X=train_data,\n                                                   y=train_labels,\n                                                   plot=True)\n</code></pre> <p>\u8fd9\u4e2a\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 <code>randomized_search</code> \u65b9\u6cd5\u5728\u6307\u5b9a\u53c2\u6570\u8303\u56f4\u5185\u968f\u673a\u641c\u7d22\u6700\u4f73\u6a21\u578b\u53c2\u6570\u3002 1</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/save_borders/","title":"\u26c4 save_borders","text":"<p>\u5c06\u6a21\u578b\u8fb9\u6846\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\u3002</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/save_borders/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>save_borders(fname)\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/save_borders/#_2","title":"\u53c2\u6570","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/save_borders/#fname","title":"fname","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8f93\u51fa\u6a21\u578b\u7684\u8def\u5f84\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>string</code></li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/save_borders/#_3","title":"\u8fd4\u56de\u503c\u7c7b\u578b","text":"<p><code>save_model</code> \u65b9\u6cd5\u6ca1\u6709\u8fd4\u56de\u503c\u3002</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/save_model/","title":"\u26c4 save_model","text":"<p>\u8fd9\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u4e86 CatBoost \u4e2d <code>save_model</code> \u65b9\u6cd5\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7528\u4e8e\u5c06\u8bad\u7ec3\u597d\u7684 CatBoost \u6a21\u578b\u4fdd\u5b58\u5230\u6587\u4ef6\u30021</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/save_model/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>save_model(fname,\n           format=\"cbm\",\n           export_parameters=None,\n           pool=None)\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/save_model/#_2","title":"\u53c2\u6570\u8bf4\u660e","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/save_model/#fname","title":"fname","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8f93\u51fa\u6a21\u578b\u7684\u8def\u5f84\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>string</code></li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/save_model/#format","title":"format","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8f93\u51fa\u6a21\u578b\u7684\u683c\u5f0f\u3002</li> <li>\u53ef\u80fd\u7684\u503c\uff1a</li> <li><code>cbm</code>\uff1aCatBoost \u4e8c\u8fdb\u5236\u683c\u5f0f\u3002</li> <li><code>coreml</code>\uff1aApple CoreML \u683c\u5f0f\uff08\u76ee\u524d\u4ec5\u652f\u6301\u6ca1\u6709\u5206\u7c7b\u7279\u5f81\u7684\u6570\u636e\u96c6\uff09\u3002</li> <li><code>json</code>\uff1aJSON \u683c\u5f0f\u3002\u6709\u5173\u683c\u5f0f\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 CatBoost JSON \u6a21\u578b\u6559\u7a0b\u3002</li> <li><code>python</code>\uff1a\u72ec\u7acb\u7684 Python \u4ee3\u7801\uff08\u76ee\u524d\u4e0d\u652f\u6301\u591a\u5206\u7c7b\u6a21\u578b\uff09\u3002\u6709\u5173\u5e94\u7528\u7ed3\u679c\u6a21\u578b\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 Python \u90e8\u5206\u3002</li> <li><code>cpp</code>\uff1a\u72ec\u7acb\u7684 C++ \u4ee3\u7801\uff08\u76ee\u524d\u4e0d\u652f\u6301\u591a\u5206\u7c7b\u6a21\u578b\uff09\u3002\u6709\u5173\u5e94\u7528\u7ed3\u679c\u6a21\u578b\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 C++ \u90e8\u5206\u3002</li> <li><code>onnx</code>\uff1aONNX-ML \u683c\u5f0f\uff08\u76ee\u524d\u4ec5\u652f\u6301\u6ca1\u6709\u5206\u7c7b\u7279\u5f81\u7684\u6570\u636e\u96c6\uff09\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 https://onnx.ai/\u3002\u6709\u5173\u5e94\u7528\u7ed3\u679c\u6a21\u578b\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 ONNX \u90e8\u5206\u3002</li> <li><code>pmml</code>\uff1aPMML \u7248\u672c 4.3 \u683c\u5f0f\u3002\u5982\u679c\u8bad\u7ec3\u6570\u636e\u96c6\u4e2d\u5b58\u5728\u5206\u7c7b\u7279\u5f81\uff0c\u5219\u5fc5\u987b\u5728\u8bad\u7ec3\u671f\u95f4\u5c06\u5b83\u4eec\u89e3\u91ca\u4e3a\u72ec\u70ed\u7f16\u7801\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5c06 <code>--one-hot-max-size</code> / <code>one_hot_max_size</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a\u5927\u4e8e\u6570\u636e\u96c6\u4e2d\u6240\u6709\u5206\u7c7b\u7279\u5f81\u7684\u552f\u4e00\u5206\u7c7b\u7279\u5f81\u503c\u7684\u6700\u5927\u6570\u91cf\u7684\u503c\u6765\u5b9e\u73b0\u3002\u6709\u5173\u5e94\u7528\u7ed3\u679c\u6a21\u578b\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 PMML \u90e8\u5206\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>string</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>cbm</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/save_model/#export_parameters","title":"export_parameters","text":"<ul> <li>\u63cf\u8ff0\uff1a \u9488\u5bf9\u7279\u5b9a\u683c\u5f0f\u7684\u989d\u5916\u53c2\u6570\uff1a</li> <li>Apple CoreML<ul> <li><code>prediction_type</code>\uff1a\u53ef\u80fd\u7684\u503c\u4e3a <code>probability</code> \u548c <code>raw</code>\u3002</li> <li><code>coreml_description</code></li> <li><code>coreml_model_version</code></li> <li><code>coreml_model_author</code></li> <li><code>coreml_model_license</code></li> </ul> </li> <li>ONNX-ML<ul> <li><code>onnx_graph_name</code></li> <li><code>onnx_domain</code></li> <li><code>onnx_model_version</code></li> <li><code>onnx_doc_string</code></li> <li>\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 ONNX-ML \u53c2\u6570\u53c2\u8003\u3002</li> </ul> </li> <li>PMML<ul> <li><code>pmml_copyright</code></li> <li><code>pmml_description</code></li> <li><code>pmml_model_version</code></li> <li>\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 PMML \u53c2\u6570\u53c2\u8003\u3002</li> </ul> </li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>dict</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/save_model/#pool","title":"pool","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u8bad\u7ec3\u7684\u5148\u524d\u6570\u636e\u96c6\u3002\u5982\u679c\u6a21\u578b\u5305\u542b\u5206\u7c7b\u7279\u5f81\uff0c\u5e76\u4e14\u8f93\u51fa\u683c\u5f0f\u4e3a <code>cpp</code>\u3001<code>python</code> \u6216 <code>JSON</code>\uff0c\u5219\u6b64\u53c2\u6570\u662f\u5fc5\u9700\u7684\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>catboost.Pool</code>\u3001<code>list</code>\u3001<code>numpy.ndarray</code>\u3001<code>pandas.DataFrame</code>\u3001<code>pandas.Series</code>\u3001<code>catboost.FeaturesData</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code></li> <li>\u6ce8\u610f\uff1a \u6a21\u578b\u53ef\u4ee5\u4fdd\u5b58\u5230 <code>JSON</code> \u683c\u5f0f\u800c\u65e0\u9700\u6570\u636e\u96c6\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u53ef\u4f9b\u67e5\u770b\uff0c\u4f46\u4e0d\u53ef\u7528\u3002 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/save_model/#_3","title":"\u8fd4\u56de\u503c\u7c7b\u578b","text":"<p><code>save_model</code> \u65b9\u6cd5\u6ca1\u6709\u8fd4\u56de\u503c\u3002 1</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/save_model/#_4","title":"\u793a\u4f8b","text":"<pre><code>from catboost import CatBoostClassifier, Pool\n\n# \u8bad\u7ec3\u6570\u636e\ntrain_data = [[1, 3], [0, 4], [1, 7]]\ntrain_labels = [1, 0, 1]\n\n# \u521b\u5efa\u6570\u636e\u96c6\ntrain_pool = Pool(train_data, train_labels)\n\n# \u8bad\u7ec3\u6a21\u578b\nmodel = CatBoostClassifier(learning_rate=0.03)\nmodel.fit(train_pool, verbose=False)\n\n# \u4fdd\u5b58\u6a21\u578b\nmodel.save_model(\"model\")\n</code></pre> <p>\u8fd9\u4e2a\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 <code>save_model</code> \u65b9\u6cd5\u5c06\u8bad\u7ec3\u597d\u7684 CatBoost \u6a21\u578b\u4fdd\u5b58\u5230\u6587\u4ef6\u3002 1</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/select_features/","title":"\u26c4 select_features","text":"<p>\u8fd9\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u4e86 CatBoost \u4e2d <code>select_features</code> \u65b9\u6cd5\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7528\u4e8e\u4ece\u6570\u636e\u96c6\u9009\u62e9\u6700\u4f73\u7279\u5f81\u5e76\u4e22\u5f03\u6709\u5bb3\u7279\u5f81\u30021</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/select_features/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>select_features(\n    X,\n    y=None,\n    eval_set=None,\n    features_for_select=None,\n    num_features_to_select=None,\n    algorithm=None,\n    steps=None,\n    shap_calc_type=None,\n    train_final_model=False,\n    verbose=None,\n    logging_level=None,\n    plot=False,\n    log_cout=sys.stdout,\n    log_cerr=sys.stderr\n)\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/select_features/#_2","title":"\u53c2\u6570\u8bf4\u660e","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/select_features/#x","title":"X","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8f93\u5165\u8bad\u7ec3\u6570\u636e\u96c6\u3002\u6ce8\u610f\uff0c\u5982\u679c\u5728\u8be5\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u6307\u5b9a\u4e86\u975e\u5e73\u51e1\u7684 <code>cat_features</code> \u53c2\u6570\u503c\uff0cCatBoost \u4f1a\u68c0\u67e5\u6784\u9020\u51fd\u6570\u53c2\u6570\u4e2d\u6307\u5b9a\u7684\u5206\u7c7b\u7279\u5f81\u7d22\u5f15\u4e0e\u8be5 <code>Pool</code> \u7c7b\u4e2d\u7684\u7d22\u5f15\u662f\u5426\u4e00\u81f4\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>catboost.Pool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/select_features/#y","title":"y","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8bad\u7ec3\u6570\u636e\u96c6\u7684\u76ee\u6807\u53d8\u91cf\uff08\u6362\u53e5\u8bdd\u8bf4\uff0c\u5bf9\u8c61\u7684\u6807\u7b7e\u503c\uff09\u3002\u5fc5\u987b\u4ee5\u4e00\u7ef4\u6216\u4e8c\u7ef4\u6570\u7ec4\u7684\u5f62\u5f0f\u3002\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u53d6\u51b3\u4e8e\u8981\u89e3\u51b3\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\uff1a</li> <li>\u56de\u5f52\u548c\u6392\u5e8f\uff1a\u4e00\u7ef4\u6570\u503c\u6570\u7ec4\u3002</li> <li>\u591a\u5143\u56de\u5f52\uff1a\u4e8c\u7ef4\u6570\u503c\u6570\u7ec4\u3002\u7b2c\u4e00\u4e2a\u7d22\u5f15\u7528\u4e8e\u7ef4\u5ea6\uff0c\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u7528\u4e8e\u5bf9\u8c61\u3002</li> <li>\u4e8c\u5143\u5206\u7c7b\uff1a\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\u4e4b\u4e00\u7684\u4e00\u7ef4\u6570\u7ec4\uff1a<ul> <li>\u5e03\u5c14\u503c\u3001\u6574\u6570\u6216\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u7c7b\u7684\u6807\u7b7e\uff08\u53ea\u6709\u4e24\u4e2a\u552f\u4e00\u503c\uff09\u3002</li> <li>\u6570\u503c\u3002\u6570\u503c\u7684\u89e3\u91ca\u53d6\u51b3\u4e8e\u6240\u9009\u7684\u635f\u5931\u51fd\u6570\uff1a</li> <li><code>Logloss</code>\uff1a\u5982\u679c\u4e25\u683c\u5927\u4e8e <code>target_border</code> \u8bad\u7ec3\u53c2\u6570\u7684\u503c\uff0c\u5219\u8be5\u503c\u88ab\u89c6\u4e3a\u6b63\u7c7b\u3002\u5426\u5219\uff0c\u5b83\u88ab\u89c6\u4e3a\u8d1f\u7c7b\u3002</li> <li><code>CrossEntropy</code>\uff1a\u8be5\u503c\u88ab\u89e3\u91ca\u4e3a\u6570\u636e\u96c6\u5bf9\u8c61\u5c5e\u4e8e\u6b63\u7c7b\u7684\u6982\u7387\u3002\u53ef\u80fd\u7684\u503c\u5728 [0; 1] \u8303\u56f4\u5185\u3002</li> </ul> </li> <li>\u591a\u5206\u7c7b\uff1a\u4e00\u7ef4\u6574\u6570\u6216\u5b57\u7b26\u4e32\u6570\u7ec4\uff0c\u8868\u793a\u7c7b\u7684\u6807\u7b7e\u3002</li> <li>\u591a\u6807\u7b7e\u5206\u7c7b\uff1a\u4e8c\u7ef4\u6570\u7ec4\u3002\u7b2c\u4e00\u4e2a\u7d22\u5f15\u7528\u4e8e\u6807\u7b7e/\u7c7b\uff0c\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u7528\u4e8e\u5bf9\u8c61\u3002\u53ef\u80fd\u7684\u503c\u53d6\u51b3\u4e8e\u6240\u9009\u7684\u635f\u5931\u51fd\u6570\uff1a<ul> <li><code>MultiLogloss</code>\uff1a\u4ec5\u5141\u8bb8 {0, 1} \u6216 {False, True} \u503c\uff0c\u6307\u5b9a\u5bf9\u8c61\u662f\u5426\u5c5e\u4e8e\u5bf9\u5e94\u4e8e\u7b2c\u4e00\u4e2a\u7d22\u5f15\u7684\u7c7b\u3002</li> <li><code>MultiCrossEntropy</code>\uff1a\u8303\u56f4\u5728 [0; 1] \u5185\u7684\u6570\u503c\uff0c\u88ab\u89e3\u91ca\u4e3a\u6570\u636e\u96c6\u5bf9\u8c61\u5c5e\u4e8e\u5bf9\u5e94\u4e8e\u7b2c\u4e00\u4e2a\u7d22\u5f15\u7684\u7c7b\u7684\u6982\u7387\u3002</li> </ul> </li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>list</code>\u3001<code>numpy.ndarray</code>\u3001<code>pandas.DataFrame</code>\u3001<code>pandas.Series</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code></li> <li>\u6ce8\u610f\uff1a \u5982\u679c\u8f93\u5165\u8bad\u7ec3\u6570\u636e\u96c6\uff08\u5728 <code>X</code> \u53c2\u6570\u4e2d\u6307\u5b9a\uff09\u7684\u7c7b\u578b\u4e3a <code>catboost.Pool</code>\uff0c\u5219\u4e0d\u8981\u4f7f\u7528\u6b64\u53c2\u6570\u3002 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/select_features/#eval_set","title":"eval_set","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u4ee5\u4e0b\u8fc7\u7a0b\u7684\u9a8c\u8bc1\u6570\u636e\u96c6\u6216\u6570\u636e\u96c6\uff1a</li> <li>\u8fc7\u62df\u5408\u68c0\u6d4b\u5668</li> <li>\u6700\u4f73\u8fed\u4ee3\u9009\u62e9</li> <li>\u76d1\u63a7\u6307\u6807\u7684\u53d8\u5316</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a</li> <li><code>catboost.Pool</code></li> <li><code>tuple</code> (X, y)</li> <li><code>string</code> (\u6570\u636e\u96c6\u6587\u4ef6\u8def\u5f84)</li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/select_features/#features_for_select","title":"features_for_select","text":"<ul> <li>\u63cf\u8ff0\uff1a \u53c2\u4e0e\u9009\u62e9\u7684\u7279\u5f81\u3002\u652f\u6301\u4ee5\u4e0b\u683c\u5f0f\uff1a</li> <li>\u5305\u542b\u7d22\u5f15\u3001\u540d\u79f0\u3001\u7d22\u5f15\u8303\u56f4\u3001\u540d\u79f0\u8303\u56f4\u7684\u5217\u8868\u3002\u4f8b\u5982\uff1a<code>[0, 3, 5, 6, '10-15', 'City', 'Player1-Player11']</code>\u3002</li> <li>\u5305\u542b\u7d22\u5f15\u3001\u540d\u79f0\u3001\u7d22\u5f15\u8303\u56f4\u3001\u540d\u79f0\u8303\u56f4\u7684\u5b57\u7b26\u4e32\u3002\u503c\u7528\u9017\u53f7\u5206\u9694\uff0c\u4f8b\u5982\uff1a<code>0,3,5,6,10-15,City,Player1-Player11</code>\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>list</code>\u3001<code>string</code></li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/select_features/#num_features_to_select","title":"num_features_to_select","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8981\u4ece <code>features_for_select</code> \u4e2d\u9009\u62e9\u7684\u7279\u5f81\u6570\u91cf\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/select_features/#steps","title":"steps","text":"<ul> <li>\u63cf\u8ff0\uff1a \u8bad\u7ec3\u6a21\u578b\u7684\u6b21\u6570\u3002\u4f7f\u7528\u66f4\u591a\u6b65\u9aa4\u53ef\u4ee5\u83b7\u5f97\u66f4\u51c6\u786e\u7684\u9009\u62e9\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>1</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/select_features/#algorithm","title":"algorithm","text":"<ul> <li>\u63cf\u8ff0\uff1a \u4e3b\u8981\u7b97\u6cd5\u662f\u9012\u5f52\u7279\u5f81\u6d88\u9664\uff0c\u5177\u6709\u53ef\u53d8\u7279\u5f81\u91cd\u8981\u6027\u8ba1\u7b97\u65b9\u6cd5\uff1a</li> <li><code>RecursiveByPredictionValuesChange</code>\uff1a\u6700\u5feb\u7684\u7b97\u6cd5\uff0c\u4e5f\u662f\u6700\u4e0d\u51c6\u786e\u7684\u65b9\u6cd5\uff08\u4e0d\u63a8\u8350\u7528\u4e8e\u6392\u5e8f\u635f\u5931\uff09\u3002</li> <li><code>RecursiveByLossFunctionChange</code>\uff1a\u6839\u636e\u51c6\u786e\u6027/\u901f\u5ea6\u5e73\u8861\uff0c\u6700\u4f73\u9009\u62e9\u3002</li> <li><code>RecursiveByShapValues</code>\uff1a\u6700\u51c6\u786e\u7684\u65b9\u6cd5\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>EFeaturesSelectionAlgorithm</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>RecursiveByShapValues</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/select_features/#shap_calc_type","title":"shap_calc_type","text":"<ul> <li>\u63cf\u8ff0\uff1a SHAP \u503c\u8ba1\u7b97\u65b9\u6cd5\uff0c\u6309\u51c6\u786e\u6027\u6392\u5e8f\uff1a</li> <li><code>Approximate</code></li> <li><code>Regular</code></li> <li><code>Exact</code></li> <li>\u7528\u4e8e <code>RecursiveByLossFunctionChange</code> \u548c <code>RecursiveByShapValues</code>\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>EShapCalcType</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>Regular</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/select_features/#train_final_model","title":"train_final_model","text":"<ul> <li>\u63cf\u8ff0\uff1a \u5982\u679c\u6307\u5b9a\uff0c\u5219\u5728\u7279\u5f81\u9009\u62e9\u540e\u5c06\u4f7f\u7528\u9009\u5b9a\u7279\u5f81\u8bad\u7ec3\u6a21\u578b\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>True</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/select_features/#verbose","title":"verbose","text":"<ul> <li>\u63cf\u8ff0\uff1a \u542f\u7528\u8be6\u7ec6\u8f93\u51fa\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/select_features/#logging_level","title":"logging_level","text":"<ul> <li>\u63cf\u8ff0\uff1a \u65e5\u5fd7\u7ea7\u522b\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>int</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/select_features/#plot","title":"plot","text":"<ul> <li>\u63cf\u8ff0\uff1a \u662f\u5426\u7ed8\u5236\u7ed3\u679c\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>bool</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>False</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/select_features/#log_cout","title":"log_cout","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u8f93\u51fa\u6807\u51c6 C++ \u6d41\u7684\u5bf9\u8c61\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>object</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>sys.stdout</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/select_features/#log_cerr","title":"log_cerr","text":"<ul> <li>\u63cf\u8ff0\uff1a \u7528\u4e8e\u8f93\u51fa\u9519\u8bef C++ \u6d41\u7684\u5bf9\u8c61\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>object</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>sys.stderr</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/select_features/#_3","title":"\u8fd4\u56de\u503c\u7c7b\u578b","text":"<p><code>select_features</code> \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u5b57\u5178\uff0c\u5305\u542b\u4ee5\u4e0b\u5b57\u6bb5\uff1a</p> <ul> <li><code>selected_features</code>\uff1a\u5305\u542b\u9009\u5b9a\u7279\u5f81\u7684\u7d22\u5f15\u5217\u8868\u3002</li> <li><code>eliminated_features</code>\uff1a\u5305\u542b\u88ab\u6d88\u9664\u7279\u5f81\u7684\u7d22\u5f15\u5217\u8868\u3002</li> <li><code>feature_importances</code>\uff1a\u5305\u542b\u6bcf\u4e2a\u7279\u5f81\u91cd\u8981\u6027\u7684\u5b57\u5178\u3002</li> <li><code>model</code>\uff1a\u5982\u679c <code>train_final_model</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>True</code>\uff0c\u5219\u5305\u542b\u4f7f\u7528\u9009\u5b9a\u7279\u5f81\u8bad\u7ec3\u7684\u6a21\u578b\u3002</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/select_features/#_4","title":"\u793a\u4f8b","text":"<pre><code>from catboost import CatBoostRegressor, Pool, EShapCalcType, EFeaturesSelectionAlgorithm\nfrom sklearn.datasets import make_regression\nfrom sklearn.model_selection import train_test_split\n\nX, y = make_regression(n_samples=1000, n_features=100, n_informative=20, random_state=0)\ntrain_X, test_X, train_y, test_y = train_test_split(X, y, test_size=0.25, random_state=0)\nfeature_names = ['F{}'.format(i) for i in range(train_X.shape[1])]\ntrain_pool = Pool(train_X, train_y, feature_names=feature_names)\ntest_pool = Pool(test_X, test_y, feature_names=feature_names)\n\nmodel = CatBoostRegressor(iterations=1000, random_seed=0)\nsummary = model.select_features(\n    train_pool,\n    eval_set=test_pool,\n    features_for_select='0-99',\n    num_features_to_select=10,\n    steps=3,\n    algorithm=EFeaturesSelectionAlgorithm.RecursiveByShapValues,\n    shap_calc_type=EShapCalcType.Regular,\n    train_final_model=True,\n    logging_level='Silent',\n    plot=True\n)\n</code></pre> <p>\u8fd9\u4e2a\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 <code>select_features</code> \u65b9\u6cd5\u4ece\u6570\u636e\u96c6\u9009\u62e9\u6700\u4f73\u7279\u5f81\u5e76\u4e22\u5f03\u6709\u5bb3\u7279\u5f81\u3002 1</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/select_features/#_5","title":"\u56fe\u7684\u89e3\u8bfb","text":"<ul> <li>\u521d\u59cb\u70b9\uff1a\u56fe\u7684\u5de6\u7aef\u8868\u793a\u6240\u6709\u7279\u5f81\u90fd\u88ab\u4fdd\u7559\u65f6\u7684\u635f\u5931\u503c\u3002</li> <li>\u66f2\u7ebf\u53d8\u5316\uff1a\u968f\u7740\u7279\u5f81\u9010\u6b65\u88ab\u79fb\u9664\uff0c\u635f\u5931\u503c\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u66f2\u7ebf\u7684\u5f62\u72b6\u53ef\u4ee5\u5e2e\u52a9\u4f60\u7406\u89e3\u54ea\u4e9b\u7279\u5f81\u5bf9\u6a21\u578b\u6027\u80fd\u5f71\u54cd\u6700\u5927\u3002</li> <li>\u5e73\u7f13\u4e0a\u5347\uff1a\u5982\u679c\u66f2\u7ebf\u5728\u67d0\u4e9b\u7279\u5f81\u88ab\u79fb\u9664\u540e\u4ecd\u7136\u4fdd\u6301\u5e73\u7f13\u4e0a\u5347\uff0c\u8bf4\u660e\u8fd9\u4e9b\u7279\u5f81\u5bf9\u6a21\u578b\u6027\u80fd\u7684\u5f71\u54cd\u8f83\u5c0f\u3002</li> <li>\u9661\u5ced\u4e0a\u5347\uff1a\u5982\u679c\u66f2\u7ebf\u5728\u67d0\u4e9b\u7279\u5f81\u88ab\u79fb\u9664\u540e\u9661\u5ced\u4e0a\u5347\uff0c\u8bf4\u660e\u8fd9\u4e9b\u7279\u5f81\u5bf9\u6a21\u578b\u6027\u80fd\u7684\u5f71\u54cd\u8f83\u5927\u3002</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/set_feature_names/","title":"\u26c4 set_feature_names","text":"<p>\u8fd9\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u4e86 CatBoost \u4e2d <code>set_feature_names</code> \u65b9\u6cd5\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7528\u4e8e\u8bbe\u7f6e\u6a21\u578b\u4e2d\u6240\u6709\u7279\u5f81\u7684\u540d\u79f0\u30021</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/set_feature_names/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>set_feature_names(feature_names)\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/set_feature_names/#_2","title":"\u53c2\u6570\u8bf4\u660e","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/set_feature_names/#feature_names","title":"feature_names","text":"<ul> <li>\u63cf\u8ff0\uff1a \u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\uff0c\u5305\u542b\u6bcf\u4e2a\u7279\u5f81\u7684\u540d\u79f0\u3002\u6307\u5b9a\u540d\u79f0\u7684\u987a\u5e8f\u548c\u6570\u91cf\u5fc5\u987b\u4e0e\u6570\u636e\u96c6\u4e2d\u7684\u7279\u5f81\u987a\u5e8f\u548c\u6570\u91cf\u4e00\u81f4\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>ndarray</code>\u3001<code>list</code></li> <li>\u9ed8\u8ba4\u503c\uff1a \u5fc5\u586b\u53c2\u6570 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/set_feature_names/#_3","title":"\u793a\u4f8b","text":"<pre><code>from catboost import CatBoost\n\ntrain_data = [[1, 4, 5, 6],\n              [4, 5, 6, 7],\n              [30, 40, 50, 60]]\n\neval_data = [[2, 4, 6, 8],\n             [1, 4, 50, 60]]\n\ntrain_labels = [10, 20, 30]\n\nmodel = CatBoost()\n\nmodel.fit(train_data,\n          train_labels,\n          verbose=False)\n\nprint(\"Original feature names:\")\nprint(model.feature_names_)\nprint(\"Changed feature names:\")\nmodel.set_feature_names([\"feature_1\", \"feature_2\", \"feature_3\", \"feature_4\"])\nprint(model.feature_names_)\n</code></pre> <p>\u8fd9\u4e2a\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 <code>set_feature_names</code> \u65b9\u6cd5\u8bbe\u7f6e\u6a21\u578b\u4e2d\u6240\u6709\u7279\u5f81\u7684\u540d\u79f0\u3002 1</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>\u539f\u59cb\u7279\u5f81\u540d\u79f0\uff1a\n['0', '1', '2', '3']\n\u66f4\u6539\u540e\u7684\u7279\u5f81\u540d\u79f0\uff1a\n['feature_1', 'feature_2', 'feature_3', 'feature_4']\n</code></pre> <p>\u6ce8\u610f\uff1a \u8be5\u65b9\u6cd5\u53ef\u4ee5\u7528\u4e8e <code>CatBoost</code>\u3001<code>CatBoostClassifier</code>\u3001<code>CatBoostRegressor</code> \u548c <code>Pool</code> \u7c7b\u3002 1</p> <p>\u6b64\u5916\uff0c<code>set_feature_names</code> \u65b9\u6cd5\u8fd8\u53ef\u4ee5\u7528\u4e8e\u8bbe\u7f6e <code>Pool</code> \u7c7b\u4e2d\u6240\u6709\u7279\u5f81\u7684\u540d\u79f0\u3002 2</p> <pre><code>import numpy as np\nfrom catboost import Pool\n\ntrain_data = [[76, 'blvd', 41, 50, 7],\n              [75, 'today', 57, 0, 48],\n              [70, 'letters', 33, 17, 7],\n              [72, 'now', 43, 29, 12],\n              [60, 'back', 2, 0, 1]]\n\nlabel_values = [1, 0, 0, 1, 4]\n\ninput_pool = Pool(data=train_data,\n                  label=label_values,\n                  cat_features=[1])\n\ninput_pool.set_feature_names(['year', 'name', 'BLBRD', 'CAC', 'OAC'])\n</code></pre> <p>\u8fd9\u4e2a\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 <code>set_feature_names</code> \u65b9\u6cd5\u8bbe\u7f6e <code>Pool</code> \u7c7b\u4e2d\u6240\u6709\u7279\u5f81\u7684\u540d\u79f0\u3002 2</p> <p>\u6ce8\u610f\uff1a \u5728\u4f7f\u7528 <code>set_feature_names</code> \u65b9\u6cd5\u8bbe\u7f6e\u7279\u5f81\u540d\u79f0\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>get_feature_names</code> \u65b9\u6cd5\u83b7\u53d6\u7279\u5f81\u540d\u79f0\u3002 3</p> <pre><code>from catboost import FeaturesData\n\nfd = FeaturesData(\n    num_feature_data=np.array([[1, 4, 5, 6], [4, 5, 6, 7], [30, 40, 50, 60]], dtype=np.float32),\n    num_feature_names=['num_feat0', 'num_feat1', 'num_feat2', 'num_feat3'],\n    cat_feature_data=np.array([[\"a\", \"b\"], [\"a\", \"b\"], [\"c\", \"d\"]], dtype=object),\n    cat_feature_names=['cat_feat0', 'cat_feat1']\n)\n\nprint(fd.get_feature_names())\n</code></pre> <p>\u8fd9\u4e2a\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 <code>get_feature_names</code> \u65b9\u6cd5\u83b7\u53d6\u7279\u5f81\u540d\u79f0\u3002 3</p> <p>\u6700\u540e\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cCatBoost \u6a21\u578b\u7684\u7279\u5f81\u540d\u79f0\u5b58\u50a8\u5728 JSON \u683c\u5f0f\u4e2d\uff0c\u800c\u4e0d\u80fd\u5b58\u50a8\u5728 CPP \u683c\u5f0f\u4e2d\u3002 4 \u56e0\u6b64\uff0c\u5728\u4f7f\u7528 Python \u52a0\u8f7d CPP \u683c\u5f0f\u7684\u6a21\u578b\u65f6\uff0c\u7279\u5f81\u540d\u79f0\u5c06\u65e0\u6cd5\u88ab\u52a0\u8f7d\u3002 4</p> <p>\u6b64\u5916\uff0c\u5982\u679c\u5728 <code>cat_features</code> \u53c2\u6570\u4e2d\u6307\u5b9a\u4e86\u7279\u5f81\u540d\u79f0\u800c\u4e0d\u662f\u7d22\u5f15\uff0c\u5219\u5fc5\u987b\u4e3a\u8bad\u7ec3\u6570\u636e\u96c6\u63d0\u4f9b\u7279\u5f81\u540d\u79f0\u3002 6 \u5426\u5219\uff0cCatBoost \u5c06\u65e0\u6cd5\u8bc6\u522b\u5206\u7c7b\u7279\u5f81\u3002 6</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/set_params/","title":"\u26c4 set_params","text":"<p>\u8fd9\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u4e86 CatBoost \u4e2d <code>set_params</code> \u65b9\u6cd5\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7528\u4e8e\u8bbe\u7f6e\u6a21\u578b\u7684\u8bad\u7ec3\u53c2\u6570\u30021</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/set_params/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>set_params(**params)\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/set_params/#_2","title":"\u53c2\u6570\u8bf4\u660e","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/set_params/#params","title":"params","text":"<ul> <li>\u63cf\u8ff0\uff1a \u4e00\u4e2a\u5b57\u5178\uff0c\u5305\u542b\u8981\u8bbe\u7f6e\u7684\u8bad\u7ec3\u53c2\u6570\u3002\u53c2\u6570\u540d\u79f0\u4f5c\u4e3a\u952e\uff0c\u53c2\u6570\u503c\u4f5c\u4e3a\u503c\u3002\u5982\u679c\u7701\u7565\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u503c\u3002\u5982\u679c\u8bbe\u7f6e\uff0c\u5219\u4f20\u9012\u7684\u53c2\u6570\u5217\u8868\u5c06\u8986\u76d6\u9ed8\u8ba4\u503c\u3002</li> <li>\u53ef\u80fd\u7c7b\u578b\uff1a <code>dict</code></li> <li>\u9ed8\u8ba4\u503c\uff1a <code>None</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/set_params/#_3","title":"\u793a\u4f8b","text":"<pre><code>model.set_params(iterations=500, thread_count=2, use_best_model=True)\n</code></pre> <p>\u8fd9\u4e2a\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 <code>set_params</code> \u65b9\u6cd5\u8bbe\u7f6e\u6a21\u578b\u7684\u8bad\u7ec3\u53c2\u6570\u3002 1</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/set_scale_and_bias/","title":"\u26c4 set_scale_and_bias","text":"<p>\u8fd9\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u4e86 CatBoost \u4e2d <code>set_scale_and_bias</code> \u65b9\u6cd5\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7528\u4e8e\u8bbe\u7f6e\u6a21\u578b\u7684\u7f29\u653e\u6bd4\u4f8b\u548c\u504f\u5dee\u30021</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/set_scale_and_bias/#_1","title":"\u65b9\u6cd5\u8c03\u7528\u683c\u5f0f","text":"<pre><code>set_scale_and_bias(scale, bias)\n</code></pre>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/set_scale_and_bias/#_2","title":"\u53c2\u6570\u8bf4\u660e","text":""},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/set_scale_and_bias/#scale","title":"scale","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a \u6a21\u578b\u7684\u7f29\u653e\u6bd4\u4f8b\u3002\u6a21\u578b\u9884\u6d4b\u7ed3\u679c\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a   $$   \\sum leaf_values \u00b7 scale+bias   $$   \u8be5\u53c2\u6570\u7684\u503c\u901a\u8fc7\u6539\u53d8\u7f29\u653e\u6bd4\u4f8b\u7684\u9ed8\u8ba4\u503c\u6765\u5f71\u54cd\u9884\u6d4b\u7ed3\u679c\u3002</p> </li> <li> <p>\u53ef\u80fd\u7c7b\u578b\uff1a <code>float</code></p> </li> <li> <p>\u9ed8\u8ba4\u503c\uff1a <code>1</code> 1</p> </li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/set_scale_and_bias/#bias","title":"bias","text":"<ul> <li> <p>\u63cf\u8ff0\uff1a \u6a21\u578b\u7684\u504f\u5dee\u3002\u6a21\u578b\u9884\u6d4b\u7ed3\u679c\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a   $$   \\sum leaf_values \u00b7 scale+bias   $$   \u8be5\u53c2\u6570\u7684\u503c\u901a\u8fc7\u6539\u53d8\u504f\u5dee\u7684\u9ed8\u8ba4\u503c\u6765\u5f71\u54cd\u9884\u6d4b\u7ed3\u679c\u3002</p> </li> <li> <p>\u53ef\u80fd\u7c7b\u578b\uff1a <code>float</code></p> </li> <li> <p>\u9ed8\u8ba4\u503c\uff1a \u53d6\u51b3\u4e8e\u547d\u4ee4\u884c\u7248\u672c\u53c2\u6570 <code>--boost-from-average</code> \u7684\u503c\uff1a</p> </li> <li> <p><code>True</code>\uff1a\u6307\u5b9a\u635f\u5931\u51fd\u6570\u7684\u6700\u4f73\u5e38\u6570\u503c\u3002</p> </li> <li><code>False</code>\uff1a<code>0</code> 1</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/set_scale_and_bias/#_3","title":"\u793a\u4f8b","text":"<pre><code>from catboost import CatBoostClassifier, Pool\nimport numpy as np\n\ntrain_data = Pool(data=[[1, 4, 5, 6],\n                        [4, 5, 6, 7],\n                        [30, 40, 50, 60]],\n                  label=[1, 1, -1],\n                  weight=[0.1, 0.2, 0.3])\n\nmodel = CatBoostClassifier()\nprint(\"Default scale and bias: \" + str(model.get_scale_and_bias()))\n\nmodel.set_scale_and_bias(0.5, 0.5)\nprint(\"Modified scale and bias: \" + str(model.get_scale_and_bias()))\n</code></pre> <p>\u8fd9\u4e2a\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 <code>set_scale_and_bias</code> \u65b9\u6cd5\u8bbe\u7f6e\u6a21\u578b\u7684\u7f29\u653e\u6bd4\u4f8b\u548c\u504f\u5dee\u3002 1</p> <p>\u8f93\u51fa\uff1a</p> <pre><code>Default scale and bias: (1.0, 0.0)\nModified scale and bias: (0.5, 0.5)\n</code></pre> <p>\u6ce8\u610f\uff1a \u8be5\u65b9\u6cd5\u4ec5\u9002\u7528\u4e8e <code>CatBoostClassifier</code> \u548c <code>CatBoostRegressor</code> \u7c7b\u3002 1</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/set_scale_and_bias/#_4","title":"\u4e3b\u8981\u5e94\u7528\u573a\u666f","text":"<ol> <li>\u6a21\u578b\u96c6\u6210\uff1a</li> <li>\u5f53\u4f60\u5c06\u591a\u4e2a\u6a21\u578b\u7684\u8f93\u51fa\u8fdb\u884c\u96c6\u6210\uff08\u4f8b\u5982\uff0c\u5e73\u5747\u591a\u4e2a\u6a21\u578b\u7684\u9884\u6d4b\u7ed3\u679c\uff09\u65f6\uff0c\u53ef\u80fd\u9700\u8981\u5bf9\u6bcf\u4e2a\u6a21\u578b\u7684\u8f93\u51fa\u8fdb\u884c\u7f29\u653e\u548c\u504f\u7f6e\u8c03\u6574\uff0c\u4ee5\u786e\u4fdd\u5b83\u4eec\u5728\u540c\u4e00\u5c3a\u5ea6\u4e0a\u3002</li> <li>\u540e\u5904\u7406\u8c03\u6574\uff1a</li> <li>\u5728\u67d0\u4e9b\u5e94\u7528\u4e2d\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u5bf9\u6a21\u578b\u7684\u8f93\u51fa\u8fdb\u884c\u540e\u5904\u7406\u3002\u4f8b\u5982\uff0c\u5728\u91d1\u878d\u9886\u57df\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u5bf9\u9884\u6d4b\u7684\u4ef7\u683c\u8fdb\u884c\u8c03\u6574\uff0c\u4ee5\u7b26\u5408\u67d0\u4e9b\u4e1a\u52a1\u89c4\u5219\u6216\u7ea6\u675f\u3002</li> <li>\u8fc1\u79fb\u5b66\u4e60\uff1a</li> <li>\u5f53\u4f60\u5728\u4e00\u4e2a\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u6a21\u578b\uff0c\u7136\u540e\u5c06\u5176\u5e94\u7528\u5230\u53e6\u4e00\u4e2a\u6570\u636e\u96c6\u65f6\uff0c\u53ef\u80fd\u9700\u8981\u5bf9\u6a21\u578b\u7684\u8f93\u51fa\u8fdb\u884c\u7f29\u653e\u548c\u504f\u7f6e\u8c03\u6574\uff0c\u4ee5\u9002\u5e94\u65b0\u6570\u636e\u96c6\u7684\u5206\u5e03\u3002</li> <li>\u6a21\u578b\u6821\u51c6\uff1a</li> <li>\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u5bf9\u6a21\u578b\u7684\u8f93\u51fa\u8fdb\u884c\u6821\u51c6\uff0c\u4ee5\u63d0\u9ad8\u9884\u6d4b\u7684\u51c6\u786e\u6027\u3002\u4f8b\u5982\uff0c\u5728\u5206\u7c7b\u4efb\u52a1\u4e2d\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u8c03\u6574\u6a21\u578b\u7684\u8f93\u51fa\u6982\u7387\uff0c\u4ee5\u66f4\u597d\u5730\u53cd\u6620\u771f\u5b9e\u7684\u7c7b\u522b\u5206\u5e03\u3002</li> </ol>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/set_scale_and_bias/#_5","title":"\u8ba1\u7b97","text":"<p><code>scale</code> \u548c <code>bias</code> \u7684\u8ba1\u7b97\u901a\u5e38\u4f9d\u8d56\u4e8e\u5177\u4f53\u7684\u5e94\u7528\u573a\u666f\u548c\u9700\u6c42\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u8ba1\u7b97\u65b9\u6cd5\u548c\u573a\u666f\uff1a</p>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/set_scale_and_bias/#1","title":"1. \u6a21\u578b\u96c6\u6210","text":"<p>\u5728\u6a21\u578b\u96c6\u6210\uff08\u4f8b\u5982\uff0c\u96c6\u6210\u591a\u4e2a\u6a21\u578b\u7684\u9884\u6d4b\u7ed3\u679c\uff09\u4e2d\uff0c<code>scale</code> \u548c <code>bias</code> \u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u8ba1\u7b97\uff1a</p> <ul> <li>\u7ebf\u6027\u56de\u5f52\uff1a\u4f7f\u7528\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u6765\u62df\u5408\u591a\u4e2a\u6a21\u578b\u7684\u9884\u6d4b\u7ed3\u679c\uff0c\u4ece\u800c\u5f97\u5230\u6700\u4f73\u7684 <code>scale</code> \u548c <code>bias</code>\u3002</li> <li>\u5747\u503c\u548c\u6807\u51c6\u5dee\uff1a\u901a\u8fc7\u8ba1\u7b97\u591a\u4e2a\u6a21\u578b\u9884\u6d4b\u7ed3\u679c\u7684\u5747\u503c\u548c\u6807\u51c6\u5dee\u6765\u8c03\u6574 <code>scale</code> \u548c <code>bias</code>\u3002</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/set_scale_and_bias/#2","title":"2. \u540e\u5904\u7406\u8c03\u6574","text":"<p>\u5728\u67d0\u4e9b\u5e94\u7528\u4e2d\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u5bf9\u6a21\u578b\u7684\u8f93\u51fa\u8fdb\u884c\u540e\u5904\u7406\u8c03\u6574\uff0c\u4ee5\u6ee1\u8db3\u4e1a\u52a1\u9700\u6c42\uff1a</p> <ul> <li>\u4e1a\u52a1\u89c4\u5219\uff1a\u6839\u636e\u4e1a\u52a1\u89c4\u5219\u6216\u7ecf\u9a8c\uff0c\u624b\u52a8\u8bbe\u7f6e <code>scale</code> \u548c <code>bias</code>\u3002</li> <li>\u5386\u53f2\u6570\u636e\uff1a\u4f7f\u7528\u5386\u53f2\u6570\u636e\u6765\u62df\u5408\u6a21\u578b\u7684\u8f93\u51fa\uff0c\u4ece\u800c\u8ba1\u7b97\u51fa\u5408\u9002\u7684 <code>scale</code> \u548c <code>bias</code>\u3002</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/set_scale_and_bias/#3","title":"3. \u8fc1\u79fb\u5b66\u4e60","text":"<p>\u5728\u8fc1\u79fb\u5b66\u4e60\u4e2d\uff0c\u5f53\u4f60\u5c06\u6a21\u578b\u4ece\u4e00\u4e2a\u6570\u636e\u96c6\u5e94\u7528\u5230\u53e6\u4e00\u4e2a\u6570\u636e\u96c6\u65f6\uff0c\u53ef\u80fd\u9700\u8981\u8c03\u6574 <code>scale</code> \u548c <code>bias</code>\uff1a</p> <ul> <li>\u6570\u636e\u5206\u5e03\uff1a\u901a\u8fc7\u6bd4\u8f83\u6e90\u6570\u636e\u96c6\u548c\u76ee\u6807\u6570\u636e\u96c6\u7684\u5206\u5e03\uff0c\u8ba1\u7b97\u51fa\u5408\u9002\u7684 <code>scale</code> \u548c <code>bias</code>\u3002</li> <li>\u76ee\u6807\u53d8\u91cf\u7684\u5747\u503c\u548c\u6807\u51c6\u5dee\uff1a\u901a\u8fc7\u76ee\u6807\u6570\u636e\u96c6\u7684\u76ee\u6807\u53d8\u91cf\u7684\u5747\u503c\u548c\u6807\u51c6\u5dee\u6765\u8c03\u6574 <code>scale</code> \u548c <code>bias</code>\u3002</li> </ul>"},{"location":"%F0%9F%8E%81%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/9%EF%B8%8F%E2%83%A3%20CatBoost/set_scale_and_bias/#4","title":"4. \u6a21\u578b\u6821\u51c6","text":"<p>\u5728\u6a21\u578b\u6821\u51c6\u4e2d\uff0c<code>scale</code> \u548c <code>bias</code> \u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u8ba1\u7b97\uff1a</p> <ul> <li>\u6821\u51c6\u66f2\u7ebf\uff1a\u4f7f\u7528\u6821\u51c6\u66f2\u7ebf\uff08\u5982 Platt Scaling \u6216 Isotonic Regression\uff09\u6765\u8c03\u6574\u6a21\u578b\u7684\u8f93\u51fa\u6982\u7387\u3002</li> <li>\u4ea4\u53c9\u9a8c\u8bc1\uff1a\u901a\u8fc7\u4ea4\u53c9\u9a8c\u8bc1\u6765\u9009\u62e9\u6700\u4f73\u7684 <code>scale</code> \u548c <code>bias</code>\u3002</li> </ul>"},{"location":"%F0%9F%8E%88%20Python/","title":"\ud83c\udf88 Python","text":"<ul> <li> <p> PyCharm\u914d\u7f6e</p> <p> Getting started</p> </li> <li> <p> \u57fa\u7840\u7f16\u7a0b</p> <p> Getting started</p> </li> <li> <p> \u6269\u5c55\u5e93</p> <p> Getting started</p> </li> <li> <p> Rye\u76f8\u5173</p> <p> Getting started</p> </li> <li> <p> Conda\u76f8\u5173</p> <p> Getting started</p> </li> <li> <p> pip\u76f8\u5173</p> <p> Getting started</p> </li> <li> <p> Python\u53ef\u89c6\u5316</p> <p> Getting started</p> </li> <li> <p> Python\u79d1\u5b66\u8ba1\u7b97</p> <p> Getting started</p> </li> <li> <p> Python\u7f51\u7edc\u7f16\u7a0b</p> <p> Getting started</p> </li> <li> <p> GUI\u7f16\u7a0b</p> <p> Getting started</p> </li> <li> <p> Python\u786c\u4ef6\u7f16\u7a0b</p> <p> Getting started</p> </li> <li> <p> \u5176\u4ed6</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20PyCharm%E9%85%8D%E7%BD%AE/","title":"\ud83c\udf88 Python/0\ufe0f\u20e3 PyCharm\u914d\u7f6e","text":"<ul> <li> <p>Pycharm\u914d\u7f6e</p> <p> Getting started</p> </li> <li> <p>\u521b\u5efarequirements</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20PyCharm%E9%85%8D%E7%BD%AE/A/","title":"\ud83c\udfa4 Pycharm\u914d\u7f6e","text":""},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20PyCharm%E9%85%8D%E7%BD%AE/A/#1","title":"1. \u4ee3\u7801\u6a21\u677f","text":"<p>CN\uff1a\u8bbe\u7f6e \u2014\u2014 \u7f16\u8f91\u5668 \u2014\u2014 \u6587\u4ef6\u548c\u4ee3\u7801\u6a21\u677f \u2014\u2014 Python Script</p> <pre><code>\"\"\"\n=========================================================================\n@File Name: ${NAME}.py\n@Time: ${DATE} ${TIME}\n@Program IDE: ${PRODUCT_NAME}\n@Create by Author: \u4e00\u4e00\u98ce\u548c\u6a58\n@Motto: \"The trick, William Potter, is not minding that it hurts.\"\n@Description:\n- \n- \n=========================================================================\n\"\"\"\n</code></pre> \u9644\uff1aPyCharm\u5173\u952e\u5b57 <pre><code>${NAME} - \u65b0\u5efa\u6587\u4ef6\u8fc7\u7a0b\u4e2d\u8bbe\u7f6e\u7684\u65b0\u6587\u4ef6\u540d\u79f0\uff1b\n${DATE} - \u7cfb\u7edf\u65e5\u671f\uff1b\n${TIME} - \u7cfb\u7edf\u65f6\u95f4\uff1b\n${PRODUCT_NAME} - \u521b\u5efa\u6587\u4ef6\u6240\u7528IDE\u7684\u540d\u79f0\uff1b\n${PROJECT_NAME} - \u9879\u76ee\u540d\u79f0\uff1b\n${USER} - \u5f53\u524d\u767b\u5f55\u7684\u7528\u6237\u540d\uff1b\n${YEAR} - \u5e74\uff1b\n${MONTH} - \u6708\uff1b\n${DAY} - \u65e5\uff1b\n${HOUR} - \u65f6\uff1b\n${MINUTE} - \u5206\uff1b\n${MONTH_NAME_SHORT} - \u6708\u4efd\u7f29\u5199\uff1b\n${MONTH_NAME_FULL} - \u6708\u4efd\u5168\u540d\u3002\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20PyCharm%E9%85%8D%E7%BD%AE/A/#2","title":"2. \u51fd\u6570\u53c2\u6570\u6ce8\u91ca\u683c\u5f0f","text":"<p>CN\uff1a\u5de5\u5177 \u2014\u2014 Python\u96c6\u6210\u5de5\u5177 \u2014\u2014 Docstring \u2014\u2014 numpy</p> <p>\u6ce8\u91ca\u683c\u5f0f\u4e3e\u4f8b\uff1a</p> <pre><code>import numpy as np\n\ndef add(a, b):\n    \"\"\"\n    Add two arrays element-wise.\n\n    Parameters\n    ----------\n    a : ndarray\n        The first array.\n    b : ndarray\n        The second array.\n\n    Returns\n    -------\n    ndarray\n        The sum of the two arrays.\n    \"\"\"\n    return np.add(a, b)\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20PyCharm%E9%85%8D%E7%BD%AE/A/#3","title":"3. \u4ee3\u7801\u81ea\u52a8\u8865\u5168\u5ffd\u7565\u5927\u5c0f\u5199<sup>1</sup>","text":"<p>JetBrains\u9ed8\u8ba4\u8bbe\u7f6e\u7684\u4ee3\u7801\u81ea\u52a8\u8865\u5168\u533a\u5206\u5927\u5c0f\u5199\u3002</p> <p>EN\uff1aSettings \u2014\u2014 Editor \u2014\u2014 General \u2014\u2014 Code Completion \u2014\u2014 \u53d6\u6d88\u52fe\u9009<code>Match case</code></p> <p>CN\uff1a\u8bbe\u7f6e \u2014\u2014 \u7f16\u8f91\u5668 \u2014\u2014 \u5e38\u89c4 \u2014\u2014 \u4ee3\u7801\u8865\u5168 \u2014\u2014 \u53d6\u6d88\u52fe\u9009\u201c\u533a\u5206\u5927\u5c0f\u5199\u201d</p> <p>\u6216</p> <p>\u76f4\u63a5\u641c\u7d22<code>Code Completion</code>\u6216<code>\u4ee3\u7801\u8865\u5168</code></p> <p></p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20PyCharm%E9%85%8D%E7%BD%AE/A/#4","title":"4. \u5173\u95ed\u76f8\u4f3c\u4ee3\u7801\u63d0\u793a","text":"<p>EN\uff1aPreferences\u2014\u2014Editor\u2014\u2014Inspections\u2014\u2014General\u2014\u2014Duplicated code fragment\uff0c\u53d6\u6d88\u52fe\u9009</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20PyCharm%E9%85%8D%E7%BD%AE/A/#5","title":"5. \u63d2\u4ef6","text":"<ul> <li>Chinese\uff08Simplified\uff09Language Pack/\u4e2d\u6587\u8bed\u8a00\u5305 </li> <li>WebP Support\u2014\u2014\u652f\u6301<code>.webp</code>\u56fe\u7247</li> <li>IKun Progress\u2014\u2014\u4e2a\u6027\u5316\u8fdb\u5ea6\u6761</li> <li>Ruff\u2014\u2014\u4ee3\u7801\u683c\u5f0f\u5316\u5de5\u5177</li> <li>Full Line Code Completion\u2014\u2014\u4ee3\u7801\u8865\u5168\u5de5\u5177</li> <li>SonarLint\u2014\u2014\u4ee3\u7801\u68c0\u67e5\u5de5\u5177</li> </ul> <ol> <li> <p>\u535a\u5ba2\u56ed\uff0c@\u697c\u5170\u80e1\u6768\uff0cIntelliJ IDEA \u8bbe\u7f6e\u4ee3\u7801\u81ea\u52a8\u8865\u5168\u4e0d\u533a\u5206\u5927\u5c0f\u5199 \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20PyCharm%E9%85%8D%E7%BD%AE/B/","title":"\ud83c\udf29\ufe0f \u521b\u5efarequirements","text":"<p>\u5b89\u88c5\u4f9d\u8d56\u5305\u547d\u4ee4</p> <pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20PyCharm%E9%85%8D%E7%BD%AE/B/#_1","title":"\u7b2c\u4e00\u79cd\uff1a\u9488\u5bf9\u5355\u865a\u62df\u73af\u5883","text":"<pre><code>pip freeze &gt; requirements.txt\n</code></pre> <p>\u751f\u6210\u7684requirements.txt\u6587\u4ef6\u4ec5\u5305\u62ec \u5f53\u524d\u865a\u62df\u73af\u5883 \u7684\u4f9d\u8d56\u5305\u548c\u5bf9\u5e94\u7248\u672c\u53f7</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20PyCharm%E9%85%8D%E7%BD%AE/B/#_2","title":"\u7b2c\u4e8c\u79cd\uff1a\u9488\u5bf9\u5168\u5c40\u73af\u5883","text":"<pre><code>pip install pipreqs\n</code></pre> <pre><code>pipreqs . --encoding=utf8 --force\n</code></pre> <p>\u751f\u6210\u7684requirements.txt\u6587\u4ef6\u5305\u62ec \u5168\u5c40\u73af\u5883 \u7684\u4f9d\u8d56\u5305\u548c\u5bf9\u5e94\u7248\u672c\u53f7</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20PyCharm%E9%85%8D%E7%BD%AE/B/#pycharm","title":"\u7b2c\u4e09\u79cd\uff1a\u4f7f\u7528Pycharm","text":"<p>\u5bf9\u4e8e\u5df2\u7ecf\u5b8c\u5584\u7684\u9879\u76ee\u6765\u8bf4\uff0c\u76f4\u63a5\u9650\u5b9a\u7248\u672c\u53f7\u7684\u65b9\u6cd5\u53ef\u4ee5\u4fdd\u8bc1\u9879\u76ee\u8fc1\u79fb\u540e\u7684\u6b63\u5e38\u8fd0\u884c\u3002\u4f46\u4e2a\u4eba\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u5f80\u5f80\u4e0d\u9700\u8981\u9650\u5b9a\u7248\u672c\u53f7\uff0c\u53ef\u4ee5\u4f7f\u7528PyCharm\u81ea\u5e26\u7684\u529f\u80fd\u5b9e\u73b0\u3002</p> <p>TooLs\u2014\u2014Sync Python Requirements...</p> <p></p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/","title":"\ud83c\udf88 Python/0\ufe0f\u20e3 \u57fa\u7840\u7f16\u7a0b","text":"<ul> <li> <p>Python\u591a\u7ebf\u7a0b(\u4e00)</p> <p> Getting started</p> </li> <li> <p>Python\u591a\u7ebf\u7a0b(\u4e8c)</p> <p> Getting started</p> </li> <li> <p>ThreadPoolExecutor\u6309\u987a\u5e8f\u83b7\u53d6\u7ed3\u679c</p> <p> Getting started</p> </li> <li> <p>CC.ipynb</p> <p> Getting started</p> </li> <li> <p>getattr()\u52a8\u6001\u83b7\u53d6\u5bf9\u8c61\u5c5e\u6027\u548c\u65b9\u6cd5</p> <p> Getting started</p> </li> <li> <p>\u4f7f\u7528<code>Literal</code>\u63d0\u9ad8Python\u4ee3\u7801\u7684\u7c7b\u578b\u5b89\u5168\u6027</p> <p> Getting started</p> </li> <li> <p><code>ThreadPoolExecutor</code>\u786e\u5b9a\u53ef\u4f7f\u7528\u7684\u6700\u5927<code>max_workers</code></p> <p> Getting started</p> </li> <li> <p>\u6587\u4ef6\u64cd\u4f5c</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/A/","title":"\ud83d\udc3d Python\u591a\u7ebf\u7a0b(\u4e00)","text":"<p>***Tips\uff1a***\u591a\u7ebf\u7a0b\u4e0e\u591a\u8fdb\u7a0b\u662f\u4e24\u4e2a\u6982\u5ff5\u3002</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/A/#_1","title":"\u58f9\u4e28\u521b\u5efa\u591a\u7ebf\u7a0b<sup>2</sup>","text":""},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/A/#1","title":"1. \u7b80\u5355\u521b\u5efa","text":"<pre><code>import time\nimport threading\n\n\ndef run(num_thread):\n    print(f\"\u7ebf\u7a0b{num_thread}\")\n    time.sleep(2)\n\n\nif __name__ == \"__main__\":\n    for i in range(5):\n        t = threading.Thread(target=run, args=(i,))\n        t.start()\n</code></pre> <p>\u4f7f\u7528<code>threading.Thread</code>\u521b\u5efa\u5bf9\u8c61\uff0c\u4f46\u4e0d\u4f1a\u521b\u5efa\u7ebf\u7a0b\u3002\u5f53\u8c03\u7528<code>t.start()</code>\u65f6\u521b\u5efa\u5e76\u542f\u52a8\u5b50\u7ebf\u7a0b\u3002</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/A/#2-thread","title":"2. \u7ee7\u627f<code>Thread</code>\u7c7b\uff08\u9002\u7528\u4e8e\u590d\u6742\u903b\u8f91\uff09","text":"<p>\u91cd\u5199<code>run()</code>\u65b9\u6cd5\uff0c\u540c\u6837\u4f7f\u7528<code>t.start()</code>\u65b9\u6cd5\u521b\u5efa\u5e76\u542f\u52a8\u5b50\u7ebf\u7a0b\u3002</p> <pre><code>import threading\nfrom time import sleep\n\n\nclass MyThread(threading.Thread):\n    def run(self):\n        [sleep(1) for _ in range(3)]\n\n\nif __name__ == '__main__':\n    t = MyThread()\n    t.start()\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/A/#_2","title":"\u8d30\u4e28\u67e5\u770b\u7ebf\u7a0b\u6570\u91cf","text":""},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/A/#1-enumerate","title":"1. <code>enumerate()</code>\u65b9\u6cd5","text":"<p>\u901a\u8fc7\u8c03\u7528<code>threading</code>\u4e2d\u7684<code>enumerate()</code>\u65b9\u6cd5\uff0c\u8fd4\u56de\u7a0b\u5e8f\u4e2d\u7ebf\u7a0b\u5217\u8868\uff0c\u5305\u62ec\u4e3b\u7ebf\u7a0b\u3002</p> <pre><code>import threading\nfrom time import sleep\n\n\ndef thread_1():\n    [sleep(1) for _ in range(3)]\n\n\ndef thread_2():\n    [sleep(1) for _ in range(3)]\n\n\nif __name__ == '__main__':\n    t1 = threading.Thread(target=thread_1)\n    t2 = threading.Thread(target=thread_2)\n    t1.start()\n    t2.start()\n\n    while True:\n        length = len(threading.enumerate())\n        print(f'\u5f53\u524d\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570\u4e3a\uff1a{length}')\n        if length &lt;= 1:\n            break\n        sleep(0.5)\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/A/#2-active_count","title":"2. <code>active_count()</code>\u65b9\u6cd5","text":"<p>\u5c06\u4e0a\u8ff0\u4ee3\u7801\u6362\u4e3a\uff1a</p> <pre><code>...\n    while True:\n        length = threading.active_count()\n        print(f'\u5f53\u524d\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570\u4e3a\uff1a{length}')\n...\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/A/#join","title":"\u53c1\u4e28<code>join()</code>\u65b9\u6cd5","text":"<p>\u5f53\u9700\u8981\u5b50\u7ebf\u7a0b\u8fd0\u884c\u5b8c\u4e3b\u7ebf\u7a0b\u7ee7\u7eed\u5411\u4e0b\u6267\u884c\u65f6\uff0c\u5b50\u7ebf\u7a0b\u53ef\u4ee5\u8c03\u7528<code>join()</code>\u65b9\u6cd5\uff0c\u4e3b\u7ebf\u7a0b\u4f1a\u7b49\u5f85\u5b50\u7ebf\u7a0b\u7ec8\u6b62\u6216\u8d85\u65f6\u518d\u7ee7\u7eed\u6267\u884c\u3002</p> <pre><code>import threading\nfrom time import sleep\n\n\ndef my_thread(name):\n    print(f'\u5b50\u7ebf\u7a0b{name}')\n    sleep(2)\n\n\nif __name__ == '__main__':\n    threads = []\n    for idx in range(5):\n        t = threading.Thread(target=my_thread,args=(idx,))\n        threads.append(t)\n        t.start()\n    [thread.join() for thread in threads]\n    print('\u4e3b\u7ebf\u7a0b\u3002\u3002\u3002')\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/A/#_3","title":"\u8086\u4e28\u63a7\u5236\u7ebf\u7a0b\u6570\u91cf<sup>1</sup>","text":"<p>\u4e0d\u9650\u5236\u7ebf\u7a0b\u6570\u91cf\uff0c\u4f1a\u5bfc\u81f4\u7535\u8111\u5361\u6b7b\u3002\u4f7f\u7528<code>threading</code>\u6a21\u5757\u7684<code>Semaphore</code>\u7c7b\u6216<code>BoundedSemaphore</code>\u7c7b\u9650\u5236\u7ebf\u7a0b\u6570\u91cf\u3002\u521d\u59cb\u5316<code>Semaphore()</code>\u4f1a\u7ed9\u8ba1\u6570\u5668\u4e00\u4e2a\u503c\uff0c\u6bcf\u8c03\u7528\u4e00\u6b21<code>acquire()</code>\uff0c\u8ba1\u6570\u5668\u51cf1\uff0c\u6bcf\u8c03\u7528\u4e00\u6b21<code>release()</code>\uff0c\u8ba1\u6570\u5668\u52a01\uff0c\u5f53\u8ba1\u6570\u5668\u4e3a0\u65f6\uff0c<code>acquire()</code>\u8c03\u7528\u88ab\u963b\u585e\u3002</p> <p>\u9996\u5148\uff0c\u5b9a\u4e49\u6700\u5927\u7ebf\u7a0b\u6570\u91cf</p> <pre><code>max_threads = 5\npool_sema = BoundedSemaphore(value=max_threads)\n</code></pre> <p>\u7136\u540e\uff0c\u5728\u5b50\u7ebf\u7a0b\u65b9\u6cd5\u4e2d\u6dfb\u52a0\u7ebf\u7a0b\u6570\u9650\u5236\uff1a</p> <pre><code>import threading\nfrom time import sleep\n\nmax_threads = 20\npool_sema = threading.BoundedSemaphore(value=max_threads)\n\n\ndef my_thread(name):\n    with pool_sema:\n        print(f'\u5b50\u7ebf\u7a0b{name}')\n        sleep(2)\n\n\nif __name__ == '__main__':\n    for idx in range(100):\n        t = threading.Thread(target=my_thread,args=(idx,))\n        t.start()\n\n    while True:\n        num = threading.active_count()\n        print(f'\u5f53\u524d\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570\u4e3a\uff1a{num}')\n        if num &lt;= 1:\n            break\n        sleep(0.5)\n</code></pre> <p>\u53ef\u4ee5\u4f7f\u7528\u4e0a\u8ff0<code>with</code>\u8bed\u53e5\uff0c\u76f8\u5f53\u4e8e\u5148\u8c03\u7528<code>acquire()</code>\uff0c\u79bb\u5f00<code>with</code>\u5757\u540e\u81ea\u52a8\u8c03\u7528<code>release()</code>\u3002</p> <p>\u540c\u6837\u5730\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528<code>acquire()</code>\u548c<code>release()</code></p> <pre><code>def my_thread(name):\n    pool_sema.acquire()\n    print(f'\u5b50\u7ebf\u7a0b{name}')\n    sleep(2)\n    pool_sema.release()\n</code></pre> <p><code>BoundedSemaphore</code>\u7ee7\u627f\u81ea<code>Semaphore</code>\uff0c\u529f\u80fd\u548c <code>Semaphore</code>\u57fa\u672c\u4e00\u6837\u3002<code>BoundedSemaphore</code>\u4f7f\u7528<code>release()</code>\u65f6\u4f1a\u5224\u65ad\u5f53\u524d\u4fe1\u53f7\u91cf\u7684\u503c\uff0c\u5982\u679c\u5f53\u524d\u503c\u5927\u4e8e\u7b49\u4e8e\u521d\u59cb\u503c\uff0c\u5c31\u4f1a\u629b\u51fa\u9519\u8bef\uff0c\u800c<code>Semaphore</code>\u5e76\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38<sup>3</sup><sup>4</sup></p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/A/#lockrlock","title":"\u4f0d\u4e28Lock\u548cRLock","text":""},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/A/#event","title":"\u9646\u4e28Event\u4e8b\u4ef6","text":"<p>\u672a\u6d89\u53ca\u5230\uff0c\u6682\u4e0d\u6574\u7406</p> <ol> <li> <p>\u535a\u5ba2\u56ed\uff0c@\u6211\u662f\u51b0\u971c\uff0cpython\u591a\u7ebf\u7a0b\uff1a\u63a7\u5236\u7ebf\u7a0b\u6570\u91cf \u21a9</p> </li> <li> <p>CSDN\uff0c@\u6dcb\u5df4\u4e0d\u60f3\u52a8\uff0cpython-\u5b9e\u73b0\u591a\u7ebf\u7a0b\u7684\u4e09\u79cd\u65b9\u6cd5 \u21a9</p> </li> <li> <p>CSDN\uff0c@viziviuz\uff0cPython \u591a\u7ebf\u7a0b\u3001\u5b88\u62a4\u8fdb\u7a0b\u3001\u540c\u65f6\u8fd0\u884c\u6700\u5927\u7ebf\u7a0b\u6570\u3001\u9501\u3001\u7ebf\u7a0b\u963b\u585e(\u7ebf\u7a0b\u6682\u505c\u548c\u7ee7\u7eed) \u21a9</p> </li> <li> <p>\u817e\u8baf\u4e91\uff0c@\u5815\u843d\u98de\u9e1f\uff0c\u5341\u3001python\u5b66\u4e60\u7b14\u8bb0-\u7ebf\u7a0b-\u7ebf\u7a0b\u7684start\u548cjoin \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/B/","title":"\ud83d\udc19 Python\u591a\u7ebf\u7a0b(\u4e8c)","text":"<p>\u5728Python\u591a\u7ebf\u7a0b\u4e2d\uff1a</p> <ul> <li><code>join()</code>\u65b9\u6cd5\u7684\u4f5c\u7528\u662f\u7ebf\u7a0b\u540c\u6b65<sup>1</sup>\u3002</li> <li>\u5b88\u62a4\u7ebf\u7a0b\u4e3a\u5b88\u62a4\u5176\u4ed6\u7ebf\u7a0b\u800c\u8bbe\u7acb\u3002\u88ab\u5b88\u62a4\u7684\u4e3b\u7ebf\u7a0b\u4e0d\u5b58\u5728\u540e\uff0c\u5b88\u62a4\u7ebf\u7a0b\u81ea\u7136\u6d88\u5931\u3002</li> </ul>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/B/#_1","title":"\u58f9\u4e28\u591a\u7ebf\u7a0b\u9ed8\u8ba4\u60c5\u51b5","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff08<code>setDaemon(False)</code>\uff09\uff0c\u4e3b\u7ebf\u7a0b\u6267\u884c\u5b8c\u540e\u7acb\u5373\u9000\u51fa\uff0c\u5b50\u7ebf\u7a0b\u7ee7\u7eed\u6267\u884c\u76f4\u81f3\u7ed3\u675f\u3002</p> <pre><code>import threading\nfrom time import sleep\n\n\ndef threading_1():\n    sleep(3)\n    print('\u5b50\u7ebf\u7a0b1\u7ed3\u675f')\n\n\ndef threading_2():\n    sleep(3)\n    print('\u5b50\u7ebf\u7a0b2\u7ed3\u675f')\n\n\nif __name__ == '__main__':\n    t1 = threading.Thread(target=threading_1)\n    t2 = threading.Thread(target=threading_2)\n    t1.start()\n    t2.start()\n\n    print('\u4e3b\u7ebf\u7a0b\u7ed3\u675f')\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a</p> <pre><code>\u4e3b\u7ebf\u7a0b\u7ed3\u675f\n\u5b50\u7ebf\u7a0b2\u7ed3\u675f\n\u5b50\u7ebf\u7a0b1\u7ed3\u675f\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/B/#_2","title":"\u8d30\u4e28\u5f00\u542f\u5b88\u62a4\u7ebf\u7a0b","text":"<p>\u4e3a\u5b50\u7ebf\u7a0b\u5f00\u542f\u5b88\u62a4\u7ebf\u7a0b\uff08setDaemon(True)\uff09\uff0c\u5f53\u4e3b\u7ebf\u7a0b\u7ed3\u675f\u65f6\uff0c\u5b50\u7a0b\u5e8f\u7acb\u9a6c\u7ed3\u675f\u3002</p> <pre><code>import threading\nfrom time import sleep\n\n\ndef threading_1():\n    sleep(3)\n    print('\u5b50\u7ebf\u7a0b1\u7ed3\u675f')\n\n\ndef threading_2():\n    sleep(10)\n    print('\u5b50\u7ebf\u7a0b2\u7ed3\u675f')\n\n\nif __name__ == '__main__':\n    t1 = threading.Thread(target=threading_1)\n    t1.start()\n\n    t2 = threading.Thread(target=threading_2, daemon=True)\n    t2.start()\n\n    sleep(5)\n    print('\u4e3b\u7ebf\u7a0b\u7ed3\u675f')\n</code></pre> <p>Tips\uff1a<code>t2.setDaemon(True)</code>\u65b9\u6cd5\u5df2\u5f03\u7528\uff0c\u76f4\u63a5\u5728<code>threading.Thread()</code>\u4e2d\u8bbe\u7f6e<code>daemon</code>\u5c5e\u6027\u3002</p> <p>\u8fd0\u884c\u7ed3\u679c\uff1a</p> <pre><code>\u5b50\u7ebf\u7a0b1\u7ed3\u675f\n\u4e3b\u7ebf\u7a0b\u7ed3\u675f\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/B/#join","title":"\u53c1\u4e28\u4f7f\u7528join\u65b9\u6cd5\u8bbe\u7f6e\u540c\u6b65","text":"<p>\u5b50\u7ebf\u7a0b\u4f7f\u7528<code>join()</code>\u65b9\u6cd5\u540e\uff0c\u4e3b\u7ebf\u7a0b\u5c06\u88ab\u963b\u585e\uff0c\u76f4\u81f3\u5b50\u7ebf\u7a0b\u6267\u884c\u7ed3\u675f\u3002\u5c06\u6240\u6709\u5b50\u7ebf\u7a0b\u653e\u5728\u4e00\u4e2a\u5217\u8868\u4f9d\u6b21\u4f7f\u7528<code>join()</code>\u65b9\u6cd5\uff0c\u4fdd\u8bc1\u5168\u90e8\u5b50\u7ebf\u7a0b\u80fd\u8fd0\u884c\u5b8c\u6210\uff0c\u4e3b\u7ebf\u7a0b\u624d\u9000\u51fa\u3002</p> <pre><code>import threading\nfrom time import sleep\n\n\ndef threading_1():\n    sleep(3)\n    print('\u5b50\u7ebf\u7a0b1\u7ed3\u675f')\n\n\ndef threading_2():\n    sleep(10)\n    print('\u5b50\u7ebf\u7a0b2\u7ed3\u675f')\n\n\nif __name__ == '__main__':\n    threads = []\n    t1 = threading.Thread(target=threading_1)\n    threads.append(t1)\n    t1.start()\n\n    t2 = threading.Thread(target=threading_2, daemon=True)\n    threads.append(t2)\n    t2.start()\n\n    [thread.join() for thread in threads]\n\n    sleep(1)\n    print('\u4e3b\u7ebf\u7a0b\u7ed3\u675f')\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a</p> <pre><code>\u5b50\u7ebf\u7a0b1\u7ed3\u675f\n\u5b50\u7ebf\u7a0b2\u7ed3\u675f\n\u4e3b\u7ebf\u7a0b\u7ed3\u675f\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/B/#join_1","title":"\u8086\u4e28\u4e0d\u8bbe\u7f6e\u5b88\u62a4\u4f46\u5bf9<code>join()</code>\u8bbe\u7f6e\u8d85\u65f6","text":"<p>\u7ed9<code>join()</code>\u65b9\u6cd5\u6dfb\u52a0<code>timeout</code>\u53c2\u6570\uff0c\u4e3b\u7ebf\u7a0b\u5bf9\u6bcf\u4e2a\u5b50\u7ebf\u7a0b\u7684\u7b49\u5f85\u65f6\u95f4\u4e0d\u5927\u4e8e<code>timeout</code>\u503c</p> <pre><code>import threading\nfrom time import sleep\n\n\ndef threading_1():\n    sleep(3)\n    print('\u5b50\u7ebf\u7a0b1\u7ed3\u675f')\n\n\ndef threading_2():\n    sleep(10)\n    print('\u5b50\u7ebf\u7a0b2\u7ed3\u675f')\n\n\nif __name__ == '__main__':\n    threads = []\n    t1 = threading.Thread(target=threading_1)\n    threads.append(t1)\n    t1.start()\n\n    t2 = threading.Thread(target=threading_2, daemon=False)\n    threads.append(t2)\n    t2.start()\n\n    [thread.join(5) for thread in threads]\n\n    sleep(1)\n    print('\u4e3b\u7ebf\u7a0b\u7ed3\u675f')\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a</p> <pre><code>\u5b50\u7ebf\u7a0b1\u7ed3\u675f\n\u4e3b\u7ebf\u7a0b\u7ed3\u675f\n\u5b50\u7ebf\u7a0b2\u7ed3\u675f\n</code></pre> <p>***Tips\uff1a***\u4e3b\u7ebf\u7a0b\u5728\u5b50\u7ebf\u7a0b\u672a\u6267\u884c\u7ed3\u675f\u5c31\u5f00\u59cb\u6267\u884c\u3002\u7531\u4e8e\u672a\u8bbe\u7f6e\u5b88\u62a4\uff0c\u5b50\u7ebf\u7a0b2\u4f1a\u6267\u884c\u81f3\u7ed3\u675f\u3002</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/B/#join_2","title":"\u4f0d\u4e28\u5f00\u542f\u5b88\u62a4\u5e76\u5bf9<code>join()</code>\u8bbe\u7f6e\u8d85\u65f6","text":"<p>\u4e3a\u5b50\u7ebf\u7a0b2\u6dfb\u52a0\u5b88\u62a4\uff0c\u5e76\u8bbe\u7f6e<code>join()</code>\u8d85\u65f6\u3002\u5b50\u7ebf\u7a0b2\u672a\u5728\u9650\u5b9a\u65f6\u95f4\u5185\u6267\u884c\u7ed3\u675f\uff0c\u4f1a\u88ab\u76f4\u63a5\u7ec8\u6b62\u3002</p> <pre><code>import threading\nfrom time import sleep\n\n\ndef threading_1():\n    sleep(3)\n    print('\u5b50\u7ebf\u7a0b1\u7ed3\u675f')\n\n\ndef threading_2():\n    sleep(10)\n    print('\u5b50\u7ebf\u7a0b2\u7ed3\u675f')\n\n\nif __name__ == '__main__':\n    threads = []\n    t1 = threading.Thread(target=threading_1)\n    threads.append(t1)\n    t1.start()\n\n    t2 = threading.Thread(target=threading_2, daemon=True)\n    threads.append(t2)\n    t2.start()\n\n    [thread.join(5) for thread in threads]\n\n    sleep(1)\n    print('\u4e3b\u7ebf\u7a0b\u7ed3\u675f')\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a</p> <pre><code>\u5b50\u7ebf\u7a0b1\u7ed3\u675f\n\u4e3b\u7ebf\u7a0b\u7ed3\u675f\n</code></pre> <ol> <li> <p>CSDN\uff0c@\u7396\u827a\u4e1c\u54e5\uff0cPython \u591a\u7ebf\u7a0b\u4e2d\u7684join\u7528\u6cd5 \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/C/","title":"\ud83c\udf83 ThreadPoolExecutor\u6309\u987a\u5e8f\u83b7\u53d6\u7ed3\u679c","text":"<p>\u3010\u76ee\u6807\u3011</p> <p>\u6309\u7167\u4efb\u52a1\u6dfb\u52a0\u7684\u987a\u5e8f\u83b7\u53d6\u7ed3\u679c</p> <p>\u3010\u89e3\u51b3\u65b9\u6cd5\u3011</p> <p>\u4f7f\u7528<code>concurrent.futures.Future</code>\u5bf9\u8c61\u7684<code>add_done_callback()</code>\u65b9\u6cd5\u6765\u6ce8\u518c\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u5e76\u5728\u4efb\u52a1\u5b8c\u6210\u65f6\u5904\u7406\u7ed3\u679c</p> <p>\u3010\u793a\u4f8b\u3011</p> <pre><code>from concurrent.futures import ThreadPoolExecutor, as_completed\n\ndef process_result(future):\n    res = future.result()\n    params.append(res)\n\nwith ThreadPoolExecutor(max_workers=max_workers) as t:\n    obj_list = []\n    for item in sgpf:\n        obj = t.submit(item.run, target)\n        obj.add_done_callback(process_result)\n        obj_list.append(obj)\n\n# \u7b49\u5f85\u6240\u6709\u4efb\u52a1\u5b8c\u6210\nfor item in obj_list:\n    item.result()\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff1a</p> <ol> <li>\u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3a<code>process_result</code>\u7684\u56de\u8c03\u51fd\u6570\uff0c\u63a5\u6536<code>Future</code>\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u3002</li> <li>\u5728\u56de\u8c03\u51fd\u6570\u4e2d\uff0c\u83b7\u53d6\u4e86\u8be5<code>Future</code>\u5bf9\u8c61\u7684\u7ed3\u679c\uff0c\u5e76\u5c06\u5176\u6dfb\u52a0\u5230<code>params</code>\u5217\u8868\u4e2d\u3002</li> <li>\u5728\u5faa\u73af\u4e2d\uff0c\u4f7f\u7528<code>add_done_callback()</code>\u65b9\u6cd5\u4e3a\u6bcf\u4e2a\u63d0\u4ea4\u7684\u4efb\u52a1\u6ce8\u518c\u4e86\u56de\u8c03\u51fd\u6570<code>process_result</code>\u3002</li> <li>\u5f53\u4efb\u52a1\u5b8c\u6210\u65f6\uff0c\u56de\u8c03\u51fd\u6570\u88ab\u89e6\u53d1\uff0c\u5e76\u6309\u7167\u4efb\u52a1\u6dfb\u52a0\u7684\u987a\u5e8f\u5904\u7406\u7ed3\u679c\u3002</li> </ol> <p>\u53e6\u5916\uff0c\u6dfb\u52a0\u4e86\u4e00\u4e2a\u989d\u5916\u7684\u5faa\u73af\uff0c\u7528\u4e8e\u7b49\u5f85\u6240\u6709\u4efb\u52a1\u5b8c\u6210\u3002\uff08\u901a\u8fc7\u8c03\u7528\u6bcf\u4e2a<code>Future</code>\u5bf9\u8c61\u7684<code>result()</code>\u65b9\u6cd5\uff0c\u786e\u4fdd\u5728\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u4ee3\u7801\u4e4b\u524d\uff0c\u6240\u6709\u4efb\u52a1\u90fd\u5df2\u5b8c\u6210\uff09</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/CC/","title":"\ud83e\udec1 ThreadPoolExecutor\u7ebf\u7a0b\u6c60","text":"In\u00a0[1]: Copied! <pre>from concurrent.futures import ThreadPoolExecutor, ProcessPoolExecutor\nimport time\n</pre> from concurrent.futures import ThreadPoolExecutor, ProcessPoolExecutor import time In\u00a0[2]: Copied! <pre>def run(delay):\n    time.sleep(delay)\n    print(f'Delay Task {delay} Finished')\n    return delay\n</pre> def run(delay):     time.sleep(delay)     print(f'Delay Task {delay} Finished')     return delay In\u00a0[3]: Copied! <pre># \u521b\u5efa\u4e00\u4e2a\u6700\u5927\u5bb9\u91cf\u4e3a5\u7684\u7ebf\u7a0b\u6c60\nwith ThreadPoolExecutor(max_workers=5) as t:\n    task1 = t.submit(run, 1)\n    task2 = t.submit(run, 2)\n    task3 = t.submit(run, 3)\n\n    # \u901a\u8fc7done\u6765\u5224\u65ad\u7ebf\u7a0b\u662f\u5426\u5b8c\u6210\n    print(f\"Task 1 Finished: {task1.done()}\")\n    print(f\"Task 2 Finished: {task2.done()}\")\n    print(f\"Task 3 Finished: {task3.done()}\")\n\n    time.sleep(2.5)\n    print(f\"Task 1 Finished: {task1.done()}\")\n    print(f\"Task 2 Finished: {task2.done()}\")\n    print(f\"Task 3 Finished: {task3.done()}\")\n\n    # \u901a\u8fc7result\u6765\u83b7\u53d6\u8fd4\u56de\u503c\n    print('Task 1 Result: ', task1.result())\n</pre> # \u521b\u5efa\u4e00\u4e2a\u6700\u5927\u5bb9\u91cf\u4e3a5\u7684\u7ebf\u7a0b\u6c60 with ThreadPoolExecutor(max_workers=5) as t:     task1 = t.submit(run, 1)     task2 = t.submit(run, 2)     task3 = t.submit(run, 3)      # \u901a\u8fc7done\u6765\u5224\u65ad\u7ebf\u7a0b\u662f\u5426\u5b8c\u6210     print(f\"Task 1 Finished: {task1.done()}\")     print(f\"Task 2 Finished: {task2.done()}\")     print(f\"Task 3 Finished: {task3.done()}\")      time.sleep(2.5)     print(f\"Task 1 Finished: {task1.done()}\")     print(f\"Task 2 Finished: {task2.done()}\")     print(f\"Task 3 Finished: {task3.done()}\")      # \u901a\u8fc7result\u6765\u83b7\u53d6\u8fd4\u56de\u503c     print('Task 1 Result: ', task1.result())  <pre>Task 1 Finished: False\nTask 2 Finished: False\nTask 3 Finished: False\nDelay Task 1 Finished\nDelay Task 2 Finished\nTask 1 Finished: True\nTask 2 Finished: True\nTask 3 Finished: False\nTask 1 Result:  1\nDelay Task 3 Finished\n</pre> <ol> <li>\u4f7f\u7528<code>submit()</code>\u63d0\u4ea4\u7ebf\u7a0b\u4efb\u52a1\uff0c\u5e76\u7acb\u5373\u8fd4\u56de\u4efb\u52a1\u53e5\u67c4\u3002</li> <li>\u4f7f\u7528<code>done()</code>\u65b9\u6cd5\u5224\u65ad\u662f\u5426\u7ed3\u675f</li> <li>\u4f7f\u7528<code>result()</code>\u65b9\u6cd5\u83b7\u53d6\u7ebf\u7a0b\u8fd4\u56de\u503c</li> </ol> In\u00a0[4]: Copied! <pre>from concurrent.futures import wait, FIRST_COMPLETED\n\n# \u521b\u5efa\u4e00\u4e2a\u6700\u5927\u5bb9\u91cf\u4e3a5\u7684\u7ebf\u7a0b\u6c60\nwith ThreadPoolExecutor(max_workers=5) as t:\n    all_task = [t.submit(run, delay) for delay in range(1, 5)]\n    wait(all_task, return_when=FIRST_COMPLETED)\n    print('Continue Other Tasks')\n\n    wait(all_task, timeout=2.5)\n    print('Continue Other Tasks')\n</pre> from concurrent.futures import wait, FIRST_COMPLETED  # \u521b\u5efa\u4e00\u4e2a\u6700\u5927\u5bb9\u91cf\u4e3a5\u7684\u7ebf\u7a0b\u6c60 with ThreadPoolExecutor(max_workers=5) as t:     all_task = [t.submit(run, delay) for delay in range(1, 5)]     wait(all_task, return_when=FIRST_COMPLETED)     print('Continue Other Tasks')      wait(all_task, timeout=2.5)     print('Continue Other Tasks')  <pre>Delay Task 1 Finished\nContinue Other Tasks\nDelay Task 2 Finished\nDelay Task 3 Finished\nContinue Other Tasks\nDelay Task 4 Finished\n</pre> <ol> <li>\u6267\u884c\u5b8c\u7b2c\u4e00\u4e2a\u4efb\u52a1\u540e\uff0c\u505c\u6b62\u7b49\u5f85\uff0c\u7ee7\u7eed\u4e3b\u7ebf\u4efb\u52a1</li> <li>\u5728\u7b2c\u4e00\u4e2a\u4efb\u52a1\u5b8c\u6210\u540e\u518d\u8fdb\u884c2.5s\u5ef6\u65f6\uff0c\u5373\u603b\u65f6\u95f43.5s\u65f6\u505c\u6b62\u7b49\u5f85\uff0c\u7ee7\u7eed\u4e3b\u7ebf\u4efb\u52a1\uff0c\u6b64\u65f6\u53ea\u6709\u4efb\u52a14\u8fd8\u5728\u8fdb\u884c</li> </ol> In\u00a0[5]: Copied! <pre>from concurrent.futures import as_completed\n\n# \u521b\u5efa\u4e00\u4e2a\u6700\u5927\u5bb9\u91cf\u4e3a5\u7684\u7ebf\u7a0b\u6c60\nwith ThreadPoolExecutor(max_workers=5) as t:\n    obj_list = []\n    for delay in range(1, 5):\n        obj = t.submit(run, delay)\n        obj_list.append(obj)\n\n    for future in as_completed(obj_list):\n        res = future.result()\n        print(f'Task {future} Result: {res}')\n</pre> from concurrent.futures import as_completed  # \u521b\u5efa\u4e00\u4e2a\u6700\u5927\u5bb9\u91cf\u4e3a5\u7684\u7ebf\u7a0b\u6c60 with ThreadPoolExecutor(max_workers=5) as t:     obj_list = []     for delay in range(1, 5):         obj = t.submit(run, delay)         obj_list.append(obj)      for future in as_completed(obj_list):         res = future.result()         print(f'Task {future} Result: {res}') <pre>Delay Task 1 Finished\nTask &lt;Future at 0x1d16d055fd0 state=finished returned int&gt; Result: 1\nDelay Task 2 Finished\nTask &lt;Future at 0x1d16e5e4f50 state=finished returned int&gt; Result: 2\nDelay Task 3 Finished\nTask &lt;Future at 0x1d16e9cd510 state=finished returned int&gt; Result: 3\nDelay Task 4 Finished\nTask &lt;Future at 0x1d16ea50390 state=finished returned int&gt; Result: 4\n</pre> <p><code>as_completed()</code>\u65b9\u6cd5\u662f\u4e00\u4e2a\u751f\u6210\u5668\uff0c\u5f53\u6ca1\u6709\u5b8c\u6210\u4efb\u52a1\u65f6\uff0c\u4f1a\u4e00\u76f4\u963b\u585e\uff0c\u9664\u975e\u8bbe\u7f6e<code>time_out</code></p> In\u00a0[10]: Copied! <pre>executor = ThreadPoolExecutor(max_workers=5)\n\nfor i, result in enumerate(executor.map(run, [4, 2, 3, 1], timeout=3.5)):\n    print(f\"Task {i} Result: {result}\")\n</pre> executor = ThreadPoolExecutor(max_workers=5)  for i, result in enumerate(executor.map(run, [4, 2, 3, 1], timeout=3.5)):     print(f\"Task {i} Result: {result}\") <pre>Delay Task 1 Finished\nDelay Task 2 Finished\nDelay Task 3 Finished\n</pre> <pre>\n---------------------------------------------------------------------------\nTimeoutError                              Traceback (most recent call last)\nCell In[10], line 3\n      1 executor = ThreadPoolExecutor(max_workers=5)\n----&gt; 3 for i, result in enumerate(executor.map(run, [4, 2, 3, 1], timeout=3.5)):\n      4     print(f\"Task {i} Result: {result}\")\n\nFile ~\\anaconda3\\envs\\MasterMaoPy311\\Lib\\concurrent\\futures\\_base.py:621, in Executor.map.&lt;locals&gt;.result_iterator()\n    619             yield _result_or_cancel(fs.pop())\n    620         else:\n--&gt; 621             yield _result_or_cancel(fs.pop(), end_time - time.monotonic())\n    622 finally:\n    623     for future in fs:\n\nFile ~\\anaconda3\\envs\\MasterMaoPy311\\Lib\\concurrent\\futures\\_base.py:317, in _result_or_cancel(***failed resolving arguments***)\n    315 try:\n    316     try:\n--&gt; 317         return fut.result(timeout)\n    318     finally:\n    319         fut.cancel()\n\nFile ~\\anaconda3\\envs\\MasterMaoPy311\\Lib\\concurrent\\futures\\_base.py:458, in Future.result(self, timeout)\n    456             return self.__get_result()\n    457         else:\n--&gt; 458             raise TimeoutError()\n    459 finally:\n    460     # Break a reference cycle with the exception in self._exception\n    461     self = None\n\nTimeoutError: </pre> <p>\u4f7f\u7528\u5217\u8868\u5faa\u73af\u6dfb\u52a0\u7ebf\u7a0b\uff0c\u5728\u8bbe\u7f6e<code>timeout</code>\u671f\u9650\u5185\u672a\u5b8c\u6210\u65f6\u4f1a\u62a5<code>TimeoutError</code>\uff0c\u4e2d\u65ad\u6574\u4e2a\u7a0b\u5e8f</p> In\u00a0[11]: Copied! <pre>executor = ThreadPoolExecutor(max_workers=5)\n\nfor i, result in enumerate(executor.map(run, [4, 2, 3, 1], timeout=5)):\n    print(f\"Task {i} Result: {result}\")\n</pre> executor = ThreadPoolExecutor(max_workers=5)  for i, result in enumerate(executor.map(run, [4, 2, 3, 1], timeout=5)):     print(f\"Task {i} Result: {result}\") <pre>Delay Task 1 Finished\nDelay Task 2 Finished\nDelay Task 3 Finished\nDelay Task 4 Finished\nTask 0 Result: 4\nTask 1 Result: 2\nTask 2 Result: 3\nTask 3 Result: 1\n</pre> <p>\u5bf9\u6bd4\u5728<code>timeout</code>\u5185\u5b8c\u6210\u4efb\u52a1\uff0c\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u540e\u7eed\u64cd\u4f5c</p> <ul> <li>\u4f7f\u7528<code>map()</code>\u65b9\u6cd5\uff0c\u65e0\u9700\u518d\u4f7f\u7528<code>submit()</code>\u65b9\u6cd5</li> <li>\u4e0e<code>as_complete()</code>\u65b9\u6cd5\u4e0d\u540c\uff0c\u5982\u679c\u4efb\u52a1\u7684\u5b8c\u6210\u987a\u5e8f\u4e0e\u63d0\u4ea4\u987a\u5e8f\u4e0d\u540c\uff0c<code>map()</code>\u65b9\u6cd5\u4f1a\u7b49\u5f85\u6240\u6709\u4efb\u52a1\u5b8c\u6210\uff0c\u5e76\u6309\u7167\u63d0\u4ea4\u7684\u987a\u5e8f\u8fd4\u56de\u7ed3\u679c</li> <li><code>map()</code>\u65b9\u6cd5\u8fd4\u56de\u7ed3\u679c\u662f\u6709\u5e8f\u7684\uff0c\u4f46\u662f\u4efb\u52a1\u6267\u884c\u7684\u987a\u5e8f\u4e0d\u4e00\u5b9a\u6709\u5e8f</li> </ul>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/CC/#threadpoolexecutor","title":"\ud83e\udec1 ThreadPoolExecutor\u7ebf\u7a0b\u6c60\u00b6","text":"<p>\u6807\u51c6\u5e93<code>concurrent.futures</code>\u63d0\u4f9b\u4e86<code>ThreadPoolExecutor</code>\uff08\u7ebf\u7a0b\u6c60\uff09\u548c<code>ProcessPoolExecutor</code>\uff08\u8fdb\u7a0b\u6c60\uff09\u4e24\u4e2a\u7c7b</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/CC/","title":"\u58f9\u4e28\u57fa\u672c\u4f7f\u7528\u00b6","text":""},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/CC/","title":"\u8d30\u4e28\u4e3b\u8981\u65b9\u6cd5\u00b6","text":""},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/CC/#1-wait","title":"1. <code>wait()</code>\u65b9\u6cd5\u00b6","text":"<pre>wait(fs, timeout=None, return_when=ALL_COMPLETED)\n</pre> <p><code>fs</code>\uff1a\u8981\u6267\u884c\u7684\u5e8f\u5217</p> <p><code>timeout</code>\uff1a\u7b49\u5f85\u6700\u5927\u65f6\u95f4\uff0c\u5982\u679c\u8d85\u8fc7\u65f6\u95f4\u672a\u6267\u884c\u5b8c\u6210\u5219\u76f4\u63a5\u8fd4\u56de</p> <p><code>return_when</code>\uff1a<code>wait()</code>\u8fd4\u56de\u7ed3\u679c\u7684\u6761\u4ef6\uff0c\u9ed8\u8ba4\u4e3a<code>ALL_COMPLETED</code>\uff08\u5168\u90e8\u6267\u884c\u5b8c\u6210\u540e\u8fd4\u56de\uff09</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/CC/#2-as_completed","title":"2. <code>as_completed()</code>\u65b9\u6cd5\u00b6","text":"<p>\u5f53\u4efb\u52a1\u7ed3\u675f\u65f6\uff0c\u7ed9\u4e3b\u7ebf\u7a0b\u8fd4\u56de\u7ed3\u679c\uff0c\u4f7f\u7528<code>result()</code>\u65b9\u6cd5\u83b7\u53d6\u7ed3\u679c</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/CC/#3-map","title":"3. <code>map()</code>\u65b9\u6cd5\u00b6","text":"<pre>map(fn, *iterables, timeout=None)\n</pre> <p><code>fn</code>: \u9700\u8981\u7ebf\u7a0b\u6267\u884c\u7684\u51fd\u6570</p> <p><code>iterables</code>: \u63a5\u53d7\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61</p> <p><code>timeout</code>: \u548c<code>wait()</code>\u7684<code>timeout</code>\u4e00\u6837\uff0c\u7531\u4e8e<code>map</code>\u8fd4\u56de\u7ebf\u7a0b\u6267\u884c\u7ed3\u679c\uff0c\u5982\u679c\u5728<code>timeout</code>\u5185\u6ca1\u6709\u6267\u884c\u5b8c\uff0c\u4f1a\u629b\u51fa\u5f02\u5e38<code>TimeoutError</code></p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/CC/","title":"\u53c2\u8003\u00b6","text":"<p>[1] \u7a00\u571f\u6398\u91d1\uff0c@\u5168\u6751de\u5e0c\u671b\uff0cPython\u7ebf\u7a0b\u6c60 ThreadPoolExecutor \u7684\u7528\u6cd5\u53ca\u5b9e\u6218</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/D/","title":"\ud83c\udfc0 getattr()\u52a8\u6001\u83b7\u53d6\u5bf9\u8c61\u5c5e\u6027\u548c\u65b9\u6cd5","text":""},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/D/#getattr","title":"\u58f9\u4e28\u4ec0\u4e48\u662fgetattr()\u51fd\u6570","text":"<p><code>getattr()</code>\u662fPython\u5185\u7f6e\u51fd\u6570\u4e4b\u4e00\uff0c\u7528\u4e8e\u83b7\u53d6\u5bf9\u8c61\u7684\u5c5e\u6027\u6216\u65b9\u6cd5\u3002</p> <pre><code>getattr(object, attribute_name[, default_value])\n</code></pre> <ul> <li><code>object</code>\u662f\u8981\u83b7\u53d6\u5c5e\u6027\u6216\u65b9\u6cd5\u7684\u5bf9\u8c61\u3002</li> <li><code>attribute_name</code>\u662f\u8981\u83b7\u53d6\u7684\u5c5e\u6027\u6216\u65b9\u6cd5\u7684\u540d\u79f0\u3002</li> <li><code>default_value</code>\u662f\u53ef\u9009\u53c2\u6570\uff0c\u8868\u793a\u5728\u5c5e\u6027\u6216\u65b9\u6cd5\u4e0d\u5b58\u5728\u65f6\u8fd4\u56de\u7684\u9ed8\u8ba4\u503c\u3002</li> </ul>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/D/#_1","title":"\u8d30\u4e28\u4f7f\u7528\u65b9\u6cd5","text":""},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/D/#1","title":"1. \u83b7\u53d6\u5bf9\u8c61\u7684\u5c5e\u6027\u503c","text":"<pre><code>class Person:\n    name = \"Alice\"\n    age = 30\n\nperson = Person()\nname = getattr(person, \"name\")\nprint(name)  # Output: \"Alice\"\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/D/#2","title":"2. \u83b7\u53d6\u5bf9\u8c61\u7684\u65b9\u6cd5","text":"<pre><code>class Calculator:\n    def add(self, x, y):\n        return x + y\n\ncalc = Calculator()\nmethod = getattr(calc, \"add\")\nresult = method(3, 4)\nprint(result)  # Output: 7\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/D/#3","title":"3. \u5904\u7406\u52a8\u6001\u5c5e\u6027\u540d","text":"<pre><code>class Config:\n    def __init__(self):\n        self.debug_mode = True\n        self.verbose_mode = False\n\nconfig = Config()\nmode = \"debug_mode\"\nvalue = getattr(config, mode)\nprint(value)  # Output: True\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/D/#getattr_1","title":"\u53c1\u4e28\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528getattr()\u51fd\u6570\uff1f","text":"<ol> <li>\u7075\u6d3b\u6027\uff1a\u6839\u636e\u53d8\u91cf\u7684\u503c\u52a8\u6001\u8bbf\u95ee\u5bf9\u8c61\u7684\u5c5e\u6027\u6216\u65b9\u6cd5\u3002</li> <li>\u53ef\u6269\u5c55\u6027\uff1a\u65b9\u4fbf\u6dfb\u52a0\u65b0\u7684\u5c5e\u6027\u6216\u65b9\u6cd5\uff0c\u800c\u4e0d\u9700\u8981\u4fee\u6539\u4ee3\u7801\u3002</li> <li>\u7b80\u6d01\u6027\uff1a\u907f\u514d\u5927\u91cf\u7684\u6761\u4ef6\u5224\u65ad\u8bed\u53e5\uff0c\u4f7f\u4ee3\u7801\u66f4\u52a0\u7b80\u6d01\u548c\u6613\u8bfb\u3002</li> <li>Pythonic\u98ce\u683c\uff1a\u7b26\u5408Python\u7684\u52a8\u6001\u7279\u6027\u548c\u7b80\u6d01\u6027\u3002</li> </ol> <p>\u901a\u8fc7\u4f7f\u7528<code>getattr()</code>\u51fd\u6570\uff0c\u53ef\u4ee5\u66f4\u597d\u5730\u5904\u7406\u52a8\u6001\u6570\u636e\u548c\u5bf9\u8c61\uff0c\u4f7f\u4ee3\u7801\u66f4\u5177\u901a\u7528\u6027\u548c\u7075\u6d3b\u6027\u3002\u5728\u5b9e\u9645\u7f16\u7a0b\u4e2d\uff0c\u5408\u7406\u5229\u7528<code>getattr()</code>\u51fd\u6570\u53ef\u4ee5\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\u548c\u53ef\u6269\u5c55\u6027\u3002</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/E/","title":"\ud83c\udf58 \u4f7f\u7528`Literal`\u63d0\u9ad8Python\u4ee3\u7801\u7684\u7c7b\u578b\u5b89\u5168\u6027","text":"<p>\u5728\u73b0\u4ee3\u8f6f\u4ef6\u5f00\u53d1\u4e2d\uff0c\u7c7b\u578b\u5b89\u5168\u6027\u548c\u4ee3\u7801\u53ef\u8bfb\u6027\u662f\u4e24\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u65b9\u9762\u3002\u4e3a\u4e86\u63d0\u9ad8\u7c7b\u578b\u5b89\u5168\u6027\uff0cPython\u5f15\u5165\u4e86<code>typing</code>\u6a21\u5757\u3002</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/E/#literal","title":"\u58f9\u4e28\u4ec0\u4e48\u662f<code>Literal</code>","text":"<p><code>Literal</code>\u662fPython3.8\u5f15\u5165\u7684\u4e00\u4e2a\u7c7b\u578b\u6ce8\u89e3\uff0c\u7528\u4e8e\u6307\u5b9a\u4e00\u4e2a\u53d8\u91cf\u6216\u53c2\u6570\u53ea\u80fd\u662f\u67d0\u4e9b\u7279\u5b9a\u7684\u503c\u3002\u901a\u8fc7\u4f7f\u7528<code>Literal</code>\uff0c\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u660e\u786e\u5730\u8868\u8fbe\u67d0\u4e9b\u53d8\u91cf\u53ea\u80fd\u53d6\u7279\u5b9a\u7684\u503c\uff0c\u4ece\u800c\u63d0\u9ad8\u4ee3\u7801\u7684\u7c7b\u578b\u5b89\u5168\u6027\u548c\u53ef\u8bfb\u6027\u3002\u4ee5\u4e0b\u662fPython\u5b98\u65b9\u6587\u6863\u7684\u6ce8\u89e3\uff1a</p> <p>typing.Literal</p> <p>\u7279\u6b8a\u7c7b\u578b\u6ce8\u89e3\u5f62\u5f0f\uff0c\u7528\u4e8e\u5b9a\u4e49\u201c\u5b57\u9762\u503c\u7c7b\u578b\u201d\u3002</p> <p><code>Literal</code>\u53ef\u4ee5\u7528\u6765\u5411\u7c7b\u578b\u68c0\u67e5\u5668\u8bf4\u660e\u88ab\u6ce8\u89e3\u7684\u5bf9\u8c61\u5177\u6709\u4e0e\u6240\u63d0\u4f9b\u7684\u5b57\u9762\u91cf\u4e4b\u4e00\u76f8\u540c\u7684\u503c\u3002</p> <p>\u4f8b\u5982\uff1a</p> <pre><code>def validate_simple(data: Any) -&gt; Literal[True]:  # always returns True\n    ...\n\ntype Mode = Literal['r', 'rb', 'w', 'wb']\ndef open_helper(file: str, mode: Mode) -&gt; str:\n    ...\n\nopen_helper('/some/path', 'r')      # Passes type check\nopen_helper('/other/path', 'typo')  # Error in type checker\n</code></pre> <p><code>Literal[...]</code>\u4e0d\u80fd\u521b\u5efa\u5b50\u7c7b\u3002\u5728\u8fd0\u884c\u65f6\uff0c\u4efb\u610f\u503c\u5747\u53ef\u4f5c\u4e3a<code>Literal[...]</code>\u7684\u7c7b\u578b\u53c2\u6570\uff0c\u4f46\u7c7b\u578b\u68c0\u67e5\u5668\u53ef\u4ee5\u5bf9\u6b64\u52a0\u4ee5\u9650\u5236\u3002\u5b57\u9762\u91cf\u7c7b\u578b\u8be6\u89c1PEP586\u3002</p> <p>Addedinversion3.8.</p> <p>\u57283.9.1\u7248\u672c\u53d1\u751f\u53d8\u66f4:<code>Literal</code>\u73b0\u5728\u80fd\u53bb\u9664\u5f62\u53c2\u7684\u91cd\u590d\u3002<code>Literal</code>\u5bf9\u8c61\u7684\u76f8\u7b49\u6027\u6bd4\u8f83\u4e0d\u518d\u4f9d\u8d56\u987a\u5e8f\u3002\u73b0\u5728\u5982\u679c\u6709\u67d0\u4e2a\u53c2\u6570\u4e0d\u4e3ahashable\uff0c<code>Literal</code>\u5bf9\u8c61\u5728\u76f8\u7b49\u6027\u6bd4\u8f83\u671f\u95f4\u5c06\u5f15\u53d1<code>TypeError</code>\u3002</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/E/#_1","title":"\u8d30\u4e28\u57fa\u672c\u7528\u6cd5","text":"<pre><code>from typing import Literal\n\n\ndef my_method(param: Literal['option1', 'option2']\n              ) -&gt; None:\n    if param == 'option1':\n        print(\"Option1 selected\")\n    elif param == 'option2':\n        print(\"Option2 selected\")\n\n\n# \u6b63\u786e\u7684\u7528\u6cd5\nmy_method('option1')  # \u8f93\u51fa:Option1 selected\nmy_method('option2')  # \u8f93\u51fa:Option2 selected\n\n# \u9519\u8bef\u7684\u7528\u6cd5\uff0c\u7c7b\u578b\u68c0\u67e5\u5de5\u5177\u4f1a\u62a5\u9519\nmy_method('option3')  # \u7c7b\u578b\u68c0\u67e5\u5de5\u5177\u4f1a\u62a5\u9519\uff0c\u56e0\u4e3a 'option3' \u4e0d\u5728 Literal['option1', 'option2'] \u4e2d\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>process_status</code>\u51fd\u6570\u7684\u53c2\u6570<code>status</code>\u88ab\u6ce8\u89e3\u4e3a<code>Literal['open','closed','pending']</code>\uff0c\u8fd9\u610f\u5473\u7740<code>status</code>\u53ea\u80fd\u662f<code>'open'</code>\u3001<code>'closed'</code>\u6216<code>'pending'</code>\u3002\u5982\u679c\u4f20\u9012\u5176\u4ed6\u503c\uff0c\u7c7b\u578b\u68c0\u67e5\u5de5\u5177\uff08\u5982<code>mypy</code>\u3001<code>pytype</code>\u3001<code>Pylint</code>\u7b49\uff09\u4f1a\u62a5\u9519\u3002</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/E/#literal_1","title":"\u53c1\u4e28\u5728\u62bd\u8c61\u65b9\u6cd5\u4e2d\u4f7f\u7528<code>Literal</code>","text":"<p>\u5728\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\uff0c\u7ecf\u5e38\u4f7f\u7528\u62bd\u8c61\u57fa\u7c7b\u548c\u62bd\u8c61\u65b9\u6cd5\u6765\u5b9a\u4e49\u63a5\u53e3\u3002<code>Literal</code>\u4e5f\u53ef\u4ee5\u4e0e<code>@abstractmethod</code>\u88c5\u9970\u5668\u7ed3\u5408\u4f7f\u7528\uff0c\u4ee5\u786e\u4fdd\u5b50\u7c7b\u5b9e\u73b0\u7684\u65b9\u6cd5\u53c2\u6570\u7b26\u5408\u7279\u5b9a\u7684\u503c\u3002</p> <pre><code>from abc import ABC, abstractmethod\nfrom typing import Literal\n\n\nclass MyBaseClass(ABC):\n    @abstractmethod\n    def my_method(self, \n                  param: str) -&gt; None:\n        pass\n\n\nclass MyConcreteClass(MyBaseClass):\n    def my_method(self, \n                  param: Literal['option1', 'option2']) -&gt; None:\n        if param == 'option1':\n            print(\"Option1 selected\")\n        elif param == 'option2':\n            print(\"Option2 selected\")\n\n\n# \u793a\u4f8b\u7528\u6cd5\nobj = MyConcreteClass()\nobj.my_method('option1')  # \u8f93\u51fa:Option1 selected\nobj.my_method('option2')  # \u8f93\u51fa:Option2 selected\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u7236\u7c7b<code>MyBaseClass</code>\u4e2d\u7684\u62bd\u8c61\u65b9\u6cd5<code>my_method</code>\u7684\u53c2\u6570\u7c7b\u578b\u662f<code>str</code>\uff0c\u8868\u793a\u53ef\u4ee5\u63a5\u53d7\u4efb\u4f55\u5b57\u7b26\u4e32\u3002\u5b50\u7c7b<code>MyConcreteClass</code>\u4e2d\u5b9e\u73b0\u4e86<code>my_method</code>\uff0c\u5e76\u5c06\u53c2\u6570\u7c7b\u578b\u5177\u4f53\u5316\u4e3a<code>Literal['option1', 'option2']</code>\uff0c\u8868\u793a\u53ea\u80fd\u63a5\u53d7<code>'option1'</code>\u6216<code>'option2'</code>\u3002</p> <p>\u5728\u8fd9\u91cc\uff0c\u7236\u7c7b\u9650\u5b9a\u4e86<code>['option1', 'option2']</code>\u540e\uff0c\u5b50\u7c7b\u4e2d\u5fc5\u987b\u4f7f\u7528\u540c\u6837\u7684<code>['option1', 'option2']</code></p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/E/#tipliteral","title":"TIP\u4e28\u5728\u62bd\u8c61\u65b9\u6cd5\u4e2d\u4f7f\u7528<code>Literal</code>\u8fdb\u884c\u7c7b\u578b\u6536\u7a84","text":"<p>\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5b9e\u73b0\u5b50\u7c7b\u65f6\u4f1a\u9047\u5230\u4e0d\u540c\u5b50\u7c7b\u95f4\u53ef\u63a5\u53d7\u7684\u6ce8\u89e3\u53d6\u503c\u8303\u56f4\u4e0d\u540c\u3002\u8fd9\u65f6\u53ef\u4ee5\u5bf9\u7236\u7c7b\u65b9\u6cd5\u7684\u53c2\u6570\u7c7b\u578b\u653e\u5bbd\u7ea6\u675f\u4e3a<code>str</code>\uff0c\u8fdb\u800c\u5728\u5b50\u7c7b\u4e0a\u4f7f\u7528<code>Literal</code>\u8fdb\u884c\u66f4\u4e25\u683c\u7684\u7ea6\u675f\u3002</p> <pre><code>from abc import ABC, abstractmethod\nfrom typing import Literal\n\n\nclass MyBaseClass(ABC):\n    @abstractmethod\n    def my_method(self, \n                  param: str) -&gt; None:\n        pass\n\n\nclass MyConcreteClass(MyBaseClass):\n    def my_method(self,\n                  param: Literal['option1', 'option2']) -&gt; None:\n        if param == 'option1':\n            print(\"Option1 selected\")\n        elif param == 'option2':\n            print(\"Option2 selected\")\n\n\n# \u793a\u4f8b\u7528\u6cd5\nobj = MyConcreteClass()\nobj.my_method('option1')  # \u8f93\u51fa:Option1 selected\nobj.my_method('option2')  # \u8f93\u51fa:Option2 selected\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5b50\u7c7b<code>MyConcreteClass</code>\u5bf9\u7236\u7c7b<code>MyBaseClass</code>\u7684\u62bd\u8c61\u65b9\u6cd5<code>my_method</code>\u7684\u53c2\u6570\u7c7b\u578b\u8fdb\u884c\u4e86\u6536\u7a84\uff0c\u4ece<code>str</code>\u6536\u7a84\u4e3a<code>Literal['option1','option2']</code>\u3002\u8fd9\u79cd\u505a\u6cd5\u662f\u5141\u8bb8\u7684\uff0c\u56e0\u4e3a<code>Literal['option1','option2']</code>\u662f<code>str</code>\u7684\u5b50\u7c7b\u578b\uff0c\u7b26\u5408\u7c7b\u578b\u7ea6\u675f\u7684\u6536\u7a84\u539f\u5219\u3002</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/F/","title":"\ud83e\udd80 `ThreadPoolExecutor`\u786e\u5b9a\u53ef\u4f7f\u7528\u7684\u6700\u5927`max_workers`","text":"<p><code>ThreadPoolExecutor</code>\u4e2d<code>max_workers</code>\u53c2\u6570\u51b3\u5b9a\u4e86\u7ebf\u7a0b\u6c60\u4e2d\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u7684\u6700\u5927\u7ebf\u7a0b\u6570\u3002\u9009\u62e9\u5408\u9002\u7684 <code>max_workers</code> \u6570\u91cf\u53ef\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6027\u80fd\u548c\u8d44\u6e90\u5229\u7528\u7387\u3002</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/F/#max_workers","title":"\u58f9\u4e28\u786e\u5b9a <code>max_workers</code> \u7684\u65b9\u6cd5","text":""},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/F/#1-cpu","title":"1. CPU \u5bc6\u96c6\u578b\u4efb\u52a1","text":"<p>\u5bf9\u4e8e CPU \u5bc6\u96c6\u578b\u4efb\u52a1\uff08\u5982\u8ba1\u7b97\u5bc6\u96c6\u578b\u64cd\u4f5c\uff09\uff0c\u7ebf\u7a0b\u6570\u4e0d\u5e94\u8d85\u8fc7 CPU \u6838\u5fc3\u6570\u3002\u8fc7\u591a\u7684\u7ebf\u7a0b\u4f1a\u5bfc\u81f4\u9891\u7e41\u7684\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u53cd\u800c\u964d\u4f4e\u6027\u80fd\u3002</p> <pre><code>import os\nfrom concurrent.futures import ThreadPoolExecutor\n\nnum_cpus = os.cpu_count()\nwith ThreadPoolExecutor(max_workers=num_cpus) as executor:\n    # \u63d0\u4ea4\u4efb\u52a1\n    pass\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/F/#2-io","title":"2. I/O \u5bc6\u96c6\u578b\u4efb\u52a1","text":"<p>\u5bf9\u4e8e I/O \u5bc6\u96c6\u578b\u4efb\u52a1\uff08\u5982\u6587\u4ef6\u8bfb\u5199\u3001\u7f51\u7edc\u8bf7\u6c42\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528\u66f4\u591a\u7684\u7ebf\u7a0b\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u4efb\u52a1\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u7b49\u5f85 I/O \u64cd\u4f5c\u5b8c\u6210\u3002\u4e00\u4e2a\u5e38\u89c1\u7684\u7ecf\u9a8c\u6cd5\u5219\u662f\u4f7f\u7528<code>2 * num_cpus</code>\u6216\u66f4\u591a\u7684\u7ebf\u7a0b\u3002</p> <pre><code>import os\nfrom concurrent.futures import ThreadPoolExecutor\n\nnum_cpus = os.cpu_count()\nmax_workers = num_cpus * 2\nwith ThreadPoolExecutor(max_workers=max_workers) as executor:\n    # \u63d0\u4ea4\u4efb\u52a1\n    pass\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/F/#3","title":"3. \u6df7\u5408\u578b\u4efb\u52a1","text":"<p>\u5982\u679c\u4efb\u52a1\u65e2\u5305\u542b CPU \u5bc6\u96c6\u578b\u64cd\u4f5c\u53c8\u5305\u542b I/O \u64cd\u4f5c\uff0c\u53ef\u4ee5\u6839\u636e\u4efb\u52a1\u7684\u5177\u4f53\u60c5\u51b5\u8fdb\u884c\u8c03\u6574\u3002\u53ef\u4ee5\u5148\u4ece <code>num_cpus</code> \u6216 <code>2 * num_cpus</code> \u5f00\u59cb\uff0c\u7136\u540e\u6839\u636e\u5b9e\u9645\u6027\u80fd\u8fdb\u884c\u8c03\u6574\u3002</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/F/#_1","title":"\u8d30\u4e28\u7ecf\u9a8c\u603b\u7ed3","text":"koko_learn.PicTools._base.py<pre><code>class THREAD_PARAM:\n    NUM_CPUS = os.cpu_count()\n    MAX_WORKERS = NUM_CPUS * 2\n</code></pre> koko_learn.PicTools._raf.py<pre><code>from koko_learn.PicTools._base import THREAD_PARAM\n\ndef get_pics(self, path, max_workers=THREAD_PARAM.MAX_WORKERS): # \u89c6\u60c5\u51b5\u800c\u5b9a\n    ...\n    t = ThreadPoolExecutor(max_workers=max_workers)\n    ...\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/G/","title":"\ud83d\udc16 \u6587\u4ef6\u64cd\u4f5c","text":""},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/G/#1-python","title":"1. Python\u83b7\u53d6\u56fe\u7247\u5927\u5c0f","text":"<pre><code>size = sys.getsizeofimage(img)\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/G/#2","title":"2. \u5220\u9664\u6587\u4ef6","text":"<p>\u95ee\u9898\u63cf\u8ff0\uff1a\u4f7f\u7528Loguru\u5bf9\u6bcf\u4e2a\u6570\u636e\u6587\u4ef6\u751f\u6210\u65e5\u5fd7\uff0c\u5bfc\u81f4\u6700\u7ec8\u78c1\u76d8\u5199\u6ee1\u3002\u56e0\u800c\u5199\u4e86\u4e2a<code>txt2yaml</code>\u51fd\u6570\uff0c\u5728\u6570\u636e\u8f6c\u6362\u5b8c\u6210\u540e\uff0c\u4f7f\u7528<code>os.system(f'rm {log_path}')</code>\u5220\u9664<code>.txt</code>\u65e5\u5fd7\u6587\u4ef6\uff0c\u4f46\u5728\u7a0b\u5e8f\u8fd0\u884c\u4e2d\u53d1\u73b0\u6ca1\u6709\u5220\u9664</p> <p>\u539f\u56e0\u5206\u6790\uff1a\u7f13\u51b2\u533a\u4e0e\u78c1\u76d8\u4e0d\u540c\u6b65\uff0c\u7f13\u51b2\u533a\u7684\u6570\u636e\u6ca1\u6709\u88ab\u5220\u9664</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u5f3a\u5236\u540c\u6b65\u7f13\u51b2\u533a\u548c\u78c1\u76d8\uff0c\u518d\u6267\u884c\u5220\u9664</p> <pre><code>with open(log_path, 'w') as f:\n    os.fsync(f.fileno())\n#os.system(f'rm {log_path}')\nos.remove(log_path)\n</code></pre> <p>Note</p> <p>\u66f4\u9ad8\u6548\u7684\u65b9\u6cd5\u662f\u76f4\u63a5\u4f7f\u7528<code>os.remove(log_path)</code>\uff0c\u4f1a\u5148\u5c06\u6587\u4ef6\u4ece\u5185\u5b58\u4e2d\u5220\u9664\uff0c\u518d\u8fdb\u884c\u78c1\u76d8\u540c\u6b65\u7684\u64cd\u4f5c\uff0c\u4e00\u822c\u4e0d\u4f1a\u51fa\u73b0\u7f13\u51b2\u533a\u548c\u78c1\u76d8\u4e0d\u540c\u6b65\u7684\u60c5\u51b5\uff0c\u4f46\u5f53\u6587\u4ef6\u4e0d\u5b58\u5728\u6216\u6ca1\u6709\u5220\u9664\u6743\u9650\u65f6\uff0c\u4f1a\u62a5\u9519</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/","title":"\ud83c\udf88 Python/0\ufe0f\u20e3 \u6269\u5c55\u5e93","text":"<ul> <li> <p>Argparse</p> <p> Getting started</p> </li> <li> <p>Loguru</p> <p> Getting started</p> </li> <li> <p>Ruff</p> <p> Getting started</p> </li> <li> <p>SciencePlots</p> <p> Getting started</p> </li> <li> <p>TensorbordX</p> <p> Getting started</p> </li> <li> <p>tqdm.ipynb</p> <p> Getting started</p> </li> <li> <p>uv</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/Argparse/","title":"\ud83d\ude00 Argparse","text":"<p><code>argparse</code> \u662f Python \u4e2d\u4e00\u4e2a\u5185\u7f6e\u5e93\uff0c\u7528\u4e8e\u89e3\u6790\u547d\u4ee4\u884c\u53c2\u6570\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u5f0f\u6765\u5904\u7406\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u5feb\u901f\u521b\u5efa\u547d\u4ee4\u884c\u5de5\u5177\u3002</p> <p>\u6587\u6863\uff1ahttps://docs.python.org/3/library/argparse.html</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/Argparse/#_1","title":"\u58f9\u4e28\u7b80\u5355\u4f7f\u7528<sup>1</sup>","text":"<ol> <li>\u521b\u5efa\u4e00\u4e2a <code>ArgumentParser</code> \u5bf9\u8c61 <pre><code># \u5bfc\u5165\u5305\nimport argparse\n\n# \u5b9e\u4f8b\u5316\nparser = argparse.ArgumentParser(description='CMD option')\n</code></pre></li> <li> <p>\u5b9a\u4e49\u547d\u4ee4\u884c\u53c2\u6570 <pre><code>parser.add_argument('--input', '-i', required=True, help='input')\nparser.add_argument('--output', '-o', required=True, help='output')\n</code></pre> \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u4f7f\u7528 <code>add_argument</code> \u65b9\u6cd5\u6dfb\u52a0\u4e86\u4e24\u4e2a\u547d\u4ee4\u884c\u53c2\u6570\uff1a<code>--input</code> \u548c <code>--output</code>\u3002<code>--input</code> \u662f\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u5176\u4e2d <code>-i</code> \u662f\u4e00\u4e2a\u7f29\u5199\uff0c\u7528\u4e8e\u5728\u547d\u4ee4\u884c\u4e2d\u4f7f\u7528\u3002<code>--output</code> \u4e5f\u662f\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u5176\u4e2d <code>-o</code> \u662f\u4e00\u4e2a\u7f29\u5199\u3002\u8fd9\u4e24\u4e2a\u53c2\u6570\u90fd\u662f\u5fc5\u586b\u7684\uff0c\u56e0\u4e3a\u5728 <code>add_argument</code> \u65b9\u6cd5\u4e2d\u5c06 <code>required</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>True</code>\u3002</p> </li> <li> <p>\u5904\u7406\u547d\u4ee4\u884c\u53c2\u6570 <pre><code>args = parser.parse_args()\n</code></pre> \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u4f7f\u7528 <code>parse_args</code> \u65b9\u6cd5\u5904\u7406\u547d\u4ee4\u884c\u53c2\u6570\u3002\u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a <code>Namespace</code> \u5bf9\u8c61\uff0c\u5176\u4e2d\u5305\u542b\u6240\u6709\u547d\u4ee4\u884c\u53c2\u6570\u7684\u503c\u3002</p> </li> <li> <p>\u4f7f\u7528\u547d\u4ee4\u884c\u53c2\u6570 <pre><code>input = args.input\noutput = args.output\n</code></pre> \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 <code>input</code> \u548c <code>output</code> \u53d8\u91cf\u6765\u8bbf\u95ee\u547d\u4ee4\u884c\u53c2\u6570\u7684\u503c\u3002</p> </li> <li> <p>\u663e\u793a\u5e2e\u52a9\u4fe1\u606f <pre><code>parser.print_help()\n</code></pre> \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 <code>print_help</code> \u65b9\u6cd5\u663e\u793a\u5e2e\u52a9\u4fe1\u606f\u3002\u8fd9\u4e2a\u65b9\u6cd5\u5c06\u663e\u793a\u6240\u6709\u547d\u4ee4\u884c\u53c2\u6570\u7684\u5e2e\u52a9\u4fe1\u606f\u3002</p> </li> <li> <p>\u5904\u7406\u9519\u8bef <pre><code>try:\n    args = parser.parse_args()\nexcept ArgumentError as e:\n    print(e)\n</code></pre> \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u4f7f\u7528 <code>try</code>/<code>except</code> \u5757\u6765\u5904\u7406\u9519\u8bef\u3002\u5982\u679c\u547d\u4ee4\u884c\u53c2\u6570\u65e0\u6cd5\u89e3\u6790\uff0c\u5219\u4f1a\u5f15\u53d1\u4e00\u4e2a <code>ArgumentError</code> \u5f02\u5e38\u3002</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/Argparse/#_2","title":"\u8d30\u4e28\u5b9e\u4f8b","text":"<pre><code>import argparse\n\ndef main():\n    param = argparse.ArgumentParser(description='argparse\u5305\u6f14\u793a')\n    param.add_argument('-n', '--name', default='MasterMao', type=str, help='\u59d3\u540d')\n    param.add_argument('-a', '--age', default=4, type=int)\n    args = param.parse_args()\n    print(args)\n\n    name = args.name\n    print(f'Hello {name} {args.age}')\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/Argparse/#ossystem","title":"\u53c1\u4e28\u914d\u5408<code>os.system()</code>\u5b9e\u73b0\u81ea\u52a8\u5316\u811a\u672c","text":"<pre><code>import os\n\nif __name__ == \"__main__\":\n    NAME = ['xiaoming', 'xiaohong', 'xiaoma']\n    for name in NAME:\n        os.system(f'python utils.py --name {name}')\n</code></pre> <ol> <li> <p>CSDN\uff0c@\u9a91\u7740\u8717\u725b\u5411\u524d\u8dd1\uff0cargparse\u57fa\u672c\u7528\u6cd5 \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/Loguru/","title":"\ud83e\udd23 Loguru","text":"<p>Loguru \u662f\u4e00\u4e2a Python \u7684\u65e5\u5fd7\u5e93\uff0c\u5b83\u63d0\u4f9b\u4e86\u7b80\u5355\u6613\u7528\u7684 API \u548c\u5f3a\u5927\u7684\u529f\u80fd\uff0c\u4f7f\u5f97\u5728 Python \u5e94\u7528\u7a0b\u5e8f\u4e2d\u6dfb\u52a0\u65e5\u5fd7\u53d8\u5f97\u975e\u5e38\u5bb9\u6613\u3002</p> <p>\u5b89\u88c5\uff1a<code>pip install loguru</code></p> <p>\u5f00\u6e90\u5730\u5740\uff1ahttps://github.com/Delgan/loguru</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/Loguru/#_1","title":"\u58f9\u4e28\u57fa\u672c\u7528\u6cd5","text":"<pre><code>from loguru import logger\n\nlogger.debug(\"This is a debug message\")\nlogger.info(\"This is an info message\")\nlogger.warning(\"This is a warning message\")\nlogger.error(\"This is an error message\")\nlogger.critical(\"This is a critical message\")\n</code></pre> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u65e5\u5fd7\u7ea7\u522b\u4e3a <code>INFO</code>\uff0c\u56e0\u6b64 <code>logger.debug</code> \u4e2d\u7684\u6d88\u606f\u4e0d\u4f1a\u88ab\u6253\u5370\u51fa\u6765\u3002</p> <p>Loguru \u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u65b9\u4fbf\u7684\u529f\u80fd\uff0c\u6bd4\u5982\u5c06\u65e5\u5fd7\u6d88\u606f\u8f93\u51fa\u5230\u6587\u4ef6\u4e2d\uff0c\u4ee5\u53ca\u683c\u5f0f\u5316\u65e5\u5fd7\u6d88\u606f\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u5e26\u6709\u683c\u5f0f\u5316\u548c\u6587\u4ef6\u8f93\u51fa\u7684\u4f8b\u5b50\uff1a</p> <pre><code>from loguru import logger\n\nlogger.add(\"file.log\", format=\"{time} {level} {message}\", level=\"INFO\")\n\nlogger.debug(\"This is a debug message\")\nlogger.info(\"This is an info message\")\nlogger.warning(\"This is a warning message\")\nlogger.error(\"This is an error message\")\nlogger.critical(\"This is a critical message\")\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/Loguru/#_2","title":"\u8d30\u4e28\u5b9e\u4f8b","text":""},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/Loguru/#1","title":"1. \u8ddf\u8e2a\u51fd\u6570\u6267\u884c\u65f6\u95f4","text":"<p>Loguru \u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b9\u4fbf\u7684\u88c5\u9970\u5668 <code>logger.catch</code>\uff0c\u53ef\u4ee5\u7528\u4e8e\u6355\u83b7\u51fd\u6570\u4e2d\u7684\u5f02\u5e38\uff0c\u5e76\u8f93\u51fa\u5f02\u5e38\u4fe1\u606f\u3002\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u7279\u6027\u6765\u8ddf\u8e2a\u51fd\u6570\u7684\u6267\u884c\u65f6\u95f4\u3002</p> <pre><code>from loguru import logger\nimport time\n\n@logger.catch\ndef my_function():\n    start_time = time.time()\n    # Do something\n    end_time = time.time()\n    logger.info(f\"Execution time: {end_time - start_time} seconds\")\n\nmy_function()\n</code></pre> <p>\u4f7f\u7528 <code>logger.catch</code> \u88c5\u9970\u5668\u6765\u6355\u83b7 <code>my_function</code> \u51fd\u6570\u4e2d\u7684\u5f02\u5e38\uff0c\u5e76\u5728\u51fd\u6570\u6267\u884c\u5b8c\u6210\u540e\u8f93\u51fa\u51fd\u6570\u7684\u6267\u884c\u65f6\u95f4\u3002</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/Loguru/#2","title":"2. \u8f93\u51fa\u8c03\u8bd5\u4fe1\u606f","text":"<p>\u6709\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u5728\u4ee3\u7801\u4e2d\u8f93\u51fa\u4e00\u4e9b\u8c03\u8bd5\u4fe1\u606f\uff0c\u6bd4\u5982\u53d8\u91cf\u7684\u503c\u6216\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002Loguru \u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b9\u4fbf\u7684 <code>logger.debug</code> \u65b9\u6cd5\uff0c\u53ef\u4ee5\u7528\u4e8e\u8f93\u51fa\u8c03\u8bd5\u4fe1\u606f\u3002</p> <pre><code>from loguru import logger\n\ndef my_function(x):\n    result = x ** 2\n    logger.debug(f\"Result: {result}\")\n    return result\n\nmy_function(3)\n</code></pre> <p>\u5728 <code>my_function</code> \u51fd\u6570\u4e2d\u4f7f\u7528 <code>logger.debug</code> \u65b9\u6cd5\u8f93\u51fa\u4e86\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/Loguru/#3","title":"3. \u8f93\u51fa\u5806\u6808\u8ddf\u8e2a\u4fe1\u606f","text":"<p>\u5f53\u7a0b\u5e8f\u53d1\u751f\u5f02\u5e38\u65f6\uff0c\u6211\u4eec\u901a\u5e38\u9700\u8981\u8f93\u51fa\u5806\u6808\u8ddf\u8e2a\u4fe1\u606f\u6765\u5e2e\u52a9\u8c03\u8bd5\u3002Loguru \u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b9\u4fbf\u7684 <code>logger.exception</code> \u65b9\u6cd5\uff0c\u53ef\u4ee5\u7528\u4e8e\u8f93\u51fa\u5806\u6808\u8ddf\u8e2a\u4fe1\u606f\u3002</p> <pre><code>from loguru import logger\n\ndef my_function():\n    raise Exception(\"Oops, something went wrong!\")\n\ntry:\n    my_function()\nexcept Exception:\n    logger.exception(\"An exception occurred:\")\n</code></pre> <p>\u5728 <code>my_function</code> \u51fd\u6570\u4e2d\u6545\u610f\u629b\u51fa\u4e86\u4e00\u4e2a\u5f02\u5e38\uff0c\u5e76\u4f7f\u7528 <code>logger.exception</code> \u65b9\u6cd5\u8f93\u51fa\u4e86\u5806\u6808\u8ddf\u8e2a\u4fe1\u606f\u3002\u8fd9\u6837\u53ef\u4ee5\u66f4\u597d\u5730\u4e86\u89e3\u7a0b\u5e8f\u53d1\u751f\u5f02\u5e38\u7684\u539f\u56e0\uff0c\u5e76\u5e2e\u52a9\u8c03\u8bd5\u4ee3\u7801\u3002</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/SciencePlots/","title":"\ud83e\udd70 SciencePlots","text":"<p>SciencePlots\u662f\u4e00\u4e2a\u57fa\u4e8eMatplotlib\u7684Python\u79d1\u5b66\u7ed8\u56fe\u5e93\uff0c\u5b83\u65e8\u5728\u4e3a\u79d1\u5b66\u5bb6\u548c\u5de5\u7a0b\u5e08\u63d0\u4f9b\u9ad8\u8d28\u91cf\u7684\u7ed8\u56fe\u5de5\u5177\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u7ed8\u56fe\u7c7b\u578b\uff0c\u5982\u7ebf\u56fe\u3001\u6563\u70b9\u56fe\u3001\u76f4\u65b9\u56fe\u3001\u70ed\u529b\u56fe\u3001\u7b49\u9ad8\u7ebf\u56fe\u7b49\uff0c\u5e76\u652f\u6301\u81ea\u5b9a\u4e49\u989c\u8272\u3001\u7ebf\u578b\u3001\u6807\u7b7e\u548c\u56fe\u4f8b\u7b49\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u53ef\u7528\u4e8e\u7f8e\u5316\u7ed8\u56fe\u7684\u5b9e\u7528\u7a0b\u5e8f\uff0c\u5982\u8c03\u6574\u5b57\u4f53\u3001\u7ebf\u5bbd\u548c\u6807\u7b7e\u5927\u5c0f\u7b49\u3002</p> <p>\u5b89\u88c5\uff1a<code>pip install SciencePlots</code></p> <p>\u5f00\u6e90\u5730\u5740\uff1ahttps://github.com/garrettj403/SciencePlots</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/SciencePlots/#_1","title":"\u58f9\u4e28\u7b80\u5355\u4f7f\u7528","text":"<p>\u6ce8\u610f</p> <p>\u57282.0.0\u7248\u672c\u540e\uff0c\u9700\u8981\u6dfb\u52a0<code>import scienceplots</code>\u624d\u80fd\u4f7f\u7528<code>plt.style.use('science')</code></p> <p>Ubuntu\u4e0bSciencePlots\u6837\u5f0f\u8bbe\u7f6e</p> <p>\u5c06\u6837\u5f0f\u6587\u4ef6\u590d\u5236\u5230\uff1a/home/\\(user_name\\)/anaconda3/envs/MasterMaoPy311/lib/python3.11/site-packages/scienceplots/styles/misc/</p> <p>\u53c2\u8003SciencePlots\u6837\u5f0f(\u4e2d\u6587\u5b8b\u4f53+\u82f1\u6587TimesNewRoman)</p> <p>\u5408\u5e76\u65b9\u6cd5\uff1a\u6bd5\u4e1a\u8bba\u6587 Matplotlib \u7ed8\u56fe\u4e2d\u82f1\u6587\u8bbe\u7f6e\uff08\u4e8c\uff09</p> <p>\u6837\u5f0f\u4ee3\u7801\uff1a <pre><code># Matplotlib style for scientific plotting\n# This is the base style for \"SciencePlots\"\n# see: https://github.com/garrettj403/SciencePlots\n\n# Set default figure size\nfigure.figsize : 3.5, 2.625\nfigure.dpi : 600\n\n# Set x axis\nxtick.direction : in\nxtick.major.size : 3\nxtick.major.width : 0.5\nxtick.minor.size : 1.5\nxtick.minor.width : 0.5\nxtick.minor.visible : True\nxtick.top : True\nxtick.labelsize : medium\n\n# Set y axis\nytick.direction : in\nytick.major.size : 3\nytick.major.width : 0.5\nytick.minor.size : 1.5\nytick.minor.width : 0.5\nytick.minor.visible : True\nytick.right : True\nytick.labelsize : medium\n\naxes.unicode_minus : False\n\n# Set line widths\naxes.linewidth : 0.5\ngrid.linewidth : 0.5\nlines.linewidth : 1.\nlines.markersize : 4.0\n\n# Set line style as well for black and white graphs\naxes.prop_cycle : (cycler('color', ['k', 'r', 'b', 'g']) + cycler('ls', ['-', '--', ':', '-.']))\n\n# save config\nsavefig.bbox : tight\nsavefig.format : webp\nsavefig.dpi : 600\nsavefig.pad_inches : 0.05\n\n# Grid lines\naxes.grid : True\naxes.axisbelow : True\ngrid.linestyle : --\ngrid.color : k\ngrid.alpha : 0.2\n\n# Legend\nlegend.frameon : True\nlegend.framealpha : 1.0\nlegend.fancybox : True\nlegend.numpoints : 1\naxes.labelsize : 7\nlegend.fontsize : 7\n\n# Use serif fonts\nfont.size : 7\nfont.serif : Times New Roman + SimSun\nfont.family : serif\n\n# Use LaTeX for math formatting\ntext.usetex : False\n</code></pre> \u200b## \u8d30\u4e28\u5b9e\u4f8b</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nimport scienceplots\n\nplt.style.use('mastermao-simtimes')\n\n\ndef model(x, p):\n    return x ** (2 * p + 1) / (1 + x ** (2 * p))\n\n\nif __name__ == '__main__':\n    x = np.linspace(0.75, 1.25, 201)\n\n    fig, ax = plt.subplots(figsize=(7.05, 3), constrained_layout=True)\n    for p in [5, 7, 10, 15, 20, 30, 38, 50, 100]:\n        ax.plot(x, model(x, p), label=p)\n    ax.legend(title='Order', fontsize=7)\n    ax.set(xlabel=r'\u7535\u538b (mV)')\n    ax.set(ylabel=r'\u7535\u6d41 ($\\mu$A)')\n    ax.autoscale(tight=True)\n    fig.savefig('./fig.webp')\n</code></pre> <p></p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/TensorboardX/","title":"\ud83e\udd29 TensorbordX","text":""},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/TensorboardX/#_1","title":"\u58f9\u4e28\u5b89\u88c5","text":"<pre><code>pip install tensorboardX\n</code></pre> <pre><code>pip install tensorboard\n</code></pre> <p>\u4f7f\u7528GPU\u7684\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u5b89\u88c5\uff1a</p> <pre><code>pip install tensorflow-gpu==2.3.0\n</code></pre> <p>\u6ce8\u610f\uff1a\u7248\u672c\u9700\u8981\u548ccuda\u7248\u672c\u4e00\u81f4<sup>1</sup></p> <p>\u5426\u5219\u62a5<code>cudart64_110.dll not found</code>\u9519\u8bef\uff0c\u53ef\u6839\u636e\u53c2\u8003[1]\u67e5\u627e\u5bf9\u5e94\u7248\u672c</p> \u67e5\u770bTensorFlow\u7248\u672c <pre><code>import tensorflow as tf\nprint(tf.__version__)\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/TensorboardX/#_2","title":"\u8d30\u4e28\u4f7f\u7528","text":"<p>\u5728<code>runs</code>\u540c\u7ea7\u76ee\u5f55\u4e0b\u6267\u884c\uff1a</p> <pre><code>tensorboard --logdir runs\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/TensorboardX/#_3","title":"\u53c1\u4e28\u603b\u7ed3","text":"<p>\u7528\u6cd5\u8be6\u89c1\u53c2\u8003<sup>2</sup><sup>3</sup>\uff0c\u4e2a\u4eba\u89c9\u5f97\u4e0d\u597d\u7528\uff0cPyTorch\u8bad\u7ec3\u53ef\u89c6\u5316\u53ef\u4ee5\u8bd5\u8bd5<code>visdom</code> \u3002</p> <ol> <li> <p>CSDN\uff0c@\u6211\u60f3\u9759\u9759\uff0c\uff0ccudart64_110.dll not found\u89e3\u51b3\u65b9\u6cd5 \u21a9</p> </li> <li> <p>\u7b80\u4e66\uff0c@\u82d7\u4e66\u5b87\uff0cPytorch\u4f7f\u7528tensorboardX\u53ef\u89c6\u5316\u3002\u8d85\u8be6\u7ec6\uff01\uff01\uff01 \u21a9</p> </li> <li> <p>CSDN\uff0c@imbennyguo\uff0c\u8be6\u89e3PyTorch\u9879\u76ee\u4f7f\u7528TensorboardX\u8fdb\u884c\u8bad\u7ec3\u53ef\u89c6\u5316 \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/tqdm/","title":"\ud83d\ude19 tqdm","text":"In\u00a0[1]: Copied! <pre>!pip install tqdm\n</pre> !pip install tqdm <pre>Looking in indexes: https://pypi.tuna.tsinghua.edu.cn/simple\nRequirement already satisfied: tqdm in c:\\users\\mastermao\\anaconda3\\envs\\mastermaopy311\\lib\\site-packages (4.65.0)\nRequirement already satisfied: colorama in c:\\users\\mastermao\\anaconda3\\envs\\mastermaopy311\\lib\\site-packages (from tqdm) (0.4.6)\n</pre> In\u00a0[2]: Copied! <pre>import tqdm\nimport time\nimport random\n</pre> import tqdm import time import random In\u00a0[3]: Copied! <pre>for i in tqdm.tqdm(range(10)):\n    time.sleep(0.1)\n</pre> for i in tqdm.tqdm(range(10)):     time.sleep(0.1) <pre>100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 10/10 [00:01&lt;00:00,  9.89it/s]\n</pre> In\u00a0[4]: Copied! <pre>out = tqdm.tqdm(['a', 'b', 'c', 'd'])\nfor item in out:\n    time.sleep(0.5)\n    out.set_description(f'processing {item}')\n</pre> out = tqdm.tqdm(['a', 'b', 'c', 'd']) for item in out:     time.sleep(0.5)     out.set_description(f'processing {item}') <pre>processing d: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 4/4 [00:02&lt;00:00,  1.99it/s]\n</pre> In\u00a0[6]: Copied! <pre>with tqdm.trange(10) as t:\n    for i in t:\n        # \u8bbe\u7f6e\u8fdb\u5ea6\u6761\u5de6\u8fb9\u663e\u793a\u7684\u4fe1\u606f\n        t.set_description(f\"GEN {i}\")\n        # \u8bbe\u7f6e\u8fdb\u5ea6\u6761\u53f3\u8fb9\u663e\u793a\u7684\u4fe1\u606f\n        t.set_postfix(loss=random.random(), gen=random.randint(1, 99), str=\"h\", lst=[1, 2])\n        time.sleep(0.1)\n</pre> with tqdm.trange(10) as t:     for i in t:         # \u8bbe\u7f6e\u8fdb\u5ea6\u6761\u5de6\u8fb9\u663e\u793a\u7684\u4fe1\u606f         t.set_description(f\"GEN {i}\")         # \u8bbe\u7f6e\u8fdb\u5ea6\u6761\u53f3\u8fb9\u663e\u793a\u7684\u4fe1\u606f         t.set_postfix(loss=random.random(), gen=random.randint(1, 99), str=\"h\", lst=[1, 2])         time.sleep(0.1) <pre>GEN 9: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 10/10 [00:01&lt;00:00,  9.73it/s, gen=20, loss=0.965, lst=[1, 2], str=h]\n</pre> In\u00a0[7]: Copied! <pre>with tqdm.tqdm(total=100, bar_format=\"{postfix[0]}{postfix[1][value]:&gt;9.3g}\", postfix=[\"Batch\", dict(value=0)]) as t:\n    for i in range(100):\n        time.sleep(0.05)\n        t.postfix[1][\"value\"] = i / 2\n        t.update()\n</pre> with tqdm.tqdm(total=100, bar_format=\"{postfix[0]}{postfix[1][value]:&gt;9.3g}\", postfix=[\"Batch\", dict(value=0)]) as t:     for i in range(100):         time.sleep(0.05)         t.postfix[1][\"value\"] = i / 2         t.update() <pre>Batch     49.5\n</pre> In\u00a0[8]: Copied! <pre>with tqdm.tqdm(total=10) as pbar:\n    for i in range(10):\n        time.sleep(0.1)\n        pbar.update(1)\n</pre> with tqdm.tqdm(total=10) as pbar:     for i in range(10):         time.sleep(0.1)         pbar.update(1) <pre>100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 10/10 [00:01&lt;00:00,  9.88it/s]\n</pre> In\u00a0[9]: Copied! <pre>pbar = tqdm.tqdm(total=10)\nfor i in range(10):\n    time.sleep(0.1)\n    pbar.update(1)\npbar.close()\n</pre> pbar = tqdm.tqdm(total=10) for i in range(10):     time.sleep(0.1)     pbar.update(1) pbar.close() <pre>100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 10/10 [00:01&lt;00:00,  9.88it/s]\n</pre> In\u00a0[10]: Copied! <pre>for i in tqdm.trange(10):\n    time.sleep(0.1)\n</pre> for i in tqdm.trange(10):     time.sleep(0.1) <pre>100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 10/10 [00:01&lt;00:00,  9.87it/s]\n</pre>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/tqdm/#tqdm","title":"\ud83d\ude19 tqdm\u00b6","text":"<p><code>tqdm</code>\u662f\u4e00\u4e2a Python \u5305\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u8fdb\u5ea6\u6761\uff0c\u7528\u4e8e\u5728 Python \u811a\u672c\u4e2d\u663e\u793a\u8fed\u4ee3\u5668\u7684\u8fdb\u5ea6\u3002</p> <p>\u4f7f\u7528<code>pip</code>\u5b89\u88c5\uff1a</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/tqdm/","title":"\u58f9\u4e28\u5e38\u89c1\u7528\u6cd5\u00b6","text":""},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/tqdm/#1","title":"1. \u8fed\u4ee3\u5668\u00b6","text":""},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/tqdm/#2","title":"2. \u624b\u52a8\u4fee\u6539\u8f93\u51fa\u683c\u5f0f\u00b6","text":""},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/tqdm/#3-size","title":"3. \u6307\u5b9a\u66f4\u65b0size\u00b6","text":""},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/tqdm/#4-trangerange","title":"4. \u4f7f\u7528trange\u66ff\u4ee3range\u00b6","text":""},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/uv/","title":"\ud83e\udd20 uv","text":"<p><code>uv</code>\u662fAstral\u56e2\u961f\u7528Rust\u5f00\u53d1\u7684\u4e00\u4e2aPython\u5305\u89e3\u6790\u4e0e\u5b89\u88c5\u5668\u3002</p> <p>\u5b83\u88ab\u8bbe\u8ba1\u4e3a <code>pip</code> \u548c <code>pip-tools</code> \u7684\u76f4\u63a5\u66ff\u4ee3\u54c1\uff0c\u4e0d\u4f7f\u7528\u7f13\u5b58\u65f6\u6bd4\u5b83\u4eec\u5feb 8-10 \u500d\u3002\u4e5f\u53ef\u901a\u8fc7 <code>uv venv</code> \u7528\u4f5c\u865a\u62df\u73af\u5883\u7ba1\u7406\u5668\uff0c\u6bd4 <code>python -m venv</code> \u5feb 80 \u500d\uff0c\u6bd4<code>virtualenv</code> \u5feb 7 \u500d\u3002<sup>1</sup></p> <p>\u4f7f\u7528<code>pip</code>\u5b89\u88c5\uff1a</p> <pre><code>pip install uv\n</code></pre> <p>\u5176\u4ed6\u5b89\u88c5\u65b9\u5f0f\u89c1\u5b98\u65b9\u535a\u5ba2</p>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/uv/#_1","title":"\u58f9\u4e28 \u7b80\u5355\u4f7f\u7528","text":""},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/uv/#1","title":"1. \u5b89\u88c5\u4f9d\u8d56\u5305","text":"<p>\u4ee5<code>numpy</code>\u4e3a\u4f8b\uff1a</p> <pre><code># \u4f7f\u7528pip\npip install numpy\n\n# \u4f7f\u7528uv\nuv pip install numpy\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/uv/#2-requirementstxt","title":"2. \u751f\u6210<code>requirements.txt</code>","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u5b89\u88c5<code>pip-tools</code></p> <pre><code>uv pip install pip-tools\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff0c\u521b\u5efa<code>requirements.in</code>\uff0c\u5982\uff1a</p> requirements.in<pre><code>mkdocs-material\nmkdocs-glightbox\nneoteroi-mkdocs\nmkdocs-jupyter\nmistune\nfonttools\n</code></pre> <p>\u7b2c\u4e09\u6b65\uff0c\u751f\u6210<code>requirements.txt</code></p> <pre><code>uv pip compile requirements.in -o requirements.txt\n</code></pre> \u8f93\u51fa <pre><code>Resolved 85 packages in 24ms\n# This file was autogenerated by uv via the following command:\n#    uv pip compile requirements.in -o requirements.txt\nanyio==4.3.0\n    # via httpx\nasttokens==2.4.1\n    # via stack-data\nattrs==23.2.0\n    # via\n    #   jsonschema\n    #   referencing\nbabel==2.14.0\n    # via mkdocs-material\nbeautifulsoup4==4.12.3\n    # via nbconvert\nbleach==6.1.0\n    # via nbconvert\ncertifi==2024.2.2\n    # via\n    #   httpcore\n    #   httpx\n    #   requests\ncharset-normalizer==3.3.2\n    # via requests\nclick==8.1.7\n    # via\n    #   mkdocs\n    #   neoteroi-mkdocs\ncolorama==0.4.6\n    # via\n    #   click\n    #   ipython\n    #   mkdocs\n    #   mkdocs-material\ncomm==0.2.1\n    # via ipykernel\ndebugpy==1.8.1\n    # via ipykernel\ndecorator==5.1.1\n    # via ipython\ndefusedxml==0.7.1\n    # via nbconvert\nessentials==1.1.5\n    # via essentials-openapi\nessentials-openapi==1.0.9\n    # via neoteroi-mkdocs\nexecuting==2.0.1\n    # via stack-data\nfastjsonschema==2.19.1\n    # via nbformat\nfonttools==4.49.0\nghp-import==2.1.0\n    # via mkdocs\nh11==0.14.0\n    # via httpcore\nhttpcore==1.0.4\n    # via httpx\nhttpx==0.27.0\n    # via neoteroi-mkdocs\nidna==3.6\n    # via\n    #   anyio\n    #   httpx\n    #   requests\nipykernel==6.29.3\n    # via mkdocs-jupyter\nipython==8.22.1\n    # via ipykernel\njedi==0.19.1\n    # via ipython\njinja2==3.1.3\n    # via\n    #   mkdocs\n    #   mkdocs-material\n    #   nbconvert\n    #   neoteroi-mkdocs\njsonschema==4.21.1\n    # via nbformat\njsonschema-specifications==2023.12.1\n    # via jsonschema\njupyter-client==8.6.0\n    # via\n    #   ipykernel\n    #   nbclient\njupyter-core==5.7.1\n    # via\n    #   ipykernel\n    #   jupyter-client\n    #   nbclient\n    #   nbconvert\n    #   nbformat\njupyterlab-pygments==0.3.0\n    # via nbconvert\njupytext==1.16.1\n    # via mkdocs-jupyter\nmarkdown==3.5.2\n    # via\n    #   mkdocs\n    #   mkdocs-material\n    #   pymdown-extensions\nmarkdown-it-py==3.0.0\n    # via\n    #   jupytext\n    #   mdit-py-plugins\n    #   rich\nmarkupsafe==2.1.5\n    # via\n    #   essentials-openapi\n    #   jinja2\n    #   mkdocs\n    #   nbconvert\nmatplotlib-inline==0.1.6\n    # via\n    #   ipykernel\n    #   ipython\nmdit-py-plugins==0.4.0\n    # via jupytext\nmdurl==0.1.2\n    # via markdown-it-py\nmergedeep==1.3.4\n    # via mkdocs\nmistune==3.0.2\n    # via nbconvert\nmkdocs==1.5.3\n    # via\n    #   mkdocs-jupyter\n    #   mkdocs-material\n    #   neoteroi-mkdocs\nmkdocs-glightbox==0.3.7\nmkdocs-jupyter==0.24.6\nmkdocs-material==9.5.12\n    # via mkdocs-jupyter\nmkdocs-material-extensions==1.3.1\n    # via mkdocs-material\nnbclient==0.9.0\n    # via nbconvert\nnbconvert==7.16.1\n    # via mkdocs-jupyter\nnbformat==5.9.2\n    # via\n    #   jupytext\n    #   nbclient\n    #   nbconvert\nneoteroi-mkdocs==1.0.5\nnest-asyncio==1.6.0\n    # via ipykernel\npackaging==23.2\n    # via\n    #   ipykernel\n    #   jupytext\n    #   mkdocs\n    #   nbconvert\npaginate==0.5.6\n    # via mkdocs-material\npandocfilters==1.5.1\n    # via nbconvert\nparso==0.8.3\n    # via jedi\npathspec==0.12.1\n    # via mkdocs\nplatformdirs==4.2.0\n    # via\n    #   jupyter-core\n    #   mkdocs\nprompt-toolkit==3.0.43\n    # via ipython\npsutil==5.9.8\n    # via ipykernel\npure-eval==0.2.2\n    # via stack-data\npygments==2.17.2\n    # via\n    #   ipython\n    #   mkdocs-jupyter\n    #   mkdocs-material\n    #   nbconvert\n    #   rich\npymdown-extensions==10.7\n    # via mkdocs-material\npython-dateutil==2.9.0.post0\n    # via\n    #   ghp-import\n    #   jupyter-client\npywin32==306\n    # via jupyter-core\npyyaml==6.0.1\n    # via\n    #   essentials-openapi\n    #   jupytext\n    #   mkdocs\n    #   pymdown-extensions\n    #   pyyaml-env-tag\npyyaml-env-tag==0.1\n    # via mkdocs\npyzmq==25.1.2\n    # via\n    #   ipykernel\n    #   jupyter-client\nreferencing==0.33.0\n    # via\n    #   jsonschema\n    #   jsonschema-specifications\nregex==2023.12.25\n    # via mkdocs-material\nrequests==2.31.0\n    # via mkdocs-material\nrich==13.7.1\n    # via neoteroi-mkdocs\nrpds-py==0.18.0\n    # via\n    #   jsonschema\n    #   referencing\nsix==1.16.0\n    # via\n    #   asttokens\n    #   bleach\n    #   python-dateutil\nsniffio==1.3.1\n    # via\n    #   anyio\n    #   httpx\nsoupsieve==2.5\n    # via beautifulsoup4\nstack-data==0.6.3\n    # via ipython\ntinycss2==1.2.1\n    # via nbconvert\ntoml==0.10.2\n    # via jupytext\ntornado==6.4\n    # via\n    #   ipykernel\n    #   jupyter-client\ntraitlets==5.14.1\n    # via\n    #   comm\n    #   ipykernel\n    #   ipython\n    #   jupyter-client\n    #   jupyter-core\n    #   matplotlib-inline\n    #   nbclient\n    #   nbconvert\n    #   nbformat\nurllib3==2.2.1\n    # via requests\nwatchdog==4.0.0\n    # via mkdocs\nwcwidth==0.2.13\n    # via prompt-toolkit\nwebencodings==0.5.1\n    # via\n    #   bleach\n    #   tinycss2\n</code></pre> <p>\u6216\u4f7f\u7528<code>pyproject.toml</code>\u751f\u6210\u4f9d\u8d56\u6587\u4ef6\uff1a</p> <pre><code>uv pip compile pyproject.toml -o requirements.txt\n</code></pre> <p>\u540c\u6b65\u5df2\u7ecf\u9501\u5b9a\u7684\u4f9d\u8d56\uff1a</p> <pre><code>uv pip sync requirements.txt\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/0%EF%B8%8F%E2%83%A3%20%E6%89%A9%E5%B1%95%E5%BA%93/uv/#_2","title":"\u8d30\u4e28\u95ee\u9898","text":"<ol> <li>\u4f9d\u8d56\u5305\u5b89\u88c5\u4f7f\u7528\u9ed8\u8ba4\u6e90\uff0c<code>pip</code>\u7684\u6e90\u914d\u7f6e\u5bf9<code>uv</code>\u4e0d\u9002\u7528\u3002\u8fd9\u4e2a\u539f\u56e0\u5bfc\u81f4\u6211\u5fc5\u987b\u6302\u4ee3\u7406\u624d\u80fd\u4f7f\u7528</li> </ol> <ol> <li> <p>astral.sh\uff0c@charliermarsh\uff0cuv: Python packaging in Rust \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/","title":"\ud83c\udf88 Python/1\ufe0f\u20e3 Rye\u76f8\u5173","text":"<ul> <li> <p>Rye\u4f7f\u7528\u6307\u5357</p> <p> Getting started</p> </li> <li> <p>Rye\u8e29\u5751\u8bb0\u5f55</p> <p> Getting started</p> </li> <li> <p>Rye\u5b89\u88c5Jupyter</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/A/","title":"\ud83e\udd4e Rye\u4f7f\u7528\u6307\u5357","text":"<p>\u201cRye \u662f\u4e00\u4e2a\u5168\u9762\u7684 Python \u9879\u76ee\u548c\u5305\u7ba1\u7406\u89e3\u51b3\u65b9\u6848\u3002\u201d\u2014\u2014Rye\u5b98\u7f51</p> <p>\u4e2a\u4eba\u4f7f\u7528rye\u4e3b\u8981\u6d89\u53ca\u4e24\u4e2a\u7528\u9014\uff1a</p> <ol> <li>\u521b\u5efa\u7b97\u6cd5\u5e93\u72ec\u7acb\u5de5\u7a0b\u3002\u8fd9\u9700\u8981\u660e\u786e\u5404\u4f9d\u8d56\u9879\u7684\u7248\u672c\uff0c\u4e14\u4e0e\u5176\u4ed6\u9879\u76ee\u9694\u79bb\uff0c\u4ee5\u4fdd\u8bc1\u6700\u5c11\u7684\u989d\u5916\u4f9d\u8d56\u3002</li> <li>\u4f5c\u4e3a\u865a\u62df\u73af\u5883\uff0c\u4f9b\u5404\u4e2a\u5c0f\u9879\u76ee\u4f7f\u7528\u3002</li> </ol>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/A/#_1","title":"\u58f9\u4e28\u60c5\u5883\u4e00\uff1a\u521b\u5efa\u72ec\u7acb\u5de5\u7a0b<sup>1</sup><sup>2</sup>","text":"<p>\u521b\u5efa\u4e00\u4e2a\u72ec\u7acb\u7684\u5de5\u7a0b\uff0c\u5982\u65b0\u5efa\u4e00\u4e2a\u7b97\u6cd5\u5e93\u3001\u65b0\u5efa\u4e00\u4e2a\u5927\u578b\u5de5\u7a0b\u3002\u8fd9\u91cc\u7684\u4f9d\u8d56\u9879\u907f\u514d\u4e0e\u5176\u4ed6\u5de5\u7a0b\u901a\u7528</p>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/A/#_2","title":"\u7b2c\u4e00\u6b65\uff0c\u521d\u59cb\u5316\u9879\u76ee","text":"<pre><code>rye init my_project\n</code></pre> <p>\u8fdb\u5165\u76ee\u5f55\uff0c<code>cd my_project</code></p>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/A/#python","title":"\u7b2c\u4e8c\u6b65\uff0c\u6307\u5b9aPython\u7248\u672c","text":"<p>\u4ee5Python3.11\u4e3a\u4f8b\uff1a</p> <pre><code>rye pin 3.11\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/A/#_3","title":"\u7b2c\u4e09\u6b65\uff0c\u6dfb\u52a0\u4f9d\u8d56\u9879","text":"<p>\u4ee5<code>numpy</code>\u3001<code>pandas</code>\u4e3a\u4f8b\uff1a</p> <pre><code>rye add numpy pandas\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/A/#_4","title":"\u7b2c\u56db\u6b65\uff0c\u540c\u6b65\u4f9d\u8d56\u9879","text":"<p>\u5c06\u5b89\u88c5Python\u548c\u4f9d\u8d56\u5305\u7b49</p> <pre><code>rye sync\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/A/#_5","title":"\u7b2c\u4e94\u6b65\uff0c\u5220\u9664\u4f9d\u8d56","text":"<p>\u4ee5<code>numpy</code>\u4e3a\u4f8b\uff1a\uff08\u4e4b\u540e\u8981\u6267\u884c<code>rye sync</code>\u4ee5\u540c\u6b65\u4fee\u6539\uff09</p> <pre><code>rye remove numpy\nrye sync\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/A/#_6","title":"\u7b2c\u516d\u6b65\uff0c\u521b\u5efa\u5de5\u7a0b\u3002","text":"<p>\u5728<code>src/my_project</code>\u4e0b\u5efa\u7acb\u5de5\u7a0b\uff0c\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a</p> <pre><code>my_project\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 dist\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 my_project-0.1.0-py3-none-any.whl\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 my_project-0.1.0.tar.gz\n\u251c\u2500\u2500 pyproject.toml\n\u251c\u2500\u2500 requirements-dev.lock\n\u251c\u2500\u2500 requirements.lock\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 my_project\n        \u251c\u2500\u2500 Filtering\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 _hampel.py\n        \u251c\u2500\u2500 __init__.py\n        \u2514\u2500\u2500 config.py\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/A/#_7","title":"\u7b2c\u4e03\u6b65\uff0c\u6253\u5305","text":"<p>\u751f\u6210\u53ef\u53d1\u5e03\u7684wheel\u6587\u4ef6\u3002\u5c06\u4f1a\u5728<code>dist</code>\u4e0b\u521b\u5efa<code>.whl</code>\u548c<code>.tar.gz</code>\u6587\u4ef6\uff0c\u5982\u4e0a\u8ff0\u76ee\u5f55\u7ed3\u6784\u6240\u793a</p> <pre><code>rye build\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/A/#pypi","title":"\u7b2c\u516b\u6b65\uff0c\u4e0a\u4f20PyPi","text":"<pre><code>rye publish\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/A/#_8","title":"\u8d30\u4e28\u60c5\u5883\u4e8c\uff1a\u4f5c\u4e3a\u865a\u62df\u73af\u5883","text":""},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/A/#_9","title":"\u7b2c\u4e00\u6b65\uff0c\u521b\u5efa\u865a\u62df\u73af\u5883","text":"<p>\u65b0\u5efa\u73af\u5883\u540c\u4e0a\u8ff0\u64cd\u4f5c\uff08\u5efa\u8bae\u653e\u5728\u7528\u6237\u6587\u4ef6\u5939\u4e0b\u5e76\u6ce8\u660ePython\u7248\u672c\uff09</p> <pre><code># \u521d\u59cb\u5316\nrye init mao_py311\n\n# \u8fdb\u5165\u9879\u76ee\u76ee\u5f55\ncd mao_py311\n\n# \u8bbe\u7f6ePython\u7248\u672c\nrye pin 3.11\n\n# \u6dfb\u52a0\u4f9d\u8d56\u9879\nrye add numpy\n\n# \u540c\u6b65\u4f9d\u8d56\nrye sync\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/A/#pycharm","title":"\u7b2c\u4e8c\u6b65\uff0cPyCharm\u8c03\u7528","text":"<p>\u5728Pycharm\u4e2d\uff0c\u53f3\u4e0b\u89d2 \u2014\u2014 \u6dfb\u52a0\u65b0\u7684\u89e3\u91ca\u5668 \u2014\u2014 \u6dfb\u52a0\u672c\u5730\u89e3\u91ca\u5668 \u2014\u2014 Virtualenv\u73af\u5883 \u2014\u2014 \u73b0\u6709 \u2014\u2014 \u9009\u62e9\u4e0a\u8ff0<code>~/mao_py311/.venv/Scripts/python.exe</code></p> <p>\u81f3\u6b64\uff0c\u53ef\u4ee5\u5728\u591a\u4e2a\u9879\u76ee\u4e2d\u4f7f\u7528\u540c\u4e00\u865a\u62df\u73af\u5883</p>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/A/#_10","title":"\u7b2c\u4e09\u6b65\uff0c\u6dfb\u52a0\u672c\u5730\u7b97\u6cd5\u5e93","text":"<p>\u540cRye\u6587\u6863Dependencies \u2014\u2014 Git / Local Dependencies</p> <p>\u6dfb\u52a0\u672c\u5730\u6216git\u4f9d\u8d56\u9879\u65f6\uff0c\u9700\u8981\u4f20\u9012\u5176\u4ed6\u53c2\u6570\uff0c\u5982<code>--path</code>\u3001<code>--git</code></p> <pre><code>rye add my_project --path path/to/my_project\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/A/#_11","title":"\u53c2\u8003\uff1a","text":"<ol> <li> <p>Rye\uff0c\u5b98\u65b9\u6587\u6863 \u21a9</p> </li> <li> <p>\u4e2a\u4eba\u535a\u5ba2\uff0c@Yunfeng\uff0cRye:\u4e00\u4e2a\u5b9e\u9a8c\u6027\u8d28\u7684Python\u5305\u7ba1\u7406\u7cfb\u7edf \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/B/","title":"\ud83e\udde9 Rye\u8e29\u5751\u8bb0\u5f55","text":""},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/B/#removeadd","title":"\u58f9\u4e28\u672c\u5730\u7b97\u6cd5\u5e93\u66f4\u65b0\u540e\uff0c\u4f7f\u7528<code>remove</code>\u548c<code>add</code>\u4e0d\u80fd\u751f\u6548","text":"<p>\u3010\u95ee\u9898\u63cf\u8ff0\u3011</p> <p>\u672c\u5730\u7b97\u6cd5\u5e93\u66f4\u65b0\u540e\uff0c\u4f7f\u7528<code>remove</code>\u6307\u4ee4\u79fb\u9664\u7b97\u6cd5\u5e93\uff0c\u518d\u91cd\u65b0<code>add</code>\uff0c\u53d1\u73b0\u7b97\u6cd5\u5e93\u6ca1\u6709\u66f4\u65b0</p> <p>\u3010\u89e3\u51b3\u65b9\u6cd5\u3011</p> <p>\u9700\u8981\u5728\u79fb\u9664\u7b97\u6cd5\u5e93\u540e**\u6267\u884c\u540c\u6b65**\uff0c\u518d\u91cd\u65b0\u6dfb\u52a0</p> <pre><code># \u7b2c\u4e00\u6b65\uff0c\u79fb\u9664\u7b97\u6cd5\u5e93\nrye remove my_project\n# \u7b2c\u4e8c\u6b65\uff0c\u6267\u884c\u540c\u6b65\nrye sync\n# \u7b2c\u4e09\u6b65\uff0c\u91cd\u65b0\u5b89\u88c5\u7b97\u6cd5\u5e93\nrye add my_project --path path/to/my_project\n# \u7b2c\u56db\u6b65\uff0c\u6267\u884c\u540c\u6b65\nrye sync\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/B/#rye","title":"\u8d30\u4e28\u7f51\u7edc\u4ee3\u7406\u539f\u56e0\u5bfc\u81f4Rye\u5b89\u88c5\u4e0d\u4e0a","text":"<p>\u3010\u95ee\u9898\u63cf\u8ff0\u3011</p> <p>\u7531\u4e8e\u7f51\u7edc\u4ee3\u7406\u539f\u56e0\uff0c\u65e0\u6cd5\u5b89\u88c5Rye\uff0c\u663e\u793a\u62f7\u8d1dgit\u4ed3\u5e93\u8fde\u63a5\u8d85\u65f6</p> <p>\u3010\u89e3\u51b3\u65b9\u6cd5 1\u3011</p> <p>\u4ece\u5176\u4ed6Windows\u7cfb\u7edf\u4e0a\u5c06<code>~/.rye</code>\u6587\u4ef6\u5939\u62f7\u8d1d\uff0c\u7136\u540e\u4fee\u6539\u4ee3\u7406\uff08<code>~/.rye/config.toml</code>\uff09\uff1a</p> ~/.rye/config.toml<pre><code>[proxy]\n# the proxy to use for HTTP (overridden by the http_proxy environment variable)\nhttp = \"http://example.com:8080\"\n# the proxy to use for HTTPS (overridden by the https_proxy environment variable)\nhttps = \"http://example.com:8080\"\n</code></pre> <p>\u7136\u540e\u6267\u884cRye\u5347\u7ea7\u547d\u4ee4</p> <pre><code>rye self update\n</code></pre> <p>\u7136\u540e\u5c06<code>~/.rye/shims</code>\u8def\u5f84\u6dfb\u52a0\u5230\u7cfb\u7edf\u73af\u5883\u53d8\u91cf</p> <p>\u3010\u89e3\u51b3\u65b9\u6cd5 2\u3011\uff08\u9002\u7528\u4e8eLinux\uff09</p> <p>\u7b2c\u4e00\u6b65\uff0c\u8bbe\u7f6e\u4ee3\u7406</p> <pre><code>export http_proxy='http://&lt;UserName&gt;:&lt;Password&gt;@&lt;IP&gt;:&lt;PORT&gt;'\nexport https_proxy='http://&lt;UserName&gt;:&lt;Password&gt;@&lt;IP&gt;:&lt;PORT&gt;'\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff0c\u6267\u884c<code>./rye-x86_64-linux</code>\uff0c\u6b63\u5e38\u5b89\u88c5</p>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/B/#rye-build","title":"\u53c1\u4e28<code>rye build</code>\u62a5\u9519","text":"<p>\u3010\u95ee\u9898\u63cf\u8ff0\u3011</p> <p>\u6267\u884c<code>rye build</code>\u547d\u4ee4\uff0c\u663e\u793a\u8fde\u63a5\u8d85\u65f6</p> <p>\u3010\u95ee\u9898\u89e3\u6790\u3011</p> <p>\u867d\u7136\u4f7f\u7528\u4e86<code>uv</code>\u66ff\u4ee3<code>pip</code>\uff0c\u4f46\u5728<code>rye build</code>\u65f6\u8fd8\u662f\u4f9d\u8d56<code>pip</code>\u547d\u4ee4\uff0c\u7531\u4e8e<code>pip</code>\u6e90\u7684\u539f\u56e0\uff0c\u65e0\u6cd5\u76f4\u63a5\u4f7f\u7528</p> <p>\u3010\u89e3\u51b3\u65b9\u6cd5 1\u3011</p> <p>\u4fee\u6539\u5168\u5c40<code>pip</code>\u6e90\uff1a\u4f4d\u4e8e<code>~/pip/pip.conf</code></p> <p>\u3010\u89e3\u51b3\u65b9\u6cd5 2\u3011</p> <p>\u4fee\u6539Rye\u7684<code>config.toml</code>\uff0c\u6dfb\u52a0\u6e90</p> ~/.rye/config.toml<pre><code>[[sources]]\nname = \"example\"\nurl = \"https://example.cn/simple\"\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/B/#_1","title":"\u8086\u4e28\u6dfb\u52a0\u4e86\u5f03\u7528\u7684\u5e93\uff0c\u5bfc\u81f4\u540e\u7eed\u547d\u4ee4\u4e00\u76f4\u62a5\u9519","text":"<p>\u3010\u95ee\u9898\u590d\u73b0\u3011</p> <pre><code># python=3.12\nrye add distribute\n\n# Added distribute&gt;=0.7.3 as regular dependency\n# Reusing already existing virtualenv\n# Generating production lockfile: /home/mao/py312/requirements.lock\n# error: Failed to download and build: distribute==0.7.3\n#   Caused by: Failed to build: distribute==0.7.3\n#   Caused by: Build backend failed to determine metadata through `prepare_metadata_for_build_wheel`:\n# --- stdout:\n# \n# --- stderr:\n# usage: setup.py [global_opts] cmd1 [cmd1_opts] [cmd2 [cmd2_opts] ...]\n#    or: setup.py --help [cmd1 cmd2 ...]\n#    or: setup.py --help-commands\n#    or: setup.py cmd --help\n#\n# error: invalid command 'dist_info'\n# ---\n# error: could not write production lockfile for project\n#\n# Caused by:\n#     failed to generate lockfile\n</code></pre> <p>\u5728\u8fd9\u4e4b\u540e\uff0c\u4f7f\u7528\u5176\u4ed6\u547d\u4ee4\u4f9d\u65e7\u62a5\u540c\u6837\u7684\u9519</p> <p>\u3010\u95ee\u9898\u89e3\u6790\u3011</p> <p>\u5728Python3.12\u4e2d\uff0cdistribute\u5e93\u5df2\u7ecf\u5f03\u7528\uff0c\u4f46\u662f\u4e0a\u8ff0<code>rye add distribute</code>\u7684\u64cd\u4f5c\u4f9d\u65e7\u4f1a\u6dfb\u52a0\u8fd9\u4e2a\u4f9d\u8d56</p> <p>\u3010\u4fee\u590d\u65b9\u6cd5\u3011</p> <p>\u624b\u52a8\u4fee\u6539<code>pyproject.toml</code>\u6587\u4ef6</p> <pre><code>nano pyproject.toml\n</code></pre> <p>\u5728<code>[project]</code>\u4e0b<code>dependencies</code>\u4e2d\uff0c\u5220\u9664<code>\"distribute&gt;=0.7.3\"</code>\uff0c\u7136\u540e\u91cd\u65b0\u6267\u884c\u540c\u6b65\u3002</p>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/B/#cmake","title":"\u4f0d\u4e28CMake\u914d\u7f6e\u9519\u8bef\u5bfc\u81f4\u65e0\u6cd5\u5b89\u88c5\u5e93","text":"<p>\u3010\u95ee\u9898\u590d\u73b0\u3011</p> <pre><code>mastermao@MasterMao:~/projects/test_py311$ rye add pycaret\nInitializing new virtualenv in /home/mastermao/projects/test_py311/.venv\nPython version: cpython@3.12.3\nAdded pycaret&gt;=3.3.2 as regular dependency\nReusing already existing virtualenv\nGenerating production lockfile: /home/mastermao/projects/test_py311/requirements.lock\nGenerating dev lockfile: /home/mastermao/projects/test_py311/requirements-dev.lock\nInstalling dependencies\nResolved 98 packages in 75ms\n   Built test-py311 @ file:///home/mastermao/projects/test_py311\nerror: Failed to prepare distributions\n  Caused by: Failed to fetch wheel: lightgbm==4.4.0\n  Caused by: Failed to build: `lightgbm==4.4.0`\n  Caused by: Build backend failed to build wheel through `build_wheel()` with exit status: 1\n--- stdout:\n*** scikit-build-core 0.9.8 using CMake 3.30.0 (wheel)\n*** Configuring CMake...\nloading initial cache file /tmp/tmpxha8pri3/build/CMakeInit.txt\n-- Configuring incomplete, errors occurred!\n--- stderr:\nCMake Error at /home/mastermao/.cache/uv/builds-v0/.tmpGTUObH/lib/python3.12/site-packages/cmake/data/share/cmake-3.30/Modules/CMakeDetermineCCompiler.cmake:49 (message):\n  Could not find compiler set in environment variable CC:\n\n  clang -pthread.\nCall Stack (most recent call first):\n  CMakeLists.txt:36 (project)\n\n\nCMake Error: CMAKE_C_COMPILER not set, after EnableLanguage\nCMake Error: CMAKE_CXX_COMPILER not set, after EnableLanguage\n\n*** CMake configuration failed\n---\nerror: Installation of dependencies failed in venv at /home/mastermao/projects/test_py311/.venv. uv exited with status: exit status: 2\n</code></pre> <p>\u3010\u89e3\u51b3\u65b9\u6cd5\u3011</p> <p>\u4fee\u6539<code>~/.bashrc</code>\uff0c\u6dfb\u52a0\uff1a</p> <pre><code>export CXX=/usr/bin/g++\nexport CC=/usr/bin/gcc\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/C/","title":"\ud83d\udd2b Rye\u5b89\u88c5Jupyter","text":"<p>\u76ee\u6807\uff1aUbuntu\u4f7f\u7528Rye\u865a\u62df\u73af\u5883\u5b89\u88c5Jupyter\uff0c\u5e76\u5728Windows\u7aef\u5b9e\u73b0\u8fdc\u7a0b\u8bbf\u95ee</p> <p>\u524d\u63d0\u73af\u5883\u53ca\u8def\u5f84\uff1a</p> <pre><code># rye\u5b89\u88c5\u5728\u7528\u6237\u76ee\u5f55\u4e0b\uff1a\n~/.rye\n\n# \u7528\u6237\u76ee\u5f55\u4e0b\u521b\u5efa\u865a\u62df\u73af\u5883`mao_py311`\uff1a\n~/mao_py311\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/C/#jupyter","title":"\u58f9\u4e28\u5b89\u88c5Jupyter<sup>1</sup>","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u5b89\u88c5Jupyter\uff1a</p> <pre><code># \u5b89\u88c5notebook\nrye add notebook\n\n# or\u5b89\u88c5jupyter lab\nrye add jupyterlab\n\n# \u66f4\u65b0\u73af\u5883\nrye sync\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff0c\u6fc0\u6d3b\u865a\u62df\u73af\u5883\uff1a</p> <pre><code>. .venv/Scripts/activate\n</code></pre> <p>\u7b2c\u4e09\u6b65\uff0c\u542f\u52a8jupyter\uff1a</p> <pre><code># \u542f\u52a8notebook\njupyter notebook\n\n# \u542f\u52a8jupyter lab\njupyter lab\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/C/#_1","title":"\u8d30\u4e28\u914d\u7f6e\u8fdc\u7a0b\u8bbf\u95ee<sup>2</sup>","text":""},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/C/#jupyter-lab","title":"\u7b2c\u4e00\u6b65\uff0c\u914d\u7f6eJupyter Lab\u8bbf\u95ee\u5bc6\u7801","text":"<p>\u6fc0\u6d3bjupyter\u73af\u5883\u5e76\u542f\u52a8ipython</p> <pre><code>cd ~/mao_py311\n# \u6fc0\u6d3b\u73af\u5883\n. .venv/bin/activate\n# \u6253\u5f00IPython\nipython\n</code></pre> <p>\u751f\u6210hash\u5bc6\u7801</p> <pre><code>&gt;&gt;&gt; from jupyter_server.auth import passwd\n&gt;&gt;&gt; passwd()\n# \u6839\u636e\u63d0\u793a\u8f93\u5165\u5bc6\u7801\uff0c\u4f1a\u5f97\u5230\u7c7b\u4f3c\u4e0b\u9762\u7684\u79d8\u94a5\uff0c\u5c06\u79d8\u94a5\u8bb0\u5f55\n# 'argon2:$argon2id$v=19$m=10240,t=10,p=8$CNeWCHTKLLYWMefcQf92YQ$UtKecua0NRgBiv554kegnT6lHPP57ccOvT5mlLibG9o'\n</code></pre> <p>\u8f93\u5165<code>exit()</code>\u9000\u51faipython\u73af\u5883</p>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/C/#_2","title":"\u7b2c\u4e8c\u6b65\uff0c\u751f\u6210\u914d\u7f6e\u6587\u4ef6","text":"<p>\u540c\u6837\u5728\u4e0a\u8ff0\u8def\u5f84\u548cjupyter\u73af\u5883\u4e0b</p> <pre><code>jupyter-lab --generate-config\n# \u8fd4\u56de\uff1aWriting default config to: /home/mao/.jupyter/jupyter_lab_config.py\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/C/#_3","title":"\u7b2c\u4e09\u6b65\uff0c\u4fee\u6539\u914d\u7f6e\u6587\u4ef6","text":"<p>\u4fee\u6539\u4e0a\u8ff0\u914d\u7f6e\u6587\u4ef6</p> <pre><code>sudo nano ~/.jupyter/jupyter_lab_config.py\n</code></pre> <pre><code># \u5141\u8bb8\u8fdc\u7a0b\u8bbf\u95ee\nc.ServerApp.allow_remote_access = True\nc.ServerApp.ip = '*'\n\n# \u542f\u52a8\u65f6\u4e0d\u81ea\u52a8\u6253\u5f00\u6d4f\u89c8\u5668 \nc.ServerApp.open_browser = False\nc.LabServerApp.open_browser = False\nc.ExtensionApp.open_browser = False\nc.LabApp.open_browser = False\n\nc.ServerApp.password_required = True\n# \u6dfb\u52a0\u521a\u521a\u751f\u6210\u7684\u5bc6\u94a5\nc.ServerApp.password = 'argon2:$argon2id$v=19$m=10240,t=10,p=8$CNeWCHTKLLYWMefcQf92YQ$UtKecua0NRgBiv554kegnT6lHPP57ccOvT5mlLibG9o'\n\n# \u4fee\u6539\u7aef\u53e3\u53f7(\u53ef\u9009)\nc.ServerApp.port = 8880\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/C/#_4","title":"\u7b2c\u56db\u6b65\uff0c\u9a8c\u8bc1","text":"<p>\u542f\u52a8jupyter lab</p> <pre><code># \u542f\u7528\u865a\u62df\u73af\u5883\n. ~/mao_py311/.venv/bin/activate\n\n# \u542f\u7528jupyter lab\njupyter lab\n</code></pre> <p>\u7136\u540e\uff0c\u5728\u672c\u5730Windows\u4e0a\u6253\u5f00\u76ee\u6807\u670d\u52a1\u5668\u5730\u5740\uff1a<code>xx.xx.xx.xx:8880</code>\uff0c\u8f93\u5165\u5728ipython\u4e2d\u8bbe\u7f6e\u7684\u660e\u6587\u5bc6\u7801\u5373\u53ef\u4f7f\u7528</p>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/C/#_5","title":"\u53c1\u4e28\u8e29\u5751\u6307\u5357","text":""},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/C/#1-jupyter-lab","title":"1. \u865a\u62df\u73af\u5883\u65e0\u6cd5\u76f4\u63a5\u4f7f\u7528jupyter lab\u3010\u95ee\u9898\u5df2\u8fc7\u671f\u3011","text":"<p>\u95ee\u9898\u63cf\u8ff0\uff1a</p> <pre><code>(mao-py311) mao@pekshcsitd33451:~/Project/009_PWV/EP02_mao$ jupyter lab\n\nCommand 'jupyter' not found, but can be installed with:\n</code></pre> <p>\u95ee\u9898\u89e3\u6790\uff1a\u6ca1\u6709\u6309\u7167<code>--include-dep</code>\u65b9\u6cd5\u5b89\u88c5jupyter\uff0c\u5bfc\u81f4<code>jupyter</code>\u547d\u4ee4\u6ca1\u6709\u6dfb\u52a0\u5230<code>~/.rye/shims</code></p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u5378\u8f7d\u91cd\u88c5</p> <pre><code>rye uninstall jupyter\nrye install jupyter --include-dep jupyter-core\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/C/#2","title":"2. \u6fc0\u6d3b\u865a\u62df\u73af\u5883\u5931\u8d25","text":"<p>\u95ee\u9898\u63cf\u8ff0\uff1a</p> <pre><code>PS C:\\Users\\Artmallo\\py311&gt; . .\\.venv\\Scripts\\activate\n. : \u65e0\u6cd5\u52a0\u8f7d\u6587\u4ef6 C:\\Users\\Artmallo\\py311\\.venv\\Scripts\\activate.ps1\uff0c\u56e0\u4e3a\u5728\u6b64\u7cfb\u7edf\u4e0a\u7981\u6b62\u8fd0\u884c\u811a\u672c\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 https:/go.microsoft.com/fwlink/?LinkID=135170 \u4e2d\u7684 about_Execution_Policies\u3002\n</code></pre> <p>\u95ee\u9898\u89e3\u6790\uff1aWindows\u4e2d\u8fd0\u884c<code>activate.bat</code>\u4f1a\u5728\u540c\u7ea7\u76ee\u5f55\u751f\u6210<code>activate.ps1</code>\uff0cPowerShell\u9ed8\u8ba4\u4e0d\u5141\u8bb8\u6267\u884c<code>*.ps1</code>\u811a\u672c</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a</p> <p>\u7b2c\u4e00\u6b65\uff1a\u7ba1\u7406\u5458\u6253\u5f00PowerShell</p> <p>\u7b2c\u4e8c\u6b65\uff1a</p> <pre><code>Set-ExecutionPolicy RemoteSigned\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/1%EF%B8%8F%E2%83%A3%20Rye%E7%9B%B8%E5%85%B3/C/#_6","title":"\u53c2\u8003\uff1a","text":"<ol> <li> <p>Rye\uff0c\u5b98\u65b9\u6587\u6863 \u21a9</p> </li> <li> <p>\u4e00\u4e00\u98ce\u548c\u6a58's\u7b14\u8bb0\uff0c@\u4e00\u4e00\u98ce\u548c\u6a58\uff0cUbuntu\u8bbe\u7f6eJupyter Lab\u8fdc\u7a0b\u8bbf\u95ee \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20Python/2%EF%B8%8F%E2%83%A3%20Conda%E7%9B%B8%E5%85%B3/","title":"\ud83c\udf88 Python/2\ufe0f\u20e3 Conda\u76f8\u5173","text":"<ul> <li> <p>Anaconda\u5347\u7ea7</p> <p> Getting started</p> </li> <li> <p>Anaconda\u6362\u6e90</p> <p> Getting started</p> </li> <li> <p>Conda\u5e38\u7528\u64cd\u4f5c</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%88%20Python/2%EF%B8%8F%E2%83%A3%20Conda%E7%9B%B8%E5%85%B3/A/","title":"\ud83c\udfc7 Anaconda\u5347\u7ea7","text":"<p>\u5b89\u88c5\u6700\u65b0Python\u7248\u672c\u7684\u865a\u62df\u73af\u5883\u9700\u8981\u5148\u5347\u7ea7conda\u548cAnaconda</p> <p>\u7b2c\u4e00\u6b65\uff0c\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u542f\u52a8Anaconda Prompt</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u5347\u7ea7Conda</p> <pre><code>conda update conda\n</code></pre> <p></p> <p>\u7b2c\u4e09\u6b65\uff0c\u5347\u7ea7Anaconda</p> <pre><code>conda update anaconda\n</code></pre> <p></p> <p>\u7b2c\u56db\u6b65\uff0c\u66f4\u65b0\u6240\u6709\u5305</p> <pre><code>conda update --all\n</code></pre> <p></p>"},{"location":"%F0%9F%8E%88%20Python/2%EF%B8%8F%E2%83%A3%20Conda%E7%9B%B8%E5%85%B3/B/","title":"\ud83e\udeb5 Anaconda\u6362\u6e90","text":"<p>\u540c\u65f6\u9002\u7528\u4e8eWindows\u3001Linux</p> <p>\u7b2c\u4e00\u6b65\uff0c\u7528\u6237\u6587\u4ef6\u5939\u4e0b\u65b0\u5efa<code>.condarc</code>\uff0c\u6216\u6267\u884c\uff1a</p> <pre><code>conda config --set show_channel_urls yes\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff0c\u4fee\u6539<code>.condarc</code></p> <pre><code>channels:\n  - defaults\nshow_channel_urls: true\ndefault_channels:\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2\ncustom_channels:\n  conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  pytorch-lts: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n</code></pre> <p>\u7b2c\u4e09\u6b65\uff0c\u6e05\u9664\u7d22\u5f15</p> <pre><code>conda clean -i\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/2%EF%B8%8F%E2%83%A3%20Conda%E7%9B%B8%E5%85%B3/C/","title":"\ud83c\udfc8 Conda\u5e38\u7528\u64cd\u4f5c","text":""},{"location":"%F0%9F%8E%88%20Python/2%EF%B8%8F%E2%83%A3%20Conda%E7%9B%B8%E5%85%B3/C/#1","title":"1. \u5e38\u7528\u64cd\u4f5c","text":"<p>\u67e5\u770b\u7248\u672c</p> <pre><code>conda -V\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/2%EF%B8%8F%E2%83%A3%20Conda%E7%9B%B8%E5%85%B3/C/#2-conda","title":"2. Conda\u65b0\u5efa\u73af\u5883","text":"<p>\u4ee5Python 3.11\u4e3a\u4f8b\uff1a</p> <pre><code>conda create -n MasterMao311 python=3.11\n</code></pre> <p>\u6fc0\u6d3b\u865a\u62df\u73af\u5883</p> <pre><code>conda activate MasterMao311\n</code></pre> <p>\u9000\u51fa\u865a\u62df\u73af\u5883</p> <pre><code>conda deactivate\n</code></pre> \u53d6\u6d88\u81ea\u52a8\u6fc0\u6d3bconda\u73af\u5883\uff08\u4e0d\u63a8\u8350\uff09 <p>\u5b89\u88c5Anaconda\u540e\uff0c\u6bcf\u6b21\u542f\u52a8\u7ec8\u7aef\u90fd\u4f1a\u81ea\u52a8\u8fdb\u5165base\u73af\u5883\u3002</p> <p>\u6bcf\u6b21\u624b\u52a8\u9000\u51faconda\uff1a</p> <pre><code>conda deactivate\n</code></pre> <p>\u4e0a\u8ff0\u547d\u4ee4\u9700\u8981\u6bcf\u6b21\u6267\u884c\uff0c\u53ef\u6dfb\u52a0\u914d\u7f6e\uff1a</p> <pre><code>conda config --set auto_activate_base false\n</code></pre> <p>\u8fdb\u5165conda\u73af\u5883\u5bf9\u6b63\u5e38\u64cd\u4f5c\u65e0\u5f71\u54cd\uff0c\u6240\u4ee5\u6ca1\u5fc5\u8981\u53d6\u6d88\u81ea\u52a8\u6fc0\u6d3bconda</p>"},{"location":"%F0%9F%8E%88%20Python/3%EF%B8%8F%E2%83%A3%20pip%E7%9B%B8%E5%85%B3/","title":"\ud83c\udf88 Python/3\ufe0f\u20e3 pip\u76f8\u5173","text":"<ul> <li> <p>pip\u5e38\u7528\u547d\u4ee4</p> <p> Getting started</p> </li> <li> <p>pip\u6362\u6e90</p> <p> Getting started</p> </li> <li> <p>pip\u5347\u7ea7\u7b2c\u4e09\u65b9\u5e93</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%88%20Python/3%EF%B8%8F%E2%83%A3%20pip%E7%9B%B8%E5%85%B3/A/","title":"\u26c4 pip\u5e38\u7528\u547d\u4ee4","text":"<p>\u67e5\u770bpip\u6e90\uff1a</p> <pre><code>pip config list\n</code></pre> <p>\u66f4\u65b0\u6e90\uff1a</p> <pre><code>pip install update\n</code></pre> <p>\u5347\u7ea7pip\uff1a</p> <pre><code>python -m pip install --upgrade pip\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/3%EF%B8%8F%E2%83%A3%20pip%E7%9B%B8%E5%85%B3/B/","title":"\ud83d\udec1 pip\u6362\u6e90","text":"<p>\u7ecf\u5e38\u9047\u5230pip\u5b89\u88c5\u6162\u7684\u95ee\u9898\uff0c\u89e3\u51b3\u65b9\u6cd5\u5c31\u662f\u6362\u6e90\u3002\u56fd\u5185\u955c\u50cf\u6e90\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e<sup>1</sup>\uff1a</p> <pre><code># \u6e05\u534e\u955c\u50cf\u7ad9\nhttps://pypi.tuna.tsinghua.edu.cn/simple\n# \u4e2d\u79d1\u5927\u955c\u50cf\u7ad9\nhttps://pypi.mirrors.ustc.edu.cn/simple/\n# \u8c46\u74e3\u955c\u50cf\u7ad9\nhttp://pypi.douban.com/simple/\n# \u963f\u91cc\u4e91\nhttp://mirrors.aliyun.com/pypi/simple/\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/3%EF%B8%8F%E2%83%A3%20pip%E7%9B%B8%E5%85%B3/B/#1","title":"\u65b9\u6cd51\uff1a\u4e34\u65f6\u6307\u5b9a\u955c\u50cf\u5730\u5740","text":"<p><code>pip</code>\u547d\u4ee4\u4e2d\u6dfb\u52a0<code>-i</code>\u53c2\u6570\uff0c\u5982\uff1a</p> <pre><code>pip install xxx -i https://pypi.tuna.tsinghua.edu.cn/simple\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/3%EF%B8%8F%E2%83%A3%20pip%E7%9B%B8%E5%85%B3/B/#2pycharm","title":"\u65b9\u6cd52\uff1aPyCharm\u4e2d\u6dfb\u52a0\u56fd\u5185\u955c\u50cf\u7ad9","text":"<p>\u7b2c\u4e00\u6b65\uff0cPyCharm\u2014\u2014File\u2014\u2014Settings\u2014\u2014\u5b9a\u4f4d\u5230\u5de5\u7a0b\u201cProject\uff1axxxx\u201d\u2014\u2014Project Interpreter\u2014\u2014\u70b9\u51fb\u52a0\u53f7</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u70b9\u51fbManage Repositories</p> <p>\u7b2c\u4e09\u6b65\uff0c\u6dfb\u52a0\u955c\u50cf\u6e90</p>"},{"location":"%F0%9F%8E%88%20Python/3%EF%B8%8F%E2%83%A3%20pip%E7%9B%B8%E5%85%B3/B/#3pip","title":"\u65b9\u6cd53\uff1a\u5168\u5c40pip\u914d\u7f6e\uff08\u63a8\u8350\uff09<sup>2</sup>","text":"<p>Windows\u4e0b\uff0c\u65b0\u5efa\u6587\u4ef6\uff1a<code>C:\\Users\\MasterMao\\pip\\pip.ini</code>\uff0c\u4ee5\u6e05\u534e\u955c\u50cf\u6e90\u4e3a\u4f8b\uff1a</p> <pre><code>[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\n[install]\ntrusted-host = pypi.tuna.tsinghua.edu.cn\n</code></pre> <p>Linux/MacOS\u4e0b\uff0c\u65b0\u5efa\u6587\u4ef6\u5e76\u7f16\u8f91 <code>~/.pip/pip.conf</code>\uff1a</p> <pre><code>[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\n[install]\ntrusted-host = pypi.tuna.tsinghua.edu.cn\n</code></pre> <ol> <li> <p>RUNOOB.COM\uff0cpip \u4f7f\u7528\u56fd\u5185\u955c\u50cf\u6e90 \u21a9</p> </li> <li> <p>CSDN, @\u9b4f\u6709\u5fc3\uff0cPyCharm\u89e3\u51b3\u5b89\u88c5\u6162\u7684\u95ee\u9898 \u66f4\u6362pip\u6e90\u4e3a\u56fd\u5185\u6e90 \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20Python/3%EF%B8%8F%E2%83%A3%20pip%E7%9B%B8%E5%85%B3/C/","title":"\ud83c\udfa7 pip\u5347\u7ea7\u7b2c\u4e09\u65b9\u5e93","text":""},{"location":"%F0%9F%8E%88%20Python/3%EF%B8%8F%E2%83%A3%20pip%E7%9B%B8%E5%85%B3/C/#_1","title":"\u58f9\u4e28\u5347\u7ea7\u5355\u4e2a\u5e93","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u5347\u7ea7pip</p> <pre><code>python -m pip install --upgrade pip\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff0c\u67e5\u770b\u6240\u6709\u53ef\u5347\u7ea7\u5e93</p> <pre><code>pip list --outdated\n# \u6216\npip list -o\n</code></pre> <p>\u7b2c\u4e09\u6b65\uff0c\u5347\u7ea7\u5355\u4e2a\u5e93</p> <pre><code>pip install &lt;\u5e93\u540d&gt; --upgrade\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/3%EF%B8%8F%E2%83%A3%20pip%E7%9B%B8%E5%85%B3/C/#_2","title":"\u8d30\u4e28\u4f7f\u7528\u811a\u672c\u5b9e\u73b0\u4e00\u952e\u5347\u7ea7","text":"<pre><code>import os\n\n# \u5347\u7ea7pip\ncommand = 'python -m pip install --upgrade pip'\nos.system(command)\n\n# \u83b7\u53d6pip\u5217\u8868\ncommand = 'pip list -o'\ncmd_data = os.popen(command)\n\n# \u5347\u7ea7\u5305\ncontents = cmd_data.readlines()[2:]\nfor line in contents:\n    package = line.split(\" \")[0]\n    if package == \"WARNING:\":\n        continue\n    print()\n    print(f'\u68c0\u67e5\u66f4\u65b0\u5305: {package}')\n    os.system(f'pip install {package} --upgrade')\nprint(\"\u66f4\u65b0\u5b8c\u6bd5\")\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/5%EF%B8%8F%E2%83%A3%20Python%E5%8F%AF%E8%A7%86%E5%8C%96/","title":"\ud83c\udf88 Python/5\ufe0f\u20e3 Python\u53ef\u89c6\u5316","text":"<ul> <li> <p>Matplotlib\u7ed8\u56fe</p> <p> Getting started</p> </li> <li> <p>\u8fc7\u6e21\u8272</p> <p> Getting started</p> </li> <li> <p>Matplotlib\u4e2d\u82f1\u6587\u8bbe\u7f6e\uff08\u4e00\uff09</p> <p> Getting started</p> </li> <li> <p>Matplotlib\u4e2d\u82f1\u6587\u8bbe\u7f6e\uff08\u4e8c\uff09</p> <p> Getting started</p> </li> <li> <p>PyEcharts\u7ed8\u56fe\u7ecf\u9a8c</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%88%20Python/5%EF%B8%8F%E2%83%A3%20Python%E5%8F%AF%E8%A7%86%E5%8C%96/A/","title":"\ud83c\udf4e Matplotlib\u7ed8\u56fe","text":""},{"location":"%F0%9F%8E%88%20Python/5%EF%B8%8F%E2%83%A3%20Python%E5%8F%AF%E8%A7%86%E5%8C%96/A/#1-bland-altman","title":"1. Bland-Altman\u56fe","text":"<p>Bland-Altman\u56fe\u662f\u4e00\u79cd\u7528\u4e8e\u6bd4\u8f83\u4e24\u79cd\u6d4b\u91cf\u65b9\u6cd5\u6216\u4e24\u4e2a\u89c2\u5bdf\u8005\u4e4b\u95f4\u4e00\u81f4\u6027\u7684\u56fe\u8868\u3002\u5b83\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5224\u65ad\u4e24\u79cd\u6d4b\u91cf\u65b9\u6cd5\u6216\u4e24\u4e2a\u89c2\u5bdf\u8005\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u5b9a\u91cf\u504f\u5dee\u6216\u7cfb\u7edf\u6027\u8bef\u5dee\uff0c\u4ee5\u53ca\u5b83\u4eec\u4e4b\u95f4\u7684\u968f\u673a\u8bef\u5dee\u5927\u5c0f\u548c\u5206\u5e03\u60c5\u51b5<sup>1</sup>\u3002</p> \u67e5\u770b\u4ee3\u7801 <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\nfrom PyAqua import config\n\nconfig.plt_style()\n\n\ndef plot_bland_altman(true, pred, title='', save_path=''):\n    true = np.asarray(true)\n    pred = np.asarray(pred)\n    mean = np.mean([true, pred], axis=0)\n    diff = true - pred\n    md = np.mean(diff)\n    sd = np.std(diff, ddof=1)\n\n    figure, ax = plt.subplots(figsize=(7.05, 3), constrained_layout=True)\n    ax.scatter(mean, diff, color='blue')\n    ax.axhline(md, color='gray', linestyle='-')\n    x_lim = ax.get_xlim()\n    ax.text(x=x_lim[1] * 0.98, y=md * 1.1, s=f'Mean Diff: {md:.2f}', ha='right', va='bottom')\n    ax.axhline(md + 1.96 * sd, color='gray', linestyle='--')\n    ax.text(x=x_lim[1] * 0.98, y=(md + 1.96 * sd) * 0.95, s=f'+1.96 SD: {md + 1.96 * sd:.2f}', ha='right', va='top')\n    ax.axhline(md - 1.96 * sd, color='gray', linestyle='--')\n    ax.text(x=x_lim[1] * 0.98, y=(md - 1.96 * sd) * 0.95, s=f'-1.96 SD: {md - 1.96 * sd:.2f}', ha='right', va='bottom')\n\n    ax.set(title='Bland Altman Plot',\n           xlabel='Means',\n           ylabel='Difference')\n    plt.savefig(f'{save_path}/{title}.webp')\n    plt.close()\n\nif __name__ == '__main__':\n    PATH_FIGURE = '../Figure'\n\n    a = np.random.random(100) * 100\n    b = a + (np.random.random(100) - 0.5) * 10\n    plot_bland_altman(a, b, title='Bland_Altman', save_path=PATH_FIGURE)\n</code></pre> <p></p>"},{"location":"%F0%9F%8E%88%20Python/5%EF%B8%8F%E2%83%A3%20Python%E5%8F%AF%E8%A7%86%E5%8C%96/A/#2-pearson","title":"2.  Pearson\u76f8\u5173\u6027\u56fe","text":"<p>\u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570\u56fe\u662f\u4e00\u79cd\u7528\u4e8e\u5c55\u793a\u4e24\u4e2a\u53d8\u91cf\u4e4b\u95f4\u7ebf\u6027\u5173\u7cfb\u7684\u56fe\u8868\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u8bc4\u4f30\u4e24\u4e2a\u53d8\u91cf\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u5f3a\u5ea6\u548c\u65b9\u5411\uff0c\u5373\u5b83\u4eec\u4e4b\u95f4\u7684\u6b63\u76f8\u5173\u3001\u8d1f\u76f8\u5173\u6216\u65e0\u76f8\u5173\u5173\u7cfb\u3002</p> \u67e5\u770b\u4ee3\u7801 <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\nfrom PyAqua import config\n\nconfig.plt_style()\n\n\ndef __pearsonr_line(x, b, k):\n    return k * x + b\n\n\ndef plot_pearsonr(true, pred, title='', save_path=''):\n    from scipy import stats\n\n    true = np.asarray(true)\n    pred = np.asarray(pred)\n    trend, intercept, rsq1, p_value, std_err = stats.linregress(true, pred)\n    cc = stats.pearsonr(true, pred)\n    if cc[1] &lt; 0.001:\n        p = 'P&lt;0.001'\n    elif cc[1] &lt; 0.01:\n        p = 'P&lt;0.01'\n    elif cc[1] &lt; 0.05:\n        p = 'P&lt;0.05'\n    else:\n        p = ''\n\n    figure, ax = plt.subplots(figsize=(7.05, 3), constrained_layout=True)\n    ax.scatter(true, pred, color='g')\n    ax.plot(true, __pearsonr_line(true, intercept, trend), label=f\"R = {cc[0]:.4f}, {p}\")\n    ax.set(title=f'{title}',\n           xlabel=f'True',\n           ylabel=f'Predict')\n    ax.legend(loc='upper right')\n    plt.savefig(f'{save_path}/{title}-Pearsonr.webp')\n    plt.close()\n\n\nif __name__ == '__main__':\n    PATH_FIGURE = '../Figure'\n\n    a = np.random.random(100) * 100\n    b = a + (np.random.random(100) - 0.5) * 10\n    plot_pearsonr(a, b, title='Pearsonr', save_path=PATH_FIGURE)\n</code></pre> <p></p>"},{"location":"%F0%9F%8E%88%20Python/5%EF%B8%8F%E2%83%A3%20Python%E5%8F%AF%E8%A7%86%E5%8C%96/A/#3","title":"3. \u5feb\u901f\u5085\u7acb\u53f6\u53d8\u6362","text":"<p>\u4f7f\u7528\u5feb\u901f\u5085\u91cc\u53f6\u53d8\u6362\uff08FFT\uff09\u5c06\u4fe1\u53f7\u8f6c\u6362\u4e3a\u9891\u8c31\u56fe\uff0c\u4ee5\u7406\u89e3\u4fe1\u53f7\u7684\u9891\u7387\u5206\u5e03</p> \u67e5\u770b\u4ee3\u7801 <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\nfrom scipy.fftpack import fft\n\nfrom PyAqua import config\n\nconfig.plt_style()\n\n\ndef plot_fft(signal, sample_rate, fq_limit=None, title='', save_path=''):\n    ppg_fft = np.asarray(fft(signal))\n\n    fig, ax = plt.subplots(2, 1, figsize=(7.05, 3), constrained_layout=True)\n    x = np.arange(len(signal)) / sample_rate\n    ax[0].plot(x, signal)\n    ax[0].set(title='Raw')\n\n    x = np.arange(len(ppg_fft)) * sample_rate / len(ppg_fft)\n    ax[1].plot(x[1:int(len(x) / 2)], np.abs(ppg_fft)[1:int(len(x) / 2)])\n    ax[1].set(title='FFT',\n              xlabel='Frequency (Hz)',\n              ylabel='Amplitude')\n    if fq_limit is not None:\n        ax[1].set(xlim=fq_limit)\n\n    plt.savefig(f'{save_path}/{title}.webp')\n    plt.close()\n\ndef __fake_signal(sample_rate, seconds):\n    # \u751f\u6210\u968f\u673a\u9891\u7387\u548c\u632f\u5e45\n    freq = np.random.uniform(0.5, 2.5, 100)\n    amplitude = np.random.uniform(0.5, 1.5, 100)\n\n    # \u5b9a\u4e49\u65f6\u95f4\u8f74\n\n    time = np.linspace(0, seconds, seconds * sample_rate)\n\n    # \u8ba1\u7b97\u4fe1\u53f7\n    signal = np.zeros_like(time)\n    for i in range(100):\n        signal += amplitude[i] * np.sin(2 * np.pi * freq[i] * time)\n\n    return signal\n\nif __name__ == '__main__':\n    PATH_FIGURE = '../Figure'\n    sig = __fake_signal(sample_rate=500, seconds=10)\n    plot_fft(sig, sample_rate=500, fq_limit=(0, 20), title='FFT', save_path=PATH_FIGURE)\n</code></pre> <p></p>"},{"location":"%F0%9F%8E%88%20Python/5%EF%B8%8F%E2%83%A3%20Python%E5%8F%AF%E8%A7%86%E5%8C%96/A/#4","title":"4. \u67f1\u72b6\u56fe","text":"\u67e5\u770b\u4ee3\u7801 <pre><code>import matplotlib.pyplot as plt\n\nfrom PyAqua import config\n\nconfig.plt_style()\n\n\ndef plot_bar(data, label,\n             ylim=None,\n             title='',\n             save_path=''):\n    fig, ax = plt.subplots(figsize=(7.05, 3), constrained_layout=True)\n    x = list(range(len(data)))\n    ax.bar(x, data)\n    for idx in x:\n        ax.text(x=idx, y=data[idx] * 1.05, s=f'{data[idx]:.2f}%', ha='center', va='bottom')\n    ax.set(title=f'{title}')\n    if ylim is not None:\n        ax.set(ylim=ylim)\n    ax.set_xticks(x, label)\n    plt.savefig(f'{save_path}/{title}_Bar.webp')\n    plt.close()\n\n\nif __name__ == '__main__':\n    PATH_FIGURE = '../Figure'\n    a = [27.26889058, 22.96422388, 26.00080221, 14.82282119, 0., 3.92095272, 5.02230942]\n    label = ['\u4f60', '\u597d', '\u4eca', '\u5929', '\u661f', '\u671f', '\u56db']\n    plot_bar(a, label, ylim=(0, 50), title='\u7279\u5f81\u8d21\u732e\u7387', save_path=PATH_FIGURE)\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/5%EF%B8%8F%E2%83%A3%20Python%E5%8F%AF%E8%A7%86%E5%8C%96/A/#5-matplotlib","title":"5. \u76f4\u65b9\u56fe\uff08Matplotlib\uff09","text":"<p>\u76f4\u65b9\u56fe\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u4e86\u89e3\u6570\u636e\u7684\u4e2d\u5fc3\u8d8b\u52bf\u3001\u79bb\u6563\u7a0b\u5ea6\u548c\u5206\u5e03\u5f62\u72b6\uff0c\u662f\u6570\u636e\u5206\u6790\u4e2d\u5e38\u7528\u7684\u5de5\u5177\u4e4b\u4e00\u3002</p> \u67e5\u770b\u4ee3\u7801 <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\nfrom PyAqua import config\n\nconfig.plt_style()\n\n\ndef plot_hist(data, bins=50, title='', save_path=''):\n    fig, ax = plt.subplots(figsize=(7.05, 3), constrained_layout=True)\n    ax.hist(data, bins=bins, alpha=0.5, rwidth=0.9)\n    ax.set(title=f'{title}\u5206\u5e03')\n    plt.savefig(f'{save_path}/{title}-Hist.webp')\n    plt.close()\n\n\nif __name__ == '__main__':\n    PATH_FIGURE = '../Figure'\n    points = np.random.normal(size=4000)\n    plot_hist(points, bins=100, title='\u968f\u673a\u70b9', save_path=PATH_FIGURE)\n</code></pre> <p></p>"},{"location":"%F0%9F%8E%88%20Python/5%EF%B8%8F%E2%83%A3%20Python%E5%8F%AF%E8%A7%86%E5%8C%96/A/#6-seaborn","title":"6. \u76f4\u65b9\u56fe\uff08Seaborn\uff09","text":"\u67e5\u770b\u4ee3\u7801 <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\n\nfrom PyAqua import config\n\nconfig.plt_style()\n\n\ndef plot_hist_seaborn(data, bins=50, title='', save_path=''):\n    fig, ax = plt.subplots(figsize=(7.05, 3), constrained_layout=True)\n    sns.histplot(data=data, kde=True, ax=ax, bins=bins, legend=False)\n    ax.set(title=f'{title}\u5206\u5e03',\n           ylabel='\u8ba1\u6570')\n    plt.savefig(f'{save_path}/{title}-Hist-Seaborn.webp')\n    plt.close()\n\n\nif __name__ == '__main__':\n    PATH_FIGURE = '../Figure'\n    points = np.random.normal(size=4000)\n    plot_hist_seaborn(points, bins=100, title='\u968f\u673a\u70b9', save_path=PATH_FIGURE)\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/5%EF%B8%8F%E2%83%A3%20Python%E5%8F%AF%E8%A7%86%E5%8C%96/A/#7","title":"7. \u8bef\u5dee\u68d2","text":"<p>\u8bef\u5dee\u68d2\uff08error bar\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u5c55\u793a\u6570\u636e\u8bef\u5dee\u8303\u56f4\u7684\u56fe\u5f62\u7b26\u53f7\uff0c\u5b83\u53ef\u4ee5\u663e\u793a\u6570\u636e\u7684\u65b9\u5dee\u3001\u6807\u51c6\u5dee\u3001\u6807\u51c6\u8bef\u5dee\u3001\u7f6e\u4fe1\u533a\u95f4\u6216\u5176\u5b83\u8bef\u5dee\u5ea6\u91cf\u3002\u8bef\u5dee\u68d2\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u8bc4\u4f30\u5b9e\u9a8c\u6216\u89c2\u5bdf\u6570\u636e\u7684\u53ef\u9760\u6027\u548c\u7cbe\u5ea6\uff0c\u4ee5\u53ca\u6bd4\u8f83\u4e0d\u540c\u6570\u636e\u7ec4\u4e4b\u95f4\u7684\u5dee\u5f02\u548c\u76f8\u4f3c\u6027\u3002<sup>2</sup></p> \u67e5\u770b\u4ee3\u7801 <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\nfrom PyAqua import config\n\nconfig.plt_style()\n\n\ndef plot_error_bar(data, xlabel=None, ylim=None, title='Default_Error_Bar', save_path=''):\n    data = np.asarray(data)\n    length = len(data[:, 0])\n    x = np.arange(length)\n\n    fig, ax = plt.subplots(figsize=(7.05, 3), constrained_layout=True)\n    ax.plot(data[:, 0])\n    # \u8bef\u5dee\u68d2\n    ax.errorbar(x, data[:, 0], data[:, 1],\n                ecolor='k', elinewidth=0.5, marker='s', mfc='orange', mec='k',\n                mew=1, ms=10, alpha=1, capsize=5, capthick=3, linestyle=\"none\", label=\"Observation\")\n    # \u6587\u672c\u6807\u8bb0\n    for i in range(length):\n        ax.text(x=i + 0.3, y=data[i, 0], s=f'{data[i, 0]}', color='blue')\n    # \u66ff\u6362\u6a2a\u5750\u6807\n    if xlabel is not None:\n        ax.set_xticks(x, xlabel)\n    if ylim is not None:\n        ax.set(ylim=ylim)\n    ax.set(title=title)\n    if save_path:\n        plt.savefig(f'{save_path}/{title}.webp')\n        plt.close()\n    else:\n        return ax\n\n\nif __name__ == '__main__':\n    PATH_FIGURE = '../Figure'\n    mean = np.random.randint(5, 10, size=20) / 10\n    std = np.random.randint(5, 10, size=20) / 100\n    in_data = np.c_[mean, std]\n    plot_error_bar(in_data, title='Error Bar', save_path=PATH_FIGURE)\n</code></pre> <p></p> <ol> <li> <p>CSDN\uff0c@MasterQKK\u88ab\u6ce8\u518c\uff0cPython_\u57fa\u4e8estatsmodel\u5305\u753bBland altman plot \uff08Mean Difference Plot\uff09\u7528\u4e8e\u9884\u6d4b\u7ed3\u679c\u5206\u6790 \u21a9\u00a0\u21a9</p> </li> <li> <p>\u811a\u672c\u4e4b\u5bb6\uff0c@\u559c\u9a6c\u62c9\u96c5\u7684\u591c\u7a7a\uff0cPython\u4e2d\u4f7f\u7528matplotlib\u6a21\u5757errorbar\u51fd\u6570\u7ed8\u5236\u8bef\u5dee\u68d2\u56fe\u5b9e\u4f8b\u4ee3\u7801 \u21a9\u00a0\u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20Python/5%EF%B8%8F%E2%83%A3%20Python%E5%8F%AF%E8%A7%86%E5%8C%96/B/","title":"\ud83c\udf49 \u8fc7\u6e21\u8272","text":"<p>\u4e3amatplotlib\u8bbe\u7f6e\u8fc7\u6e21\u989c\u8272</p> <pre><code>import matplotlib.pyplot as plt\nimport matplotlib.colors as colors\n\n\ndef get_color(value):\n    cmap = colors.LinearSegmentedColormap.from_list('blue_to_red', ['blue', 'red'])\n    norm = colors.Normalize(vmin=0, vmax=1)\n    return cmap(norm(value))\n\n\nif __name__ == '__main__':\n    # \u6d4b\u8bd5\u4ee3\u7801\n    values = [0, 0.25, 0.5, 0.75, 1]\n    for value in values:\n        color = get_color(value)\n        print(f\"Value: {value}, Color: {color}\")\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/5%EF%B8%8F%E2%83%A3%20Python%E5%8F%AF%E8%A7%86%E5%8C%96/C/","title":"\ud83c\udf52 Matplotlib\u4e2d\u82f1\u6587\u8bbe\u7f6e\uff08\u4e00\uff09","text":""},{"location":"%F0%9F%8E%88%20Python/5%EF%B8%8F%E2%83%A3%20Python%E5%8F%AF%E8%A7%86%E5%8C%96/C/#matplotlib","title":"\u58f9\u4e28Matplotlib\u65e0\u6cd5\u540c\u65f6\u4f7f\u7528\u4e24\u79cd\u5b57\u4f53","text":"<p>\u6bd5\u8bbe\u8bba\u6587\u7ed8\u56fe\u8981\u6c42\u4e2d\u6587\u5b8b\u4f53\u3001\u82f1\u6587\u65b0\u7f57\u9a6c\uff0c\u4f46\u4f7f\u7528Matplotlib\u7ed8\u56fe\u65f6\u65e0\u6cd5\u540c\u65f6\u4f7f\u7528\u4e24\u79cd\u5b57\u4f53\u3002\u4f8b\u5982\uff1a</p> <pre><code>font = {'family': 'Times New Roman',\n        'weight': 'normal',\n        'size': 15}\nplt.legend(prop=font)\n</code></pre> <p>\u4e0a\u8ff0\u4ee3\u7801\u8bbe\u7f6e\u56fe\u4f8b\u5b57\u4f53\u4e3a\u65b0\u7f57\u9a6c\uff0c\u4f46\u5f53\u56fe\u4f8b\u4e2d\u51fa\u73b0CJK\u5b57\u7b26\u65f6\u4f1a\u53d8\u6210\u65b9\u5757\u3002</p> <p>\u89e3\u51b3\u601d\u8def</p> <ol> <li>\u53c2\u8003<sup>1</sup>\u4f7f\u7528\u534e\u6587\u5b8b\u4f53\u63a5\u8fd1\u201cSimSun+Times New Roman\u201d\u7684\u6548\u679c\u3002</li> <li>\u4e0d\u8981\u6c42\u4e2d\u6587\u5b8b\u4f53\u3001\u82f1\u6587\u65b0\u7f57\u9a6c\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528Noto Serif SC\u5b57\u4f53\uff0c\u53ef\u4ee5\u907f\u514d\u4e2d\u6587\u53d8\u6210\u5c0f\u65b9\u5757\u3002</li> <li>\u672c\u6587\u4f7f\u7528pgf\u8f93\u51fa\u7b26\u5408\u6bd5\u8bbe\u6761\u4ef6\u7684\u7ed8\u56fe</li> </ol>"},{"location":"%F0%9F%8E%88%20Python/5%EF%B8%8F%E2%83%A3%20Python%E5%8F%AF%E8%A7%86%E5%8C%96/C/#_1","title":"\u8d30\u4e28\u89e3\u51b3\u65b9\u6cd5<sup>2</sup>","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u5b89\u88c5LaTeX\u8f6f\u4ef6\uff0cWindows\u63a8\u8350MiKTex\uff0cmacOS\u63a8\u8350MacTeX\u3002</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u65b0\u5efa\u7ed8\u56fe\u6837\u5f0f\u4e8e\uff1a<code>C:\\Users\\MasterMao\\.matplotlib\\stylelib\\mastermao.mplstyle</code> </p> <pre><code># \u591a\u989c\u8272\u5faa\u73af\naxes.prop_cycle : (cycler('color', ['black', 'r', 'g', 'b', '#e08c00', '#1bd38b', '#8290ff', '#394b41', '#9cb0a4', '#00d0ff', '#0099e0']) + cycler('ls', ['-', '--', ':', '-.']))\n# \u5c11\u989c\u8272\u5faa\u73af\naxes.prop_cycle : (cycler('color', ['k', 'r', 'b', 'g']) + cycler('ls', ['-', '--', ':', '-.']))\n\n# \u9ed8\u8ba4\u56fe\u7247\u5927\u5c0f\u3001\u5206\u8fa8\u7387\nfigure.figsize : 3.5, 2.625\nfigure.dpi : 1200\n\n# x\u8f74\u8bbe\u7f6e\nxtick.direction : in\nxtick.major.size : 3\nxtick.major.width : 0.5\nxtick.minor.size : 1.5\nxtick.minor.width : 0.5\nxtick.minor.visible : True\nxtick.top : True\nxtick.labelsize : medium\n\n# y\u8f74\u8bbe\u7f6e\nytick.direction : in\nytick.major.size : 3\nytick.major.width : 0.5\nytick.minor.size : 1.5\nytick.minor.width : 0.5\nytick.minor.visible : True\nytick.right : True\nytick.labelsize : medium # xx-small, x-small, small, medium, large, x-large, xx-large, smaller, larger.\n\n# \u6b63\u5e38\u663e\u793a\u8d1f\u53f7\naxes.unicode_minus : False\n\n# \u8bbe\u7f6e\u7ebf\u5bbd\naxes.linewidth : 0.5\ngrid.linewidth : 0.5\nlines.linewidth : 1.\nlines.markersize : 4.0\n\n# \u7d27\u51d1\u89c6\u56fe\nsavefig.bbox : tight\nsavefig.pad_inches : 0.05\n\n# \u8bbe\u7f6e\u886c\u7ebf\u5b57\u4f53\uff0c\u516c\u5f0f\u4f7f\u7528stix\u5b57\u4f53\uff08\u975e\u5e38\u63a5\u8fd1\u65b0\u7f57\u9a6c\uff09\uff1a\nfont.size : 7\nfont.family : serif\nmathtext.fontset : stix\n\n# \u8bbe\u7f6eLaTeX\u6e32\u67d3\u6587\u672c\uff1a\ntext.usetex : True\npgf.rcfonts : False\npgf.preamble : \\usepackage{unicode-math} \\setmainfont{Times New Roman} \\usepackage{xeCJK} \\xeCJKsetup{CJKmath=true} \\setCJKmainfont{SimSun}\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/5%EF%B8%8F%E2%83%A3%20Python%E5%8F%AF%E8%A7%86%E5%8C%96/C/#_2","title":"\u53c1\u4e28\u6d4b\u8bd5\u7528\u4f8b","text":"<p>\u4f7f\u7528\u793a\u4f8b\uff1a</p> <pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\n\n# \u4f7f\u7528pgf\u6e32\u67d3\uff0c\u7ed8\u56fe\u6837\u5f0f\u9009\u62e9 `mastermao.mplstyle`\nmpl.use(\"pgf\")\nplt.style.use(['mastermao'])\n\ndef run():\n    data = pd.DataFrame({'Decision Tree': [95, 75], 'SVM': [92, 67], 'MLP': [99, 87]})\n    x_label = ['A\u6570\u636e\u96c6', 'B\u6570\u636e\u96c6']\n\n    # \u751f\u6210\u5b50\u56fe\n    fig, axes = plt.subplots(figsize=(4, 2.5))\n    data.plot(kind='bar', stacked=False, ax=axes, width=0.3)\n    plt.plot(range(2), [95.33, 76.33], marker='d', color='orangered', label='\u5e73\u5747', markersize=4, linestyle='-.')\n    plt.ylabel(r'\u51c6\u786e\u7387/%')\n    # \u9650\u5b9ay\u8f74\u8303\u56f4\n    plt.ylim((65, 100))\n    # \u66ff\u6362x\u8f74\u6807\u7b7e\uff0c\u8bbe\u5b9a\u65cb\u8f6c\u89d2\u5ea6\n    plt.xticks(range(2), x_label, rotation=0)\n    # \u8bbe\u7f6e\u56fe\u4f8b\u4f4d\u7f6e\u3001\u5fae\u8c03\u4f4d\u7f6e\u3001\u56fe\u4f8b\u5206\u51e0\u5217\u3001\u6807\u9898\u2026\u2026\n    plt.legend(frameon=True, loc=\"upper right\", bbox_to_anchor=(1, 1), ncol=1, title=\"\", shadow=False, fancybox=False)\n    # \u4fdd\u5b58\u7ed8\u56fe\n    plt.savefig(f'./img/fig2-30.png', format='png', bbox_inches='tight', transparent=True, dpi=1200)\n    plt.savefig(f'./img/fig2-30.pdf', format='pdf', bbox_inches='tight', transparent=True, dpi=1200)\n\nif __name__ == '__main__':\n    run()\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/5%EF%B8%8F%E2%83%A3%20Python%E5%8F%AF%E8%A7%86%E5%8C%96/C/#simsuntimesnoto-serif-sc","title":"\u9644\u4e28\u65e0SimSun\u3001Times\u8981\u6c42\u65f6\u4f7f\u7528Noto Serif SC\u5b57\u4f53<sup>3</sup>","text":"<p>\u4e0d\u8981\u6c42\u4e2d\u6587\u5b8b\u4f53\u3001\u82f1\u6587\u65b0\u7f57\u9a6c\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u5305\u542b\u4e2d\u82f1\u6587\u5b57\u7b26\u7684\u5b57\u4f53\uff0c\u8fd9\u91cc\u4f7f\u7528Google\u7684Noto Serif SC\u5b57\u4f53\uff08\u65e7\u7248\u53ebNoto Serif CJK SC\uff09</p> <p>\u4e0b\u8f7d\u5b89\u88c5\u5b57\u4f53\u540e\uff0c\u5220\u9664<code>\u7528\u6237/.matplotlib/fontlist-v330.json</code>\uff0c\u7a0d\u540e\u4f7f\u7528\u65f6\u4f1a\u91cd\u65b0\u751f\u6210</p> <ol> <li> <p>\u77e5\u4e4e\uff0c@\u5982\u679c\u6211\u53ef\u4ee5\u5fd8\u8bb0\uff0c\u56de\u590d\u201c\u7528Python\u7684matplotlib\u753b\u56fe\uff0c\u600e\u4e48\u4fdd\u8bc1xlabel\u4e2d\u4e2d\u6587\u7528\u5b8b\u4f53\uff0c\u82f1\u6587\u7528\u65b0\u7f57\u9a6c\uff1f\u201d \u21a9</p> </li> <li> <p>\u77e5\u4e4e\uff0c@cherichy\uff0cMatplotlib \u4e2d\u82f1\u6587\u53ca\u516c\u5f0f\u5b57\u4f53\u8bbe\u7f6e \u21a9</p> </li> <li> <p>GitHub\uff0c@John D. Garrett\uff0cgarrettj403/SciencePlots \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20Python/5%EF%B8%8F%E2%83%A3%20Python%E5%8F%AF%E8%A7%86%E5%8C%96/D/","title":"\ud83c\udf53 Matplotlib\u4e2d\u82f1\u6587\u8bbe\u7f6e\uff08\u4e8c\uff09","text":"<p>Matplotlib\u65e0\u6cd5\u540c\u65f6\u4f7f\u7528\u4e24\u79cd\u5b57\u4f53</p>"},{"location":"%F0%9F%8E%88%20Python/5%EF%B8%8F%E2%83%A3%20Python%E5%8F%AF%E8%A7%86%E5%8C%96/D/#_1","title":"\u58f9\u4e28\u5408\u5e76\u4e24\u79cd\u5b57\u4f53<sup>1</sup>","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u4e0b\u8f7d\u5e76\u89e3\u538b\u5b57\u4f53\u5408\u5e76\u5de5\u5177\uff0c\u653e\u5728\u684c\u9762\uff1a<code>C:\\Users\\MasterMao\\Desktop\\font_merge</code></p> <p>\u7b2c\u4e8c\u6b65\uff0c\u590d\u5236\u5b57\u4f53\u5230\u5b57\u4f53\u5408\u5e76\u5de5\u5177\u6587\u4ef6\u5939\u4e0b\u3002\u7cfb\u7edf\u5b57\u4f53\u4f4d\u4e8e\uff1a<code>C:\\Windows\\Fonts</code>\uff0c\u641c\u7d22<code>\u5b8b\u4f53</code>\u3001<code>times</code>\u5c31\u53ef\u627e\u5230\u5bf9\u5e94\u5b57\u4f53\uff0c\u5206\u522b\u590d\u5236\u5230\uff1a<code>C:\\Users\\MasterMao\\Desktop\\font_merge</code></p> <p>\u7b2c\u4e09\u6b65\uff0c\u65b0\u5efa\u5408\u5e76\u811a\u672c\uff1a<code>C:\\Users\\MasterMao\\Desktop\\font_merge\\merge.bat</code>\u3002\u6b64\u5904\u5c06\u5408\u5e76\u540e\u7684\u65b0\u5b57\u4f53\u547d\u540d\u4e3a<code>sun-times.ttf</code></p> <pre><code>%~d0\ncd \"%~dp0\"\n\n.\\otfccdump.exe --ignore-hints -o base.otd \"C:\\Users\\MasterMao\\Desktop\\font_merge\\simsun.ttc\"\n.\\otfccdump.exe --ignore-hints -o ext.otd \"C:\\Users\\MasterMao\\Desktop\\font_merge\\times.ttf\"\n.\\merge-otd.exe base.otd ext.otd\n\n.\\otfccbuild.exe -q -O3 -o sun-times.ttf base.otd\ndel base.otd ext.otd\npause\n</code></pre> <p>\u4e0a\u8ff0\u8def\u5f84\u4e0d\u53ef\u51fa\u73b0\u4e2d\u6587</p> <p>\u7b2c\u56db\u6b65\uff0c\u8fd0\u884c<code>merge.bat</code>\u3002\u5b89\u88c5\u65b0\u5b57\u4f53<code>sum-times.ttf</code></p>"},{"location":"%F0%9F%8E%88%20Python/5%EF%B8%8F%E2%83%A3%20Python%E5%8F%AF%E8%A7%86%E5%8C%96/D/#_2","title":"\u53c1\u4e28\u65b0\u5efa\u7ed8\u56fe\u6837\u5f0f<sup>2</sup>","text":"<p>\u5220\u9664<code>C:\\Users\\MasterMao\\.matplotlib\\fontlist-v330.json</code></p> <p>\u65b0\u5efa\u7ed8\u56fe\u6837\u5f0f<code>C:\\Users\\MasterMao\\.matplotlib\\stylelib\\mastermao-sun_times.mplstyle</code></p> <pre><code># Matplotlib style for scientific plotting\n# This is the base style for \"SciencePlots\"\n# see: https://github.com/garrettj403/SciencePlots\n\n# Set default figure size\nfigure.figsize : 7.05, 2.35\nfigure.dpi : 600\n\n# Set x axis\nxtick.direction : in\nxtick.major.size : 3\nxtick.major.width : 0.5\nxtick.minor.size : 1.5\nxtick.minor.width : 0.5\nxtick.minor.visible : True\nxtick.top : True\nxtick.labelsize : medium\n\n# Set y axis\nytick.direction : in\nytick.major.size : 3\nytick.major.width : 0.5\nytick.minor.size : 1.5\nytick.minor.width : 0.5\nytick.minor.visible : True\nytick.right : True\nytick.labelsize : medium\n\naxes.unicode_minus : False\n\n# Set line widths\naxes.linewidth : 0.5\ngrid.linewidth : 0.5\nlines.linewidth : 1.\nlines.markersize : 4.0\n\n# Set line style as well for black and white graphs\naxes.prop_cycle : (cycler('color', ['k', 'r', 'b', 'g']) + cycler('ls', ['-', '--', ':', '-.']))\n#axes.prop_cycle : cycler('color', ['023047', 'FB8500', '219EBC', 'FFB703','8ECAE6','2A9D8F','F4A261'])\n\n# save config\nsavefig.bbox : tight\nsavefig.format : webp\nsavefig.dpi : 600\nsavefig.pad_inches : 0.05\n\n# Grid lines\naxes.grid : True\naxes.axisbelow : True\ngrid.linestyle : --\ngrid.color : k\ngrid.alpha : 0.2\n\n# Legend\nlegend.frameon : True\nlegend.framealpha : 1.0\nlegend.fancybox : True\nlegend.numpoints : 1\naxes.labelsize : 7\nlegend.fontsize : 7\n\n# Use serif fonts\nfont.size : 7\nfont.serif : Times New Roman + SimSun\nfont.family : serif\n\n# Use LaTeX for math formatting\ntext.usetex : False\n</code></pre> <p>\u8fd9\u91cc\u6ce8\u610f<code>font.serif</code>\u5bf9\u5e94\u7684\u5408\u6210\u5b57\u4f53\u7684\u5177\u4f53\u540d\uff0c\u53ef\u4ee5\u5728word\u91cc\u9762\u67e5\u770b\u7cfb\u7edf\u5b89\u88c5\u7684\u5b57\u4f53\u540d</p>"},{"location":"%F0%9F%8E%88%20Python/5%EF%B8%8F%E2%83%A3%20Python%E5%8F%AF%E8%A7%86%E5%8C%96/D/#_3","title":"\u8086\u4e28\u7ed8\u56fe\u67e5\u770b\u6548\u679c","text":"<pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\nplt.style.use('mastermao-sun_times')\n\n\ndef model(x, p):\n    return x ** (2 * p + 1) / (1 + x ** (2 * p))\n\n\nif __name__ == '__main__':\n    x = np.linspace(0.75, 1.25, 201)\n\n    fig, ax = plt.subplots()\n    for p in [5, 7, 10, 15, 20, 30, 38, 50, 100]:\n        ax.plot(x, model(x, p), label=p)\n    ax.legend(title='Order', fontsize=7)\n    ax.set(xlabel=r'\u7535\u538b (mV)')\n    ax.set(ylabel=r'\u7535\u6d41 ($\\mu$A)')\n    ax.autoscale(tight=True)\n    fig.savefig('./fig.webp')\n</code></pre> <ol> <li> <p>\u77e5\u4e4e\uff0c@\u6728\u571f\u6728\uff0c\u5b8c\u7f8e\u89e3\u51b3Python\u7684matplotlib\u5e93\u4e2d\u82f1\u6587\u5b57\u4f53\u6df7\u663e\u95ee\u9898 \u21a9</p> </li> <li> <p>MasterMao's Blog\uff0c@\u4e00\u4e00\u98ce\u548c\u6a58\uff0c\u6bd5\u4e1a\u8bba\u6587Matplotlib\u7ed8\u56fe\u4e2d\u82f1\u6587\u8bbe\u7f6e(\u4e00) \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20Python/5%EF%B8%8F%E2%83%A3%20Python%E5%8F%AF%E8%A7%86%E5%8C%96/E/","title":"\ud83c\udf45 PyEcharts\u7ed8\u56fe\u7ecf\u9a8c","text":""},{"location":"%F0%9F%8E%88%20Python/5%EF%B8%8F%E2%83%A3%20Python%E5%8F%AF%E8%A7%86%E5%8C%96/E/#1","title":"1. \u7ed8\u56fe\u66f2\u7ebf\u4e0d\u663e\u793a","text":"<p>\u4f7f\u7528\u7684\u6570\u636e\u7c7b\u578b\u4e0d\u80fd\u662f<code>np.ndarray</code>\uff0c\u5982\uff1a</p> <pre><code>line.add_xaxis(xaxis_data=data.index.to_list())\n</code></pre> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u6700\u597d\u4f7f\u7528<code>pandas.DataFrame</code>\u6570\u7ec4</p>"},{"location":"%F0%9F%8E%88%20Python/5%EF%B8%8F%E2%83%A3%20Python%E5%8F%AF%E8%A7%86%E5%8C%96/E/#2","title":"2. \u66f2\u7ebf\u7ed3\u5c3e\u8fde\u5230\u524d\u9762\u6570\u636e","text":"<p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u5728\u7ed8\u56fe\u6570\u636e\u7ed3\u5c3e\u6dfb\u52a0<code>None</code>\uff0c\u5982\uff1a</p> <pre><code>y_data = data[col].values.tolist()\ny_data.append(None)\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/6%EF%B8%8F%E2%83%A3%20Python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/","title":"\ud83c\udf88 Python/6\ufe0f\u20e3 Python\u79d1\u5b66\u8ba1\u7b97","text":"<ul> <li> <p>A.ipynb</p> <p> Getting started</p> </li> <li> <p>Numpy</p> <p> Getting started</p> </li> <li> <p>Scipy</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%88%20Python/6%EF%B8%8F%E2%83%A3%20Python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/A/","title":"\ud83d\udc0b \u5faa\u73af\u6dfb\u52a0\u5143\u7d20\u7684\u901f\u5ea6\u95ee\u9898","text":"In\u00a0[2]: Copied! <pre>import time\nimport numpy as np\n</pre> import time import numpy as np In\u00a0[7]: Copied! <pre>def run_list():\n    ss = time.time()\n    res = []\n    for i in range(1000000):\n        res.append(i)\n    res = np.asarray(res)\n    print(f'\u7528\u65f6 = {time.time() - ss}')\n\nrun_list()\n</pre> def run_list():     ss = time.time()     res = []     for i in range(1000000):         res.append(i)     res = np.asarray(res)     print(f'\u7528\u65f6 = {time.time() - ss}')  run_list() <pre>\u7528\u65f6 = 0.10399866104125977\n</pre> In\u00a0[10]: Copied! <pre>def run_plus():\n    ss = time.time()\n    res = []\n    for i in range(1000000):\n        res += [i]\n    res = np.asarray(res)\n    print(f'\u7528\u65f6 = {time.time() - ss}')\n\nrun_plus()\n</pre> def run_plus():     ss = time.time()     res = []     for i in range(1000000):         res += [i]     res = np.asarray(res)     print(f'\u7528\u65f6 = {time.time() - ss}')  run_plus() <pre>\u7528\u65f6 = 0.1379992961883545\n</pre> In\u00a0[12]: Copied! <pre>def run_add():\n    ss = time.time()\n    res = np.asarray([i for i in range(1000000)])\n    print(f'\u7528\u65f6 = {time.time() - ss}')\n\nrun_plus()\n</pre> def run_add():     ss = time.time()     res = np.asarray([i for i in range(1000000)])     print(f'\u7528\u65f6 = {time.time() - ss}')  run_plus() <pre>\u7528\u65f6 = 0.0859994888305664\n</pre> In\u00a0[13]: Copied! <pre>def run_np():\n    ss = time.time()\n    res = np.array([])\n    for i in range(100000):\n        res = np.append(res, i)\n    print(f'\u7528\u65f6 = {time.time() - ss}')\n\nrun_np()\n</pre> def run_np():     ss = time.time()     res = np.array([])     for i in range(100000):         res = np.append(res, i)     print(f'\u7528\u65f6 = {time.time() - ss}')  run_np() <pre>\u7528\u65f6 = 2.1151256561279297\n</pre>"},{"location":"%F0%9F%8E%88%20Python/6%EF%B8%8F%E2%83%A3%20Python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/A/","title":"\ud83d\udc0b \u5faa\u73af\u6dfb\u52a0\u5143\u7d20\u7684\u901f\u5ea6\u95ee\u9898\u00b6","text":"<p>\u80cc\u666f\uff1a\u5728\u6570\u636e\u9884\u5904\u7406\u6216\u7279\u5f81\u63d0\u53d6\u4e2d\uff0c\u5e38\u5e38\u5bf9\u591a\u4e2a\u6587\u4ef6\u6267\u884c\u7279\u5f81\u63d0\u53d6\u64cd\u4f5c\uff0c\u6700\u7ec8\u5c06\u63d0\u53d6\u7684\u7279\u5f81\u5408\u5e76\u4e3a\u4e00\u4e2a\u6570\u7ec4\u5e76\u4fdd\u5b58\u4e3a<code>.npy</code>\u6587\u4ef6\u3002</p> <p>\u4e00\u4e2a\u5c0f\u95ee\u9898\u662f\uff1a\u600e\u6837\u6dfb\u52a0\u5217\u8868\u80fd\u8fbe\u5230\u6700\u5feb\u901f\u5ea6\u5462\uff1f</p> <p>\u4e0b\u9762\u7b80\u5355\u5bf9\u6bd4\u51e0\u79cd\u5143\u7d20\u6dfb\u52a0\u65b9\u5f0f</p>"},{"location":"%F0%9F%8E%88%20Python/6%EF%B8%8F%E2%83%A3%20Python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/A/","title":"\u58f9\u4e28\u5bf9\u6bd4\u00b6","text":""},{"location":"%F0%9F%8E%88%20Python/6%EF%B8%8F%E2%83%A3%20Python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/A/#1-listappendnumpy","title":"1. \u4f7f\u7528list\u7684append\u65b9\u6cd5\u6dfb\u52a0\uff0c\u518d\u8f6cnumpy\u00b6","text":""},{"location":"%F0%9F%8E%88%20Python/6%EF%B8%8F%E2%83%A3%20Python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/A/#2-listnumpy","title":"2. \u4f7f\u7528list\u7684+=\u65b9\u6cd5\u6dfb\u52a0\uff0c\u518d\u8f6cnumpy\u00b6","text":""},{"location":"%F0%9F%8E%88%20Python/6%EF%B8%8F%E2%83%A3%20Python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/A/#3-listnumpy","title":"3. \u63a8\u5bfc\u5f0f\u6dfb\u52a0list\uff0c\u518d\u8f6cnumpy\u00b6","text":""},{"location":"%F0%9F%8E%88%20Python/6%EF%B8%8F%E2%83%A3%20Python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/A/#4-numpyappend","title":"4. \u4f7f\u7528numpy.append\u65b9\u6cd5\u6dfb\u52a0\u5143\u7d20\u00b6","text":""},{"location":"%F0%9F%8E%88%20Python/6%EF%B8%8F%E2%83%A3%20Python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/A/","title":"\u8d30\u4e28\u603b\u7ed3\u00b6","text":"\u65b9\u6cd5 \u65f6\u95f4 list\u63a8\u5bfc\u5f0f 0.0859994888305664 list\u7684<code>append()</code> 0.10399866104125977 list\u7684<code>+=</code> 0.1379992961883545 <code>numpy.append()</code> 2.1151256561279297"},{"location":"%F0%9F%8E%88%20Python/6%EF%B8%8F%E2%83%A3%20Python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/B/","title":"\ud83d\udc1f Numpy","text":""},{"location":"%F0%9F%8E%88%20Python/6%EF%B8%8F%E2%83%A3%20Python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/B/#1","title":"1. \u6c42\u79bb\u6563\u5e8f\u5217\u7684\u68af\u5ea6<sup>1</sup>","text":"<pre><code>res = np.gradient(data)\n</code></pre> \u4ee3\u7801 <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\nimport scienceplots\n\nplt.style.use('mastermao-simtimes')\n\n\ndef plot_fig(x1, x2, title):\n    figure, ax = plt.subplots(2, 1, figsize=(7.05, 3), constrained_layout=True)\n    ax[0].plot(x1, label='y')\n    ax[0].legend(loc='upper right')\n    ax[0].set(title='Sin(x) + Noise')\n\n    ax[1].plot(x2, label='$\\partial$y/$\\partial$x')\n    ax[1].legend(loc='upper right')\n    ax[1].set(title='Gradient')\n    plt.savefig(f'./{title}.webp')\n    plt.show()\n\n\nif __name__ == '__main__':\n    x = np.linspace(0, 10, 100)\n    y = 5 * np.sin(x) + np.random.random(100)\n    dy = np.gradient(y)\n    plot_fig(y, dy, 'Partial')\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/6%EF%B8%8F%E2%83%A3%20Python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/B/#2-nan","title":"2. \u66ff\u6362nan","text":"<pre><code>res = np.nan_to_num(data, nan=0)\n</code></pre> \u4ee3\u7801 <pre><code>import numpy as np\n\nx = np.array([[1, 2], [2, 3], [np.nan, 3]])\ny = np.nan_to_num(x, nan=0)\nprint(x)\nprint(y)\n</code></pre> <pre><code>array([[ 1.,  2.],\n       [ 2.,  3.],\n       [nan,  3.]])\narray([[1., 2.],\n       [2., 3.],\n       [0., 3.]])\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/6%EF%B8%8F%E2%83%A3%20Python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/B/#3","title":"3. \u5408\u5e76\u6570\u7ec4","text":"<pre><code>res = np.concatenate((a,b), axis=0)\n</code></pre> \u4ee3\u7801 <pre><code>import numpy as np\n\na = np.ones((2,3,5))\nb = np.zeros((3,3,5))\nres = np.concatenate((a,b),axis=0)\nprint(res)\n</code></pre> <pre><code>array([[[1., 1., 1., 1., 1.],\n        [1., 1., 1., 1., 1.],\n        [1., 1., 1., 1., 1.]],\n       [[1., 1., 1., 1., 1.],\n        [1., 1., 1., 1., 1.],\n        [1., 1., 1., 1., 1.]],\n       [[0., 0., 0., 0., 0.],\n        [0., 0., 0., 0., 0.],\n        [0., 0., 0., 0., 0.]],\n       [[0., 0., 0., 0., 0.],\n        [0., 0., 0., 0., 0.],\n        [0., 0., 0., 0., 0.]],\n       [[0., 0., 0., 0., 0.],\n        [0., 0., 0., 0., 0.],\n        [0., 0., 0., 0., 0.]]])\n</code></pre> <ol> <li> <p>CSDN\uff0c@June\uff0cnumpy\u7684\u68af\u5ea6\u51fd\u6570np.gradient(f) \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20Python/6%EF%B8%8F%E2%83%A3%20Python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/C/","title":"\ud83e\udd63 Scipy","text":""},{"location":"%F0%9F%8E%88%20Python/6%EF%B8%8F%E2%83%A3%20Python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/C/#scipy","title":"\u58f9\u4e28Scipy\u5e93","text":"<p>\u7b80\u4ecb\uff1aScipy\u662f\u4e00\u4e2a\u5f00\u6e90\u7684Python\u7b97\u6cd5\u5e93\u548c\u6570\u5b66\u5de5\u5177\u5305\uff0c\u5305\u542b\u7684\u6a21\u5757\u6709\u6700\u4f18\u5316\u3001\u7ebf\u6027\u4ee3\u6570\u3001\u79ef\u5206\u3001\u63d2\u503c\u3001\u7279\u6b8a\u51fd\u6570\u3001\u5feb\u901f\u5085\u91cc\u53f6\u53d8\u6362\u3001\u4fe1\u53f7\u5904\u7406\u548c\u56fe\u50cf\u5904\u7406\u3001\u5e38\u5fae\u5206\u65b9\u7a0b\u6c42\u89e3\u548c\u5176\u4ed6\u79d1\u5b66\u4e0e\u5de5\u7a0b\u4e2d\u5e38\u7528\u7684\u8ba1\u7b97<sup>1</sup>\u3002</p> <p>\u5b98\u7f51\uff1aSciPy</p> <p>\u5b89\u88c5\uff1a<code>pip install scipy</code></p>"},{"location":"%F0%9F%8E%88%20Python/6%EF%B8%8F%E2%83%A3%20Python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/C/#_1","title":"\u8d30\u4e28\u5e94\u7528","text":""},{"location":"%F0%9F%8E%88%20Python/6%EF%B8%8F%E2%83%A3%20Python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/C/#1","title":"1.\u5bfb\u627e\u79bb\u6563\u5e8f\u5217\u6781\u503c\u70b9<sup>2</sup>","text":"<pre><code>scipy.signal.argrelmax()\nscipy.signal.argrelmin()\n</code></pre> \u4ee3\u7801 <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.signal as signal\nimport scienceplots\n\nplt.style.use('mastermao-simtimes')\n\n\ndef run():\n    time_series = np.array([0, 6, 25, 20, 15, 8, 15, 6, 0, 6, 0, -5, -15, -3, 4, 10, 8, 13, 8, 10, 3, 1, 20, 7, 3, 0])\n    max_list = signal.argrelmax(time_series)[0]\n    min_list = signal.argrelmin(time_series)[0]\n\n    figure, axes = plt.subplots(figsize=(7.05, 2.35))\n    axes.plot(time_series)\n    axes.scatter(max_list, time_series[max_list], label='\u6781\u5927\u503c\u70b9')\n    axes.scatter(min_list, time_series[min_list], label='\u6781\u5c0f\u503c\u70b9')\n    axes.legend(loc='upper right')\n    plt.savefig('./\u6781\u5927\u6781\u5c0f\u503c\u793a\u4f8b.webp')\n    plt.show()\n\n\nif __name__ == '__main__':\n    run()\n</code></pre> <p>\u5f53\u6781\u503c\u70b9\u5de6\u53f3\u503c\u76f8\u7b49\u65f6\u65e0\u6cd5\u8bc6\u522b</p>"},{"location":"%F0%9F%8E%88%20Python/6%EF%B8%8F%E2%83%A3%20Python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/C/#2","title":"2. \u91cd\u91c7\u6837","text":"<p>\u51fd\u6570\uff1a<code>scipy.signal.resample</code></p> <pre><code>scipy.signal.resample(x, num, t=None, axis=0, window=None, domain='time')\n</code></pre> <ol> <li> <p>@\u7ef4\u57fa\u767e\u79d1\uff0cSciPy \u21a9</p> </li> <li> <p>@\u7070\u4fe1\u7f51\uff0cpython\u5bfb\u627e\u79bb\u6563\u5e8f\u5217\u6781\u503c\u70b9 \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20Python/7%EF%B8%8F%E2%83%A3%20Python%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/","title":"\ud83c\udf88 Python/7\ufe0f\u20e3 Python\u7f51\u7edc\u7f16\u7a0b","text":"<ul> <li> <p>\u642d\u5efaHTTP\u670d\u52a1</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%88%20Python/7%EF%B8%8F%E2%83%A3%20Python%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/A/","title":"\ud83e\ude73 \u642d\u5efaHTTP\u670d\u52a1","text":"<p>\u6027\u80fd\u663e\u7136\u4e0d\u5982\u4f7f\u7528Apache\u3001Nginx\u7b49\u65b9\u5f0f\uff0c\u591a\u4e2a\u7528\u6237\u8bbf\u95ee\u4f1a\u53d1\u751f\u963b\u585e</p> <pre><code>import http.server\nimport socketserver\nfrom http import HTTPStatus\nfrom loguru import logger\nimport time\n\nPORT = 8848\n\nt_tmp = time.strftime('%Y%m%d%H')\nLOG_PATH = f'~/Projects/notebook_log/{t_tmp}.txt'\n\nACCESS_LIST = ['192.168.1.102', '192.168.1.105']\n\n\nclass MyHandler(http.server.SimpleHTTPRequestHandler):\n    def handle_one_request(self):\n        if self.client_address[0] in ACCESS_LIST:\n            logger.info(f'{self.client_address[0]} Accessed!')\n            return http.server.SimpleHTTPRequestHandler.handle_one_request(self)\n        else:\n            logger.warning(f'{self.client_address[0]} Denied!')\n            return 'IP Block!!'\n\n\nif __name__ == '__main__':\n    trace = logger.add(LOG_PATH, encoding='utf-8')\n    with socketserver.TCPServer((\"\", PORT), MyHandler) as httpd:\n        logger.info(f'Server Running at Port: {PORT}')\n        # Get\u8bf7\u6c42\n        # logger.info(httpd.get_request())\n        httpd.serve_forever()\n</code></pre> <p>\u4e0a\u8ff0\u4f7f\u7528<code>ACCESS_LIST</code>\u9650\u5236\u8bbf\u95ee\u7684IP\u5730\u5740</p>"},{"location":"%F0%9F%8E%88%20Python/8%EF%B8%8F%E2%83%A3%20Python%20GUI%E7%BC%96%E7%A8%8B/","title":"\ud83c\udf88 Python/8\ufe0f\u20e3 Python GUI\u7f16\u7a0b","text":"<ul> <li> <p>PyQt5\u5f00\u53d1\u73af\u5883\u914d\u7f6e</p> <p> Getting started</p> </li> <li> <p>PySide6\u8e29\u5751\u8bb0</p> <p> Getting started</p> </li> <li> <p>PythonGUI\u7f16\u7a0b\u95ee\u9898\u6c47\u603b</p> <p> Getting started</p> </li> <li> <p>Streamlit\u8c03\u7528C</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%88%20Python/8%EF%B8%8F%E2%83%A3%20Python%20GUI%E7%BC%96%E7%A8%8B/A/","title":"\u270c\ufe0f PyQt5\u5f00\u53d1\u73af\u5883\u914d\u7f6e","text":""},{"location":"%F0%9F%8E%88%20Python/8%EF%B8%8F%E2%83%A3%20Python%20GUI%E7%BC%96%E7%A8%8B/A/#_1","title":"\u58f9\u4e28\u73af\u5883","text":"<p>\u5305\u7ba1\u7406\u5668\uff1aAnaconda3</p> <p>IDE\uff1aPyCharm</p> <p>\u5b89\u88c5\uff1a</p> <pre><code>pip install pyqt5\n</code></pre> <p>\u5378\u8f7d\uff1a</p> <pre><code>pip uninstall pyqt5\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/8%EF%B8%8F%E2%83%A3%20Python%20GUI%E7%BC%96%E7%A8%8B/A/#qtdesignerpyuic","title":"\u8d30\u4e28\u914d\u7f6eQtDesigner\u548cPyUIC","text":"<p>QtDesigner\uff0c\u53ef\u89c6\u5316UI\u7f16\u8f91\u5668</p> <p>PyUIC\uff0c\u5c06.ui\u6587\u4ef6\u8f6c\u5316\u4e3a.py\u6587\u4ef6\uff0c\u4ee5\u4f9bPython\u4e3b\u7a0b\u5e8f\u8c03\u7528\u3002</p>"},{"location":"%F0%9F%8E%88%20Python/8%EF%B8%8F%E2%83%A3%20Python%20GUI%E7%BC%96%E7%A8%8B/A/#1-windows","title":"1. Windows\u4e0b\uff1a","text":"<p>PyCharm\u2014\u2014Preferences\u2014\u2014Tools\u2014\u2014External Tools\u2014\u2014\u52a0\u53f7</p> <p>QtDesigner\uff1a</p> <p>Name\uff1a<code>QtDesigner</code></p> <p>Program\uff1a<code>C:\\ProgramData\\{Anaconda\u5b89\u88c5\u8def\u5f84}\\Library\\bin\\designer.exe</code></p> <p>Working directory\uff1a<code>$FileDir$</code></p> <p>PyUIC\uff1a</p> <p>Name\uff1a<code>PyUIC</code></p> <p>Program\uff1a<code>C:\\ProgramData\\{Anaconda\u5b89\u88c5\u8def\u5f84}}\\python.exe</code></p> <p>Arguments\uff1a<code>-m PyQt5.uic.pyuic $FileName$ -o $FileNameWithoutExtension$.py</code></p> <p>Working directory\uff1a<code>$FileDir$</code></p>"},{"location":"%F0%9F%8E%88%20Python/8%EF%B8%8F%E2%83%A3%20Python%20GUI%E7%BC%96%E7%A8%8B/A/#2-macos","title":"2. MacOS\u4e0b\uff1a","text":"<p>PyCharm\u2014\u2014Preferences\u2014\u2014Tools\u2014\u2014External Tools\u2014\u2014\u52a0\u53f7</p> <p>QtDesigner\uff1a</p> <p>Name\uff1a<code>QtDesigner</code></p> <p>Program\uff1a<code>/Users/\u7528\u6237\u540d/opt/anaconda3/bin/Designer.app</code></p> <p>Working directory\uff1a<code>$FileDir$</code></p> <p>PyUIC\uff1a</p> <p>Name\uff1a<code>PyUIC</code></p> <p>Program\uff1a<code>/Users/\u7528\u6237\u540d/opt/anaconda3/bin/python.app</code></p> <p>Arguments\uff1a<code>-m PyQt5.uic.pyuic $FileName$ -o $FileNameWithoutExtension$.py</code></p> <p>Working directory\uff1a<code>$FileDir$</code></p>"},{"location":"%F0%9F%8E%88%20Python/8%EF%B8%8F%E2%83%A3%20Python%20GUI%E7%BC%96%E7%A8%8B/A/#logo_rc","title":"\u53c1\u4e28\u89e3\u51b3logo_rc\u62a5\u9519\u95ee\u9898","text":"<p>**\u95ee\u9898\u63cf\u8ff0\uff1a**\u754c\u9762\u4e2d\u6dfb\u52a0logo\uff0c\u4f7f\u7528PyUIC\u8f6c\u6362\u540e\uff0c\u4ee5\u4e0b\u8bed\u53e5\u62a5\u9519</p> <pre><code>import logo_rc\n</code></pre> <p>**\u89e3\u51b3\u65b9\u6cd5\uff1a**\u5c06<code>xx.qrc</code>\u6587\u4ef6\u8f6c\u6362\u4e3a<code>.py</code>\u6587\u4ef6\uff0c\u5728\u547d\u4ee4\u884c\uff1a</p> <pre><code>pyrcc5 xx.qrc -o xx_rc.py\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/8%EF%B8%8F%E2%83%A3%20Python%20GUI%E7%BC%96%E7%A8%8B/B/","title":"\ud83d\udc31 PySide6\u8e29\u5751\u8bb0","text":""},{"location":"%F0%9F%8E%88%20Python/8%EF%B8%8F%E2%83%A3%20Python%20GUI%E7%BC%96%E7%A8%8B/B/#_1","title":"\u58f9\u4e28\u73af\u5883\u914d\u7f6e","text":"<p>\u7b2c\u4e00\u6b65\uff0cPycharm \u4e2d\u65b0\u5efa\u5de5\u7a0b\uff0c\u547d\u540d <code>MasterFusion</code></p> <p>\u7b2c\u4e8c\u6b65\uff0cpip \u5b89\u88c5pyside6</p> <pre><code>pip install PySide6\n</code></pre> <p>\u7b2c\u4e09\u6b65\uff0c\u914d\u7f6e QtDesigner</p> <p>Settings \u2014\u2014 Tools \u2014\u2014 External Tools \u2014\u2014 \u52a0\u53f7</p> <pre><code># name\nQtDesigner6\n# Program\nC:\\Users\\MasterMao\\anaconda3\\envs\\MasterFusion\\Lib\\site-packages\\PySide6\\designer.exe\n# Working directory\n$FileDir$\n</code></pre> <p>\u6587\u4ef6\u8d44\u6e90\u7ba1\u7406\u5668\u5b9a\u4f4d\u5230 <code>C:\\Users\\MasterMao\\anaconda3\\envs\\MasterFusion\\Lib\\site-packages\\PySide6</code>\uff0c\u65b0\u5efa\u6587\u4ef6\u5939 <code>./bin</code>\uff0c\u5c06PySide6\u6839\u76ee\u5f55\u4e0b \u7684<code>uic.exe</code>\u3001<code>Qt6Core.dll</code> \u62f7\u8d1d\u5230 <code>bin</code> \u76ee\u5f55\u4e0b</p>"},{"location":"%F0%9F%8E%88%20Python/8%EF%B8%8F%E2%83%A3%20Python%20GUI%E7%BC%96%E7%A8%8B/B/#pydracula","title":"\u8d30\u4e28\u4f7f\u7528 PyDracula \u6a21\u677f","text":"<p>\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Wanderson-Magalhaes/Modern_GUI_PyDracula_PySide6_or_PyQt6</p> <p>\u6587\u4ef6\u8bf4\u660e\uff1a</p> <p>main.py: \u521d\u59cb\u5316\u6587\u4ef6</p> <p>main.ui: Qt Designer \u5de5\u7a0b\u6587\u4ef6</p> <p>resouces.qrc: Qt Designer \u8d44\u6e90\u6587\u4ef6\uff0c\u4f7f\u7528 Designer \u6dfb\u52a0\u8d44\u6e90</p> <p>setup.py: \u4f7f\u7528 cx-Freeze \u7f16\u8bd1\u7a0b\u5e8f</p> <p>themes/: \u4e3b\u9898\u6587\u4ef6</p> <p>modules/: PyDracula GUI \u7684\u6a21\u5757</p> <p>modules/app_funtions.py: \u6b64\u5904\u6dfb\u52a0\u5e94\u7528\u7a0b\u5e8f</p> <p>modules/app_settings.py: \u7528\u6237\u754c\u9762\u5168\u5c40\u53d8\u91cf</p> <p>modules/resources_rc.py: \u4f7f\u7528Python\u547d\u4ee4\u7f16\u8bd1resource.qrc\u6587\u4ef6\uff0c\u547d\u4ee4\u4e3a <code>pyside6-rcc resources.qrc -o resources_rc.py</code></p> <p>modules/ui_functions.py: \u4ec5\u4e3a\u4e0e\u7528\u6237\u754c\u9762\u76f8\u5173\u7684\u529f\u80fd</p> <p>modules/ui_main.py: Qt Designer\u5bfc\u51fa\u7684\u754c\u9762\u6587\u4ef6\u3002\u53ef\u7f16\u8bd1\u547d\u4ee4\uff1a<code>pyside6-uic main.ui&gt; ui_main.py</code></p> <p>\u9700\u8981\u5c06\u539f\u6587\u4e2d <code>import resources_rc</code> \u6539\u4e3a <code>from. Resoucers_rc import *</code> </p> <p>images/: \u5c06\u56fe\u7247\u548c\u56fe\u6807\u653e\u5728\u6b64\u5904\u3002 <code>pyside6-rcc resources.qrc -o resources_rc.py</code>.</p>"},{"location":"%F0%9F%8E%88%20Python/8%EF%B8%8F%E2%83%A3%20Python%20GUI%E7%BC%96%E7%A8%8B/C/","title":"\ud83e\udd6d PythonGUI\u7f16\u7a0b\u95ee\u9898\u6c47\u603b","text":""},{"location":"%F0%9F%8E%88%20Python/8%EF%B8%8F%E2%83%A3%20Python%20GUI%E7%BC%96%E7%A8%8B/C/#_1","title":"\u89c6\u9891\u5904\u7406\u4e2d\u5ef6\u8fdf\u95ee\u9898","text":"<p>OpenCV\u5728\u6444\u50cf\u673a\u6bcf\u6b21\u83b7\u53d6\u65b0\u5e27\u65f6\uff0c\u603b\u662f\u5148\u628a\u4e0a\u4e00\u6b21\u8bfb\u53d6\u7684\u5e27\u62ff\u51fa\u6765\u5148\u7528\uff0c\u518d\u628a\u65b0\u5e27\u52a0\u5165\u7f13\u5b58\uff0c\u6240\u4ee5\u8981\u60f3\u83b7\u53d6\u6700\u65b0\u7684\u5e27\uff0c\u4e00\u5b9a\u8981\u8fde\u7eed\u8bfb\u4e24\u6b21\u624d\u80fd\u8bfb\u5230\u6700\u65b0\u5e27\u3002</p> <pre><code>flag, image = self.cap.read()\nflag, image = self.cap.read()\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/8%EF%B8%8F%E2%83%A3%20Python%20GUI%E7%BC%96%E7%A8%8B/C/#qchart","title":"QChart\u6269\u5c55\u5e93","text":"<pre><code>pip install PyQtChart\n</code></pre> <p>\u4f7f\u7528\u6280\u5de7\uff1ahttps://blog.csdn.net/u011218356/article/details/88957823</p>"},{"location":"%F0%9F%8E%88%20Python/8%EF%B8%8F%E2%83%A3%20Python%20GUI%E7%BC%96%E7%A8%8B/D/","title":"\ud83c\udf97\ufe0f Streamlit\u8c03\u7528C","text":""},{"location":"%F0%9F%8E%88%20Python/8%EF%B8%8F%E2%83%A3%20Python%20GUI%E7%BC%96%E7%A8%8B/D/#1","title":"1. \u8f93\u5165\u7684\u8def\u5f84\u53c2\u6570\u4e0d\u80fd\u7528\u53cc\u659c\u6760","text":"<p>\u5bf9C\u5de5\u7a0b\u751f\u6210\u7684<code>.exe</code>\u4f20\u5165\u53c2\u6570\uff0c\u4e0d\u80fd\u4f7f\u7528\u53cc\u659c\u6760\uff0c\u5728\u7a0b\u5e8f\u5185\u90e8C\u5de5\u7a0b\u4f1a\u518d\u52a0\u4e2a\u659c\u6760\u53d8\u6210\u4e09\u659c\u6760</p>"},{"location":"%F0%9F%8E%88%20Python/8%EF%B8%8F%E2%83%A3%20Python%20GUI%E7%BC%96%E7%A8%8B/D/#2-windowspowershellcmd","title":"2. \u4e0d\u80fd\u4f7f\u7528windows\u7684powershell\uff0c\u800c\u662f\u8981\u7528cmd","text":"<p>\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\uff0c\u4f7f\u7528powershell\u603b\u662f\u65e0\u6cd5\u5c06\u53c2\u6570\u4f20\u5165\uff0c\u4f7f\u7528cmd\u5c31\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528</p> <pre><code>cmd\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/8%EF%B8%8F%E2%83%A3%20Python%20GUI%E7%BC%96%E7%A8%8B/D/#3","title":"3. \u8def\u5f84\u4e0d\u80fd\u592a\u957f\uff08\u547d\u4ee4\u957f\u5ea6\u4f20\u5165\u6709\u9650\u5236\uff09","text":"<p>\u6700\u597d\u4e0d\u8981\u628a\u7edd\u5bf9\u8def\u5f84\u76f4\u63a5\u4f5c\u4e3a\u53c2\u6570\u901a\u8fc7cmd\u547d\u4ee4\u4f20\u5165<code>.exe</code>\u7a0b\u5e8f\uff0c\u5f53\u7edd\u5bf9\u8def\u5f84\u8fc7\u957f\u7684\u65f6\u5019\uff0c\u4f1a\u5bfc\u81f4\u4f20\u5165\u5b57\u7b26\u88ab\u622a\u65ad</p>"},{"location":"%F0%9F%8E%88%20Python/8%EF%B8%8F%E2%83%A3%20Python%20GUI%E7%BC%96%E7%A8%8B/D/#4-vs","title":"4. vs\u8c03\u8bd5\u4e2d\u6a21\u62df\u4f20\u5165\u53c2\u6570\u6d4b\u8bd5","text":"<p>\u89e3\u51b3\u65b9\u6848 \u2014\u2014 \u5c5e\u6027 \u2014\u2014 \u8c03\u8bd5 \u2014\u2014 \u547d\u4ee4\u53c2\u6570 \u2014\u2014 \u586b\u5165\u9700\u8981\u8c03\u8bd5\u7684\u53c2\u6570\uff0c\u5728VS\u4e2d\u518d\u6b21\u6267\u884c\u7a0b\u5e8f\u7684\u65f6\u5019\u4f1a\u5c06\u8c03\u8bd5\u53c2\u6570\u81ea\u52a8\u6dfb\u52a0</p>"},{"location":"%F0%9F%8E%88%20Python/8%EF%B8%8F%E2%83%A3%20Python%20GUI%E7%BC%96%E7%A8%8B/D/#5-c","title":"5. C\u8bed\u8a00\u83b7\u5f97\u5f53\u524d\u8def\u5f84","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint main() {\n    char path[1024];\n    if (_getcwd(path, sizeof(path)) != NULL) {\n        printf(\"\u5f53\u524d\u6267\u884c\u8def\u5f84\uff1a%s\\n\", path);\n    } else {\n        perror(\"\u83b7\u53d6\u5f53\u524d\u6267\u884c\u8def\u5f84\u5931\u8d25\");\n        return -1;\n    }\n    return 0;\n}\n</code></pre> <p>\u5f53\u5728Python\u4e2d\u4f7f\u7528cmd\u547d\u4ee4\u8c03\u7528\u67d0\u8def\u5f84\u4e0b<code>.exe</code>\u83b7\u53d6\u8def\u5f84\u65f6\uff0c\u4f1a\u83b7\u5f97Python\u7a0b\u5e8f\u7684\u6267\u884c\u8def\u5f84\u3002\u6bd4\u5982\u8bf4\uff1a</p> <pre><code>cmd = f\"'./path/to/main.exe' {target} {theme}\"\nres = subprocess.run(cmd, shell=True, capture_output=True, text=True)\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/9%EF%B8%8F%E2%83%A3%20Python%E7%A1%AC%E4%BB%B6%E7%BC%96%E7%A8%8B/","title":"\ud83c\udf88 Python/9\ufe0f\u20e3 Python\u786c\u4ef6\u7f16\u7a0b","text":"<ul> <li> <p>\u4e32\u53e3\u901a\u4fe1</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%88%20Python/9%EF%B8%8F%E2%83%A3%20Python%E7%A1%AC%E4%BB%B6%E7%BC%96%E7%A8%8B/A/","title":"\ud83c\udfdd\ufe0f \u4e32\u53e3\u901a\u4fe1","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u5b89\u88c5Serial\u5305\u548c\u5b89\u88c5\u4e32\u53e3\u9a71\u52a8</p> <pre><code>pip install serial\n</code></pre> <pre><code>pip install pyserial\n</code></pre> <p>ch340g-ch34g-ch34x-mac-os-x-driver\uff0c\u4e0b\u8f7d\u5b89\u88c5\u9a71\u52a8\u7a0b\u5e8f</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u67e5\u770b\u4e32\u53e3</p> <pre><code>ls /dev/tty.*\n</code></pre> <p>\u7b2c\u4e09\u6b65\uff0c\u5e38\u89c1\u7528\u6cd5</p> <pre><code># \u6253\u5f00\u7b2c\u4e00\u4e2a\u4e32\u53e3\nmy_serial = serial.Serial(0)\n# \u8bbe\u7f6e\u4e32\u53e3\u5730\u5740\u3001\u6ce2\u7279\u7387\nmy_serial = serial.Serial(\u2018COM1\u2019, 115200)\n\n# \u67e5\u770b\u4e32\u53e3\u6807\u8bc6\nprint(my_serial.portstr) \n\n# \u4e32\u53e3\u662f\u5426\u6253\u5f00\nmy_serial.isOpen()\n# \u6253\u5f00\u4e32\u53e3\nmy_serial.open() \n# \u5173\u95ed\u4e32\u53e3\nmy_serial.close()\n\n# \u4e32\u53e3\u5199\u6570\u636e\nmy_serial.write(\"hello\")\n# \u4e32\u53e3\u8bfb\u6570\u636e\ndata = my_serial.read() # \u8bfb\u4e00\u4e2a\u5b57\u7b26\ndata = my_serial.read(20) # \u8bfb20\u4e2a\u5b57\u7b26\ndata = my_serial.readline() # \u8bfb\u4e00\u884c\uff0c\u8bfb\u81f3/n\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/%F0%9F%94%9F%20%E5%85%B6%E4%BB%96/","title":"\ud83c\udf88 Python/\ud83d\udd1f \u5176\u4ed6","text":"<ul> <li> <p>MinIO\u6258\u7ba1Python\u5e93</p> <p> Getting started</p> </li> <li> <p>Python\u6253\u5305\u81ea\u5df1\u7684\u5e93</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%88%20Python/%F0%9F%94%9F%20%E5%85%B6%E4%BB%96/MinIO%E6%89%98%E7%AE%A1Python%E5%BA%93/","title":"\ud83c\udf00 MinIO\u6258\u7ba1Python\u5e93","text":"<p>\u5c06Python\u5305\u653e\u5728MinIO\u5bf9\u8c61\u5b58\u50a8\u5e93\uff0c\u4f7f\u7528\u811a\u672c\u4e0b\u8f7d\u5e76\u5b89\u88c5</p> <pre><code>import subprocess\n\nfrom minio import Minio\n\n\ndef download_package():\n    # \u521b\u5efaMinIO\u5ba2\u6237\u7aef\u5bf9\u8c61\n    minio_client = Minio(\n        \"192.168.0.108:9000\",\n        access_key=\"uvxxxxx\",\n        secret_key=\"4axxxx\",\n        secure=False  # \u5982\u679c\u6ca1\u6709\u542f\u7528SSL\uff0c\u8bf7\u5c06\u5176\u8bbe\u7f6e\u4e3aFalse\n    )\n\n    # \u6307\u5b9aMinIO\u5b58\u50a8\u6876\u548c\u5bf9\u8c61\u540d\u79f0\n    bucket_name = \"xxxx\"\n    object_name = \"xxxx-0.0.1.tar.gz\"\n\n    try:\n        # \u4e0b\u8f7d\u6587\u4ef6\n        minio_client.fget_object(bucket_name, object_name, object_name)\n        return object_name\n    except:\n        print('error')\n\n\ndef execute_cmd(command):\n    result = subprocess.run(command, shell=True, capture_output=True, text=True)\n    return result.returncode\n\n\nif __name__ == '__main__':\n    package = download_package()\n    cmd = f'pip install {package}'\n    res = execute_cmd(cmd)\n    print(res)\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/%F0%9F%94%9F%20%E5%85%B6%E4%BB%96/%E6%89%93%E5%8C%85%E8%87%AA%E5%B7%B1%E7%9A%84%E5%BA%93/","title":"\ud83c\udf0c Python\u6253\u5305\u81ea\u5df1\u7684\u5e93","text":""},{"location":"%F0%9F%8E%88%20Python/%F0%9F%94%9F%20%E5%85%B6%E4%BB%96/%E6%89%93%E5%8C%85%E8%87%AA%E5%B7%B1%E7%9A%84%E5%BA%93/#_1","title":"\u58f9\u4e28\u51c6\u5907\u5de5\u4f5c","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u8bbe\u7f6e\u76ee\u5f55\u7ed3\u6784\uff0c\u5982\uff1a</p> <pre><code>./\n\u251c\u2500\u2500 example_pkg\n\u2502   \u2514\u2500\u2500 __init__.py\n\u2514\u2500\u2500 setup.py\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff0c\u7f16\u8f91<code>example_pkg/__init__.py</code>\uff0c\u5199\u5165\uff1a</p> <pre><code>__name__ = 'example_pkg'\n</code></pre> <p>\u7b2c\u4e09\u6b65\uff0c\u7f16\u8f91<code>./setup.py</code></p> <p><code>setup.py</code>\u662f<code>setuptools</code>\u7684\u6784\u5efa\u811a\u672c\uff0c\u7528\u4e8e\u7f16\u8f91\u4e0a\u4f20\u5230PyPi\u7684\u5e93\u4fe1\u606f</p> <p>\u793a\u4f8b\uff1a</p> <pre><code>import setuptools\n\nwith open(\"README.md\", \"r\") as fh:\n    long_description = fh.read()\n\nsetuptools.setup(\n    name=\"example-pkg-your-username\",\n    version=\"0.0.1\",\n    author=\"Example Author\",\n    author_email=\"author@example.com\",\n    description=\"A small example package\",\n    long_description=long_description,\n    long_description_content_type=\"text/markdown\",\n    url=\"https://github.com/pypa/sampleproject\",\n    packages=setuptools.find_packages(),\n    install_requires=[\n        'numpy',\n        'pandas',\n    ],\n    classifiers=[\n        \"Programming Language :: Python :: 3\",\n        \"License :: OSI Approved :: MIT License\",\n        \"Operating System :: OS Independent\",\n    ],\n)\n</code></pre> <p>\u53c2\u6570\u89e3\u6790\uff1a</p> \u53c2\u6570 \u89e3\u6790 <code>name</code> \u5e93\u540d <code>version</code> \u7248\u672c\u53f7 <code>author</code> \u4f5c\u8005 <code>author_email</code> \u4f5c\u8005\u90ae\u7bb1 <code>description</code> \u5e93\u63cf\u8ff0 <code>long_description</code> \u8be6\u7ec6\u63cf\u8ff0\uff08\u4e00\u822c\u5199\u5728README.md\u4e2d\uff09 <code>long_description_content_type</code> README.md\u4e2d\u63cf\u8ff0\u8bed\u6cd5\uff0c\u4e00\u822c\u4e3amarkdown <code>url</code> \u9879\u76ee\u4e3b\u9875\uff0c\u4e00\u822c\u653e\u5e93\u6258\u7ba1\u7684GitHub\u5730\u5740 <code>packages</code> \u4f7f\u7528<code>setuptools.find_packages()</code>\u5373\u53ef <code>install_requires</code> \u5e93\u4f9d\u8d56\u7684\u7b2c\u4e09\u65b9\u5e93 <code>classifiers</code> \u6307\u5b9a\u5e93\u4f9d\u8d56\u7684Python\u7248\u672c\u3001License\u3001\u64cd\u4f5c\u7cfb\u7edf\u7b49 <p>\u7b2c\u56db\u6b65\uff0c\u521b\u5efa<code>./README.md</code>\uff0c\u5199\u5165\u81ea\u5df1\u5bf9\u8be5\u5e93\u7684\u7b80\u4ecb\u3001\u63cf\u8ff0</p> <p>\u7b2c\u4e94\u6b65\uff0c\u521b\u5efa<code>./LICENSE</code>\uff0c\u521b\u5efa\u5f00\u6e90\u534f\u8bae</p>"},{"location":"%F0%9F%8E%88%20Python/%F0%9F%94%9F%20%E5%85%B6%E4%BB%96/%E6%89%93%E5%8C%85%E8%87%AA%E5%B7%B1%E7%9A%84%E5%BA%93/#_2","title":"\u8d30\u4e28\u6253\u5305\u5e93<sup>1</sup>","text":"<p>\u9996\u5148\uff0c\u786e\u4fdd\u5b89\u88c5\u4e86\u6700\u65b0\u7684<code>setuptools</code>\u3001<code>wheel</code>\u3001<code>twine</code>\uff1a</p> <pre><code>python -m pip install --user --upgrade setuptools wheel twine\n</code></pre> <p>\u7136\u540e\uff0c\u6253\u5305\u5e93\uff1a</p> <pre><code>python setup.py sdist bdist_wheel\n</code></pre> <p>\u7136\u540e\u5c31\u4f1a\u770b\u5230\uff1a</p> <pre><code>\u251c\u2500\u2500 dist\n\u2502   \u251c\u2500\u2500 example_pkg-0.0.1-py3-none-any.whl\n\u2502   \u2514\u2500\u2500 example_pkg-0.0.1.tar.gz\n\u251c\u2500\u2500 example_pkg\n\u2502   \u2514\u2500\u2500 __init__.py\n\u2514\u2500\u2500 setup.py\n</code></pre> <p>\u6700\u540e\uff0c\u4f7f\u7528twine\u5c06\u6253\u5305\u597d\u7684\u5e93\u4e0a\u4f20\u5230PyPi\u6d4b\u8bd5\u670d</p> <pre><code>python -m twine upload --repository-url https://test.pypi.org/legacy/ dist/*\n</code></pre> <p>\u5c06\u5e93\u4e0a\u4f20\u5230PyPi\u6b63\u5f0f\u670d</p> <pre><code>twine upload dist/*\n</code></pre>"},{"location":"%F0%9F%8E%88%20Python/%F0%9F%94%9F%20%E5%85%B6%E4%BB%96/%E6%89%93%E5%8C%85%E8%87%AA%E5%B7%B1%E7%9A%84%E5%BA%93/#_3","title":"\u53c1\u4e28\u5b89\u88c5","text":"<p>\u5982\u679c\u4e0a\u4f20\u5230PyPi\u6b63\u5f0f\u670d\uff0c\u4f7f\u7528<code>pip install xx</code>\u5373\u53ef\u6b63\u5e38\u5b89\u88c5</p> <p>\u5982\u679c\u4ec5\u4ec5\u672c\u5730\u4f7f\u7528\uff0c\u5219\u53ef\u4ee5</p> <pre><code>pip install dist/example_pkg-0.0.1.tar.gz\n</code></pre> <ol> <li> <p>\u77e5\u4e4e\uff0c@\u973e\u5927\uff0cPython\u6253\u5305\u81ea\u5df1\u7684\u5e93\u5230PYPI\uff08\u53efpip\u5b89\u88c5\uff09 \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/","title":"\ud83c\udf4f C","text":"<ul> <li> <p> \u73af\u5883\u914d\u7f6e</p> <p> Getting started</p> </li> <li> <p> \u57fa\u7840\u7f16\u7a0b</p> <p> Getting started</p> </li> <li> <p> C\u5de5\u7a0bAPI\u6587\u6863</p> <p> Getting started</p> </li> <li> <p> \u5d4c\u5165\u5f0f\u7f16\u7a0b</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/","title":"1\ufe0f\u20e3 \u73af\u5883\u914d\u7f6e","text":"<ul> <li>\ud83e\uddc1 CLion\u914d\u7f6e</li> </ul>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/A/","title":"\ud83e\uddc1 CLion\u914d\u7f6e","text":""},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/A/#1","title":"1. \u5168\u5c40\u5b8f\u5b9a\u4e49<sup>1</sup>","text":"<p>\u6bd4\u5982\u9700\u8981\u52a0\u5165\u4e00\u4e2a\u540d\u4e3a<code>LOCAL</code>\u7684\u5b8f\u5f00\u5173</p> <p>\u7b2c\u4e00\u6b65\uff0c\u6253\u5f00<code>CMakeLists.txt</code></p> <p>\u7b2c\u4e8c\u6b65\uff0c\u6dfb\u52a0\uff1a<code>add_definitions(-DLOCAL)</code></p> <p>\uff08\u548c\u4f20\u7edf<code>CMakeLists.txt</code>\u533a\u522b\u5728\u4e8e<code>-D</code>\uff09</p> <ol> <li> <p>CSDN\uff0c@Tanzq-blog\uff0c\u3010Clion\u3011\u5982\u4f55\u4f7f\u7528\u5b8f\u5b9a\u4e49 \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/2%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/","title":"2\ufe0f\u20e3 \u57fa\u7840\u7f16\u7a0b","text":"<ul> <li>\ud83d\udc96 \u57fa\u7840\u7f16\u7a0b</li> <li>\ud83e\uddf0 Python\u8c03\u7528C\u7ecf\u9a8c\u603b\u7ed3</li> </ul>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/2%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/A/","title":"\ud83d\udc96 \u57fa\u7840\u7f16\u7a0b","text":""},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/2%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/A/#1-strcpy","title":"1. <code>strcpy()</code> \u2014\u2014 \u5b57\u7b26\u4e32\u590d\u5236\u51fd\u6570","text":"<p><code>strcpy</code> \u662f\u4e00\u4e2a C \u8bed\u8a00\u6807\u51c6\u5e93\u51fd\u6570\uff0c\u7528\u4e8e\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08\u4ee5 null \u5b57\u7b26 <code>\\0</code> \u7ed3\u5c3e\uff09\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u3002</p> <p><pre><code>char *strcpy(char *dest, const char *src);\n</code></pre> <code>strcpy</code> \u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff0c<code>dest</code> \u548c <code>src</code>\uff0c\u5206\u522b\u8868\u793a\u76ee\u6807\u5b57\u7b26\u4e32\u548c\u6e90\u5b57\u7b26\u4e32\u3002\u51fd\u6570\u5c06\u6e90\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u590d\u5236\u5230\u76ee\u6807\u5b57\u7b26\u4e32\u4e2d\uff0c\u5305\u62ec null \u5b57\u7b26 <code>\\0</code>\uff0c\u5e76\u8fd4\u56de\u6307\u5411\u76ee\u6807\u5b57\u7b26\u4e32\u7684\u6307\u9488\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u76ee\u6807\u5b57\u7b26\u4e32\u5fc5\u987b\u5177\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u5bb9\u7eb3\u6e90\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\uff0c\u5426\u5219\u53ef\u80fd\u5bfc\u81f4\u7f13\u51b2\u533a\u6ea2\u51fa\u7684\u95ee\u9898\u3002\u6b64\u5916\uff0c\u4f7f\u7528 <code>strcpy</code> \u65f6\u9700\u8981\u786e\u4fdd\u6e90\u5b57\u7b26\u4e32\u4ee5 null \u5b57\u7b26\u7ed3\u5c3e\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0d\u53ef\u9884\u6d4b\u7684\u884c\u4e3a\u3002 <pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main() {\n    char source[] = \"Hello, World!\";\n    char destination[20];\n    strcpy(destination, source);\n    printf(\"Source string: %s\\n\", source);\n    printf(\"Copied string: %s\\n\", destination);\n    return 0;\n}\n</code></pre></p> <p>\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a</p> <pre><code>Source string: Hello, World!\nCopied string: Hello, World!\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/2%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/A/#2-strcat","title":"2. <code>strcat()</code> \u2014\u2014 \u5b57\u7b26\u4e32\u62fc\u63a5\u51fd\u6570","text":"<p><code>strcat</code> \u662f\u4e00\u4e2a C \u8bed\u8a00\u6807\u51c6\u5e93\u51fd\u6570\uff0c\u7528\u4e8e\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08\u4ee5 null \u5b57\u7b26 <code>\\0</code> \u7ed3\u5c3e\uff09\u8ffd\u52a0\u5230\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u3002</p> <p><pre><code>char *strcat(char *dest, const char *src);\n</code></pre> <code>strcat</code> \u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff0c<code>dest</code> \u548c <code>src</code>\uff0c\u5206\u522b\u8868\u793a\u76ee\u6807\u5b57\u7b26\u4e32\u548c\u6e90\u5b57\u7b26\u4e32\u3002\u51fd\u6570\u5c06\u6e90\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u8ffd\u52a0\u5230\u76ee\u6807\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\uff0c\u5e76\u8fd4\u56de\u6307\u5411\u76ee\u6807\u5b57\u7b26\u4e32\u7684\u6307\u9488\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u76ee\u6807\u5b57\u7b26\u4e32\u5fc5\u987b\u5177\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u5bb9\u7eb3\u6e90\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\uff0c\u5426\u5219\u53ef\u80fd\u5bfc\u81f4\u7f13\u51b2\u533a\u6ea2\u51fa\u7684\u95ee\u9898\u3002\u6b64\u5916\uff0c\u4f7f\u7528 <code>strcat</code> \u65f6\u9700\u8981\u786e\u4fdd\u76ee\u6807\u5b57\u7b26\u4e32\u5df2\u7ecf\u4ee5 null \u5b57\u7b26\u7ed3\u5c3e\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0d\u53ef\u9884\u6d4b\u7684\u884c\u4e3a\u3002 <pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main() {\n    char destination[20] = \"Hello, \";\n    char source[] = \"World!\";\n    strcat(destination, source);\n    printf(\"Concatenated string: %s\\n\", destination);\n    return 0;\n}\n</code></pre></p> <p>\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a</p> <pre><code>Concatenated string: Hello, World!\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/2%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/A/#3-sprintf","title":"3. <code>sprintf()</code> \u2014\u2014 \u5b57\u7b26\u4e32\u5199\u5165\u51fd\u6570","text":"<p><code>sprintf</code> \u662f\u4e00\u4e2a C \u8bed\u8a00\u6807\u51c6\u5e93\u51fd\u6570\uff0c\u7528\u4e8e\u5c06\u683c\u5f0f\u5316\u7684\u6570\u636e\u5199\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u3002</p> <p><pre><code>int sprintf(char *str, const char *format, ...);\n</code></pre> <code>sprintf</code> \u51fd\u6570\u63a5\u53d7\u591a\u4e2a\u53c2\u6570\uff0c\u5176\u4e2d <code>str</code> \u662f\u6307\u5411\u76ee\u6807\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff0c<code>format</code> \u662f\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c\u540e\u9762\u7684\u53c2\u6570\u662f\u6839\u636e\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u4e2d\u7684\u683c\u5f0f\u7b26\uff0c\u7528\u4e8e\u66ff\u6362\u76f8\u5e94\u7684\u503c\u3002 <code>sprintf</code> \u51fd\u6570\u6309\u7167\u6307\u5b9a\u7684\u683c\u5f0f\u5c06\u6570\u636e\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c\u5e76\u5c06\u7ed3\u679c\u5199\u5165\u76ee\u6807\u5b57\u7b26\u4e32 <code>str</code> \u4e2d\u3002\u5b83\u7684\u8fd4\u56de\u503c\u662f\u5199\u5165\u5230\u76ee\u6807\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u6570\uff08\u4e0d\u5305\u62ec\u7ec8\u6b62\u7684 null \u5b57\u7b26 <code>\\0</code>\uff09\u3002 \u683c\u5f0f\u5316\u5b57\u7b26\u4e32 <code>format</code> \u53ef\u4ee5\u5305\u542b\u666e\u901a\u5b57\u7b26\u548c\u683c\u5f0f\u63a7\u5236\u7b26\uff0c\u4f8b\u5982 <code>%d</code> \u8868\u793a\u5c06\u6574\u6570\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c<code>%f</code> \u8868\u793a\u5c06\u6d6e\u70b9\u6570\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c<code>%s</code> \u8868\u793a\u5c06\u5b57\u7b26\u4e32\u590d\u5236\u5230\u7ed3\u679c\u4e2d\u7b49\u7b49\u3002\u901a\u8fc7\u5728\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u4e2d\u63d2\u5165\u683c\u5f0f\u63a7\u5236\u7b26\uff0c\u5e76\u5728\u540e\u9762\u7684\u53c2\u6570\u4e2d\u63d0\u4f9b\u76f8\u5e94\u7684\u503c\uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u503c\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u5e76\u63d2\u5165\u5230\u76ee\u6807\u5b57\u7b26\u4e32\u4e2d\u3002 <pre><code>#include &lt;stdio.h&gt;\nint main() {\n    char str[50];\n    int age = 30;\n    float height = 1.75;\n    sprintf(str, \"I am %d years old and %.2f meters tall.\", age, height);\n    printf(\"Formatted string: %s\\n\", str);\n    return 0;\n}\n</code></pre></p> <p>\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a</p> <pre><code>Formatted string: I am 30 years old and 1.75 meters tall.\n</code></pre> <p>\u6709\u70b9\u50cfPython\u91cc\u7684f-string</p>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/2%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/B/","title":"\ud83e\uddf0 Python\u8c03\u7528C\u7ecf\u9a8c\u603b\u7ed3","text":""},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/2%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/B/#1","title":"1. \u8f93\u5165\u7684\u8def\u5f84\u53c2\u6570\u4e0d\u80fd\u7528\u53cc\u659c\u6760","text":"<p>\u5bf9C\u5de5\u7a0b\u751f\u6210\u7684<code>.exe</code>\u4f20\u5165\u53c2\u6570\uff0c\u4e0d\u80fd\u4f7f\u7528\u53cc\u659c\u6760\uff0c\u5728C\u5de5\u7a0b\u5185\u4f1a\u518d\u52a0\u4e2a\u659c\u6760\u53d8\u6210\u4e09\u659c\u6760</p>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/2%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/B/#2-windowspowershellcmd","title":"2. \u4e0d\u80fd\u4f7f\u7528windows\u7684powershell\uff0c\u800c\u662f\u8981\u7528cmd","text":"<p>\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\uff0c\u4f7f\u7528powershell\u603b\u662f\u65e0\u6cd5\u5c06\u53c2\u6570\u4f20\u5165\uff0c\u4f7f\u7528cmd\u5c31\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528</p>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/2%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/B/#3","title":"3. \u8def\u5f84\u4e0d\u80fd\u592a\u957f\uff08\u547d\u4ee4\u957f\u5ea6\u4f20\u5165\u6709\u9650\u5236\uff09","text":"<p>\u6700\u597d\u4e0d\u8981\u628a\u7edd\u5bf9\u8def\u5f84\u76f4\u63a5\u4f5c\u4e3a\u53c2\u6570\u901a\u8fc7cmd\u547d\u4ee4\u4f20\u5165<code>.exe</code>\u7a0b\u5e8f\uff0c\u5f53\u7edd\u5bf9\u8def\u5f84\u8fc7\u957f\u7684\u65f6\u5019\uff0c\u4f1a\u5bfc\u81f4\u4f20\u5165\u5b57\u7b26\u88ab\u622a\u65ad</p>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/2%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/B/#4-vs","title":"4. vs\u8c03\u8bd5\u4e2d\u6a21\u62df\u4f20\u5165\u53c2\u6570\u6d4b\u8bd5","text":"<p>\u89e3\u51b3\u65b9\u6848 \u2014\u2014 \u5c5e\u6027 \u2014\u2014 \u8c03\u8bd5 \u2014\u2014 \u547d\u4ee4\u53c2\u6570 \u2014\u2014 \u586b\u5165\u9700\u8981\u8c03\u8bd5\u7684\u53c2\u6570\uff0c\u5728VS\u4e2d\u518d\u6b21\u6267\u884c\u7a0b\u5e8f\u7684\u65f6\u5019\u4f1a\u5c06\u8c03\u8bd5\u53c2\u6570\u81ea\u52a8\u6dfb\u52a0</p>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/2%EF%B8%8F%E2%83%A3%20%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B/B/#5-c","title":"5. C\u8bed\u8a00\u83b7\u5f97\u5f53\u524d\u8def\u5f84","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint main() {\n    char path[1024];\n    if (_getcwd(path, sizeof(path)) != NULL) {\n        printf(\"\u5f53\u524d\u6267\u884c\u8def\u5f84\uff1a%s\\n\", path);\n    } else {\n        perror(\"\u83b7\u53d6\u5f53\u524d\u6267\u884c\u8def\u5f84\u5931\u8d25\");\n        return -1;\n    }\n    return 0;\n}\n</code></pre> <p>\u5f53\u5728Python\u4e2d\u4f7f\u7528cmd\u547d\u4ee4\u8c03\u7528\u67d0\u8def\u5f84\u4e0b<code>.exe</code>\u83b7\u53d6\u8def\u5f84\u65f6\uff0c\u4f1a\u83b7\u5f97Python\u7a0b\u5e8f\u7684\u6267\u884c\u8def\u5f84\u3002\u6bd4\u5982\u8bf4\uff1a</p> <pre><code>cmd = f\"'./Main/test.exe' {target} {theme}\"\nres = subprocess.run(cmd, shell=True, capture_output=True, text=True)\n</code></pre> <p>\u4e0a\u8ff0\u6267\u884c<code>test.exe</code>\u65f6\u4f1a\u83b7\u53d6\u5230\u5f53\u524dPython\u811a\u672c\u7684\u76ee\u5f55</p>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/3%EF%B8%8F%E2%83%A3%20C%E5%B7%A5%E7%A8%8BAPI%E6%96%87%E6%A1%A3/","title":"3\ufe0f\u20e3 C\u5de5\u7a0bAPI\u6587\u6863","text":"<ul> <li>\ud83c\udf58 Doxygen\u751f\u6210C\u5de5\u7a0b\u6587\u6863</li> </ul>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/3%EF%B8%8F%E2%83%A3%20C%E5%B7%A5%E7%A8%8BAPI%E6%96%87%E6%A1%A3/A/","title":"\ud83c\udf58 Doxygen\u751f\u6210C\u5de5\u7a0b\u6587\u6863","text":""},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/3%EF%B8%8F%E2%83%A3%20C%E5%B7%A5%E7%A8%8BAPI%E6%96%87%E6%A1%A3/A/#doxygen","title":"\u58f9\u4e28Doxygen\u7b80\u4ecb","text":"<p>Doxygen\u662f\u4e00\u4e2a\u7a0b\u5e8f\u7684\u6587\u6863\u4ea7\u751f\u5de5\u5177\uff0c\u53ef\u4ee5\u5c06\u7a0b\u5e8f\u4e2d\u7684\u6ce8\u91ca\u8f6c\u6362\u6210\u8bf4\u660e\u6587\u6863\u6216\u8005\u8bf4\u662fAPI\u53c2\u8003\u624b\u518c\uff0c\u4ece\u800c\u51cf\u5c11\u7a0b\u5e8f\u5458\u6574\u7406\u6587\u6863\u7684\u65f6\u95f4\u3002\u5f53\u7136\u8fd9\u91cc\u7a0b\u5e8f\u4e2d\u7684\u6ce8\u91ca\u9700\u8981\u9075\u5faa\u4e00\u5b9a\u7684\u89c4\u5219\u4e66\u5199\uff0c\u624d\u80fd\u8ba9Doxygen\u8bc6\u522b\u548c\u8f6c\u5316\u3002</p> <p>\u76ee\u524dDoxygen\u53ef\u5904\u7406\u7684\u7a0b\u5e8f\u8bed\u8a00\u5305\u542bC/C++\u3001Java\u3001Objective-C\u3001IDL\u7b49\uff0c\u53ef\u4ea7\u751f\u51fa\u6765\u7684\u6587\u6863\u683c\u5f0f\u6709HTML\u3001XML\u3001LaTeX\u3001RTF\u7b49\uff0c\u6b64\u5916\u8fd8\u53ef\u884d\u751f\u51fa\u4e0d\u5c11\u5176\u5b83\u683c\u5f0f\uff0c\u5982HTML\u53ef\u4ee5\u6253\u5305\u6210CHM\u683c\u5f0f\uff0c\u800cLaTeX\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u5de5\u5177\u4ea7\u751f\u51faPS\u6216\u662fPDF\u6587\u6863\u7b49\u3002</p>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/3%EF%B8%8F%E2%83%A3%20C%E5%B7%A5%E7%A8%8BAPI%E6%96%87%E6%A1%A3/A/#doxygen_1","title":"\u8d30\u4e28Doxygen\u5b89\u88c5","text":"<p>Doxygen\uff1a\u4e0b\u8f7d\u5730\u5740</p> <p>Graphviz\uff1a\u4e00\u79cd\u7528\u4e8e\u6e32\u67d3\u56fe\u8868\u7684\u5de5\u5177\uff0c\u4e0b\u8f7d\u5730\u5740</p>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/3%EF%B8%8F%E2%83%A3%20C%E5%B7%A5%E7%A8%8BAPI%E6%96%87%E6%A1%A3/A/#doxygen_2","title":"\u53c1\u4e28Doxygen\u8bbe\u7f6e","text":""},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/3%EF%B8%8F%E2%83%A3%20C%E5%B7%A5%E7%A8%8BAPI%E6%96%87%E6%A1%A3/A/#doxygen_3","title":"\u8086\u4e28Doxygen\u6ce8\u91ca\u8bed\u6cd5","text":""},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/3%EF%B8%8F%E2%83%A3%20C%E5%B7%A5%E7%A8%8BAPI%E6%96%87%E6%A1%A3/A/#41","title":"4.1 \u6ce8\u91ca\u683c\u5f0f","text":"<p>\u5757\u6ce8\u91ca\u8bed\u6cd5\uff1a</p> <pre><code>/**\n...\n*/\n</code></pre> CLionVisual Studio <p>\u5728\u51fd\u6570\u4e0a\u65b9\u8f93\u5165<code>/**</code>\uff0c\u56de\u8f66\uff0c\u5373\u53ef\u81ea\u52a8\u6807\u51c6\u5316\u76f8\u5173\u53d8\u91cf</p> <p>\u5b89\u88c5\u63d2\u4ef6<code>Doxygen Comments</code>\u3002</p> <p>\u5728\u51fd\u6570\u4e0a\u65b9\u8f93\u5165<code>/**</code>\uff0c\u56de\u8f66\uff0c\u5373\u53ef\u81ea\u52a8\u6807\u51c6\u5316\u76f8\u5173\u53d8\u91cf</p>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/3%EF%B8%8F%E2%83%A3%20C%E5%B7%A5%E7%A8%8BAPI%E6%96%87%E6%A1%A3/A/#42","title":"4.2 \u6ce8\u91ca\u8bed\u6cd5<sup>1</sup>","text":"<pre><code>@exception &lt;exception-object&gt; {exception description} \u5bf9\u4e00\u4e2a\u5f02\u5e38\u5bf9\u8c61\u8fdb\u884c\u6ce8\u91ca\u3002\n\n@warning {warning message } \u4e00\u4e9b\u9700\u8981\u6ce8\u610f\u7684\u4e8b\u60c5\n\n@todo { things to be done } \u5bf9\u5c06\u8981\u505a\u7684\u4e8b\u60c5\u8fdb\u884c\u6ce8\u91ca\uff0c\u94fe\u63a5\u5230\u6240\u6709TODO \u6c47\u603b\u7684TODO \u5217\u8868\n\n@bug \u7f3a\u9677\uff0c\u94fe\u63a5\u5230\u6240\u6709\u7f3a\u9677\u6c47\u603b\u7684\u7f3a\u9677\u5217\u8868\n\n@see {comment with reference to other items } \u4e00\u6bb5\u5305\u542b\u5176\u4ed6\u90e8\u5206\u5f15\u7528\u7684\u6ce8\u91ca\uff0c\u4e2d\u95f4\u5305\u542b\u5bf9\u5176\u4ed6\u4ee3\u7801\u9879\u7684\u540d\u79f0\uff0c\u81ea\u52a8\u4ea7\u751f\u5bf9\u5176\u7684\u5f15\u7528\u94fe\u63a5\u3002\n\n@relates &lt;name&gt; \u901a\u5e38\u7528\u505a\u628a\u975e\u6210\u5458\u51fd\u6570\u7684\u6ce8\u91ca\u6587\u6863\u5305\u542b\u5728\u7c7b\u7684\u8bf4\u660e\u6587\u6863\u4e2d\u3002\n\n@since {text} \u901a\u5e38\u7528\u6765\u8bf4\u660e\u4ece\u4ec0\u4e48\u7248\u672c\u3001\u65f6\u95f4\u5199\u6b64\u90e8\u5206\u4ee3\u7801\u3002\n\n@deprecated\n\n@pre { description of the precondition } \u7528\u6765\u8bf4\u660e\u4ee3\u7801\u9879\u7684\u524d\u63d0\u6761\u4ef6\u3002\n\n@post { description of the postcondition } \u7528\u6765\u8bf4\u660e\u4ee3\u7801\u9879\u4e4b\u540e\u7684\u4f7f\u7528\u6761\u4ef6\u3002\n\n@code \u5728\u6ce8\u91ca\u4e2d\u5f00\u59cb\u8bf4\u660e\u4e00\u6bb5\u4ee3\u7801\uff0c\u76f4\u5230@endcode\u547d\u4ee4\u3002\n\n@endcode \u6ce8\u91ca\u4e2d\u4ee3\u7801\u6bb5\u7684\u7ed3\u675f\u3002\n\n@code .. @endcode \u5305\u542b\u4e00\u6bb5\u4ee3\u7801\n\n@addtogroup \u6dfb\u52a0\u5230\u4e00\u4e2a\u7ec4\u3002\n\n@brief  \u6982\u8981\u4fe1\u606f\n\n@deprecated \u5df2\u5e9f\u5f03\u51fd\u6570\n\n@details  \u8be6\u7ec6\u63cf\u8ff0\n\n@note  \u5f00\u59cb\u4e00\u4e2a\u6bb5\u843d\uff0c\u7528\u6765\u63cf\u8ff0\u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879\n\n@par  \u5f00\u59cb\u4e00\u4e2a\u6bb5\u843d\uff0c\u6bb5\u843d\u540d\u79f0\u63cf\u8ff0\u7531\u4f60\u81ea\u5df1\u6307\u5b9a\n\n@param  \u6807\u8bb0\u4e00\u4e2a\u53c2\u6570\u7684\u610f\u4e49\n\n@fn  \u51fd\u6570\u8bf4\u660e\n\n@ingroup \u52a0\u5165\u5230\u4e00\u4e2a\u7ec4\n\n@return  \u63cf\u8ff0\u8fd4\u56de\u610f\u4e49\n\n@retval  \u63cf\u8ff0\u8fd4\u56de\u503c\u610f\u4e49\n\n@include \u5305\u542b\u6587\u4ef6\n\n@var\u3001@enum\u3001@struct\u3001@class \u5bf9\u53d8\u91cf\u3001\u7f8e\u5267\u3001\u7ed3\u6784\u4f53\u3001\u7c7b\u7b49\u8fdb\u884c\u6807\u6ce8\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/3%EF%B8%8F%E2%83%A3%20C%E5%B7%A5%E7%A8%8BAPI%E6%96%87%E6%A1%A3/A/#_1","title":"\u4f0d\u4e28\u793a\u4f8b","text":"<ol> <li> <p>\u535a\u5ba2\u56ed\uff0c@silencehuan\uff0c\u4ee3\u7801\u6ce8\u91ca\u89c4\u8303\u4e4bDoxygen \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/4%EF%B8%8F%E2%83%A3%20%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%BC%96%E7%A8%8B/","title":"4\ufe0f\u20e3 \u5d4c\u5165\u5f0f\u7f16\u7a0b","text":"<ul> <li>\ud83c\udf51 Arduino\u6a21\u62dfModBus\u534f\u8bae</li> <li>\ud83c\udfc9 macOS\u4e0bArduino\u7f16\u7a0b</li> </ul>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/4%EF%B8%8F%E2%83%A3%20%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%BC%96%E7%A8%8B/A/","title":"\ud83c\udf51 Arduino\u6a21\u62dfModBus\u534f\u8bae","text":""},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/4%EF%B8%8F%E2%83%A3%20%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%BC%96%E7%A8%8B/A/#_1","title":"\u58f9\u4e28\u9700\u6c42","text":"<p>\u4f7f\u7528Arduino\u8fde\u63a5\u56db\u8def/\u516d\u8def\u6c14\u4f53\u4f20\u611f\u5668\uff0c\u786c\u4ef6\u8fde\u63a5\u5982\u56fe\uff1a</p> <p></p> <p>\u4f7f\u7528\u6a21\u62df\u53e3\u91c7\u96c6\u6570\u636e\uff0c\u4e0a\u4f4d\u673a\u4e0eArduino\u4e4b\u95f4\u6a21\u62dfModBus\u534f\u8bae\u768404\u529f\u80fd\u7801\uff0c\u5b9e\u73b0\u6570\u636e\u4f20\u8f93<sup>1</sup><sup>2</sup></p>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/4%EF%B8%8F%E2%83%A3%20%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%BC%96%E7%A8%8B/A/#arduino","title":"\u53c1\u4e28\u7a0b\u5e8f\u8bbe\u8ba1\uff08Arduino\u7aef\uff09<sup>1</sup>","text":"<p>\u5b9a\u4e49\u76f8\u5173\u53d8\u91cf\uff1a</p> <pre><code>// \u4e00\u5e27\u6570\u636e\u7684\u6700\u5927\u5b57\u8282\u6570\u91cf\n#define bufferSize 8\n// \u7528\u4e8e\u4fdd\u5b58\u63a5\u6536\u6216\u53d1\u9001\u7684\u6570\u636e\nunsigned char frame[bufferSize];\n// \u6821\u9a8c\u4f4d\u5206\u914d\u5185\u5b58\nunsigned int crc16;\n// \u6570\u636e\u957f\u5ea6\nunsigned int dataSize = 0;\n// \u8ba1\u7b97\u5e94\u7b54\u7684\u6570\u636e\u957f\u5ea6\nunsigned char responseSize = 0;\n//\u4e0a\u6b21\u9605\u8bfb\u6709\u6570\u636e\u7684\u65f6\u95f4\nunsigned long lastReadTime;\nunsigned int temp = 0;\nconst unsigned char analogPins[] = {A0, A1, A2, A3, A4, A5, A6};\n</code></pre> <p>\u5b9a\u4e49\u51fd\u6570\uff1a</p> <pre><code>// CRC\u6821\u9a8c\u51fd\u6570\nunsigned int calculateCRC(unsigned char *regs, unsigned char arraySize);\n// \u5e94\u7b54\u51fd\u6570\nvoid my_response(unsigned char frame[]);\n</code></pre> <p>CRC\u6821\u9a8c\u51fd\u6570\uff1a</p> <pre><code>const unsigned char c_aucCRCHi[] = {\n        0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,\n        0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,\n        0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,\n        0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,\n        0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1,\n        0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,\n        0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1,\n        0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,\n        0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,\n        0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40,\n        0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1,\n        0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,\n        0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,\n        0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40,\n        0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,\n        0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,\n        0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,\n        0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,\n        0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,\n        0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,\n        0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,\n        0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40,\n        0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1,\n        0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,\n        0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,\n        0x80, 0x41, 0x00, 0xC1, 0x81, 0x40\n};\n\n/* CRC\u4f4e\u4f4d\u5b57\u8282\u503c\u8868*/\nconst unsigned char c_aucCRCLo[] = {\n        0x00, 0xC0, 0xC1, 0x01, 0xC3, 0x03, 0x02, 0xC2, 0xC6, 0x06,\n        0x07, 0xC7, 0x05, 0xC5, 0xC4, 0x04, 0xCC, 0x0C, 0x0D, 0xCD,\n        0x0F, 0xCF, 0xCE, 0x0E, 0x0A, 0xCA, 0xCB, 0x0B, 0xC9, 0x09,\n        0x08, 0xC8, 0xD8, 0x18, 0x19, 0xD9, 0x1B, 0xDB, 0xDA, 0x1A,\n        0x1E, 0xDE, 0xDF, 0x1F, 0xDD, 0x1D, 0x1C, 0xDC, 0x14, 0xD4,\n        0xD5, 0x15, 0xD7, 0x17, 0x16, 0xD6, 0xD2, 0x12, 0x13, 0xD3,\n        0x11, 0xD1, 0xD0, 0x10, 0xF0, 0x30, 0x31, 0xF1, 0x33, 0xF3,\n        0xF2, 0x32, 0x36, 0xF6, 0xF7, 0x37, 0xF5, 0x35, 0x34, 0xF4,\n        0x3C, 0xFC, 0xFD, 0x3D, 0xFF, 0x3F, 0x3E, 0xFE, 0xFA, 0x3A,\n        0x3B, 0xFB, 0x39, 0xF9, 0xF8, 0x38, 0x28, 0xE8, 0xE9, 0x29,\n        0xEB, 0x2B, 0x2A, 0xEA, 0xEE, 0x2E, 0x2F, 0xEF, 0x2D, 0xED,\n        0xEC, 0x2C, 0xE4, 0x24, 0x25, 0xE5, 0x27, 0xE7, 0xE6, 0x26,\n        0x22, 0xE2, 0xE3, 0x23, 0xE1, 0x21, 0x20, 0xE0, 0xA0, 0x60,\n        0x61, 0xA1, 0x63, 0xA3, 0xA2, 0x62, 0x66, 0xA6, 0xA7, 0x67,\n        0xA5, 0x65, 0x64, 0xA4, 0x6C, 0xAC, 0xAD, 0x6D, 0xAF, 0x6F,\n        0x6E, 0xAE, 0xAA, 0x6A, 0x6B, 0xAB, 0x69, 0xA9, 0xA8, 0x68,\n        0x78, 0xB8, 0xB9, 0x79, 0xBB, 0x7B, 0x7A, 0xBA, 0xBE, 0x7E,\n        0x7F, 0xBF, 0x7D, 0xBD, 0xBC, 0x7C, 0xB4, 0x74, 0x75, 0xB5,\n        0x77, 0xB7, 0xB6, 0x76, 0x72, 0xB2, 0xB3, 0x73, 0xB1, 0x71,\n        0x70, 0xB0, 0x50, 0x90, 0x91, 0x51, 0x93, 0x53, 0x52, 0x92,\n        0x96, 0x56, 0x57, 0x97, 0x55, 0x95, 0x94, 0x54, 0x9C, 0x5C,\n        0x5D, 0x9D, 0x5F, 0x9F, 0x9E, 0x5E, 0x5A, 0x9A, 0x9B, 0x5B,\n        0x99, 0x59, 0x58, 0x98, 0x88, 0x48, 0x49, 0x89, 0x4B, 0x8B,\n        0x8A, 0x4A, 0x4E, 0x8E, 0x8F, 0x4F, 0x8D, 0x4D, 0x4C, 0x8C,\n        0x44, 0x84, 0x85, 0x45, 0x87, 0x47, 0x46, 0x86, 0x82, 0x42,\n        0x43, 0x83, 0x41, 0x81, 0x80, 0x40\n};\n\nunsigned int calculateCRC(unsigned char *regs, unsigned char arraySize) {\n    unsigned int uiCRCHi = 0xFF;              /* \u9ad8CRC\u5b57\u8282\u521d\u59cb\u5316  */\n    unsigned int uiCRCLo = 0xFF;              /* \u4f4eCRC \u5b57\u8282\u521d\u59cb\u5316 */\n    unsigned char uIndex;                      /* CRC\u5faa\u73af\u4e2d\u7684\u7d22\u5f15  */\n    while (arraySize--) {                  /* \u4f20\u8f93\u6d88\u606f\u7f13\u51b2\u533a   */\n        uIndex = (char) uiCRCHi ^ *regs++; /* \u8ba1\u7b97CRC          */\n        uiCRCHi = uiCRCLo ^ (int) c_aucCRCHi[uIndex];\n        uiCRCLo = (int) c_aucCRCLo[uIndex];\n    }\n    return (uiCRCHi &lt;&lt; 8 | uiCRCLo);\n}\n</code></pre> <p>\u5e94\u7b54\u51fd\u6570\uff1a</p> <pre><code>void my_response(unsigned char frame[]) {\n    crc16 = ((frame[bufferSize - 2] &lt;&lt; 8) | frame[bufferSize - 1]);\n    //\u6821\u9a8c\u901a\u8fc7\u540e\u6267\u884c\n    if (calculateCRC(&amp;frame[0], bufferSize - 2) == crc16) {\n        dataSize = ((frame[4] &lt;&lt; 8) | frame[5]);\n        responseSize = 5 + dataSize * 2;\n        unsigned char response[responseSize];\n        response[0] = frame[0]; //\u5730\u5740\u7801\n        response[1] = frame[1];  //\u529f\u80fd\u7801\n        response[2] = dataSize * 2;  //\u6570\u636e\u957f\u5ea6\n        unsigned int index = 3;\n        for (unsigned int i = 0; i &lt; dataSize; i++) {\n            temp = analogRead(analogPins[i]);\n            response[index] = temp &gt;&gt; 8;\n            index++;\n            response[index] = temp &amp; 0xFF;\n            index++;\n        }\n        crc16 = calculateCRC(&amp;response[0], responseSize - 2);\n        response[responseSize - 2] = crc16 &gt;&gt; 8;  //\u586b\u5199\u6821\u9a8c\u4f4d\n        response[responseSize - 1] = crc16 &amp; 0xFF;\n        Serial.write(&amp;response[0], responseSize);\n        responseSize = 0;\n        lastReadTime = micros();  //\u63a5\u6536\u5230\u5b57\u7b26\u91cd\u542ft3.5\n    }\n}\n</code></pre> <p>\u4e3b\u51fd\u6570\uff1a</p> <pre><code>void setup() {\n    // \u542f\u52a8\u4e32\u53e3\u901a\u8baf\n    Serial.begin(115200);\n    Serial.println();\n}\n\n//01 04 00 01 00 04 __ __\n//01 04 __ 03 FF 03 FF 03 FF 03 FF __ __\nvoid loop() {\n    if (Serial.available()) {\n        Serial.readBytes(frame, bufferSize);\n        lastReadTime = micros();  //\u63a5\u6536\u5230\u5b57\u7b26\u91cd\u542ft3.5\n        my_response(frame);\n    }\n}\n</code></pre> <ol> <li> <p>CSDN\uff0c@\u6709\u65f6\u7231\u778e\u6298\u817e\uff0carduino\u6a21\u62dfmodbus\u4ece\u7ad9 \u21a9\u21a9</p> </li> <li> <p>Gitee\uff0c@\u90d1\u6377\uff0cArduino\u7684Modbus\u901a\u8baf\u5e93  \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/4%EF%B8%8F%E2%83%A3%20%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%BC%96%E7%A8%8B/B/","title":"\ud83c\udfc9 macOS\u4e0bArduino\u7f16\u7a0b","text":""},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/4%EF%B8%8F%E2%83%A3%20%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%BC%96%E7%A8%8B/B/#_1","title":"\u58f9\u4e28\u5b89\u88c5\u8f6f\u4ef6","text":"<p>\u5b98\u7f51\u4e0b\u8f7d\u5b89\u88c5</p>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/4%EF%B8%8F%E2%83%A3%20%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%BC%96%E7%A8%8B/B/#_2","title":"\u8d30\u4e28\u5e93\u6587\u4ef6\u4f7f\u7528","text":"<p>\u5e94\u7528\u7a0b\u5e8f\u2014\u2014Arduino\u2014\u2014\u663e\u793a\u5305\u5185\u5bb9\u2014\u2014Contents\u2014\u2014Java\u2014\u2014libraries\uff0c\u5c06\u5e93\u6587\u4ef6\u5939\u79fb\u52a8\u5230\u8fd9\u91cc</p>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%8F%20C/4%EF%B8%8F%E2%83%A3%20%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%BC%96%E7%A8%8B/B/#_3","title":"\u53c1\u4e28\u67e5\u770b\u4e32\u53e3\u5730\u5740","text":"<pre><code>ls /dev/cu.usbserial-*\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%90%20Rust/A/","title":"Rust\u5b89\u88c5\u4e0e\u66f4\u65b0","text":""},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%90%20Rust/A/#_1","title":"\u58f9\u4e28\u5b89\u88c5\u66f4\u65b0\u5e38\u7528\u547d\u4ee4","text":"<p>\u66f4\u65b0Rust\uff1a</p> <pre><code>rustup update\n</code></pre> <p>\u5378\u8f7d\uff1a</p> <pre><code>rustup self uninstall\n</code></pre> <p>\u6dfb\u52a0\u7ec4\u4ef6\uff1a</p> <pre><code>rustup component add rustfmt\n</code></pre> <p>\u67e5\u770b\u7248\u672c\uff1a</p> <pre><code>rustup --version\n</code></pre> Rust\u4e24\u79cd\u7248\u672c\uff1aStable\u548cNightly <p>Stable\uff1a\u7a33\u5b9a\u53ef\u9760\u7248\u672c\uff0c\u9002\u7528\u4e8e\u5927\u591a\u6570\u751f\u4ea7\u73af\u5883</p> <p>Nightly\uff1a\u6bcf\u65e5\u6784\u5efa\u7684\u6700\u65b0\u7248\u672c\uff0c\u5305\u542b\u5b9e\u9a8c\u6027\u7279\u6027\uff0c\u4e0d\u9002\u7528\u4e8e\u751f\u4ea7\u73af\u5883</p> <p>\u5b89\u88c5\uff1a</p> <pre><code>rustup install stable/nightly\n</code></pre> <p>\u5207\u6362\uff1a</p> <pre><code>rustup default stable/nightly\n</code></pre> <p>\u7f16\u8bd1\u4e8c\u8fdb\u5236\u6587\u4ef6</p> <pre><code>rustc -o out_file file.rs\n</code></pre> <p>\u7f16\u8bd1\u6210\u5e93\u6587\u4ef6</p> <pre><code>rustc --crate-type lib file.rs\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%90%20Rust/B/","title":"B","text":"<p>\u521b\u5efa\uff1a</p> <pre><code>cargo new project_name\n</code></pre> <pre><code>cargo new --lib project_name\n</code></pre> <p>\u6784\u5efa\u9879\u76ee</p> <pre><code>cargo build\n</code></pre> <pre><code># \u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5e38\u7528\u4e8e\u751f\u4ea7\u73af\u5883\ncargo build --release\n</code></pre> <p>\u68c0\u6d4b</p> <pre><code>cargo check\n</code></pre> <p>\u8fd0\u884c/\u6d4b\u8bd5</p> <pre><code>cargo run\n</code></pre> <pre><code>cargo test\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%90%20Rust/1%EF%B8%8F%E2%83%A3%20%E5%AE%89%E8%A3%85%E4%B8%8E%E6%9B%B4%E6%96%B0/A/","title":"\ud83c\udf80 Rust\u5b89\u88c5","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u5b98\u7f51\u4e0b\u8f7d<code>rustup-init.ext</code>\u5230<code>~/Downloads</code></p> <p>\u7b2c\u4e8c\u6b65\uff0c\u6253\u5f00Powershell\uff0c\u914d\u7f6e\u4ee3\u7406</p> <pre><code>$proxy='http://&lt;UserName&gt;:&lt;Password&gt;@&lt;IP&gt;:&lt;PORT&gt;'\n\n$ENV:HTTP_PROXY=$proxy \n$ENV:HTTPS_PROXY=$proxy\n</code></pre> <p>\u7136\u540e\uff1a</p> <pre><code>$ENV:RUSTUP_DIST_SERVER='https://mirrors.ustc.edu.cn/rust-static' \n$ENV:RUSTUP_UPDATE_ROOT='https://mirrors.ustc.edu.cn/rust-static/rustup'\n</code></pre> <p>\u7b2c\u4e09\u6b65\uff0c\u5b89\u88c5</p> <pre><code>cd Downloads\n.\\rustup-init.exe\n</code></pre> <p>\u4f7f\u7528GNU\u7248\u672c\uff0c\u907f\u514d\u5b89\u88c5Visual Studio</p> <p>\u7b2c\u4e00\u6b65\uff0c\u9009\u62e9<code>2)  Customize installation</code></p> <p>\u7b2c\u4e8c\u6b65\uff0c<code>Default host triple? [x86_64-pc-windows-msvc]</code>\u4e0b\u8f93\u5165<code>x86_64-pc-windows-gnu</code>\uff0c\u5373\u81ea\u5b9a\u4e49\u6210GNU\uff1b\u5176\u4ed6\u9ed8\u8ba4</p> <p>\u7b2c\u4e09\u6b65\uff0c\u4fee\u6539\u5b8c\u6210\u540e\u663e\u793a\uff1a</p> <pre><code>Current installation options:\n\n\ndefault host triple: x86_64-pc-windows-gnu\n  default toolchain: stable\n            profile: default\nmodify PATH variable: yes\n</code></pre> <p>\u9009\u62e9<code>1) Proceed with selected options (default - just press enter)</code>\u5b8c\u6210\u5b89\u88c5</p>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%90%20Rust/1%EF%B8%8F%E2%83%A3%20%E5%AE%89%E8%A3%85%E4%B8%8E%E6%9B%B4%E6%96%B0/A/#_1","title":"\u8e29\u5751\u6307\u5357","text":""},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%90%20Rust/1%EF%B8%8F%E2%83%A3%20%E5%AE%89%E8%A3%85%E4%B8%8E%E6%9B%B4%E6%96%B0/A/#1-error-linking-withcmingw64bingccexefailed-exit-code-1","title":"1. \u62a5\u9519<code>error: linking with</code>C:\\mingw64\\bin\\gcc.exe<code>failed: exit code: 1</code>","text":"<p>\u3010\u95ee\u9898\u5206\u6790\u3011</p> <p>mingw64\u4e0d\u517c\u5bb9\u5bfc\u81f4\uff0c\u9700\u8981\u66ff\u6362\u4e3aUCRT runtime\u7684\u7248\u672c<sup>1</sup><sup>2</sup></p> <p>\u3010\u89e3\u51b3\u65b9\u6cd5\u3011</p> <p>\u4ecewinlibs.com<sup>2</sup>\u4e0b\u8f7dMinGW64\uff0c\u7136\u540e\u66ff\u6362\u539f\u6709\u6587\u4ef6</p> <ol> <li> <p>GitHub Issues\uff0cerror: linking with x86_64-w64-mingw32-gcc failed: exit code: 1 #91146 \u21a9</p> </li> <li> <p>winlibs.com\uff0cWinLibs standalone build of GCC and MinGW-w64 for Windows \u21a9\u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%90%20Rust/1%EF%B8%8F%E2%83%A3%20%E5%AE%89%E8%A3%85%E4%B8%8E%E6%9B%B4%E6%96%B0/B/","title":"Rust\u5b89\u88c5\u4e0e\u66f4\u65b0","text":""},{"location":"%F0%9F%8E%88%20%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/%F0%9F%8D%90%20Rust/1%EF%B8%8F%E2%83%A3%20%E5%AE%89%E8%A3%85%E4%B8%8E%E6%9B%B4%E6%96%B0/B/#_1","title":"\u58f9\u4e28\u5b89\u88c5\u66f4\u65b0\u5e38\u7528\u547d\u4ee4","text":"<p>\u66f4\u65b0Rust\uff1a</p> <pre><code>rustup update\n</code></pre> <p>\u5378\u8f7d\uff1a</p> <pre><code>rustup self uninstall\n</code></pre> <p>\u6dfb\u52a0\u7ec4\u4ef6\uff1a</p> <pre><code>rustup component add rustfmt\n</code></pre> <p>\u67e5\u770b\u7248\u672c\uff1a</p> <pre><code>rustup --version\n</code></pre> Rust\u4e24\u79cd\u7248\u672c\uff1aStable\u548cNightly <p>Stable\uff1a\u7a33\u5b9a\u53ef\u9760\u7248\u672c\uff0c\u9002\u7528\u4e8e\u5927\u591a\u6570\u751f\u4ea7\u73af\u5883</p> <p>Nightly\uff1a\u6bcf\u65e5\u6784\u5efa\u7684\u6700\u65b0\u7248\u672c\uff0c\u5305\u542b\u5b9e\u9a8c\u6027\u7279\u6027\uff0c\u4e0d\u9002\u7528\u4e8e\u751f\u4ea7\u73af\u5883</p> <p>\u5b89\u88c5\uff1a</p> <pre><code>rustup install stable/nightly\n</code></pre> <p>\u5207\u6362\uff1a</p> <pre><code>rustup default stable/nightly\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/","title":"\ud83c\udf88 \u524d\u7aef","text":"<ul> <li> <p> \u73af\u5883\u914d\u7f6e</p> <p> Getting started</p> </li> <li> <p> MkDocs</p> <p> Getting started</p> </li> <li> <p> MinIO</p> <p> Getting started</p> </li> <li> <p> Markdown</p> <p> Getting started</p> </li> <li> <p> Apache</p> <p> Getting started</p> </li> <li> <p> Hexo</p> <p> Getting started</p> </li> <li> <p> \u5b57\u4f53</p> <p> Getting started</p> </li> <li> <p> Notion</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/","title":"\ud83c\udf88 \u524d\u7aef/1\ufe0f\u20e3 \u73af\u5883\u914d\u7f6e","text":"<ul> <li> <p>WebStorm\u73af\u5883\u914d\u7f6e</p> <p> Getting started</p> </li> <li> <p>\u5e38\u7528NPM\u5de5\u5177</p> <p> Getting started</p> </li> <li> <p>\u524d\u7aef\u5e38\u7528CDN\u7f51\u7ad9</p> <p> Getting started</p> </li> <li> <p>\u5b89\u88c5NodeJS</p> <p> Getting started</p> </li> <li> <p>NPM\u67e5\u770b\u8f6f\u4ef6\u7248\u672c</p> <p> Getting started</p> </li> <li> <p>NPM\u642d\u5efa\u7f51\u9875\u670d\u52a1\u5668</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/A/","title":"\ud83e\udda2 WebStorm\u73af\u5883\u914d\u7f6e","text":"<p>\u63d2\u4ef6\uff1a</p> <ul> <li>Chinese\uff08Simplified\uff09Language Pack/\u4e2d\u6587\u8bed\u8a00\u5305 </li> <li>WebP Support\u2014\u2014\u652f\u6301<code>.webp</code>\u56fe\u7247</li> <li>IKun Progress\u2014\u2014\u4e2a\u6027\u5316\u8fdb\u5ea6\u6761</li> <li>Full Line Code Completion\u2014\u2014\u4ee3\u7801\u8865\u5168\u5de5\u5177</li> <li>SonarLint\u2014\u2014\u4ee3\u7801\u68c0\u67e5\u5de5\u5177</li> </ul> <p>\u5de5\u5177\u2014\u2014File Watcher\u201c</p> <ul> <li><code>CSSO CSS Optimizer</code></li> <li><code>Sass</code></li> <li><code>Less</code></li> <li><code>SCSS</code></li> <li><code>UglifyJS</code></li> </ul>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/AA/","title":"\ud83d\udc14 \u5e38\u7528NPM\u5de5\u5177","text":""},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/AA/#1-csso","title":"1. CSSO","text":"<p>CSSO\uff08CSS Optimizer\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u4f18\u5316CSS\uff08\u5c42\u53e0\u6837\u5f0f\u8868\uff09\u4ee3\u7801\u7684\u5de5\u5177\u3002\u5b83\u53ef\u4ee5\u901a\u8fc7\u5220\u9664\u4e0d\u5fc5\u8981\u7684\u7a7a\u683c\u3001\u538b\u7f29\u4ee3\u7801\u3001\u5408\u5e76\u9009\u62e9\u5668\u7b49\u65b9\u5f0f\u6765\u51cf\u5c0fCSS\u6587\u4ef6\u7684\u5927\u5c0f\uff0c\u63d0\u9ad8\u7f51\u9875\u52a0\u8f7d\u901f\u5ea6\uff0c\u5e76\u51cf\u5c11\u7f51\u7edc\u4f20\u8f93\u7684\u6570\u636e\u91cf\u3002</p> <p>Terminal\u8fd0\u884c<sup>1</sup>\uff1a</p> <pre><code>sudo npm install -g csso-cli\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/AA/#2-sassscss","title":"2. Sass/SCSS","text":"<p>SCSS\u662f\u4e00\u79cdCSS\u9884\u5904\u7406\u5668\uff0c\u6269\u5c55\u4e86CSS\u7684\u529f\u80fd\uff0c\u5305\u62ec\u53d8\u91cf\u3001\u5d4c\u5957\u89c4\u5219\u3001\u6df7\u5408\u3001\u7ee7\u627f\u7b49\uff0c\u7b80\u5316\u4e86\u6837\u5f0f\u8868\u7684\u7f16\u5199\u8fc7\u7a0b\u3002</p> <p>Terminal\u8fd0\u884c<sup>2</sup>\uff1a</p> <pre><code>sudo npm install -g sass\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/AA/#3-less","title":"3. Less","text":"<p>Less\u662f\u4e00\u79cdCSS\u9884\u5904\u7406\u5668\uff0c\u589e\u52a0\u4e86\u53d8\u91cf\u3001\u5d4c\u5957\u89c4\u5219\u3001\u6df7\u5408\u7b49\u529f\u80fd\uff0c\u63d0\u4f9b\u66f4\u7075\u6d3b\u3001\u53ef\u7ef4\u62a4\u7684\u6837\u5f0f\u8868\u7f16\u5199\u65b9\u5f0f\u3002</p> <p>Terminal\u8fd0\u884c\uff1a</p> <pre><code>npm install --global less\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/AA/#4-uglifyjs","title":"4. UglifyJS","text":"<p>UglifyJS\u662f\u4e00\u4e2aJavaScript\u4ee3\u7801\u538b\u7f29\u5de5\u5177\uff0c\u80fd\u591f\u51cf\u5c0f\u6587\u4ef6\u5927\u5c0f\u3001\u63d0\u9ad8\u52a0\u8f7d\u901f\u5ea6\uff0c\u540c\u65f6\u4fdd\u6301\u4ee3\u7801\u7684\u529f\u80fd\u548c\u903b\u8f91\u4e0d\u53d8\u3002</p> <p>Terminal\u8fd0\u884c<sup>3</sup>\uff1a</p> <pre><code>sudo npm install --g uglify-js\n</code></pre> <ol> <li> <p>PyCharm\u6587\u6863\uff0cMinifying CSS \u21a9</p> </li> <li> <p>PyCharm\u6587\u6863\uff0cSass, SCSS, and Less \u21a9</p> </li> <li> <p>PyCharm\u6587\u6863\uff0cMinifying JavaScript \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/AAA/","title":"\ud83c\udfd0 \u524d\u7aef\u5e38\u7528CDN\u7f51\u7ad9","text":"\u540d\u79f0 \u7f51\u7ad9 BootCDN https://www.bootcdn.cn/ CDNJS https://cdnjs.com/ Staticfile CDN http://www.staticfile.org/ UNPKG https://unpkg.com/ jsDelivr https://www.jsdelivr.com/ jQuery CDN http://code.jquery.com/ 360 \u524d\u7aef\u9759\u6001\u8d44\u6e90\u5e93 https://cdn.baomitu.com/ \u4eca\u65e5\u5934\u6761\u9759\u6001\u8d44\u6e90\u516c\u5171\u5e93 http://cdn.bytedance.com/"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/B/","title":"\u26c4 \u5b89\u88c5NodeJS","text":""},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/B/#_1","title":"\u58f9\u4e28\u5b89\u88c5","text":"WindowsMacOSUbuntu <p>NodeJS\u5b98\u7f51\u4e0b\u8f7d\u5b89\u88c5\u5305\u5e76\u5b89\u88c5</p> <p>NodeJS\u5b98\u7f51\u4e0b\u8f7d\u5b89\u88c5\u5305\u5e76\u5b89\u88c5</p> <p>\u4ee5<code>18.13.0</code>\u957f\u671f\u7ef4\u62a4\u7248\u4e3a\u4f8b</p> <p>\u914d\u7f6e\u7248\u672c\uff1a</p> <pre><code>curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -\n</code></pre> <p>\u5b89\u88c5\uff1a</p> <pre><code>sudo apt-get install -y nodejs\nsudo apt install npm\n</code></pre> <p>\u9a8c\u8bc1</p> <p>\u67e5\u770b<code>nodejs</code>\u7248\u672c</p> <pre><code>node -v\n</code></pre> <p>\u67e5\u770b<code>npm</code>\u7248\u672c</p> <pre><code>npm -v\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/B/#npm","title":"\u8d30\u4e28NPM\u6362\u6e90","text":""},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/B/#1","title":"1. \u4fee\u6539\u6e90","text":"<p>\u65b0\u5efa\u5e76\u4fee\u6539<code>~/.npmrc</code></p> <pre><code>sudo nano ~/.npmrc\n</code></pre> ~/.npmrc<pre><code>registry=https://registry.npmmirror.com\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/B/#2","title":"2. \u67e5\u770b\u6e90","text":"<p>\u4fee\u6539\u540e\uff0c\u67e5\u770b\u5f53\u524d\u914d\u7f6e\u7684npm\u6e90\uff1a</p> <pre><code>npm config get registry\n</code></pre> <p>\u67e5\u770b\u5b8c\u6574\u7684npm\u914d\u7f6e\uff1a</p> <pre><code>npm config list\n</code></pre> <p>\u6267\u884c\u4e0a\u8ff0\u547d\u4ee4\u540e\uff0c\u5c06\u663e\u793a\u5b8c\u6574\u7684 npm \u914d\u7f6e\u4fe1\u606f\uff0c\u5176\u4e2d\u5305\u62ec\u6e90\uff08registry\uff09URL\u3001\u4ee3\u7406\u8bbe\u7f6e\u3001\u7f13\u5b58\u8def\u5f84\u7b49\u3002</p> <p>\u67e5\u770b\u5168\u5c40\u7684npm\u914d\u7f6e</p> <pre><code>npm config get registry --global\nnpm config list --global\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/C/","title":"\ud83c\udf59 NPM\u67e5\u770b\u8f6f\u4ef6\u7248\u672c","text":"<p>\u4ee5PicGo\u4e3a\u4f8b</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/C/#_1","title":"\u58f9\u4e28\u67e5\u770b\u670d\u52a1\u5668\u4e0a\u7248\u672c\u4fe1\u606f","text":""},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/C/#1","title":"1. \u67e5\u770b\u670d\u52a1\u5668\u4e0a\u5305\u7684\u6700\u65b0\u7248\u672c\u4fe1\u606f","text":"<pre><code>npm view picgo version\n</code></pre> <pre><code>1.5.5\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/C/#2-npmjs","title":"2. \u67e5\u770b<code>npmjs</code>\u670d\u52a1\u5668\u4e0a\u5305\u7684\u6700\u65b0\u7248\u672c\u4fe1\u606f","text":"<pre><code>npm view picgo versions\n</code></pre> <pre><code>[\n  '1.0.0',          '1.0.1',          '1.0.2',          '1.0.3',\n  ...\n  '1.5.5'\n]\n</code></pre> <p>\u4f7f\u7528<code>info</code>\u83b7\u53d6\u66f4\u591a\u4fe1\u606f</p> <pre><code>npm info picgo\n</code></pre> <pre><code>picgo@1.5.5 | MIT | deps: 25 | versions: 97\nA tool for picture uploading\nhttps://github.com/PicGo/PicGo-Core#readme\n\n...\n\ndist-tags:\nalpha: 1.5.0-alpha.17  latest: 1.5.5          \n\npublished a week ago by molunerfinn &lt;marksz@teamsz.xyz&gt;\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/C/#_2","title":"\u8d30\u4e28\u67e5\u770b\u672c\u5730\u5b89\u88c5\u5305\u7684\u7248\u672c\u4fe1\u606f","text":""},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/C/#1_1","title":"1. \u67e5\u770b\u672c\u5730\u7248\u672c\u4fe1\u606f","text":"<pre><code>npm ls picgo\n</code></pre> <pre><code>/home/mastermao/Downloads\n\u2514\u2500\u2500 (empty)\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/C/#2","title":"2. \u67e5\u770b\u672c\u5730\u5168\u5c40\u5b89\u88c5\u7684\u7248\u672c\u4fe1\u606f","text":"<pre><code>npm ls picgo -g\n</code></pre> <pre><code>/usr/local/lib\n\u2514\u2500\u2500 picgo@1.5.5\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/D/","title":"\ud83c\udfb3 NPM\u642d\u5efa\u7f51\u9875\u670d\u52a1\u5668","text":"<p>\u672c\u5730\u5feb\u901f\u642d\u5efa\u4e00\u4e2a\u7b80\u5355\u7684Web\u670d\u52a1\u5668\u6765\u5c55\u793a\u7f51\u9875</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/D/#1-http-server","title":"1. http-server\u5de5\u5177","text":"<p>\u4e00\u4e2a\u7b80\u5355\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u53ef\u4ee5\u542f\u52a8\u4e00\u4e2a\u57fa\u4e8eNode.js\u7684HTTP\u670d\u52a1\u5668</p> <pre><code>npm install -g http-server\n</code></pre> <p>\u8fdb\u5165\u9879\u76ee\u76ee\u5f55\uff0c\u6267\u884c\uff1a</p> <pre><code>http-server\n</code></pre> <p>\u7136\u540e\u5728<code>http://localhost:8000</code>\u5c55\u793a\u9879\u76ee</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/1%EF%B8%8F%E2%83%A3%20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/D/#2-live-server","title":"2. live-server","text":"<p>\u4e00\u4e2a\u652f\u6301\u70ed\u91cd\u8f7d\u7684\u5f00\u53d1\u670d\u52a1\u5668\uff0c\u5728\u4fdd\u5b58\u6587\u4ef6\u65f6\u81ea\u52a8\u91cd\u65b0\u52a0\u8f7d\u9875\u9762</p> <pre><code>npm install -g live-server\n</code></pre> <p>\u8fdb\u5165\u9879\u76ee\u76ee\u5f55\uff0c\u6267\u884c\uff1a</p> <pre><code>live-server\n</code></pre> <p>\u7136\u540e\u5728<code>http://localhost:8080</code>\u5c55\u793a\u9879\u76ee</p> <p>\u4e0a\u8ff0\u5de5\u5177\u4ec5\u9002\u5408\u672c\u5730\u5f00\u53d1\u6d4b\u8bd5\uff0c\u5982\u679c\u8981\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u6258\u7ba1\u9879\u76ee\uff0c\u9700\u8981\u4f7f\u7528Nginx\u6216Apache\u7b49\u670d\u52a1\u5668</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/","title":"\ud83c\udf88 \u524d\u7aef/2\ufe0f\u20e3 MkDocs","text":"<ul> <li> <p>Mkdocs\u65b0\u5efa\u73af\u5883</p> <p> Getting started</p> </li> <li> <p>MkDocs\u8bed\u6cd5\u5907\u5fd8</p> <p> Getting started</p> </li> <li> <p>MkDocs\u90e8\u7f72</p> <p> Getting started</p> </li> <li> <p>MkDocs\u63d2\u4ef6</p> <p> Getting started</p> </li> <li> <p>MkDocs\u914d\u7f6e</p> <p> Getting started</p> </li> <li> <p>mkdocstrings-python\u7ecf\u9a8c\u603b\u7ed3</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/A/","title":"\ud83d\ude00 Mkdocs\u65b0\u5efa\u73af\u5883","text":"<p>MkDocs\u662f\u4e00\u4e2a\u5feb\u901f\u3001\u7b80\u5355\u3001\u534e\u4e3d\u7684\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\uff0c\u9002\u7528\u4e8e\u6784\u5efa\u9879\u76ee\u6587\u6863\u3002\u6587\u6863\u6e90\u7801\u4f7f\u7528Markdown\u6765\u64b0\u5199\uff0c\u7528\u4e00\u4e2aYAML\u6587\u4ef6\u4f5c\u4e3a\u914d\u7f6e\u6587\u4ef6\u3002\u5b83\u53ef\u4ee5\u6784\u5efa\u9759\u6001HTML\u7ad9\u70b9\u5e76\u6258\u7ba1\u5230GitHub Pages\u7b49\u5730\u65b9\u3002\u4e3b\u9898\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u3002</p> <p>Material for MkDocs\u662f\u4e00\u4e2aMkDocs\u7684\u4e3b\u9898\uff08\u6bcf\u6708\u4e0b\u8f7d\u91cf\u6700\u591a\uff09\uff0cMaterial for MkDocs\u7279\u70b9\u5305\u62ec\u5f00\u6e90\u3001\u5185\u7f6e\u641c\u7d22\u3001\u4ee3\u7801\u6ce8\u91ca\u3001\u793e\u4ea4\u5361\u4e0eemoji\u652f\u6301</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/A/#_1","title":"\u58f9\u4e28\u65b0\u5efa\u73af\u5883","text":"<pre><code>rye add mkdocs-material mkdocs-glightbox neoteroi-mkdocs fonttools mkdocs-jupyter mkdocstrings-python\n</code></pre> <p>\u5b89\u88c5MkDocs</p> <pre><code>rye add mkdocs-material\n</code></pre> <p>\u5b89\u88c5<code>glightbox</code></p> <pre><code>rye add mkdocs-glightbox\n</code></pre> <p>\u5b89\u88c5\u6269\u5c55\u63d2\u4ef6</p> <p>Roberto Prevato\u7f16\u5199\u7684\u51e0\u4e2aMkDocs\u63d2\u4ef6</p> <pre><code>rye add neoteroi-mkdocs\n</code></pre> <p>MkDocs-Jupyter</p> <p>MkDocs-Jupyter\uff1a\u5728MkDocs\u4e2d\u4f7f\u7528Jupyter Notebook</p> <pre><code>rye add mkdocs-jupyter\n</code></pre> <p>\u5f53\u62a5\u9519<code>ImportError: cannot import name 'AstRenderer' from 'mistune.renderers' (/home/MasterMao/anaconda3/envs/MasterMaoPy311/lib/python3.11/site-packages/mistune/renderers/__init__.py)</code>\u65f6\uff0c\u9700\u8981\u66f4\u65b0\u4e0b<code>mistune</code>\uff1a</p> <pre><code>rye add mistune==3.0.1\n</code></pre> <p>\u5b57\u4f53\u5de5\u5177</p> <pre><code>rye add fonttools\n</code></pre> <p>mkdocstrings-python</p> <pre><code>rye add mkdocstrings-python\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/A/#_2","title":"\u8d30\u4e28\u5e38\u7528\u547d\u4ee4","text":"<p>\u521b\u5efa\u5de5\u7a0b <pre><code>mkdocs new [dir-name]\n</code></pre> \u5b9e\u65f6\u9884\u89c8 <pre><code>mkdocs serve\n</code></pre> \u6784\u5efa\u7ad9\u70b9 <pre><code>mkdocs build\n</code></pre> \u6253\u5370\u5e2e\u52a9\u4fe1\u606f <pre><code>mkdocs -h\n</code></pre></p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/B/","title":"\ud83d\ude06 MkDocs\u8bed\u6cd5\u5907\u5fd8","text":""},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/B/#1","title":"1. \u94fe\u63a5\u5728\u65b0\u6807\u7b7e\u9875\u6253\u5f00","text":"<pre><code>[:fontawesome-solid-paper-plane:](http://baidu.com){:target=\"_blank\" .md-button}\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/B/#2-markdown","title":"2. Markdown\u63d2\u5165\u8868\u60c5","text":"<p><pre><code>:bootstrap-envelope-paper:\n</code></pre> </p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/B/#3","title":"3. \u7f29\u5199\u8bed\u6cd5\u8bcd\u6c47\u8868","text":"<p>\u8bcd\u6c47\u8868\uff1a ./lib/abbreviations.md<pre><code>*[HTML]: Hyper Text Markup Language\n*[W3C]: World Wide Web Consortium\n</code></pre></p> <p>The HTML specification is maintained by the W3C.</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/B/#4","title":"4. \u6807\u6ce8\u8bed\u6cd5","text":"<p>\u53ef\u7528\u5305\u62ec\uff1anote\u3001abstract\u3001info\u3001tip\u3001success\u3001question\u3001warning\u3001failure\u3001danger\u3001bug\u3001example\u3001quote</p> <pre><code>!!! note \"Phasellus posuere in sem ut cursus\"\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> <p>Phasellus posuere in sem ut cursus</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <pre><code>??? note\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n???+ note\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> Note <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>\u5185\u8054\u5757\uff1a</p> <p>Info</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <pre><code>!!! info inline end\n\n    Lorem ipsum dolor sit amet, consectetur\n    adipiscing elit. Nulla et euismod nulla.\n    Curabitur feugiat, tortor non consequat\n    finibus, justo purus auctor massa, nec\n\n    semper lorem quam in massa.\n</code></pre> <p>Info</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <pre><code>!!! info inline\n\n    Lorem ipsum dolor sit amet, consectetur\n    adipiscing elit. Nulla et euismod nulla.\n    Curabitur feugiat, tortor non consequat\n    finibus, justo purus auctor massa, nec\n\n    semper lorem quam in massa.\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/B/#5","title":"5. \u6309\u94ae","text":"<p><pre><code>[\u6309\u94ae](#){ .md-button }\n</code></pre> \u6309\u94ae</p> <p><pre><code>[\u6309\u94ae](#){ .md-button .md-button--primary }\n</code></pre> \u6309\u94ae</p> <p><pre><code>[\u6309\u94ae :fontawesome-solid-paper-plane:](#){ .md-button }\n</code></pre> \u6309\u94ae </p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/B/#6","title":"6. \u4ee3\u7801\u6807\u9898","text":"<pre><code>'''python title=\"./script.py\"\nimport numpy as np\n\narray = np.array([1,2,3,4])\n'''\n</code></pre> ./script.py<pre><code>import numpy as np\n\narray = np.array([1,2,3,4])\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/B/#7","title":"7. \u4ee3\u7801\u5757\u5206\u7ec4","text":"<pre><code>=== \"C\"\n\n    ``` c\n    #include &lt;stdio.h&gt;\n\n    int main(void) {\n      printf(\"Hello world!\\n\");\n      return 0;\n    }\n</code></pre> C++ <pre><code>#include &lt;iostream&gt;\n\nint main(void) {\n  std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre> <pre><code>=== \"C\"\n\n    ``` c\n    #include &lt;stdio.h&gt;\n\n    int main(void) {\n      printf(\"Hello world!\\n\");\n      return 0;\n    }\n</code></pre> C++ <pre><code>#include &lt;iostream&gt;\n\nint main(void) {\n  std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/B/#8","title":"8. \u811a\u6ce8","text":"<p><pre><code>Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2]\n</code></pre> Lorem ipsum<sup>1</sup> dolor sit amet, consectetur adipiscing elit.<sup>2</sup></p> <pre><code>[^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n[^2]:\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/B/#9","title":"9. \u5e26\u989c\u8272\u7684\u56fe\u6807","text":"<pre><code>@keyframes heart {\n  0%, 40%, 80%, 100% {\n    transform: scale(1);\n  }\n  20%, 60% {\n    transform: scale(1.15);\n  }\n}\n.heart {\n  animation: heart 1000ms infinite;\n  color: #FF0000;\n}\n&lt;/style&gt;\n\n:octicons-heart-fill-24:{ .heart }\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/B/#10","title":"10. \u56fe\u50cf\u8bbe\u7f6e","text":"<pre><code>![Image title](https://dummyimage.com/600x400/eee/aaa){ xxx }\n</code></pre> <p>\u5de6\u5bf9\u9f50\u3001\u53f3\u5bf9\u9f50 <pre><code>{ align=left }\n{ align=right }\n</code></pre></p> <p>\u5ef6\u8fdf\u52a0\u8f7d <pre><code>{ loading=lazy }\n</code></pre></p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/B/#10_1","title":"10. \u4efb\u52a1\u5217\u8868","text":"<pre><code>- [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit\n- [ ] Vestibulum convallis sit amet nisi a tincidunt\n    * [x] In hac habitasse platea dictumst\n    * [x] In scelerisque nibh non dolor mollis congue sed et metus\n    * [ ] Praesent sed risus massa\n- [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque\n</code></pre> <ul> <li> Lorem ipsum dolor sit amet, consectetur adipiscing elit</li> <li> Vestibulum convallis sit amet nisi a tincidunt<ul> <li> In hac habitasse platea dictumst</li> <li> In scelerisque nibh non dolor mollis congue sed et metus</li> <li> Praesent sed risus massa</li> </ul> </li> <li> Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque</li> </ul> <ol> <li> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.\u00a0\u21a9</p> </li> <li> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.\u00a0\u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/C/","title":"\ud83d\ude0d MkDocs\u90e8\u7f72","text":""},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/C/#pythonmkdocs","title":"\u58f9\u4e28\u57fa\u4e8ePython\u7684Mkdocs\u90e8\u7f72<sup>1</sup>\uff08\u4e0d\u63a8\u8350\uff09","text":"<p>Python\u90e8\u7f72\u7684HTTP\u670d\u52a1\u5668\u4e0d\u7a33\u5b9a\uff0c\u591a\u4e2a\u7528\u6237\u8bbf\u95ee\u4f1a\u53d1\u751f\u963b\u585e</p> <pre><code>import http.server\nimport socketserver\nfrom http import HTTPStatus\nfrom loguru import logger\nimport time\n\nPORT = 8848\n\nt_tmp = time.strftime('%Y%m%d%H')\nLOG_PATH = f'~/Log/{t_tmp}.txt'\n\nACCESS_DICT = {}\n\n\nclass MyHandler(http.server.SimpleHTTPRequestHandler):\n    def handle_one_request(self):\n        if self.client_address[0] in ACCESS_DICT.values():\n            logger.info(f'{self.client_address[0]} Accessed!')\n            return http.server.SimpleHTTPRequestHandler.handle_one_request(self)\n        else:\n            logger.warning(f'{self.client_address[0]} Denied!')\n            return 'IP Block!!'\n\n\nif __name__ == '__main__':\n    trace = logger.add(LOG_PATH, encoding='utf-8')\n    with socketserver.TCPServer((\"\", PORT), MyHandler) as httpd:\n        logger.info(f'Server Running at Port: {PORT}')\n        # Get\u8bf7\u6c42\n        # logger.info(httpd.get_request())\n        httpd.serve_forever()\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/C/#npmweb","title":"\u8d30\u4e28\u57fa\u4e8eNpm\u642d\u5efa\u7b80\u5355\u7684Web\u670d\u52a1\u5668","text":"<p>\u8f83\u9002\u5408\u672c\u5730\u5f00\u53d1\u6d4b\u8bd5\u3002\u5982\u679c\u8981\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u6258\u7ba1\u9879\u76ee\uff0c\u5efa\u8bae\u4f7f\u7528Nginx\u6216Apache\u7b49\u670d\u52a1\u5668</p> <p>\u5b89\u88c5<code>http-server</code>\u670d\u52a1\u5668\u5de5\u5177</p> <pre><code>npm install -g http-server\n</code></pre> <p>\u8fdb\u5165\u9879\u76ee\u76ee\u5f55\uff0c\u6267\u884c\uff1a</p> <pre><code>http-server\n</code></pre> <p>\u7136\u540e\u5728<code>http://localhost:8000</code>\u5c55\u793a\u9879\u76ee</p> <p>\u6216\u8005\u4f7f\u7528live-server</p> <p>\u4e00\u4e2a\u652f\u6301\u70ed\u91cd\u8f7d\u7684\u5f00\u53d1\u670d\u52a1\u5668\uff0c\u5728\u4fdd\u5b58\u6587\u4ef6\u65f6\u81ea\u52a8\u91cd\u65b0\u52a0\u8f7d\u9875\u9762</p> <pre><code>npm install -g live-server\n</code></pre> <p>\u8fdb\u5165\u9879\u76ee\u76ee\u5f55\uff0c\u6267\u884c\uff1a</p> <pre><code>live-server\n</code></pre> <p>\u7136\u540e\u5728<code>http://localhost:8080</code>\u5c55\u793a\u9879\u76ee</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/C/#apachewslubuntu","title":"\u53c1\u4e28\u57fa\u4e8eApache\u90e8\u7f72\u5728WSL/Ubuntu","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u5b89\u88c5Apache<sup>2</sup></p> <pre><code>sudo apt update\n</code></pre> <pre><code>sudo apt-get install apache2\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff0c\u4fee\u6539\u914d\u7f6e\u6587\u4ef6</p> <pre><code>sudo nano /etc/apache2/apache2.conf\n</code></pre> <p>\u6dfb\u52a0\u8bbf\u95ee\u6743\u9650\uff1a</p> <pre><code>+ &lt;Directory /mnt/c/Users/USER_NAME/mynote/site/&gt;\n+         Options Indexes FollowSymLinks\n+         AllowOverride None\n+         Require all granted\n+ &lt;/Directory&gt;\n</code></pre> <p>\u6dfb\u52a0IP\u767d\u540d\u5355\u7b56\u7565<sup>3</sup><sup>4</sup></p> <pre><code>sudo nano /etc/apache2/sites-enabled/000-default.conf\n</code></pre> <p>\u4fee\u6539</p> <pre><code>- DocumentRoot /var/www/html\n+ DocumentRoot /mnt/c/Users/USER_NAME/mynote/site\n</code></pre> <p>\u7b2c\u4e09\u6b65\uff0c\u542f\u52a8Apache Web Server</p> <pre><code>sudo service apache2 start\n</code></pre> <p>\u6253\u5f00<code>127.0.0.1</code>\u6216<code>192.168.x.x</code>\u9884\u89c8</p> <ol> <li> <p>coder.work\uff0cpython - \u5982\u4f55\u4ece SimpleHTTPServer \u83b7\u53d6\u5ba2\u6237\u7aef IP \u21a9</p> </li> <li> <p>DigitalOcean\uff0cHow To Install the Apache Web Server on Ubuntu 22.04 \u21a9</p> </li> <li> <p>CSDN\uff0c@\u7f51\u7edc\u4e0d\u5b89\u5168\uff0cApache\u8bbf\u95ee\u63a7\u5236\u7b56\u7565 \u21a9</p> </li> <li> <p>\u535a\u5ba2\u56ed\uff0c@\u4e0d\u4f1a\u4ee3\u7801\u7684\u5c0f\u5f3a\uff0capache \u7ad9\u70b9 \u53ea\u5141\u8bb8\u67d0IP \u6216\u662f\u67d0IP\u6bb5\u8bbf\u95ee \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/D/","title":"\ud83d\ude0e MkDocs\u63d2\u4ef6","text":""},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/D/#1-jupyter","title":"1. Jupyter\u63d2\u4ef6","text":"<p>\u63d2\u4ef6\u5730\u5740\uff1ahttps://github.com/danielfrg/mkdocs-jupyter</p> <p>\u5b89\u88c5\uff1a</p> <pre><code>pip install mkdocs-jupyter\n</code></pre> <p>\u914d\u7f6e\uff1a</p> mkdocs.yml<pre><code>plugins:\n  - mkdocs-jupyter:\n      ignore: [ \".ipynb_checkpoints/*.ipynb\" ]\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/D/#2","title":"2. \u6587\u6863\u52a0\u5bc6","text":"<p>\u63d2\u4ef6\u5730\u5740\uff1ahttps://unverbuggt.github.io/mkdocs-encryptcontent-plugin/</p> <pre><code>- encryptcontent:\n    title_prefix: '[LOCK]'\n    summary: '\u672c\u6587\u6863\u4e3a\u52a0\u5bc6\u5185\u5bb9'\n    placeholder: '\u8f93\u5165\u5bc6\u7801\uff0c\u6309CTRL+ENTER\u89e3\u9501'\n    decryption_failure_message: '\u5bc6\u7801\u9519\u8bef\uff01\uff01'\n    encryption_info_message: ''\n    input_class: 'md-search__form md-search__input'\n    button_class: 'md-search__icon'\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/D/#3","title":"3. \u9875\u811a\u4fe1\u606f","text":"<p>\u63d2\u4ef6\u5730\u5740\uff1ahttps://github.com/sondregronas/mkdocs-footermatter</p> <p>\u9700\u8981\u5c06<code>.css</code>\u3001<code>.html</code>\u7b49\u6587\u4ef6\u590d\u5236\u5230MkDocs\u7684\u5bf9\u5e94\u6587\u4ef6\u5939\u4e0b</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/D/#4","title":"4. \u4e00\u4e2a\u65b0\u7684\u4e3b\u9898","text":""},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/D/#5-pdf","title":"5. \u5bfc\u51faPDF","text":"<p>\u63d2\u4ef6\u5730\u5740\uff1ahttps://pypi.org/project/mkdocs-exporter/</p> <p>\u8fd8\u6ca1\u8bd5\u8fc7</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/D/#6-pdf","title":"6. \u63d2\u5165PDF","text":"<p>\u63d2\u4ef6\u5730\u5740\uff1ahttps://pypi.org/project/mkdocs-pdf/</p> <p>\u6216\u8005\u4f7f\u7528<code>embed</code>\u8bed\u6cd5</p> <pre><code>&lt;embed src=\"path/to/pdf\" width=\"100%\" height=\"900\"&gt;\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/D/#7","title":"7. \u5361\u7247\u3001\u65f6\u95f4\u8f74","text":"<p>\u63d2\u4ef6\u5730\u5740\uff1ahttps://www.neoteroi.dev/mkdocs-plugins/</p> <p>\u5f3a\u70c8\u63a8\u8350</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/D/#8","title":"8. \u62fc\u5199\u68c0\u67e5","text":"<p>\u63d2\u4ef6\u5730\u5740\uff1ahttps://pypi.org/project/mkdocs-spellcheck/</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/D/#9","title":"9. \u89c6\u9891\u63d2\u4ef6","text":"<p>\u63d2\u4ef6\u5730\u5740\uff1ahttps://pypi.org/project/mkdocs-video/</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/E/","title":"\ud83d\ude0e MkDocs\u914d\u7f6e","text":""},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/E/#1yaml","title":"1.\u542f\u7528\u4e3b\u9898&amp;\u6dfb\u52a0YAML\u652f\u6301\uff1a","text":"<p>```yaml ./mkdocs.yml</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/E/#yaml-language-server-schemahttpssquidfunkgithubiomkdocs-materialschemajson","title":"yaml-language-server: $schema=https://squidfunk.github.io/mkdocs-material/schema.json","text":"<p>theme:   name: material <pre><code>### 2.\u4e2a\u4eba\u914d\u7f6e\n\n\u7ea6\u5b9a\u4ee5\u4e0b\u754c\u9762\u90e8\u5206\u540d\u79f0\uff1a\n\n![navigation-tabs](https://my-gallery-1306340269.cos.ap-beijing.myqcloud.com/mastermao/navigation-tabs.webp)\n\n\u5168\u90e8\u914d\u7f6e\u5982\u4e0b\uff08\u5efa\u8bae\u770b\u4e00\u904d\u5b98\u7f51\u7684\u914d\u7f6e\u6559\u7a0b\uff09\uff1a\n\n```yaml\n# yaml-language-server: $schema=https://squidfunk.github.io/mkdocs-material/schema.json\n\nsite_name: \u4e00\u4e00\u98ce\u548c\u6a58's\u7b14\u8bb0\ntheme:\n  icon:\n    repo: fontawesome/brands/git-alt\n\n  # \u4e3b\u9898\u540d\u79f0\n  name: material\n  # \u6269\u5c55\u6750\u6599\n  custom_dir: overrides\n  # logo\n  logo: assets/logo.svg\n  # \u9996\u9875\n  #  homepage: mastermao.cn\n  # \u7f51\u7ad9\u56fe\u6807\n  favicon: assets/favicon.svg\n  # \u4e0d\u4f7f\u7528google fonts\n  font: false\n  # \u8bbe\u7f6e\u9875\u9762\u8bed\u8a00\n  language: zh\n  features:\n    # ==================\u9875\u9762\u8bbe\u7f6e==================\n    # \u5373\u65f6\u52a0\u8f7d\n    - navigation.instant\n    # \u951a\u70b9\u8ddf\u8e2a\n    - navigation.tracking\n    # \u951a\u70b9\u8ddf\u8e2a\u6eda\u52a8\uff08\u6587\u7ae0TOC\u6dfb\u52a0\u5230\u4fa7\u8fb9\u680f\uff09\n    #- toc.integrate\n    # \u8fd4\u56de\u9876\u90e8\n    - navigation.top\n    # \u6dfb\u52a0\u7ae0\u8282\u7d22\u5f15\n    # nav:\n    #  - Section:\n    #    - section/McDocs.md\n    #    - Page 1: section/page-1.md\n    #    ...\n    #    - Page n: section/page-n.md\n    - navigation.indexes\n    # ==================\u5bfc\u822a\u680f\u8bbe\u7f6e==================\n    # \u5bfc\u822a\u680f\u9009\u9879\u5361\n    - navigation.tabs\n    # \u5bfc\u822a\u680f\u59cb\u7ec8\u53ef\u89c1\n    #- navigation.tabs.sticky\n    # ==================\u4fa7\u8fb9\u680f\u8bbe\u7f6e==================\n    # \u5c55\u793a\u65b9\u5f0f\uff08\u591a\u7ea7\u6807\u9898or\u6298\u53e0\uff09\n    - navigation.sections\n    # \u4fa7\u8fb9\u680f\u4e0d\u6298\u53e0\n    #- navigation.expand\n    # ==================\u6807\u5934\u8bbe\u7f6e==================\n    # \u641c\u7d22\u7a81\u51fa\u663e\u793a\n    - search.highlight\n    # \u6807\u5934\u81ea\u52a8\u9690\u85cf\n    - header.autohide\n    # \u516c\u544a\u680f\u5173\u95ed\u6309\u94ae\n    - announce.dismiss\n    # ==================\u9875\u811a\u8bbe\u7f6e==================\n    # \u4e0a\u4e00\u9875\u4e0b\u4e00\u9875\n    #- navigation.footer\n    # ==================\u4ee3\u7801\u590d\u5236==================\n    - content.code.copy\n\n  palette:\n    # ==================\u4eae\u8272\u6a21\u5f0f==================\n    - media: \"(prefers-color-scheme: light)\"\n      # \u4eae/\u6697\n      scheme: default\n      # \u4e3b\u9898\u8272\n      primary: orange\n      # \u9ad8\u4eae\u8272\n      accent: indigo\n      # \u5207\u6362\u6309\u94ae\n      toggle:\n        icon: material/brightness-7\n        name: \u591c\u95f4\u6a21\u5f0f\n    # ==================\u6697\u8272\u6a21\u5f0f==================\n    - media: \"(prefers-color-scheme: dark)\"\n      scheme: slate\n      primary: teal\n      accent: indigo\n      toggle:\n        icon: material/brightness-4\n        name: \u65e5\u95f4\u6a21\u5f0f\n\n# \u81ea\u5b9a\u4e49CSS\nextra_css:\n  - stylesheets/extra.css\n\n# \u81ea\u5b9a\u4e49js\nextra_javascript:\n  - javascripts/extra.js\n  - javascripts/mathjax.js\n  - https://polyfill.io/v3/polyfill.min.js?features=es6\n  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\n\nmarkdown_extensions:\n\n  # Python Markdown\n  - abbr\n  - admonition\n  - attr_list\n  - def_list\n  - footnotes\n  - md_in_html\n  - toc:\n      permalink: true\n\n  # Python Markdown Extensions\n  - pymdownx.arithmatex:\n      generic: true\n  - pymdownx.betterem:\n      smart_enable: all\n  - pymdownx.caret\n  - pymdownx.details\n  - pymdownx.emoji:\n      emoji_index: !!python/name:materialx.emoji.twemoji\n      emoji_generator: !!python/name:materialx.emoji.to_svg\n      options:\n        custom_icons:\n          - overrides/.icons\n  - pymdownx.highlight:\n      linenums: true\n      linenums_style: pymdownx-inline\n  - pymdownx.inlinehilite\n  - pymdownx.keys\n  - pymdownx.mark\n  - pymdownx.smartsymbols\n  - pymdownx.superfences\n  - pymdownx.tabbed:\n      alternate_style: true\n  - pymdownx.tasklist:\n      custom_checkbox: true\n  - pymdownx.tilde\n  - pymdownx.snippets:\n      auto_append:\n        - lib/abbreviations.md\n\n# \u63d2\u4ef6\nplugins:\n  # \u641c\u7d22\n  - search:\n      separator: '[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&amp;[lg]t;'\n  - glightbox\n\nextra:\n  # \u9875\u811a\u793e\u4ea4\u8fde\u63a5\n  social:\n    - icon: fontawesome/brands/git\n      link: https://gitee.com/mastermao\n    - icon: fontawesome/brands/500px\n      link: https://500px.com.cn/MonsterMao\n    - icon: fontawesome/solid/envelope\n      link: mailto:wego_mao@hotmail.com\n    - icon: fontawesome/brands/weixin\n      link: assets/logo.svg\n\ncopyright: Copyright &amp;copy; 2023 - 2023 \u4e00\u4e00\u98ce\u548c\u6a58\n\nrepo_url: https://github.com/squidfunk/mkdocs-material\nrepo_name: squidfunk/mkdocs-material\n</code></pre></p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/F/","title":"\ud83d\ude0e mkdocstrings-python\u7ecf\u9a8c\u603b\u7ed3","text":"<p><code>mkdocstrings[python]</code> \u7528\u4e8e\u81ea\u52a8\u5316Python\u9879\u76ee\u7684\u6587\u6863\u751f\u6210\u3002\u5b83\u4e0e MkDocs \u914d\u5408\u4f7f\u7528\uff0c\u53ef\u4ee5\u4ece\u6e90\u4ee3\u7801\u4e2d\u63d0\u53d6\u6587\u6863\u5b57\u7b26\u4e32\uff0c\u5e76\u5c06\u5b83\u4eec\u8f6c\u6362\u4e3a\u6613\u4e8e\u9605\u8bfb\u7684\u683c\u5f0f\uff0c\u4ece\u800c\u4e3a\u9879\u76ee\u521b\u5efa\u6587\u6863\u3002</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/F/#_1","title":"\u58f9\u4e28\u5b89\u88c5\u53ca\u914d\u7f6e","text":"<p>1. \u5b89\u88c5\u65b9\u6cd5</p> <pre><code>rye add mkdocstrings[python]\n</code></pre> <p>2. \u914d\u7f6e</p> <pre><code>\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/2%EF%B8%8F%E2%83%A3%20MkDocs/F/#_2","title":"\u8d30\u4e28\u7ecf\u9a8c\u603b\u7ed3","text":"<ol> <li>\u76f4\u63a5\u5b9a\u4f4d\u5230\u51fd\u6570</li> </ol> <p><pre><code># Fetch202LongTimeBP\n\n::: PyPulse.DataSets.Fetch202LongTime\n</code></pre> 2. \u4e0d\u8981\u5728main\u4e2d\u5f15\u5165\u672c\u5305\uff0c\u5426\u5219\u4f1a\u5f15\u53d1\u5faa\u73af\u5f15\u7528\u9519\u8bef 3. \u6587\u6863\u4e2d\u76f4\u63a5\u5b9a\u4f4d\u5230\u51fd\u6570\u5c31\u4e0d\u4f1a\u8fdb\u5165\u811a\u672c\u5f00\u5934\u7684\u6ce8\u91ca</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/3%EF%B8%8F%E2%83%A3%20MinIO/","title":"\ud83c\udf88 \u524d\u7aef/3\ufe0f\u20e3 MinIO","text":"<ul> <li> <p>\u7b80\u5355\u4f7f\u7528</p> <p> Getting started</p> </li> <li> <p>ContentType\u6587\u4ef6\u7c7b\u578b</p> <p> Getting started</p> </li> <li> <p>MinIO\u642d\u5efa\u672c\u5730\u56fe\u5e8a</p> <p> Getting started</p> </li> <li> <p>MinIO\u7684Python\u4ea4\u4e92</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/3%EF%B8%8F%E2%83%A3%20MinIO/A/","title":"\ud83c\udf31 \u7b80\u5355\u4f7f\u7528","text":"<p>!!! \"\u8fd0\u884c\u670d\u52a1\"</p> <pre><code>.\\minio.exe server D:\\Bucket\n</code></pre> <p>!!! \"\u4fee\u6539\u5bc6\u7801\"</p> <pre><code>set MINIO_ACCESS_KEY=username\nset MINIO_SECRET_KEY=passwd\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/3%EF%B8%8F%E2%83%A3%20MinIO/B/","title":"\ud83c\udf50 ContentType\u6587\u4ef6\u7c7b\u578b","text":"<p>Content-Type\u5373\u5185\u5bb9\u7c7b\u578b\uff0c\u7528\u4e8e\u5b9a\u4e49\u7f51\u7edc\u6587\u4ef6\u7684\u7c7b\u578b\u548c\u7f51\u9875\u7684\u7f16\u7801\uff0c\u51b3\u5b9a\u6587\u4ef6\u63a5\u6536\u65b9\u5c06\u4ee5\u4ec0\u4e48\u5f62\u5f0f\u3001\u4ec0\u4e48\u7f16\u7801\u8bfb\u53d6\u8fd9\u4e2a\u6587\u4ef6\u3002</p> <p>ContentType\u5c5e\u6027\u6307\u5b9a\u54cd\u5e94\u7684 HTTP\u5185\u5bb9\u7c7b\u578b\uff0c\u5982\u679c\u672a\u6307\u5b9a\uff0c\u9ed8\u8ba4\u4e3aTEXT/HTML\u3002</p> <p>\u5e38\u89c1\u7684Content-Type<sup>1</sup></p> <pre><code>text/html : HTML\u683c\u5f0f\ntext/plain : \u7eaf\u6587\u672c\u683c\u5f0f      \ntext/xml : XML\u683c\u5f0f\n\nimage/gif : gif\u56fe\u7247\u683c\u5f0f    \nimage/jpeg : jpg\u56fe\u7247\u683c\u5f0f \nimage/png : png\u56fe\u7247\u683c\u5f0f\n\napplication/xml : XML\u6570\u636e\u683c\u5f0f\napplication/json : JSON\u6570\u636e\u683c\u5f0f\napplication/pdf : pdf\u683c\u5f0f  \napplication/msword : Word\u6587\u6863\u683c\u5f0f\napplication/octet-stream : \u4e8c\u8fdb\u5236\u6d41\u6570\u636e\uff08\u5982\u6587\u4ef6\u4e0b\u8f7d\uff09\n\nmultipart/form-data :  \u8868\u5355\u4e0a\u4f20\u6587\u4ef6\n</code></pre> \u66f4\u591aContent-Type <pre><code>.doc : application/msword\n.dot : application/msword\n.docx : application/vnd.openxmlformats-officedocument.wordprocessingml.document\n.dotx : application/vnd.openxmlformats-officedocument.wordprocessingml.template\n.docm : application/vnd.ms-word.document.macroEnabled.12\n.dotm : application/vnd.ms-word.template.macroEnabled.12\n.xls : application/vnd.ms-excel\n.xlt : application/vnd.ms-excel\n.xla : application/vnd.ms-excel\n.xlsx : application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\n.xltx : application/vnd.openxmlformats-officedocument.spreadsheetml.template\n.xlsm : application/vnd.ms-excel.sheet.macroEnabled.12\n.xltm : application/vnd.ms-excel.template.macroEnabled.12\n.xlam : application/vnd.ms-excel.addin.macroEnabled.12\n.xlsb : application/vnd.ms-excel.sheet.binary.macroEnabled.12\n.ppt : application/vnd.ms-powerpoint\n.pot : application/vnd.ms-powerpoint\n.pps : application/vnd.ms-powerpoint\n.ppa : application/vnd.ms-powerpoint\n.pptx : application/vnd.openxmlformats-officedocument.presentationml.presentation\n.potx : application/vnd.openxmlformats-officedocument.presentationml.template\n.ppsx : application/vnd.openxmlformats-officedocument.presentationml.slideshow\n.ppam : application/vnd.ms-powerpoint.addin.macroEnabled.12\n.pptm : application/vnd.ms-powerpoint.presentation.macroEnabled.12\n.potm : application/vnd.ms-powerpoint.template.macroEnabled.12\n.ppsm : application/vnd.ms-powerpoint.slideshow.macroEnabled.12\n</code></pre> <ol> <li> <p>CSDN\uff0c@way_more\uff0c\u5404\u79cd\u6587\u4ef6\u5bf9\u5e94\u7684ContentType\uff0c\u62ff\u6765\u5373\u7528 \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/3%EF%B8%8F%E2%83%A3%20MinIO/C/","title":"\ud83c\udf43 MinIO\u642d\u5efa\u672c\u5730\u56fe\u5e8a","text":""},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/3%EF%B8%8F%E2%83%A3%20MinIO/C/#_1","title":"\u58f9\u4e28\u4e3a\u4ec0\u4e48\u8981\u642d\u5efa\u672c\u5730\u56fe\u5e8a\uff1f","text":"<p>\u7531\u4e8e\u516c\u53f8\u4fdd\u5bc6\u8981\u6c42\u9ad8\uff0c\u7f51\u76d8\u3001\u4e91\u7b14\u8bb0\u7c7b\u8f6f\u4ef6\u4e00\u6982\u4e0d\u5f97\u4f7f\u7528\uff0c\u591a\u756a\u5c1d\u8bd5\u8fc7\u540e\uff0c\u51b3\u5b9a\u4f7f\u7528\u642d\u5efa\u4e00\u5957\u672c\u5730\u535a\u5ba2\u7cfb\u7edf\u7684\u65b9\u6cd5\u7528\u4e8e\u5f52\u6863\u591a\u6e90\u6570\u636e\u3002</p> <p>\u7136\u800c\uff0c\u5f53\u6211\u5728\u591a\u79cd\u535a\u5ba2\u6846\u67b6\u95f4\u53cd\u590d\u6a2a\u8df3\u65f6\uff0c\u53d1\u73b0\u4e0d\u540c\u4e3b\u9898\u5bf9Markdown\u672c\u5730\u56fe\u7247\u7684\u7ba1\u7406\u65b9\u5f0f\u4e0d\u4e00\u81f4\uff0c\u6709\u4e9b\u4e3b\u9898\u53ea\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bbe\u7f6e\uff1a</p> <pre><code>post_asset_folder: true\n</code></pre> <p>\u7136\u540e\u5c06\u56fe\u7247\u653e\u5165\u6587\u6863\u7684\u540c\u540d\u6587\u4ef6\u5939\u4e2d\u5373\u53ef\u6b63\u5e38\u663e\u793a\uff0c\u4f46\u6b64\u65b9\u6cd5\u5e76\u4e0d\u901a\u7528\u4e14\u7ba1\u7406\u8d77\u6765\u5f88\u4e0d\u7075\u6d3b\u3002\u5e38\u89c4\u7684\u89e3\u51b3\u529e\u6cd5\u662f\u4f7f\u7528\u56fe\u5e8a\uff0c\u5982\u817e\u8baf\u4e91/\u963f\u91cc\u4e91\u7684\u5bf9\u8c61\u5b58\u50a8\u3001Github/Gitee\u7684\u4ed3\u5e93\u2026\u2026</p> <p>\u663e\u7136\uff0c\u516c\u53f8\u662f\u7edd\u4e0d\u5141\u8bb8\u8fd9\u6837\u505a\u7684\u3002\u56e0\u6b64\uff0c\u5efa\u7acb\u4e00\u5957\u672c\u5730\u56fe\u5e8a+\u81ea\u52a8\u4e0a\u4f20\u7684\u64cd\u4f5c\u6d41\u662f\u6709\u5fc5\u8981\u7684\u3002</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/3%EF%B8%8F%E2%83%A3%20MinIO/C/#minio","title":"\u8d30\u4e28MinIO\u642d\u5efa\u672c\u5730\u56fe\u5e8a<sup>1</sup>","text":"<p>\u4e0b\u8f7dMinIO\uff1a</p> <p>\u6253\u5f00\u5b98\u65b9\u7f51\u7ad9\uff0c\u9009\u62e9<code>MINIO SERVER</code>\uff0c\u4e0b\u8f7d\u3002</p> <p>\u542f\u52a8\u670d\u52a1\uff1a</p> <p>\u5728<code>minio.exe</code>\u6240\u5728\u76ee\u5f55\u4e0b\uff0c\u6253\u5f00\u547d\u4ee4\u63d0\u793a\u7b26\uff0c\u8bbe\u7f6e\u7528\u6237\u540d\u5bc6\u7801\uff1a</p> <pre><code>setx MINIO_ROOT_USER admin\nsetx MINIO_ROOT_PASSWORD password\n</code></pre> <p>**Tips\uff1a**\u5982\u679c\u5fd8\u8bb0\u767b\u5f55\u5bc6\u7801\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5220\u9664<code>~\\Bucket\\.minio.sys</code>\u6587\u4ef6\u5939\uff0c\u91cd\u65b0\u914d\u7f6e\u7528\u6237\u540d\u5bc6\u7801\u5373\u53ef\u3002</p> <p>\u542f\u52a8\u670d\u52a1\uff1a</p> <pre><code>.\\minio.exe server E:\\Bucket\n</code></pre> <p></p> <p>\u65b0\u5efa\u5b58\u50a8\u6876\uff1a</p> <p>\u6253\u5f00http://127.0.0.1:9000</p> <p>\u8f93\u5165\u7528\u6237\u540d\uff1a<code>mastermao</code>\uff0c\u5bc6\u7801<code>bugaosuni</code>\uff08\u5982\u4e0a\u56fe<code>RootUser</code>\u3001<code>RootPass</code>\u6240\u793a\uff09</p> <p></p> <p>\u6309\u7167\u6307\u793a\uff0c\u70b9\u51fb<code>Create a Bucket</code>\uff0c\u8f93\u5165\u5b58\u50a8\u6876\u540d\u79f0\u5e76\u65b0\u5efa\u5373\u53ef\u3002</p> <p></p> <p>\u70b9\u51fb<code>Manage</code>\uff0c\u5728<code>Access Rules</code>\u4e2d\u70b9\u51fb<code>Add Access Rule</code>\uff0c\u65b0\u589e\u4e00\u4e2a<code>readwrite</code>\u89c4\u5219</p> <p></p> <p>\u81f3\u6b64\uff0c\u5b58\u50a8\u6876\u65b0\u5efa\u5b8c\u6210\u3002</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/3%EF%B8%8F%E2%83%A3%20MinIO/C/#picgominio","title":"\u53c1\u4e28PicGo\u8fde\u63a5MinIO<sup>2</sup>","text":""},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/3%EF%B8%8F%E2%83%A3%20MinIO/C/#31-picgo-plugin-minio","title":"3.1 \u5b89\u88c5<code>picgo-plugin-minio</code>\u63d2\u4ef6","text":"<p>\u3010\u81ea\u52a8\u5b89\u88c5\u3011</p> <p>\u76f4\u63a5\u5728PicGo\u63d2\u4ef6\u8bbe\u7f6e\u4e2d\u641c\u7d22\u5e76\u5b89\u88c5<code>minio</code>\u3002\u4f46\u8fd9\u79cd\u65b9\u5f0f\u652f\u6301\u7684\u6587\u4ef6\u683c\u5f0f\u4ec5\u5305\u62ec<code>.gif</code>\u3001<code>.jpg</code>\u3001<code>.jpeg</code>\u3001<code>.png</code>\u3001<code>.bmp</code>\u3001<code>.ico</code>\u3001<code>.webp</code>\u3002\u56e0\u6b64\uff0c\u63a8\u8350\u624b\u52a8\u5b89\u88c5\u3002</p> <p></p> <p>\u3010\u624b\u52a8\u5b89\u88c5\u3011<sup>3</sup><sup>4</sup></p> <p>\u4e0b\u8f7d\u63d2\u4ef6\u6e90\u7801picgo-plugin-minio\uff0c\u624b\u52a8\u4fee\u6539\u6587\u4ef6<code>.\\picgo-plugin-minio-master\\src\\helper.js</code>\uff1a</p> <pre><code>const imageMime = {\n  gif: 'image/gif',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  png: 'image/png',\n  bmp: 'image/bmp',\n  ico: 'image/x-icon',\n  webp: 'image/webp',\n  // ADD\n  svg: 'image/svg+xml'\n}\n</code></pre> <p>**Tips\uff1a**\u76ee\u524d\u53ea\u6d4b\u8bd5\u8fc7svg\u683c\u5f0f\uff0c\u7406\u8bba\u4e0a\u5176\u4ed6\u5a92\u4f53\u683c\u5f0f\u540c\u6837\u9002\u7528\uff1a</p> <pre><code>avi: 'video/avi'\nmp3: 'audio/mp3'\nmp4: 'video/mp4'\n</code></pre> <p>\u7136\u540e\uff0c\u70b9\u51fbPicGo\u63d2\u4ef6\u8bbe\u7f6e-\u5bfc\u5165\u672c\u5730\u63d2\u4ef6\uff0c\u5b9a\u4f4d\u5230<code>picgo-plugin-minio-master</code>\u6587\u4ef6\u5939\u5b89\u88c5\u3002</p> <p></p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/3%EF%B8%8F%E2%83%A3%20MinIO/C/#32","title":"3.2 \u56fe\u5e8a\u914d\u7f6e","text":"<p>\u5b89\u88c5\u63d2\u4ef6\u540e\uff0c\u914d\u7f6e\u5982\u4e0b\uff1a</p> <p></p> <p>**Tips\uff1a**endPoint\uff0c\u672c\u5730\u8ba1\u7b97\u673a\u7684IP\u5730\u5740\u3002</p> <p>\u6d4b\u8bd5\u53d1\u73b0\uff0c\u4f7f\u7528<code>local host(127.0.0.1)</code>\u53ef\u4ee5\u6210\u529f\u4e0a\u4f20\u56fe\u7247\uff0c\u4f46\u662f\u5728Typora\u4e2d\u65e0\u6cd5\u663e\u793a\uff0c\u63a8\u8350\u914d\u7f6e\u8def\u7531\u5668\u7684IP\u5730\u5740\u4e0eMAC\u7ed1\u5b9a\uff0c\u7136\u540e\u4f7f\u7528\u8ba1\u7b97\u673a\u5728\u5c40\u57df\u7f51\u7684\u5730\u5740\u3002\uff08\u540c\u7406\uff0c\u53ef\u4ee5\u4f7f\u7528\u95f2\u7f6e\u7535\u8111\u5728\u5c40\u57df\u7f51\u5185\u642d\u5efa\u56fe\u5e8a\uff0c\u53ef\u81ea\u884c\u63a2\u7d22\uff09</p> <p>\u7136\u540e\u70b9\u51fb<code>\u786e\u5b9a</code>\u3001<code>\u8bbe\u4e3a\u9ed8\u8ba4\u56fe\u5e8a</code></p> <p>\u6700\u540e\uff0c\u5728PicGo-\u4e0a\u4f20\u533a\u6d4b\u8bd5\u56fe\u7247\u4e0a\u4f20</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/3%EF%B8%8F%E2%83%A3%20MinIO/C/#typora","title":"\u8086\u4e28Typora\u56fe\u7247\u81ea\u52a8\u4e0a\u4f20","text":"<p>Typora-\u504f\u597d\u8bbe\u7f6e-\u56fe\u50cf\uff0c\u914d\u7f6e\u5982\u56fe\u6240\u793a</p> <p></p> <ol> <li> <p>CSDN\uff0c@\u65ed\u4e1c\u602a\uff0cWindows MinIO\u4f7f\u7528\u6559\u7a0b\uff08\u542f\u52a8\uff0c\u767b\u5f55\uff0c\u4fee\u6539\u5bc6\u7801\uff09 \u21a9</p> </li> <li> <p>CSDN\uff0c@\u4e91\u6d77\u68a6\u5c18\uff0cPicGo\u5b89\u88c5minio\u63d2\u4ef6\uff0cTypora\u8bbe\u7f6ePicGo \u21a9</p> </li> <li> <p>CSDN\uff0c@plia\uff0cminio\u4e0a\u4f20svg\u56fe\u7247\u540e\u65e0\u6cd5\u4f7f\u7528\uff0c\u56fe\u76f4\u63a5\u788e\u4e86 \u21a9</p> </li> <li> <p>lanol.cn\uff0c@Lan\u5c0f\u7ad9\uff0c\u5904\u7406minio\u6587\u4ef6\u4e0d\u80fd\u5728\u7ebf\u67e5\u770b\u7684\u95ee\u9898 \u6587\u4ef6\u540e\u7f00\u8f6ccontent_type \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/3%EF%B8%8F%E2%83%A3%20MinIO/D/","title":"\ud83d\udc1b MinIO\u7684Python\u4ea4\u4e92","text":"<p>\u80cc\u666f\uff1a\u60f3\u505a\u4e00\u4e2aPython\u5bf9MinIO\u5b58\u50a8\u6876\u4e0a\u4f20\u4e0b\u8f7d\u7684\u811a\u672c</p> <pre><code>import subprocess\n\nfrom minio import Minio\n\n\ndef download_package():\n    # \u521b\u5efaMinIO\u5ba2\u6237\u7aef\u5bf9\u8c61\n    minio_client = Minio(\n        \"192.168.0.108:9000\",\n        access_key=\"uvxxxxx\",\n        secret_key=\"4axxxx\",\n        secure=False  # \u5982\u679c\u6ca1\u6709\u542f\u7528SSL\uff0c\u8bf7\u5c06\u5176\u8bbe\u7f6e\u4e3aFalse\n    )\n\n    # \u6307\u5b9aMinIO\u5b58\u50a8\u6876\u548c\u5bf9\u8c61\u540d\u79f0\n    bucket_name = \"xxxx\"\n    object_name = \"xxxx-0.0.1.tar.gz\"\n\n    try:\n        # \u4e0b\u8f7d\u6587\u4ef6\n        minio_client.fget_object(bucket_name, object_name, object_name)\n        return object_name\n    except:\n        print('error')\n\n\ndef execute_cmd(command):\n    result = subprocess.run(command, shell=True, capture_output=True, text=True)\n    return result.returncode\n\n\nif __name__ == '__main__':\n    package = download_package()\n    cmd = f'pip install {package}'\n    res = execute_cmd(cmd)\n    print(res)\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/4%EF%B8%8F%E2%83%A3%20Markdown/","title":"\ud83c\udf88 \u524d\u7aef/4\ufe0f\u20e3 Markdown","text":"<ul> <li> <p>\u57fa\u672c\u8bed\u6cd5</p> <p> Getting started</p> </li> <li> <p>\u6807\u7b7e</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/4%EF%B8%8F%E2%83%A3%20Markdown/A/","title":"\ud83c\udf4b \u57fa\u672c\u8bed\u6cd5","text":""},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/4%EF%B8%8F%E2%83%A3%20Markdown/A/#1-pdf","title":"1. \u63d2\u5165PDF","text":"<p>\u4f7f\u7528<code>embed</code>\u8bed\u6cd5</p> <pre><code>&lt;embed src=\"path/to/pdf\" width=\"100%\" height=\"900\"&gt;\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/5%EF%B8%8F%E2%83%A3%20Apache/","title":"\ud83c\udf88 \u524d\u7aef/5\ufe0f\u20e3 Apache","text":"<ul> <li> <p>\u5b89\u88c5Apache</p> <p> Getting started</p> </li> <li> <p>\u4f7f\u7528Apache2\u4f7f\u7528\u591a\u4e2a\u7aef\u53e3\u6dfb\u52a0\u7f51\u7ad9</p> <p> Getting started</p> </li> <li> <p>Cloudflare\u914d\u7f6e</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/5%EF%B8%8F%E2%83%A3%20Apache/A/","title":"\ud83c\udf89 \u5b89\u88c5Apache","text":"<p>Apache\u5b89\u88c5\u547d\u4ee4\uff1a</p> <pre><code>sudo apt install apache2\n</code></pre> <p>Nginx\u5b89\u88c5\u547d\u4ee4\uff1a</p> <pre><code>sudo apt install nginx\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/5%EF%B8%8F%E2%83%A3%20Apache/B/","title":"\ud83c\udf84 \u4f7f\u7528Apache2\u4f7f\u7528\u591a\u4e2a\u7aef\u53e3\u6dfb\u52a0\u7f51\u7ad9","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u4fee\u6539\u7aef\u53e3\u914d\u7f6e\u6587\u4ef6</p> /etc/apache2/ports.conf<pre><code>Listen 80\nListen 8888\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff0c\u66f4\u65b0\u865a\u62df\u4e3b\u673a\u6587\u4ef6\uff0c\u4e3a\u6bcf\u4e2a\u7aef\u53e3\u66f4\u65b0\u865a\u62df\u4e3b\u673a\u914d\u7f6e</p> /etc/apache2/sites-enabled/000-default.conf<pre><code>&lt;VirtualHost *:80&gt;\n        ServerAdmin webmaster@localhost\n        DocumentRoot /path/to/site\n\n        &lt;Directory /path/to/site/&gt;\n        Allow from ip1 ip2\n        Deny from all\n        &lt;/Directory&gt;\n        ErrorLog ${APACHE_LOG_DIR}/error_80.log\n        CustomLog ${APACHE_LOG_DIR}/access_80.log combined\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:8888&gt;\n        ServerAdmin webmaster@localhost\n        DocumentRoot /path/to/site\n\n        &lt;Directory /path/to/site/&gt;\n        Allow from ip1 ip2\n        Deny from all\n        &lt;/Directory&gt;\n        ErrorLog ${APACHE_LOG_DIR}/error_8888.log\n        CustomLog ${APACHE_LOG_DIR}/access_8888.log combined\n&lt;/VirtualHost&gt;\n</code></pre> <p>\u7b2c\u4e09\u6b65\uff0c\u6dfb\u52a0\u6587\u4ef6\u5939\u6743\u9650</p> /etc/apache2/apache2.conf<pre><code>&lt;Directory /path/to/site1/&gt;\n        Options Indexes FollowSymLinks\n        AllowOverride None\n        Require all granted\n&lt;/Directory&gt;\n&lt;Directory /path/to/site2/&gt;\n        Options Indexes FollowSymLinks\n        AllowOverride None\n        Require all granted\n&lt;/Directory&gt;\n</code></pre> <p>\u7b2c\u56db\u6b65\uff0c\u91cd\u65b0\u8fd0\u884cApache\u670d\u52a1</p> <pre><code>sudo service apache2 restart\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/5%EF%B8%8F%E2%83%A3%20Apache/C/","title":"\ud83e\udd9a Cloudflare\u914d\u7f6e","text":"<p>Cloudflare\u63d0\u4f9bCDN\u3001\u4f18\u5316\u5de5\u5177\u3001\u5b89\u5168\u3001\u5206\u6790\u4ee5\u53ca\u5e94\u7528\u7b49\u670d\u52a1\uff0c\u53ef\u4ee5\u4f7f\u7528\u5176\u63d0\u4f9b\u7684\u514d\u8d39\u52a0\u901f\u670d\u52a1\u548c\u7f51\u7ad9\u4fdd\u62a4\u670d\u52a1\u3002</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/5%EF%B8%8F%E2%83%A3%20Apache/C/#cloudflaredns","title":"\u58f9\u4e28Cloudflare\u914d\u7f6eDNS\u89e3\u6790","text":"<p>\u4e0e\u5404\u79cd\u4e91\u670d\u52a1\u57df\u540d\u89e3\u6790\u529f\u80fd\u7c7b\u4f3c\uff0c\u5728Cloudflare\u4e2d\u53ef\u4ee5\u8bbe\u7f6e<code>\u4f7f\u7528Cloudflare\u4ee3\u7406\u6d41\u91cf</code>\u6216<code>\u4ec5\u9650DNS\u89e3\u6790</code></p> <p>\u8bb0\u5f55\u7c7b\u578b\u4ecb\u7ecd\uff1a</p> <ul> <li>CNAME\u8bb0\u5f55\uff1a\u522b\u540d\u8bb0\u5f55\uff0c\u5c06\u57df\u540d\u89e3\u6790\u5230\u53e6\u5916\u4e00\u4e2a\u57df\u540d\uff1b</li> <li>A\u8bb0\u5f55\uff1a\u6307\u5b9a\u4e3b\u673a\u540d\uff08\u6216\u57df\u540d\uff09\u5bf9\u5e94\u7684IP\u5730\u5740\uff0c\u5373\u5f53\u8bbf\u95ee\u6b64\u57df\u540d\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u6307\u5411IP\u5730\u5740\u7684\u4e3b\u673a\uff1b</li> <li>TXT\u8bb0\u5f55\uff1a\u4e3a\u67d0\u4e2a\u4e3b\u673a\u540d\u6216\u57df\u540d\u8bbe\u7f6e\u8bf4\u660e\uff0c\u53ef\u4ee5\u7528\u6765\u9a8c\u8bc1\u5bf9\u57df\u540d\u7684\u7ba1\u7406\u6743\uff1b</li> <li>MX\u8bb0\u5f55\uff1a\u90ae\u4ef6\u4ea4\u6362\u8bb0\u5f55\uff0c\u4e00\u822c\u7528\u4e8e\u5c06\u67d0\u4e2a\u57df\u540d\u7684\u7535\u5b50\u90ae\u4ef6\u6307\u5411\u5bf9\u5e94\u90ae\u4ef6\u670d\u52a1\u5668\u3002</li> </ul>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/5%EF%B8%8F%E2%83%A3%20Apache/C/#cloudflare-pages","title":"\u8d30\u4e28\u542f\u7528Cloudflare Pages","text":"<p>\uff082022.3\u66f4\u65b0\uff1a\u5df2\u7ecf\u5f03\u7528Cloudflare Pages\u670d\u52a1\uff0c\u6539\u7528vercel\uff09</p> <p>Cloudflare Pages\u4e3a\u524d\u7aef\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u534f\u4f5c\u548c\u90e8\u7f72\u670d\u52a1\uff0c\u652f\u6301Hugo\u3001JekyII\u3001React\u3001Vue\u3001Gatsby\u7b49\u6846\u67b6\u3002</p> <p>\u4ee5Hexo\u535a\u5ba2\u90e8\u7f72\u4e3a\u4f8b\uff0c\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <p>\u7b2c\u4e00\u6b65\uff0c\u9879\u76ee\u521b\u5efa\uff1aCloudflare Pages\u4e2d\uff0c\u521b\u5efa\u9879\u76ee\u2014\u2014\u767b\u5f55Github\u2014\u2014\u9009\u62e9\u5bf9\u5e94\u7684git\u4ed3\u5e93</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u6784\u5efa\u4e0e\u90e8\u7f72\uff1a</p> <ol> <li>\u6784\u5efa\u53c2\u6570\u8bbe\u7f6e\u4e3a\u7a7a</li> </ol> <p>\u5728Hexo\u521b\u5efa\u535a\u5ba2\u65f6\uff1a</p> <p><code>hexo g</code>\u547d\u4ee4\uff0c\u5c06<code>~/hexo-site/source/</code>\u6587\u4ef6\u5939\u4e0b<code>.md</code>\u3001<code>.html</code>\u3001<code>.js</code>\u7b49\u6587\u4ef6\u6e32\u67d3\u5e76\u653e\u5165<code>~/hexo-site/public/</code>\u6587\u4ef6\u5939\u4e0b</p> <p><code>hexo deploy</code>\u547d\u4ee4\uff0c\u5c06<code>~/hexo-site/public/</code>\u6587\u4ef6\u5939\u4e0b\u7684\u5185\u5bb9\u63a8\u5230git\u4ed3\u5e93\uff08\u9759\u6001\u7f51\u9875\u7684\u5168\u90e8\u5185\u5bb9\u5c31\u5728\u8fd9\u91cc\uff09</p> <ol> <li>\u6784\u5efa\u914d\u7f6e\uff1a</li> </ol> <ul> <li>\u6846\u67b6\u9884\u8bbe\uff1aNone</li> <li>\u6784\u5efa\u547d\u4ee4\uff1a\u7a7a</li> <li>\u6784\u5efa\u8f93\u51fa\u76ee\u5f55\uff1a\u7a7a</li> <li>\u6839\u76ee\u5f55\uff08\u9ad8\u7ea7\uff09\uff1a\u7a7a</li> </ul> <p>\u914d\u7f6e\u5b8c\u540e\u5c06\u81ea\u52a8\u90e8\u7f72</p> <p>\u7b2c\u4e09\u6b65\uff0c\u81ea\u5b9a\u4e49\u57df\u540d\uff1a</p> <ol> <li> <p>\u9879\u76ee\u2014\u2014\u81ea\u5b9a\u4e49\u57df\u2014\u2014\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u57df\uff1b</p> </li> <li> <p>Cloudflare\u4e2d\uff1aDNS\u2014\u2014\u6dfb\u52a0\u8bb0\u5f55\u2014\u2014\u8bbe\u7f6eCNAME\u8bb0\u5f55\u3002</p> </li> </ol> <p>\u7b2c\u56db\u6b65\uff0c\u5f00\u542fHTTPS\u3002\u4f7f\u7528Cloudflare\u4ee3\u7406\u53ef\u4ee5\u76f4\u63a5\u5f00\u542f\u5f3a\u5236HTTPS\uff0c\u5728Cloudflare Pages\u4e2d\u662f\u9ed8\u8ba4\u914d\u7f6e\u7684\u3002</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/5%EF%B8%8F%E2%83%A3%20Apache/C/#_1","title":"\u53c2\u8003","text":"<p>[1] \u77e5\u4e4e\uff0c@\u6c5f\u6e56\u4eba\u58eb\uff0ccloudflare\u4f7f\u7528\u5165\u95e8\u6559\u7a0b\uff0c\u56fd\u5916\u6700\u597d\u514d\u8d39CDN</p> <p>[2] \u77e5\u4e4e\uff0c@\u968f\u98ce\uff0cHexo\u535a\u5ba2\u63d0\u4ea4\u767e\u5ea6\u6536\u5f55SEO</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/","title":"\ud83c\udf88 \u524d\u7aef/6\ufe0f\u20e3 Hexo","text":"<ul> <li> <p>Hexo\u914d\u7f6e\u8bb0\u5f55</p> <p> Getting started</p> </li> <li> <p>\u8df3\u8fc7Fancybox\u6e32\u67d3</p> <p> Getting started</p> </li> <li> <p>Hexo-NexT\u4e3a\u6587\u7ae0\u6dfb\u52a0\u4ecb\u7ecd\u5361\u7247</p> <p> Getting started</p> </li> <li> <p>Hexo\u516c\u5f0f\u6e32\u67d3</p> <p> Getting started</p> </li> <li> <p>NexT\u4e3b\u9898\u7f8e\u5316</p> <p> Getting started</p> </li> <li> <p>NexT\u4e3b\u9898\u542f\u7528PJAX</p> <p> Getting started</p> </li> <li> <p>Hexo\u5236\u4f5c\u4e2a\u4eba\u753b\u5eca</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/A/","title":"\ud83d\udc2c Hexo\u914d\u7f6e\u8bb0\u5f55","text":""},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/A/#hexo","title":"\u58f9\u4e28\u5b89\u88c5Hexo","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u5b89\u88c5NodeJS\uff0c\u53c2\u8003\uff1a</p> <ul> <li> <p> \u5b89\u88c5NodeJS</p> <p> Getting started</p> </li> </ul> <p>\u7b2c\u4e8c\u6b65\uff0c\u5b89\u88c5<code>Hexo</code></p> <pre><code>sudo npm install -g hexo-cli\n</code></pre> <p>\u7b2c\u4e09\u6b65\uff0c\uff08\u53ef\u9009\uff09\u5b89\u88c5<code>deployer</code></p> <pre><code>sudo npm install hexo-deployer-git --save\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/A/#_1","title":"\u8d30\u4e28\u65b0\u5efa\u535a\u5ba2","text":""},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/A/#_2","title":"\u7b2c\u4e00\u6b65\uff0c\u535a\u5ba2\u521d\u59cb\u5316","text":"<pre><code>mkdir hexo-site\n</code></pre> <pre><code>cd hexo-site\n</code></pre> <pre><code>hexo init\n</code></pre> <p>\u914d\u7f6e\u6587\u4ef6\u4ecb\u7ecd</p> <p><code>~/hexo-site/_config.yml</code>\uff0c\u535a\u5ba2\u7f51\u7ad9\u914d\u7f6e\u6587\u4ef6 <code>~/hexo-site/themes/next/_config.yml</code>\uff0c\u4e3b\u9898\u914d\u7f6e\u6587\u4ef6</p> <p>Tips\uff1a\u5c06\u4e3b\u9898\u914d\u7f6e\u6587\u4ef6\u590d\u5236\u5230\u535a\u5ba2\u76ee\u5f55\u4e0b\u5e76\u6539\u540d\u4e3a\uff1a<code>~/hexo-site/_config.next.yml</code>\uff0c\u8fd9\u6837\u6bcf\u6b21\u5347\u7ea7\u4e3b\u9898\u65f6\u53ea\u9700\u8981\u8986\u76d6\u4e3b\u9898\u6587\u4ef6\u5939</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/A/#next","title":"\u7b2c\u4e8c\u6b65\uff0c\u4f7f\u7528NexT\u4e3b\u9898","text":"<p>\u5b98\u65b9\u63d0\u4f9b\u4e86git\u65b9\u6cd5\u548cnpm\u65b9\u6cd5\uff0c\u5176\u4e2d\uff0cnpm\u65b9\u6cd5\u5b89\u88c5\u7684\u4e3b\u9898\u6587\u4ef6\u4f4d\u4e8e<code>~/hexo-site/node_modules/next</code>\u4e0b\uff0c\u672c\u6587\u63a8\u8350git\u65b9\u6cd5\u3002</p> <p>\u5b89\u88c5\u4e3b\u9898\uff1a</p> <pre><code>cd hexo-site\n</code></pre> <pre><code>git clone https://github.com/next-theme/hexo-theme-next themes/next\n</code></pre> <p>\u5347\u7ea7\u4e3b\u9898</p> <pre><code>cd hexo-site\n</code></pre> <pre><code>cd themes/next\n</code></pre> <pre><code>git pull origin master\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/A/#next_1","title":"\u7b2c\u4e09\u6b65\uff0c\u542f\u7528NexT\u4e3b\u9898","text":"<p>\u535a\u5ba2\u914d\u7f6e\u6587\u4ef6<code>~/hexo-site/_config.yml</code></p> <p>```bash ~/hexo-site/_config.yml + theme: next <pre><code>### \u7b2c\u56db\u6b65\uff0c\u672c\u5730\u9884\u89c8\n\n```bash\n# \u6e05\u9664\u7f13\u5b58\nhexo clean\n# \u751f\u6210\u9759\u6001\u7f51\u9875\nhexo g\n# \u672c\u5730\u9884\u89c8\nhexo s\n</code></pre></p> <p>\u6253\u5f00\u9ed8\u8ba4\u7aef\u53e3http://localhost:4000\u5373\u53ef\u672c\u5730\u9884\u89c8</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/A/#_3","title":"\u53c1\u4e28\u90e8\u7f72","text":"<p>\u7f51\u9875\u6258\u7ba1\u670d\u52a1\u5f88\u591a\uff0c\u5982 Github Pages\u3001Gitee Pages\u3001Coding \u6301\u7eed\u96c6\u6210\u3001Cloudflare Pages \u3001Vercel\u7b49\u2026\u2026</p> <p>Coding\u3001Gitee \u4e3a\u56fd\u5185\u670d\u52a1\u63d0\u4f9b\u5546\uff0c\u9700\u8981\u5b9e\u540d\u8ba4\u8bc1\uff0c\u5176\u4e2d Coding \u548c\u9e45\u4e91\u8054\u7cfb\u5bc6\u5207\uff0c\u9700\u8981 \u8d85\u5927\u91cf \u7684\u8ba4\u8bc1\u5de5\u4f5c\uff0c\u6ca1\u4e2a\u4e09\u4e94\u5929\u641e\u4e0d\u5b8c\u3002Cloudflare Pages\u3001Github Pages\u3001Vercel \u4e3a\u56fd\u5916\u670d\u52a1\u63d0\u4f9b\u5546\uff0c\u76f8\u5bf9\u800c\u8a00\u8bbf\u95ee\u901f\u5ea6\u8f83\u6162\u3002</p> \u670d\u52a1 \u4f18\u70b9 \u7f3a\u70b9 Coding \u901f\u5ea6\u5feb\u53ef\u88ab\u767e\u5ea6\u722c\u53d6 \u9700\u8981\u8ba4\u8bc1\u7684\u592a\u591a\u6784\u5efa\u8fc7\u7a0b\u6f2b\u957f(\u90e8\u7f72\u8fc7\u7a0b\u7e41\u7410\uff0c\u9700\u8981\u914d\u7f6e\u9e45\u4e91\u6743\u9650\u3001\u5404\u79cd\u5b9e\u540d\u8ba4\u8bc1) Github Pages \u90e8\u7f72\u7b80\u5355\u6784\u5efa\u901f\u5ea6\u5feb \u8bbf\u95ee\u901f\u5ea6\u6162\u4e0d\u80fd\u88ab\u767e\u5ea6\u6536\u5f55 Cloudflare Pages \u90e8\u7f72\u7b80\u5355\u90e8\u7f72&amp;\u81ea\u5b9a\u4e49\u57df\u540d\u4e00\u6761\u9f99\u901f\u5ea6\u8fd8\u884c \u4e0d\u80fd\u767e\u5ea6\u6536\u5f55 Gitee Pages \u901f\u5ea6\u5feb \u4e0a\u4f20\u540e\u9700\u8981\u624b\u52a8\u90e8\u7f72\u4e0d\u80fd\u907f\u514d\u5ba1\u67e5\u73b0\u5df2\u4e0b\u7ebf Vercel \u90e8\u7f72\u7b80\u5355\u81ea\u5e26\u57df\u540d\u89e3\u6790 \u4e0d\u80fd\u767e\u5ea6\u6536\u5f55 <p>Vercel\u90e8\u7f72\u65b9\u6cd5\u6700\u7b80\u5355\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0</p> <p>Github\u90e8\u7f72\u65b9\u6cd5</p> <p>\u7b2c\u4e00\u6b65\uff0c\u65b0\u5efa\u4ed3\u5e93\uff0c\u547d\u540d\u4e3a\uff1a</p> <pre><code>\u7528\u6237\u540d.github.io\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff0c\u4fee\u6539\u914d\u7f6e\u6587\u4ef6</p> <p>\u4fee\u6539<code>~/hexo-site/_config.yml</code>\uff1a</p> <p>```bash ~/hexo-site/_config.yml + deploy: +   type: git +   repo: git@github.com:\u7528\u6237\u540d/\u7528\u6237\u540d.github.io.git +   branch: master <pre><code>\u7b2c\u4e09\u6b65\uff0c\u90e8\u7f72\u535a\u5ba2\n\n```bash\nhexo deploy\n# \u6216\nhexo d\n</code></pre></p> <p>\u6253\u5f00Git\u4ed3\u5e93\uff0cSettings\u2014\u2014Pages\u2014\u2014\u81ea\u884c\u914d\u7f6e\u3002\u6253\u5f00<code>http://\u7528\u6237\u540d.github.io</code>\u5373\u53ef\u770b\u5230\u535a\u5ba2\u3002</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/A/#_4","title":"\u8086\u4e28\u8bbe\u7f6e\u4e2a\u4eba\u57df\u540d","text":"<p>Vercel\u7684\u8bbe\u7f6e\u65b9\u6cd5\u6bd4\u8f83\u7b80\u5355\uff0c\u4e0d\u518d\u8d58\u8ff0</p> <p>\u4ee5\u963f\u91cc\u4e91\u4e3a\u4f8b</p> <p>\u7b2c\u4e00\u6b65\uff0c\u6dfb\u52a0\u89e3\u6790\uff1a\u963f\u91cc\u4e91\u63a7\u5236\u53f0\u2014\u2014\u57df\u540d\u2014\u2014\u89e3\u6790\u2014\u2014\u6dfb\u52a0A\u8bb0\u5f55\uff1a</p> <pre><code>// \u89e3\u6790\u7ebf\u8def\uff1a\u9ed8\u8ba4\n// \u8bb0\u5f55\u7c7b\u578b\uff1aA\n\n// \u4e3b\u673a\u8bb0\u5f55\uff1a@\n// \u8bb0\u5f55\u503c\uff1a\u4e0b\u8ff0\u4efb\u9009\u4e00\u5373\u53ef\n</code></pre> <p>\u4f7f\u7528 IPAddress.com \u67e5\u627e <code>github.io</code> \u7684\u5730\u5740\uff1a</p> <pre><code>185.199.108.153\n185.199.109.153\n185.199.110.153\n185.199.111.153\n</code></pre> <p>\u6dfb\u52a0CNAME\u8bb0\u5f55\uff1a</p> <pre><code>// \u89e3\u6790\u7ebf\u8def\uff0c\u9ed8\u8ba4\n// \u8bb0\u5f55\u7c7b\u578b\uff0cCNAME\n// \u4e3b\u673a\u8bb0\u5f55\uff0cwww\n// \u8bb0\u5f55\u503c\uff0c\u7528\u6237\u540d.github.io\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff0c\u672c\u5730\u914d\u7f6e</p> <pre><code>cd ~/hexo-site/source\ntouch CNAME\nnano CNAME\n# \u5199\u5165\u57df\u540d\u5e76\u4fdd\u5b58\n</code></pre> <p>\u6216\u8005\u6267\u884c\u4e0b\u4e00\u6b65\u4f1a\u81ea\u52a8\u6dfb\u52a0CNAME\u6587\u4ef6</p> <p>\u7b2c\u4e09\u6b65\uff0cGitHub \u914d\u7f6e</p> <p>\u4ed3\u5e93\u2014\u2014setting\u2014\u2014Custom domain\u2014\u2014\u6dfb\u52a0\u57df\u540d\u2014\u2014\u586b\u5165\u57df\u540d</p> <p>Cloudflare\u5b9e\u73b0HTTPS</p> <p>\u7b2c\u4e00\u6b65\uff0cCloudflare\u6ce8\u518c\uff1awww.cloudflare.com\uff1b</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u83b7\u53d6DNS\u670d\u52a1\u5668\u5730\u5740\uff1aAdd Site\u2014\u2014\u6dfb\u52a0\u57df\u540d\u2014\u2014\u626b\u63cfDNS\u8bb0\u5f55\u2014\u2014\u5206\u914d\u4e24\u4e2aDNS\u2014\u2014\u76db\u51fa\u5907\u7528\uff1b</p> <p>\u7b2c\u4e09\u6b65\uff0c\u66ff\u6362\u963f\u91cc\u4e91\u9ed8\u8ba4DNS\u670d\u52a1\u5668\uff1a\u963f\u91cc\u4e91\u2014\u2014\u57df\u540d\u63a7\u5236\u53f0\u2014\u2014\u57df\u540d\u2014\u2014\u7ba1\u7406\u2014\u2014\u57fa\u672c\u4fe1\u606f\u2014\u2014\u4fee\u6539DNS\u2014\u2014\u6dfb\u52a0\u5206\u914d\u7684\u4e24\u4e2aDNS\u5730\u5740\u2014\u2014\u4fdd\u5b58</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/A/#_5","title":"\u4f0d\u4e28\u5199\u4f5c\u8f6f\u4ef6\u63a8\u8350","text":"\u8f6f\u4ef6 \u5e73\u53f0 \u63a8\u8350\u5ea6 \u7f51\u7ad9 MWeb https://zh.mweb.im/ Typora https://typora.io/ VSCode https://code.visualstudio.com/ \u5999\u8a00 https://miaoyan.app/"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/A/#_6","title":"\u53c2\u8003","text":"<p>[1] CSDN\uff0c@HongtaiWolf\uff0cMac\u4e0b\u4f7f\u7528Homebrew\u5b89\u88c5nginx\u62a5\u9519</p> <p>[2] \u77e5\u4e4e\uff0c@seay\uff0c\u624b\u628a\u624b\u6559\u4ece\u96f6\u5f00\u59cb\u5728GitHub\u4e0a\u4f7f\u7528Hexo\u642d\u5efa\u535a\u5ba2\u6559\u7a0b(\u4e00)-\u9644GitHub\u6ce8\u518c\u53ca\u914d\u7f6e</p> <p>[3] CSDN\uff0c@yucicheung\uff0c\u4e3aGitHub Page\u7ed1\u5b9a\u81ea\u5b9a\u4e49\u57df\u540d\u5e76\u5b9e\u73b0HTTPS\u8bbf\u95ee </p> <p>[4] \u77e5\u4e4e\uff0c@Momo\uff0cMWeb\u914d\u5408Hexo\u9ad8\u6548\u7ba1\u7406\u535a\u5ba2</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/B/","title":"\ud83d\udc57 \u8df3\u8fc7Fancybox\u6e32\u67d3","text":""},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/B/#1","title":"1. \u601d\u8def","text":"<ol> <li>\u4e0d\u901a\u8fc7Fancybox\u5c55\u793a\u7684\u56fe\u7247\u6dfb\u52a0\u8df3\u8fc7\u7684\u7c7b\u540d\uff0c\u5982<code>no-fancybox</code></li> <li>\u4fee\u6539<code>fancybox.js</code>\uff0c\u9047\u5230\u4e0a\u8ff0\u7c7b\u540d\u76f4\u63a5\u8df3\u8fc7</li> </ol>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/B/#2","title":"2. \u65b9\u6848","text":"<p>\u4fee\u6539<code>themes/next/source/js/third-party/fancybox.js</code>\uff1a</p> <pre><code>document.querySelectorAll('.post-body :not(a) &gt; img, .post-body &gt; img').forEach(image =&gt; {\n+    if ($image.is('.no-fancybox img')) {\n+      return;\n+    }\n</code></pre> <p>\u7136\u540e\uff0c\u4e3a\u56fe\u7247\u6dfb\u52a0\uff1a</p> <pre><code>&lt;img class=\"no-fancybox\" src=\"\" alt=\"\"&gt;\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/C/","title":"\ud83d\udecc Hexo-NexT\u4e3a\u6587\u7ae0\u6dfb\u52a0\u4ecb\u7ecd\u5361\u7247","text":""},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/C/#nunjucks","title":"\u7b2c\u4e00\u6b65\uff0c\u4fee\u6539Nunjucks\u6a21\u677f","text":"<p>\u4f4d\u4e8e\uff1a<code>themes/next/layout/_macro/post.njk</code> </p> <p>\u9501\u5b9a\u5c55\u793a\u6846\u7684\u4f4d\u7f6e\uff0c\u5e94\u8be5\u653e\u5728<code>&lt;header&gt;</code>\u4e4b\u540e\uff0c<code>{{theme.read_more_btn}}</code>\u4e4b\u524d\uff1a</p> <pre><code>{#################}\n{### POST BODY ###}\n{#################}\n&lt;div class=\"post-body{% if post.direction and post.direction.toLowerCase() === 'rtl' %} rtl{% endif %}\" itemprop=\"articleBody\"&gt;\n    ...\n</code></pre> <p>\u6dfb\u52a0\uff1a  </p> <pre><code>{% set randomClass = 'random-bg-' + range(1, 55) | random %}\n&lt;myheader class=\"{{randomClass}}\"&gt;\n    &lt;my_black_layer&gt;\n      &lt;div class=\"upper-myheader\"&gt;\n        &lt;div class=\"mini-title\"&gt;{{post.article_type}}&lt;/div&gt;\n        &lt;div class=\"date-since\"&gt;\n          &lt;img src=\"/lib/svg/cloc.svg\"&gt;\n          &lt;p&gt;&lt;span class=\"date-value\" id=\"sinceData\"&gt;{{post.lines}} \u884c&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;\n      &lt;/div&gt;\n      &lt;div class=\"lower-myheader\"&gt;\n        &lt;div class=\"title\"&gt;{{post.title}}&lt;/div&gt;\n        &lt;p class=\"subtitle\"&gt;{{post.subtitle}}&lt;/p&gt;&lt;/div&gt;\n    &lt;/my_black_layer&gt;\n&lt;/myheader&gt;\n</code></pre> <p>\u4f7f\u7528\u7684\u5173\u952e\u5b57\u5305\u62ec\uff1a</p> \u5173\u952e\u5b57 \u542b\u4e49 <code>post.article_type</code> \u6587\u7ae0\u7c7b\u578b <code>post.lines</code> \u6587\u7ae0\u884c\u6570\u3001\u957f\u5ea6 <code>post.title</code> \u6587\u7ae0\u6807\u9898 <code>post.subtitle</code> \u6587\u7ae0\u526f\u6807\u9898 <p>\u4e0a\u8ff0\u5173\u952e\u5b57\u53ef\u4ee5\u5728\u535a\u5ba2\u5934\u90e8\u5b9a\u4e49\uff0c\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539post\u6a21\u677f\u6587\u4ef6\u5b9e\u73b0\u81ea\u52a8\u6dfb\u52a0\u4e0a\u8ff0\u5173\u952e\u8bcd\u3002</p> <p>\u4f4d\u4e8e\uff1a<code>scaffolds/post.md</code>\u3002\u4fee\u6539\u5982\u4e0b\uff1a</p> <pre><code>---\ntitle: {{ title }}\ndate: {{ date }}\nsubtitle: \narticle_type: \nlines:\ncategories:\n\ntags:\n\n---\n&lt;div&gt;&lt;/div&gt;\n&lt;!--more--&gt;\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/C/#_1","title":"\u7b2c\u4e8c\u6b65\uff0c\u8bbe\u7f6e\u968f\u673a\u56fe\u7247","text":"<p>\u901a\u8fc7Nunjucks\u4ea7\u751f[1, 55]\u7684\u968f\u673a\u6570\uff08\u53d6\u51b3\u4e8e\u6709\u591a\u5c11\u5f20\u80cc\u666f\u56fe\u7247\uff09\uff0c\u7136\u540e\u5f62\u6210\u968f\u673a\u7c7b\u540d<code>random-bg-x</code>\uff0c\u4f20\u9012\u5230<code>{{randomClass}}</code> \uff0c\u5982\uff1a</p> <pre><code>{% set randomClass = 'random-bg-' + range(1, 55) | random %}\n&lt;myheader class=\"{{randomClass}}\"&gt;\n</code></pre> <p>\u8fd9\u6837\u4e00\u6765\uff0c\u53ef\u4ee5\u76f4\u63a5\u5b9a\u4e49\u968f\u673a\u7c7b\u540d\u7684CSS\uff0c\u4ee5\u5bf9\u5e94\u4e0a\u4e0d\u540c\u7684\u80cc\u666f\u56fe\u7247\u3002  </p> <p>\u4f7f\u7528SCSS\u53ef\u4ee5\u4ea7\u751f\u968f\u673a\u6570\u5e76\u5b9a\u4e49\u5bf9\u5e94\u7684\u968f\u673a\u7c7b\uff0c\u5982\uff1a</p> <pre><code>$photoList: (\n        \"url(/lib/images/photo-1514908866475-59af9c4069bb.webp)\",\n        \"url(/lib/images/photo-1624291732715-8f01d3a22138.webp)\",\n        \"url(/lib/images/photo-1613100354134-eeaf0ca9ae41.webp)\",\n);\n\n@for $i from 1 through 60 {\n  .random-bg-#{$i} {\n    $index: random(length($photoList)); // \u751f\u6210\u968f\u673a\u7d22\u5f15\n    $photo: nth($photoList, $index); // \u83b7\u53d6\u5217\u8868\u4e2d\u7684\u5bf9\u5e94\u9879\n    background-image: #{$photo}; // \u751f\u6210\u80cc\u666f\u56fe\u50cfURL\n  }\n}\n</code></pre> JS\u65b9\u6cd5\uff08\u5b58\u5728Bug\uff09 <p>\u7b2c\u4e00\u6b65\uff0c\u4fee\u6539NexT\u6a21\u677f</p> <p>\u4f4d\u4e8e\uff1a<code>themes/next/layout/_macro/post.njk</code></p> <pre><code>{#################}\n{### POST BODY ###}\n{#################}\n&lt;div class=\"post-body{% if post.direction and post.direction.toLowerCase() === 'rtl' %} rtl{% endif %}\" itemprop=\"articleBody\"&gt;\n    ...\n</code></pre> <p>\u6dfb\u52a0\u56fe\u7247\u6761\u6a21\u677f</p> <pre><code>&lt;myheader class=\"random-bg\"&gt;\n    &lt;my_black_layer&gt;\n      &lt;div class=\"upper-myheader\"&gt;\n        &lt;div class=\"mini-title\"&gt;{{post.article_type}}&lt;/div&gt;\n        &lt;div class=\"date-since\"&gt;\n          &lt;img src=\"lib/svg/cloc.svg\"&gt;\n          &lt;p&gt;&lt;span class=\"date-value\" id=\"sinceData\"&gt;{{post.lines}} \u884c&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;\n      &lt;/div&gt;\n      &lt;div class=\"lower-myheader\"&gt;\n        &lt;div class=\"title\"&gt;{{post.title}}&lt;/div&gt;\n        &lt;p class=\"subtitle\"&gt;{{post.subtitle}}&lt;/p&gt;&lt;/div&gt;\n    &lt;/my_black_layer&gt;\n&lt;/myheader&gt;\n</code></pre> <p>\u4f7f\u7528\u7684\u5173\u952e\u5b57\u5305\u62ec\uff1a</p> \u5173\u952e\u5b57 \u542b\u4e49 <code>post.article_type</code> \u6587\u7ae0\u7c7b\u578b <code>post.lines</code> \u6587\u7ae0\u884c\u6570\u3001\u957f\u5ea6 <code>post.title</code> \u6587\u7ae0\u6807\u9898 <code>post.subtitle</code> \u6587\u7ae0\u526f\u6807\u9898 <p>\u7b2c\u4e8c\u6b65\uff0c\u914d\u7f6eJS\u811a\u672c\u8bbe\u7f6e\u968f\u673a\u80cc\u666f</p> <p>\u5728<code>source/_data/body-end.njk</code>\u4e2d\u6dfb\u52a0\uff1a</p> <pre><code>&lt;script&gt;\n    // \u83b7\u53d6\u6240\u6709\u5177\u6709 \"random-bg\" \u7c7b\u7684 myheader \u5143\u7d20\n    var myHeaders = document.getElementsByClassName(\"random-bg\");\n\n    // \u5b9a\u4e49\u4e00\u4e9b\u53ef\u80fd\u7684\u80cc\u666f\u56fe\u50cfURL\n    var bgImages = [\n        \"url(lib/images/photo-1551668231-6a07c2b7d544.webp)\",\n        \"url(lib/images/photo-1553603227-2358aabe821e.webp)\",\n        \"url(lib/images/photo-1561998344-4bf90978561d.webp)\",\n    ];\n\n    // \u4e3a\u6bcf\u4e2a myheader \u5143\u7d20\u5206\u914d\u968f\u673a\u80cc\u666f\u56fe\u50cf\n    Array.from(myHeaders).forEach(function (header) {\n        // \u751f\u6210\u4e00\u4e2a\u968f\u673a\u7d22\u5f15\n        var randomIndex = Math.floor(Math.random() * bgImages.length);\n\n        // \u8bbe\u7f6e\u968f\u673a\u80cc\u666f\u56fe\u50cf\n        header.style.backgroundImage = bgImages[randomIndex];\n    });\n&lt;/script&gt;\n</code></pre> <p>\u7136\u800c\uff0c\u4f7f\u7528JS\u65f6\u53ea\u80fd\u5bf9\u7b2c\u4e00\u9875\u7684\u6587\u7ae0\u6dfb\u52a0\u80cc\u666f\u56fe\u7247\u3002\u7531\u4e8e\u4f7f\u7528\u4e86PJAX\uff0c\u5207\u6362\u9875\u9762\u65f6\u6ca1\u6709\u53ef\u76d1\u542c\u7684\u4e8b\u4ef6\uff0c\u5bfc\u81f4JS\u811a\u672c\u65e0\u6cd5\u518d\u6b21\u6267\u884c\uff0c\u4e5f\u5c31\u662f\u65e0\u6cd5\u751f\u6210\u968f\u673a\u80cc\u666f\u3002</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/D/","title":"\ud83d\udecc Hexo\u516c\u5f0f\u6e32\u67d3","text":""},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/D/#mathjax","title":"\u58f9\u4e28MathJAX \u63d2\u4ef6","text":"<p>\u6b64\u524d\u7684\u516c\u5f0f\u6e32\u67d3\u76f4\u63a5\u4f7f\u7528\u7684\u662fNexT\u4e3b\u9898\u81ea\u5e26\u7684MathJAX\u63d2\u4ef6\uff0c<code>_config.next.yml</code>\u8bbe\u7f6e\u5982\u4e0b\uff1a</p> <pre><code>math:\n  every_page: true\n\n  mathjax:\n    enable: true\n    tags: none\n\n  katex:\n    enable: true\n    copy_tex: true\n</code></pre> <p>\u4f46\u662f\u5b58\u5728\u4e24\u4e2a\u95ee\u9898\uff1a</p> <ol> <li>\u516c\u5f0f\u6e32\u67d3\u901f\u5ea6\u6162\uff0c\u6253\u5f00\u6587\u7ae0\u9700\u8981\u7b49\u51e0\u79d2\u516c\u5f0f\u624d\u80fd\u6e32\u67d3\u5b8c\u6210</li> <li>\u6e32\u67d3\u683c\u5f0f\u9519\u8bef\u3001\u5b57\u4f53\u8be1\u5f02</li> </ol> <p>\u7f51\u7edc\u641c\u7d22\u540e\u53d1\u73b0\u5f88\u591a\u89e3\u51b3\u65b9\u6848\uff0c\u5982\u53c2\u8003<sup>1</sup><sup>2</sup><sup>3</sup><sup>4</sup><sup>5</sup>\uff0c\u7531\u4e8e\u6b65\u9aa4\u8fc7\u4e8e\u7e41\u7410\uff0c\u6ca1\u6562\u5c1d\u8bd5\u3002</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/D/#hexo-filter-mathjax","title":"\u8d30\u4e28Hexo Filter MathJax \u63d2\u4ef6","text":"<p>\u53c2\u8003<sup>6</sup>\u7ed9\u51fa\u4e86\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\uff0c\u53ef\u4ee5\u5728Hexo\u751f\u6210\u8fc7\u7a0b\u4e2d\u5c06\u516c\u5f0f\u6e32\u67d3\u4e3aSVG\u56fe\u7247\uff0c\u63d0\u9ad8\u6e32\u67d3\u901f\u5ea6\uff0c\u6d4b\u8bd5\u53d1\u73b0\u516c\u5f0f\u683c\u5f0f\u3001\u5b57\u4f53\u7b49\u95ee\u9898\u4e5f\u5b8c\u7f8e\u89e3\u51b3\u3002</p> <p>\u63d2\u4ef6\u5730\u5740\uff1aHexo Filter MathJax</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/D/#_1","title":"\u7b2c\u4e00\u6b65\uff0c\u51c6\u5907\u5de5\u4f5c","text":"<ol> <li>\u5220\u9664\u5176\u4ed6\u4e0e\u516c\u5f0f\u6e32\u67d3\u76f8\u5173\u7684\u63d2\u4ef6</li> <li>\u7981\u7528NexT\u4e3b\u9898\u7684\u516c\u5f0f\u6e32\u67d3\u5668</li> </ol> <pre><code>math:\n  mathjax:\n    enable: false\n  katex:\n    enable: false\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/D/#_2","title":"\u7b2c\u4e8c\u6b65\uff0c\u5b89\u88c5\u63d2\u4ef6","text":"<pre><code>npm install hexo-filter-mathjax\n</code></pre> <p>\u5728\u535a\u5ba2\u914d\u7f6e\u6587\u4ef6<code>_config.yml</code> \u4e2d\uff0c\u6dfb\u52a0\uff1a</p> <pre><code>mathjax:\n  tags: none # or 'ams' or 'all'\n  single_dollars: true # enable single dollar signs as in-line math delimiters\n  cjk_width: 0.9 # relative CJK char width\n  normal_width: 0.6 # relative normal (monospace) width\n  append_css: true # add CSS to pages rendered by MathJax\n  every_page: false # if true, every page will be rendered by MathJax regardless the `mathjax` setting in Front-matter\n  extension_options: {}\n    # you can put your extension options here\n    # see http://docs.mathjax.org/en/latest/options/input/tex.html#tex-extension-options for more detail\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/D/#_3","title":"\u7b2c\u4e09\u6b65\uff0c\u4f7f\u7528","text":"<p><code>.md</code>\u6587\u7ae0\u5934\u90e8\u6dfb\u52a0\uff1a</p> <pre><code>---\ntitle: xxx\ncategories: xxx\ndate: xxx\nmathjax: true\n---\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/D/#_4","title":"\u53c2\u8003","text":"<ol> <li> <p>CSDN\uff0c@\u517b\u732a\u53bb\uff0c\u8fd9\u6b21\u5f7b\u5e95\u89e3\u51b3\u5728Hexo\u4e2d\u6e32\u67d3MathJax\u6570\u5b66\u516c\u5f0f\u51fa\u73b0\u7684\u95ee\u9898\uff01\uff01\uff01 \u21a9</p> </li> <li> <p>CSDN\uff0c@TheBetterKong\uff0c\u6539\u8fdb Hexo \u4e2d MathJax \u6570\u5b66\u516c\u5f0f\u7684\u6e32\u67d3 \u21a9</p> </li> <li> <p>CSDN\uff0c@\u7801\u5c0f\u4f59\u306e\u535a\u5ba2\uff0c\u5982\u4f55\u5728hexo\u4e2d\u652f\u6301Mathjax \u21a9</p> </li> <li> <p>\u535a\u5ba2\u56ed\uff0c@VitaHeng \uff0c hexo\u535a\u5ba2MathJax\u516c\u5f0f\u6e32\u67d3\u95ee\u9898 \u21a9</p> </li> <li> <p>\u7b80\u4e66\uff0c@\u6cbb\u90e8\u5c11\u8f85\uff0cHexo + Mathjax: \u516c\u5f0f\u79bb\u7ebf\u6e32\u67d3 \u21a9</p> </li> <li> <p>\u7c73\u7c73\u7684\u535a\u5ba2\uff0c@\u5f20\u4e66\u6a35\uff0cHexo \u540e\u7aef MathJax \u6e32\u67d3 \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/E/","title":"\ud83d\udecc NexT\u4e3b\u9898\u7f8e\u5316","text":""},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/E/#_1","title":"\u58f9\u4e28\u6587\u4ef6\u4ecb\u7ecd","text":"<p>\u4e0b\u8ff0\u4e3a\u76ee\u524d\u4e2a\u4eba\u5bf9Hexo\u9879\u76ee\u7684\u7406\u89e3\uff0c\u4e0d\u4e00\u5b9a\u6b63\u786e</p> <p><code>~/source/_data/sidebar.njk</code>\uff0csidebar\u914d\u7f6e\u6587\u4ef6</p> <p><code>~/source/_data/styles.njk</code>\uff0c\u4e3b\u9898\u7684CSS\u6587\u4ef6</p> <p><code>~/source/_data/languages.yml</code>\uff0c\u4e2d\u82f1\u6587\u7ffb\u8bd1\u6587\u4ef6</p> <p>\u5f53\u4fee\u6539\u8fd9\u4e9b\u65f6\uff0c\u4f1a\u8986\u76d6\u539f\u6709\u7684\u6837\u5f0f</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/E/#_2","title":"\u8d30\u4e28\u754c\u9762\u7f8e\u5316","text":""},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/E/#1","title":"1. \u8bbe\u7f6e\u80cc\u666f\u56fe\u7247","text":"<p>\u5c06\u80cc\u666f\u56fe\u7247\u653e\u5165<code>~/hexo-site/themes/next/source/images/</code></p> <p>\u4fee\u6539<code>~/hexo-site/_config.next.yml</code>\uff1a</p> <pre><code>+ custom_file_path:\n+   style: source/_data/styles.styl\n</code></pre> <p>\u65b0\u5efa\u6216\u4fee\u6539<code>~/hexo-site/source/_data/styles.styl</code>\uff0c\u6dfb\u52a0\uff1a</p> <pre><code>// \u8bbe\u7f6e\u80cc\u666f\u56fe\u7247\nbody {\n  background: url(/images/background.webp);\n  background-repeat: no-repeat;\n  background-attachment: fixed; //\u4e0d\u91cd\u590d\n  background-size: cover; //\u586b\u5145\n  background-position: center;\n}\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/E/#2","title":"2. \u535a\u5ba2\u6587\u672c\u900f\u660e\u5316","text":"<p>\u6253\u5f00<code>~/hexo-site/source/_data/styles.styl</code>\uff0c\u6dfb\u52a0\uff1a</p> <pre><code>// \u535a\u5ba2\u5185\u5bb9\u900f\u660e\u5316\n//\u6587\u7ae0\u5185\u5bb9\u7684\u900f\u660e\u5ea6\u8bbe\u7f6e\n.post-block {\n  opacity: 0.85;\n}\n\n//\u4fa7\u8fb9\u6846\u7684\u900f\u660e\u5ea6\u8bbe\u7f6e\n.sidebar {\n  opacity: 0.85;\n}\n\n//\u83dc\u5355\u680f\u7684\u900f\u660e\u5ea6\u8bbe\u7f6e\n.header-inner {\n  background: rgba(255,255,255,0.85);\n}\n\n//\u641c\u7d22\u6846\uff08local-search\uff09\u7684\u900f\u660e\u5ea6\u8bbe\u7f6e\n.popup {\n  opacity: 0.9;\n}\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/E/#3","title":"3. \u8bbe\u7f6e\u754c\u9762\u5706\u89d2","text":"<p>\u4fee\u6539  <code>~/hexo-site/_config.next.yml</code> \uff1a</p> <pre><code>+ custom_file_path:\n+   variable: source/_data/variables.styl\n</code></pre> <p>\u65b0\u5efa\u6216\u4fee\u6539 <code>~/hexo-site/source/_data/variables.styl</code>\uff0c\u6dfb\u52a0\uff1a</p> <pre><code>// \u5706\u89d2\u8bbe\u7f6e\n$border-radius-inner     = 10px 10px 10px 10px;\n$border-radius           = 10px;\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/E/#4","title":"4. \u5168\u5c40\u5b57\u4f53\u52a0\u7c97","text":"<pre><code>* {\n  font-weight: 700;\n}\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/E/#5","title":"5. \u4fee\u6539\u5361\u7247\u95f4\u8ddd","text":"<pre><code>.posts-expand .post-header {\n  margin-bottom: 10px;\n}\n\n.post-button {\n  margin-top: 10px;\n}\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/E/#_3","title":"\u8d30\u4e28\u97f3\u4e50\u64ad\u653e","text":""},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/E/#1_1","title":"1. \u7f51\u6613\u4e91\u97f3\u4e50\u5916\u94fe\u64ad\u653e","text":"<p>\u7f51\u9875\u7248\u7f51\u6613\u4e91\u97f3\u4e50\u751f\u6210\u5916\u94fe\u64ad\u653e\u5668\uff0c\u76f4\u63a5\u5c06<code>iframe</code>\u4ee3\u7801\u7c98\u8d34\u5230\u9875\u9762</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/E/#2-hexo-tag-aplayer","title":"2. \u4f7f\u7528<code>Hexo-Tag-APlayer</code>\u63d2\u4ef6","text":"<p>APlayer\u5b98\u7f51\uff1aAPlayer</p> <p><code>Hexo-Tag-APlayer</code>\u9879\u76ee\u5f00\u6e90\u5730\u5740\uff1aHexo-Tag-APlayer</p> <p>\u7b2c\u4e00\u6b65\uff0c\u5b89\u88c5\u63d2\u4ef6\u3002</p> <pre><code>npm install --save hexo-tag-aplayer\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff0c\u542f\u7528 <code>MetingJS</code>\u3002\u4fee\u6539 <code>~/hexo-site/_config.yml</code>\uff0c\u6dfb\u52a0\uff1a</p> <pre><code>+ aplayer:\n+   meting: true\n</code></pre> <p>\u7b2c\u4e09\u6b65\uff0c\u6dfb\u52a0\u97f3\u4e50\u3002\u5728\u7f51\u6613\u4e91\u97f3\u4e50\u4e2d\u627e\u5230\u6b4c\u66f2 <code>id</code>\u3002</p> <p>\u4ee5\u6b4c\u66f2id=31192230\u4e3a\u4f8b\uff0cmarkdown\u6587\u4ef6\u4e2d\u6dfb\u52a0\uff1a</p> <pre><code>{% meting \"3986040\" \"netease\" \"song\" \"theme:#555\" \"mutex:true\" \"listmaxheight:340px\" \"preload:auto\" %}\n</code></pre> <p>\u4ee5\u6b4c\u5355id=6922083348\u4e3a\u4f8b\uff0c\u6dfb\u52a0\uff1a</p> <pre><code>{% meting \"6922083348\" \"netease\" \"playlist\" \"theme:#555\" \"mutex:true\" \"listmaxheight:340px\" \"preload:auto\" %}\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/E/#_4","title":"\u53c2\u8003","text":"<p>[1] CSDN\uff0c@hushhw\uff0cHexo \u4e3b\u9898\u63d2\u5165\u97f3\u4e50\u4e4b aplayer \u97f3\u4e50\u64ad\u653e\u5668 [2] Github\uff0chexo-tag-aplayer \u4e2d\u6587\u6587\u6863</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/F/","title":"\ud83d\udecc NexT\u4e3b\u9898\u542f\u7528PJAX","text":""},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/F/#pjax","title":"\u58f9\u4e28\u4ec0\u4e48\u662f PJAX\uff1f","text":"<p>PJAX\uff0c\u5373 PushState + Ajax\uff0c\u5c01\u88c5\u6210\u4e00\u4e2a jQuery \u6269\u5c55\u4ee5\u65b9\u4fbf\u4f7f\u7528\u3002PJAX \u4e3b\u8981\u7528\u6765\u89e3\u51b3 HTML \u9875\u9762\u5c40\u90e8\u5237\u65b0 url \u4e0d\u66f4\u65b0\u548c\u4e0d\u652f\u6301\u540e\u9000\u548c\u524d\u8fdb\u7684\u95ee\u9898\uff0c\u63d0\u5347\u7528\u6237\u4f53\u9a8c\u3002</p> <p>\u901a\u4fd7\u6765\u8bb2\uff1a</p> <p>\u6ca1\u6709 PJAX \u65f6\uff1a\u70b9\u51fb\u9875\u9762\u4e0a\u7684\u6309\u94ae\uff0c\u7f51\u9875\u5c06\u6e05\u9664\u5f53\u524d\u663e\u793a\u9875\uff0c\u8f7d\u5165\u6307\u5411\u9875\u7684\u5168\u90e8\u5185\u5bb9\uff0c\u52a0\u4e4b\u7f51\u7edc\u5ef6\u8fdf\u7b49\u539f\u56e0\uff0c\u4f1a\u51fa\u73b0\u77ed\u6682\u7684\u6574\u5e45\u7f51\u9875\u4e3a\u7a7a\u767d\u9875\u3002</p> <p>\u5f00\u542f PJAX \u65f6\uff1a\u70b9\u51fb\u9875\u9762\u4e0a\u7684\u6309\u94ae\uff0c\u6307\u5411\u9875\u548c\u5f53\u524d\u9875\u76f8\u540c\u7684\u5143\u7d20\uff0c\u5982\u5bfc\u822a\u680f\u3001\u97f3\u4e50\u64ad\u653e\u5668\u7b49\u4e0d\u9700\u8981\u91cd\u65b0\u52a0\u8f7d\uff0c\u800c\u4e0d\u540c\u7684\u5c40\u90e8\u9875\u9762\u5185\u5bb9\u5c06\u5237\u65b0\u5e76\u52a0\u8f7d\u3002</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/F/#next-pjax","title":"\u8d30\u4e28NexT\u4e3b\u9898\u4f7f\u7528 PJAX","text":"<p>Hexo \u7684 NexT \u4e3b\u9898\u5df2\u7ecf\u96c6\u6210 PJAX\uff1a</p> <p>\u4fee\u6539<code>~/hexo-site/_config.next.yml</code>\uff1a</p> <pre><code>- pjax: \n+ pjax: true\n</code></pre> <p>\u4ec5\u4ec5\u5728\u4e3b\u9898\u6587\u4ef6\u4e2d\u542f\u7528 PJAX \u5c40\u90e8\u5237\u65b0\u540e\uff0c\u4e00\u4e9b\u63d2\u4ef6\u4f1a\u5931\u6548\uff0c\u672c\u535a\u5ba2\u5931\u6548\u7684\u63d2\u4ef6\u6709\uff1agallery\u89c6\u56fe\u63d2\u4ef6<code>hexo-next-photos</code>\u3001\u8c46\u74e3\u7535\u5f71\u63d2\u4ef6<code>hexo-douban</code>\u3001\u97f3\u4e50\u63d2\u4ef6<code>aplayer</code>\u3001<code>meting</code>\u3002</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/F/#_1","title":"\u53c1\u4e28\u89e3\u51b3\u63d2\u4ef6\u5931\u6548\u95ee\u9898","text":"<p>\u539f\u7406\uff1a\u5728\u6dfb\u52a0\u63d2\u4ef6\u7684\u4f4d\u7f6e\u91cd\u65b0\u52a0\u8f7dCSS\u3001JS\u6587\u4ef6\u3002</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/F/#1-aplayermeting","title":"1. APlayer\u3001Meting \u97f3\u4e50\u63d2\u4ef6\u2014\u2014\u5207\u6362\u754c\u9762\u97f3\u4e50\u4e0d\u505c","text":"<p>\u8fd9\u7c7b\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539 HTML \u4ee3\u7801\u5bfc\u5165 CSS\u3001JS \u6587\u4ef6\uff1a</p> <p>\u3010\u4fa7\u8fb9\u680f\u6dfb\u52a0\u5168\u5c40\u97f3\u4e50\u64ad\u653e\u63d2\u4ef6\u3011</p> <p>\u7b2c\u4e00\u6b65\uff0c\u4fee\u6539 <code>~/hexo-site/_config.next.yml</code>  \uff1a</p> <pre><code>- #sidebar: source/_data/sidebar.njk\n+ sidebar: source/_data/sidebar.njk\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff0c<code>~/hexo-site/source/_data/</code> \u4e2d\uff0c\u589e\u52a0\u6587\u4ef6 <code>sidebar.njk</code> \uff0c\u7f16\u8f91\u5982\u4e0b\uff1a</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\" /&gt;\n        &lt;title&gt;&lt;/title&gt; \n        &lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css\"&gt;\n        &lt;script src=\"https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js\"&gt;&lt;/script&gt;\n        &lt;script src=\"https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js\"&gt;&lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;meting-js server=\"netease\" type=\"playlist\" id=\"6922083348\" autoplay=\"true\" order=\"random\" list-folded=\"true\"&gt;&lt;/meting-js&gt;    \n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/F/#2-hexo-next-photos","title":"2. \u753b\u5eca\u63d2\u4ef6 <code>hexo-next-photos</code>","text":"<p>\u4f7f\u7528\u56fe\u5e8a\u6a21\u5f0f\uff0c\u63d2\u4ef6\u5c06 <code>~/hexo-site/node_modules/hexo-next-photos/lib/figureBed.js</code> \u751f\u6210 <code>photo.js</code> \uff0c\u4e22\u5230 <code>~/hexo-site/public/js/</code> \u4e0b</p> <p>\u63d2\u4ef6\u5931\u6548\u89e3\u51b3\u539f\u7406\uff1a\u68c0\u6d4b\u5230 <code>ImageGrid</code> \u7684\u7c7b\uff0c\u5c31\u91cd\u65b0\u52a0\u8f7d\u4e00\u6b21CSS\u3001JS\u3002</p> <p>\u4fee\u6539 <code>~/hexo-site/themes/next/source/js/pjax.js</code>\uff0c\u6dfb\u52a0\uff1a</p> <pre><code>const pjax = new Pjax({....)}\n...\n//\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\nvar dynamicLoading = {\n    css: function(path){\n        if(!path || path.length === 0){\n            throw new Error('argument \"path\" is required !');\n        }\n        var head = document.getElementsByTagName('head')[0];\n        var link = document.createElement('link');\n        link.href = path;\n        link.rel = 'stylesheet';\n        link.type = 'text/css';\n        head.appendChild(link);\n    },\n    js: function(path){\n        if(!path || path.length === 0){\n            throw new Error('argument \"path\" is required !');\n        }\n        var head = document.getElementsByTagName('head')[0];\n        var script = document.createElement('script');\n        script.src = path;\n        script.type = 'text/javascript';\n        head.appendChild(script);\n    }\n}\n</code></pre> <p>\u7136\u540e\u518d\u6dfb\u52a0\uff1a</p> <pre><code>document.addEventListener('pjax:success', () =&gt; {\n...\nNexT.utils.updateSidebarPosition();\n\n// \u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\nif(document.getElementsByTagName(\"ImageGrid\")){\n    //\u52a8\u6001\u52a0\u8f7d CSS \u6587\u4ef6\n    dynamicLoading.css(\"/css/gallery.css\");\n    //\u52a8\u6001\u52a0\u8f7d JS \u6587\u4ef6\n    dynamicLoading.js(\"/js/photo.js\");\n}\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/F/#3-hexo-douban","title":"3. \u8c46\u74e3\u7535\u5f71\u63d2\u4ef6 <code>hexo-douban</code>","text":"<p>\u6839\u636e\u4ee5\u4e0a\u601d\u8def\uff0c\u53ea\u8981\u5728 <code>pjax.js</code> \u4e2d\u6dfb\u52a0\u8fdb\u8981\u52a0\u8f7d\u7684 CSS\u3001JS \u5373\u53ef\uff0c\u5f53\u7136\u6700\u91cd\u8981\u7684\u662f\u627e\u5230\u8981\u8ffd\u8e2a\u7684\u7c7b\u540d\u3002</p> <p>\u7b2c\u4e00\u6b65\uff0c\u5b9a\u4f4d\u63d2\u4ef6\u663e\u793a\u4f4d\u7f6e\uff0c\u4f4d\u4e8e <code>&lt;div class=\"post-body animated fadeInDown\"&gt;</code> \u4e0b\uff1a</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u9010\u884c\u5206\u6790\uff1a</p> <pre><code>&lt;blockquote&gt; ... &lt;/blockquote&gt; &lt;!--\u8fd9\u662f\u4e00\u5f00\u59cb\u7684\u90a3\u4e2aquote\u5757--&gt;\n&lt;style&gt; ... &lt;/style&gt; &lt;!--\u8fd9\u662f\u6837\u5f0f\uff08CSS\uff09\u6587\u4ef6&gt;\n&lt;div class=\"hexo-douban-tabs\"&gt; ... &lt;/div&gt; &lt;!--\u8fd9\u662f\u663e\u793a\u8c46\u74e3\u7535\u5f71 \u5728\u770b/\u60f3\u770b/\u5df2\u770b \u7684div\u6807\u7b7e--&gt;\n&lt;div&gt; ... &lt;/div&gt; &lt;!--\u8fd9\u91cc\u653e\u7684\u662f \u9996\u9875/\u4e0a\u4e00\u9875/\u9875\u7801/\u4e0b\u4e00\u9875/\u5c3e\u9875 \u7684\u6807\u7b7e--&gt;\n&lt;script&gt; ... &lt;/script&gt; &lt;!--\u8fd9\u91cc\u662fJS\u6587\u4ef6--&gt;\n</code></pre> <p>\u6240\u4ee5\uff0c\u628a <code>&lt;style&gt; ... &lt;/style&gt;</code> \u5185\u5bb9\u4fdd\u5b58\u4e3a <code>douban.styl</code> \uff0c\u653e\u5728 <code>~/hexo-site/themes/next/source/css/</code> \u4e0b\uff1b\u628a <code>&lt;script&gt; ... &lt;/script&gt;</code> \u4fdd\u5b58\u4e3a <code>douban.js</code> \uff0c\u653e\u5728 <code>~/hexo-site/themes/next/source/js/</code> \u4e0b\uff1b</p> <p>\u56e0\u4e3a\uff0c\u5728\u6267\u884c <code>hexo g</code> \u7684\u65f6\u5019\uff0c<code>~/hexo-site/themes/next/source/css/</code> \u548c <code>~/hexo-site/themes/next/source/js/</code> \u4e24\u4e2a\u6587\u4ef6\u5939\u4e2d\u7684\u6587\u4ef6\u4f1a\u62f7\u8d1d\u5230 <code>~/hexo-site/public/css</code> \u548c <code>~/hexo-site/public/js</code> \u6587\u4ef6\u5939\u4e0b\u3002</p> <p>\u7b2c\u4e09\u6b65\uff0c\u7ee7\u7eed\u5206\u6790\uff1a</p> <p>\u5305\u542b <code>envent</code> \u7684 <code>&lt;a&gt; &lt;/a&gt;</code> \u6807\u7b7e\u5728\u5206\u522b\u5b58\u653e\u5728\u4e24\u4e2a\u7c7b\u4e0b\uff1a</p> <pre><code>&lt;div class=\"hexo-douban-tabs\"&gt; ... &lt;/div&gt;\n&lt;div class=\"hexo-douban-pagination\"&gt; ... &lt;/div&gt;\n</code></pre> <p>\u6240\u4ee5\uff0c\u5728 <code>~/hexo-site/themes/next/source/js/pjax.js</code> \u4e2d\u6dfb\u52a0\uff1a</p> <pre><code>if(document.getElementsByTagName(\"hexo-douban-tabs\")){\n    //\u52a8\u6001\u52a0\u8f7d CSS \u6587\u4ef6\n    dynamicLoading.css(\"/css/douban.css\");\n    dynamicLoading.js(\"/js/douban.js\");\n}\nif(document.getElementsByTagName(\"hexo-douban-pagination\")){\n    //\u52a8\u6001\u52a0\u8f7d CSS \u6587\u4ef6\n    dynamicLoading.css(\"/css/douban.css\");\n    dynamicLoading.js(\"/js/douban.js\");\n}\n</code></pre> <p>\u56e0\u4e3a\u6ca1\u5b66\u8fc7\u524d\u7aef\u7684 HTML\u3001JS\u3001CSS \u8fd9\u4e9b\uff0c\u5982\u6709\u9519\u8bef\uff0c\u5e0c\u671b\u4e0d\u541d\u8d50\u6559</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/F/#_2","title":"\u53c2\u8003","text":"<p>[1] FHB\u79d1\u5b66\u9662\uff0c\u6a0a\u6d69\u67cf\uff0cPJAX\u539f\u7406\u548c\u4f7f\u7528</p> <p>[2] \u7c73\u7c73\u7684\u535a\u5ba2\uff0c\u5f20\u4e66\u6a35\uff0cNexT \u9002\u914d PJAX \u7684\u65b9\u6848</p> <p>[3] \u7a0b\u5e8f\u5458\u751c\u54c1\u5e97\uff0cJefsky\uff0c\u89e3\u51b3pjax\u52a0\u8f7d\u9875\u9762\u5bfc\u81f4js\u63d2\u4ef6\u5931\u6548</p> <p>[4] \u6728\u7686\u4e4b\u68ee\uff0cRaoby\uff0cpjax\u65e0\u5237\u65b0\u52a0\u8f7d\u540e\u767e\u5ea6\u7edf\u8ba1\u5931\u6548\u89e3\u51b3\u65b9\u6848</p> <p>[5] \u5c0f\u4e50\u7684\u535a\u5ba2\uff0cXiaoLe\uff0c\u89e3\u51b3next\u4e3b\u9898\u5f00\u542fpjax\u65f6\u4f7f\u7528hexo-blog-encrypt\u65e0\u6548</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/G/","title":"\ud83d\udecc Hexo\u5236\u4f5c\u4e2a\u4eba\u753b\u5eca","text":"<p>\u9700\u6c42\uff1a\u5728\u5bfc\u822a\u680f\u6dfb\u52a0\u4e00\u4e2a\u5c55\u793a\u7167\u7247\u5899\u7684\u201c\u753b\u5eca\u201d\u529f\u80fd\uff0c\u8981\u6c42:</p> <ol> <li>\u56fe\u7247\u4f7f\u7528\u56fe\u5e8a\u4fdd\u5b58</li> <li>\u56fe\u7247\u52a0\u8f7d\u901f\u5ea6\u5feb</li> <li>\u56fe\u7247\u4f53\u79ef\u5c0f\uff0c\u975e\u539f\u56fe</li> </ol> <p>\u672c\u6587\u4f7f\u7528\u817e\u8baf\u4e91\u5bf9\u8c61\u5b58\u50a8 COS \u4f5c\u4e3a\u56fe\u5e8a\uff0c\u4f7f\u7528 PicGo \u8f6f\u4ef6\u4e0a\u4f20\uff0c\u4f7f\u7528 Hexo \u63d2\u4ef6\u5236\u4f5c\u753b\u5eca\uff0c\u5e76\u4f7f\u7528 Python \u811a\u672c\u5c06\u539f\u56fe\u6279\u91cf\u538b\u7f29\u4e3a Webp \u683c\u5f0f\u3002</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/G/#cos","title":"\u58f9\u4e28\u817e\u8baf\u4e91 COS \u56fe\u5e8a","text":"<p>\u83dc\u5355 \u2014\u2014 \u4ea7\u54c1 \u2014\u2014 \u5b58\u50a8 \u2014\u2014 \u5bf9\u8c61\u5b58\u50a8 \u2014\u2014 \u7acb\u5373\u4f7f\u7528</p> <p>\u5b58\u50a8\u6876\u5217\u8868 \u2014\u2014 \u521b\u5efa\u5b58\u50a8\u6876 \u2014\u2014 \u8bbf\u95ee\u6743\u9650\u8bbe\u7f6e\u4e3a\uff1a\u516c\u6709\u8bfb\u79c1\u6709\u5199</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/G/#_1","title":"\u8d30\u4e28\u4f7f\u7528\u56fe\u5e8a","text":"<p>\u5728\u5b58\u50a8\u6876\u5217\u8868 \u2014\u2014 \u9009\u62e9\u5b58\u50a8\u6876 \u2014\u2014 \u6982\u89c8\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230\u5b58\u50a8\u6876\u540d\u79f0\u548c\u6240\u5c5e\u5730\u57df</p> <p>\u5728\u8d26\u6237 \u2014\u2014 \u8bbf\u95ee\u7ba1\u7406 \u2014\u2014 \u8bbf\u95ee\u79d8\u94a5 \u2014\u2014 API \u79d8\u94a5\u7ba1\u7406 \u2014\u2014 \u65b0\u5efa\u79d8\u94a5\uff0c\u53ef\u4ee5\u770b\u5230APPID\u3001SecretId\u548cSecretKey</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/G/#_2","title":"\u3010\u4f7f\u7528\u5ba2\u6237\u7aef\u3011","text":"<p>\u4e0b\u8f7d\u5ba2\u6237\u7aef\uff1ahttps://console.cloud.tencent.com/cos5/cosbrowser</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/G/#picgo","title":"\u3010PicGo\u3011","text":"<p>\u4e0b\u8f7d\u5ba2\u6237\u7aef\uff1ahttps://github.com/Molunerfinn/PicGo/releases</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/G/#typora","title":"\u53c1\u4e28Typora \u56fe\u5e8a\u8bbe\u7f6e","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u914d\u7f6e\u597d PicGo</p> <p>\u7b2c\u4e8c\u6b65\uff0cTypora \u4e2d\uff0c\u6587\u4ef6\u2014\u2014\u504f\u597d\u8bbe\u7f6e\u2014\u2014\u56fe\u50cf\uff1a</p> <pre><code>\u63d2\u5165\u56fe\u7247\u65f6\uff1a\u4e0a\u4f20\u56fe\u7247\n\u4e0a\u4f20\u670d\u52a1\uff1aPicGo(app)\n\u8bbe\u7f6e PicGo \u8def\u5f84\n</code></pre> <p>\u9a8c\u8bc1\u56fe\u7247\u4e0a\u4f20\u9009\u9879</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/G/#hexo","title":"\u8086\u4e28Hexo \u753b\u5eca\u5c55\u793a","text":"<p>\u4f7f\u7528 Hexo \u63d2\u4ef6 <code>hexo-next-photos</code></p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/G/#1","title":"1. \u5b89\u88c5\u63d2\u4ef6","text":"<pre><code>cd ~/hexo-site\n</code></pre> <pre><code>npm install hexo-next-photos --save\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/G/#2","title":"2. \u4fee\u6539\u4e3b\u9898\u914d\u7f6e\u6587\u4ef6","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u5c06 <code>~/hexo-site/themes/next/_config.yml</code> \u590d\u5236\u5230 <code>~/hexo-site/</code>\uff0c\u91cd\u547d\u540d\u4e3a <code>_config.next.yml</code></p> <p>PS\uff1a\u5173\u4e8e\u8fd9\u4e09\u4e2a\u6587\u4ef6\uff0c\u6d4b\u8bd5\u53d1\u73b0\u5b83\u4eec\u7684\u4f18\u5148\u7ea7\uff1a<code>~/hexo-site/themes/next/_config.yml</code> &gt; <code>~/hexo-site/_config.next.yml</code>\uff08\u7528\u5728\u65b0\u5efa\u5bfc\u822a\u680f\u8c03\u6574\u987a\u5e8f\u7684\u65f6\u5019\uff09</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u65b0\u5efa\u6587\u4ef6\u5939 <code>~/hexo-site/source/_data</code>\uff0c\u65b0\u5efa\u6587\u4ef6 <code>body-end.njk</code>\u3001<code>body-end.swig</code>\u3001<code>styles.styl</code></p> <p>\u7b2c\u4e09\u6b65\uff0c\u65b0\u5efa\u9875 <code>hexo new page gallery</code>\uff0c\u4fee\u6539 <code>/source/gallery/index.md</code>\uff1a</p> <pre><code>---\ntitle: gallery\ntype: photos\n---\n&lt;div class=\"ImageGrid\"&gt;&lt;/div&gt;\n</code></pre> <p>\u7b2c\u56db\u6b65\uff0c\u4fee\u6539 <code>~/hexo-site/_config.yml</code>\uff0c\u63a8\u8350\u4f7f\u7528\u56fe\u5e8a\u6a21\u5f0f\uff0c\u6dfb\u52a0\u5185\u5bb9\uff1a</p> <pre><code># hexo-next-photos\nhexo_next_photos:\n  modes: figureBed \n  pictureUrl: \n  pictureDirPath: source/gallery/PhotoDir\n</code></pre> <p>\u7b2c\u4e94\u6b65\uff0c\u4fee\u6539 <code>~/hexo-site/themes/next/_config.next.yml</code>\uff0c\u5982\u4e0b\uff1a</p> <pre><code>custom_file_path:\n-  #bodyEnd: source/_data/body-end.swig\n+  bodyEnd: source/_data/body-end.njk\n-  #style: source/_data/styles.styl\n+  style: source/_data/styles.styl\n\n...\n\n# ---------------------------------------------------------------\n# Third Party Plugins &amp; Services Settings\n# See: https://theme-next.org/docs/third-party-services/\n# You may need to install dependencies or set CDN URLs in `vendors`\n# There are two different CDN providers by default:\n#   - jsDelivr (cdn.jsdelivr.net), works everywhere even in China\n#   - CDNJS (cdnjs.cloudflare.com), provided by cloudflare\n# ---------------------------------------------------------------\n- #fancybox: false\n+ fancybox: true\n\n...\n\n- #lazyload: false\n+ lazyload: true\n\n...\n\nvendors:\n  # FancyBox\n  # jquery: //cdn.jsdelivr.net/npm/jquery@3/dist/jquery.min.js\n  # fancybox: //cdn.jsdelivr.net/gh/fancyapps/fancybox@3/dist/jquery.fancybox.min.js\n  # fancybox_css: //cdn.jsdelivr.net/gh/fancyapps/fancybox@3/dist/jquery.fancybox.min.css\n  jquery:\n  fancybox:  # choose a faster CDN\n  fancybox_css: # choose a faster CDN\n\n  # Lazyload\n  # lazyload: //cdn.jsdelivr.net/npm/lozad@1/dist/lozad.min.js\n  # lazyload: //cdnjs.cloudflare.com/ajax/libs/lozad.js/1.9.0/lozad.min.js\n  lazyload: # choose a faster CDN\n</code></pre> <p>\u589e\u52a0\u83dc\u5355\u680f\uff1a</p> <pre><code>menu:\n+ gallery: /gallery/ || fa fa-camera\n</code></pre> <p>\u63d2\u4ef6\u6e90\u7a0b\u5e8f\u5b58\u5728\u9519\u8bef\uff0c\u4f1a\u5bfc\u81f4\u7b2c\u4e00\u5f20\u56fe\u7247\u4e0d\u663e\u793a\uff0c\u4fee\u6539 <code>~/hexo-site/node_modules/hexo-next-photos/lib/figureBed.js</code></p> <pre><code>-  page: 1\n+  page: 0\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/G/#3","title":"3. \u6dfb\u52a0\u56fe\u7247","text":"<p>\u5c06\u4fdd\u5b58\u5728\u56fe\u5e8a\u7684\u56fe\u7247\u5730\u5740\u62f7\u8d1d\u5230 <code>source/gallery/PhotoDir/linkList.txt</code>\uff0c\u5982\u4e0b\uff1a</p> <pre><code>https://s1.ax1x.com/2020/05/21/YbueyT.jpg\nhttps://s1.ax1x.com/2020/05/21/YbuZlV.jpg\nhttps://s1.ax1x.com/2020/05/21/YbuVS0.jpg\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/6%EF%B8%8F%E2%83%A3%20Hexo/G/#_3","title":"\u53c2\u8003","text":"<p>hexo-next-photos\u4f5c\u8005\u535a\u5ba2\uff1ahttps://jygzyc.github.io/photos</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/7%EF%B8%8F%E2%83%A3%20%E5%AD%97%E4%BD%93/","title":"\ud83c\udf88 \u524d\u7aef/7\ufe0f\u20e3 \u5b57\u4f53","text":"<ul> <li> <p>\u51e0\u4e2a\u5b57\u4f53\u7f51\u7ad9</p> <p> Getting started</p> </li> <li> <p>CloudConvert\u5728\u7ebf\u538b\u7f29</p> <p> Getting started</p> </li> <li> <p>FontTools\u5b57\u4f53\u538b\u7f29</p> <p> Getting started</p> </li> <li> <p>Fontmin\u5b57\u4f53\u5b50\u96c6</p> <p> Getting started</p> </li> <li> <p>\u5b57\u4f53\u538b\u7f29\u7ec8\u6781\u65b9\u6cd5</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/7%EF%B8%8F%E2%83%A3%20%E5%AD%97%E4%BD%93/A/","title":"\ud83e\udd9e \u51e0\u4e2a\u5b57\u4f53\u7f51\u7ad9","text":"\u7f51\u7ad9 \u94fe\u63a5 Google\u5b57\u4f53 https://fonts.google.com/ \u65b0\u8482\u5b57\u4f53 https://www.sentyfont.com/"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/7%EF%B8%8F%E2%83%A3%20%E5%AD%97%E4%BD%93/AA/","title":"\ud83c\udf80 CloudConvert\u5728\u7ebf\u538b\u7f29","text":"<p>\u4f7f\u7528\u5728\u7ebf\u5de5\u5177\u53ef\u4ee5\u65b9\u4fbf\u7684\u538b\u7f29\u5b57\u4f53</p> <p>\u7f51\u5740\uff1ahttps://cloudconvert.com/</p> <p>\u5982\u56fe\u6240\u793a\uff0c\u53ef\u4ee5\u9009\u62e9\u538b\u7f29\u4e3a<code>WOFF</code>\u6216<code>WOFF2</code>\u683c\u5f0f</p> <p></p> <p>\u7136\u9e45\uff0c\u6211\u7528\u8fd9\u4e2a\u538b\u7f29\u7684<code>NotoSerifSC</code>\u5b57\u4f53\u4e0d\u80fd\u7528\uff0c\u5176\u4ed6\u5b57\u4f53\u5982<code>EBGaramond</code>\u3001<code>Lato</code>\u3001<code>Monoton</code>\u3001<code>monaco</code>\u7b49\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528</p> \u5b57\u4f53 \u538b\u7f29\u524d \u538b\u7f29\u540e \u538b\u7f29\u6bd4 Lato.ttf 115KB 33KB 28.70% Monoton.ttf 48.73KB 20KB 41.04% monaco.ttf 65KB 32KB 49.23%"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/7%EF%B8%8F%E2%83%A3%20%E5%AD%97%E4%BD%93/B/","title":"\ud83d\udca5 FontTools\u5b57\u4f53\u538b\u7f29","text":"<p>\u4f7f\u7528Python\u5e93\u538b\u7f29\u5b57\u4f53</p> <p>\u7b2c\u4e00\u6b65\uff0c\u5b89\u88c5<code>fonttools</code>\u5305<sup>1</sup></p> <pre><code>pip install fonttools\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff0c\u4e0b\u8f7d<code>sc_unicode.txt</code></p> <p>\u7b2c\u4e09\u6b65\uff0c<code>NotoSerifSC.otf</code>\u3001<code>sc_unicode.txt</code>\u653e\u5728\u540c\u7ea7\u76ee\u5f55\u4e0b\uff0c\u6267\u884c\u538b\u7f29\u547d\u4ee4\uff1a</p> <pre><code>pyftsubset NotoSerifSC.otf --unicodes-file=sc_unicode.txt\n</code></pre> <p>\u751f\u6210<code>NotoSerifSC.subset.otf</code>\u5b57\u4f53\uff08\u4eb2\u6d4b\u53ef\u7528\uff09</p> \u5b57\u4f53 \u538b\u7f29\u524d \u538b\u7f29\u540e \u538b\u7f29\u6bd4 NotoSerifSC.otf 10.6MB 2.33MB 21.98% <ol> <li> <p>CSDN\uff0c@littleduo\uff0c\u6709\u6548\u7684\u538b\u7f29\u5b57\u4f53\u65b9\u6cd5 \u21a9</p> </li> </ol>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/7%EF%B8%8F%E2%83%A3%20%E5%AD%97%E4%BD%93/C/","title":"\ud83e\udde7 Fontmin\u5b57\u4f53\u5b50\u96c6","text":"<p>Fontmin\u2014\u2014JavaScript\u5b57\u4f53\u5b50\u96c6\u5316\u65b9\u6848</p> <p>\u5b98\u7f51\uff1ahttp://ecomfe.github.io/fontmin/#source</p> <p>\u7b2c\u4e00\u6b65\uff0c\u4e0b\u8f7dFontmin\u5ba2\u6237\u7aef\u3002</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u628a\u6587\u672c\u7247\u6bb5\u8f93\u5165\u5de6\u4fa7\u680f\uff0c\u9009\u62e9\u671f\u671b\u5b57\u4f53\u3002</p> <p>\u7b2c\u4e09\u6b65\uff0c\u53f3\u4fa7\u9884\u89c8\u6587\u5b57\uff0c\u70b9\u51fb\u751f\u6210\u3002</p> <p></p> <p>\u751f\u6210\u538b\u7f29\u5b57\u4f53\uff0c\u8fd9\u91cc\u4ee5<code>.woff2</code>\u683c\u5f0f\u4e3a\u4f8b</p> \u5b57\u4f53 \u538b\u7f29\u524d \u538b\u7f29\u540e \u538b\u7f29\u6bd4 \u7c73\u5170\u590f\u65e5\u95f2\u60c5.ttf 27.2MB 163KB 0.58% <p>\u8fd9\u79cd\u65b9\u6cd5\u9002\u5408\u660e\u786e\u4e86\u4f7f\u7528\u54ea\u51e0\u4e2a\u6587\u5b57\u7684\u60c5\u51b5</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/7%EF%B8%8F%E2%83%A3%20%E5%AD%97%E4%BD%93/D/","title":"\ud83e\udd69 \u5b57\u4f53\u538b\u7f29\u7ec8\u6781\u65b9\u6cd5","text":""},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/7%EF%B8%8F%E2%83%A3%20%E5%AD%97%E4%BD%93/D/#_1","title":"\u58f9\u4e28\u95ee\u9898\u5206\u6790","text":"<p>\u524d\u9762\u51e0\u79cd\u5b57\u4f53\u538b\u7f29\u65b9\u6cd5\u5e76\u4e0d\u80fd\u6ee1\u8db3\u8981\u6c42</p> <p>\u4f7f\u7528CloudConvert\u65e0\u6cd5\u538b\u7f29NotoSerifSC\u5b57\u4f53</p> <p>\u4f7f\u7528fonttools\u538b\u7f29\u540e\u7684\u5b57\u4f53\u4ecd\u7136\u6bd4\u8f83\u5927\uff0c\u7f51\u9875\u52a0\u8f7d\u6162</p> <p>\u4f7f\u7528Fontmin\u6ca1\u6cd5\u4e3a\u6574\u4e2a\u535a\u5ba2\u538b\u7f29\u5bf9\u5e94\u7684\u5b57\u4f53</p> <p>\u4f46\u662f\uff0c<code>fonttools</code>\u548c<code>Fontmin</code>\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5355\u53ef\u884c\u7684\u601d\u8def\uff1a</p> <ol> <li>\u5148\u627e\u5230\u7f51\u7ad9\u6d89\u53ca\u7684\u6240\u6709\u6587\u5b57</li> <li>\u6784\u6210<code>fonttools</code>\u6240\u4f7f\u7528\u7684<code>sc_unicode.txt</code></li> <li>\u4f7f\u7528<code>fonttools</code>\u5de5\u5177\u538b\u7f29\u5b57\u4f53</li> </ol>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/7%EF%B8%8F%E2%83%A3%20%E5%AD%97%E4%BD%93/D/#_2","title":"\u8d30\u4e28\u4ee3\u7801\u5b9e\u73b0","text":"<pre><code># -*- coding: utf-8 -*-\n\"\"\"\n====================================\n@File Name \uff1agenerate_fonts.py\n@Time \uff1a 2023/9/5 11:30\n@Program IDE \uff1aPyCharm\n@Create by Author \uff1a MasterMao\n@Motto \uff1a\"The trick, William Potter, is not minding that it hurts.\"\n@Introduction : \n- \u5b57\u4f53\u538b\u7f29\u5b9e\u73b0\n- \n====================================\n\"\"\"\nimport os\n\nSITE_PATH = '../site'\nAIM_FONT = 'NotoSerifSC.otf'\nFONTS_PATH = './Fonts'\n\n\ndef get_letters():\n    char_list = []\n    for root, dirs, files in os.walk(SITE_PATH):\n        for file in files:\n            if file.endswith('.html'):\n                html_path = os.path.join(root, file)\n                with open(html_path, 'r', encoding='utf8') as f:\n                    contents = f.readlines()\n                for content in contents:\n                    char_list.extend(list(content))\n    char_simple_list = list(set(char_list))\n    return char_simple_list\n\n\ndef generate_fonts(letter_list):\n    char_unicode = [str(item.encode('unicode_escape').decode()).split('u')[-1].upper() + '\\n' for item in\n                    letter_list if '\\u4e00' &lt;= item &lt;= '\\u9fff']\n    with open(f'{FONTS_PATH}/sc_unicode.txt', 'w', encoding='utf8') as f:\n        f.writelines(char_unicode)\n\n    # pip install fonttools\n    cmd = f'cd {os.path.abspath(FONTS_PATH)} &amp;&amp; pyftsubset {AIM_FONT} --unicodes-file=sc_unicode.txt'\n    re = os.system(cmd)\n    assert [1, 0][re], '\u751f\u6210\u5b57\u4f53\u5931\u8d25'\n\n\nif __name__ == '__main__':\n    letters = get_letters()\n    generate_fonts(letters)\n</code></pre> <p>\u8fd0\u884c\u540e\uff0c\u4f1a\u5728\u5b57\u4f53\u6587\u4ef6\u5939\u751f\u6210\u65b0\u7684\u5b57\u4f53<code>xxx.subset.otf</code></p> <pre><code>.\n\u251c\u2500\u2500 Fonts\n\u2502   \u251c\u2500\u2500 NotoSerifSC.otf\n\u2502   \u251c\u2500\u2500 NotoSerifSC.subset.otf\n\u2502   \u2514\u2500\u2500 sc_unicode.txt\n\u2514\u2500\u2500 generate_fonts.py\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/7%EF%B8%8F%E2%83%A3%20%E5%AD%97%E4%BD%93/D/#_3","title":"\u53c1\u4e28\u7ed3\u679c\u5206\u6790","text":"<p>\u4ee5<code>gallery.mastermao.cn</code>\u7f51\u7ad9\u4e3a\u4f8b\uff0c\u63d0\u53d6\u7684<code>sc_unicode.txt</code>\u6587\u4ef6\u5185\u542b740\u4e2a\u6c49\u5b57\u7684Unicode\u7801\uff0c\u538b\u7f29\u540e\u7684\u5b57\u4f53\u4f53\u79ef\u5bf9\u6bd4\uff1a</p> NotoSerifSC.otf NotoSerifSC.subset.otf \u538b\u7f29\u6bd4 10952KB 234KB 2.14%"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/8%EF%B8%8F%E2%83%A3%20Notion/","title":"\ud83c\udf88 \u524d\u7aef/8\ufe0f\u20e3 Notion","text":"<ul> <li> <p>Notion\u914d\u7f6e\u4e2a\u4eba\u57df\u540d</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/8%EF%B8%8F%E2%83%A3%20Notion/A/","title":"\ud83d\udc2c Notion\u914d\u7f6e\u4e2a\u4eba\u57df\u540d","text":"<p>Notion\u662f\u4e00\u6b3e\u7535\u5b50\u7b14\u8bb0\u8f6f\u4ef6\uff0c\u8fd8\u53ef\u4ee5\u76f4\u63a5\u5c06\u7535\u5b50\u7b14\u8bb0\u516c\u5f00\u94fe\u63a5\uff0c\u751f\u6210\u4e2a\u4eba\u7f51\u9875\uff0c\u56e0\u6b64\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u535a\u5ba2\u5199\u4f5c\u7cfb\u7edf\u3002\u7136\u9e45\uff0cNotion\u65e0\u6cd5\u76f4\u63a5\u81ea\u5b9a\u4e49\u4e2a\u4eba\u57df\u540d\uff0c\u4f46\u53ef\u4ee5\u81ea\u5b9a\u4e49<code>notion.so</code>\u5b50\u57df\u540d\u3002</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/8%EF%B8%8F%E2%83%A3%20Notion/A/#notion","title":"\u58f9\u4e28Notion \u516c\u5f00\u94fe\u63a5","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u8bbe\u7f6e\u559c\u597d\u57df\u540d\u3002Notion \u4e2d\uff0cSettings &amp; Members \u2014\u2014 Settings \u2014\u2014 Domain \u2014\u2014 \u586b\u5165\u559c\u597d\u7684\u5b57\u6bb5\uff0c\u5982\u586b\u5165 \u201cmastermao\u201d \uff0c\u5219\u516c\u5f00\u94fe\u63a5\u7684\u683c\u5f0f\u5c31\u662f\uff1a<code>mastermao.notion.site/xxxxx</code>\uff1b</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u516c\u5f00\u94fe\u63a5\u3002\u8f6c\u5230\u516c\u5f00\u9875\uff0c\u53f3\u4e0a\u89d2 Share \u2014\u2014 Share to web\uff0c\u5e76\u53ef\u8bbe\u7f6e Show link options\uff0c\u751f\u6210\u7684\u516c\u5f00\u94fe\u63a5\u76db\u51fa\u5907\u7528\u3002</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/8%EF%B8%8F%E2%83%A3%20Notion/A/#cloudflare","title":"\u8d30\u4e28\u914d\u7f6eCloudflare","text":""},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/8%EF%B8%8F%E2%83%A3%20Notion/A/#1","title":"1. \u6dfb\u52a0\u670d\u52a1","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u521b\u5efa\u670d\u52a1\u3002\u6253\u5f00cloudflare\u4e3b\u9875\u2014\u2014Workers\u2014\u2014\u521b\u5efa\u670d\u52a1\uff1a</p> <p>\u670d\u52a1\u540d\u79f0\uff1anotion \u9009\u62e9\u542f\u52a8\u5668\uff1aHTTP\u5904\u7406\u7a0b\u5e8f</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u7f16\u8f91\u670d\u52a1\u3002\u521b\u5efa\u670d\u52a1\u540e\u2014\u2014\u5feb\u901f\u7f16\u8f91\uff0c\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9\uff1a</p> <pre><code>/* \u6dfb\u52a0\u57df\u540d notion.mastermao.cn */\nconst MY_DOMAIN = 'notion.mastermao.cn';\n\n/*\n  \u6dfb\u52a0\u4ecenotion\u516c\u5f00\u7684\u94fe\u63a5id,\u5373\n  https://mastermao.notion.site/[xxxxxx\u8fd9\u91cc\u5c31\u662fxxxxxxx]\n  \u4f8b\u5982\uff1a\n  '': 'bb1678c7e8fx47be9bf49aac08bedgb',\n*/\nconst SLUG_TO_PAGE = {'': 'bb1678c7e8fx47be9bf49aac08bedgb',};\n\n/* \u6dfb\u52a0\u4e3b\u9875\u9762\u7684\u6807\u9898\u548c\u63cf\u8ff0  */\nconst PAGE_TITLE = '';\nconst PAGE_DESCRIPTION = '';\n\n/* \u53ef\u4ee5\u9009\u62e9\u663e\u793a\u7684\u5b57\u4f53 https://fonts.google.com\n\u4f8b\u5982\uff1aconst GOOGLE_FONT = 'Noto Sans Simplified Chinese';*/\nconst GOOGLE_FONT = 'Noto Sans Simplified Chinese';\n\n/* \u6dfb\u52a0\u81ea\u5b9a\u4e49\u811a\u672c\uff0c\u53ef\u4ee5\u6dfb\u52a0Google Analytics */\nconst CUSTOM_SCRIPT = ``;\n\n/* \u914d\u7f6e\u7ed3\u675f\uff0c\u4ee5\u4e0b\u5185\u5bb9\u65e0\u9700\u81ea\u5df1\u914d\u7f6e */\n\nconst PAGE_TO_SLUG = {};\nconst slugs = [];\nconst pages = [];\nObject.keys(SLUG_TO_PAGE).forEach(slug =&gt; {\n    const page = SLUG_TO_PAGE[slug];\n    slugs.push(slug);\n    pages.push(page);\n    PAGE_TO_SLUG[page] = slug;\n});\n\naddEventListener('fetch', event =&gt; {\n    event.respondWith(fetchAndApply(event.request));\n});\n\nfunction generateSitemap() {\n    let sitemap = '&lt;urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\"&gt;';\n    slugs.forEach(\n        (slug) =&gt;\n            (sitemap +=\n                '&lt;url&gt;&lt;loc&gt;https://' + MY_DOMAIN + '/' + slug + '&lt;/loc&gt;&lt;/url&gt;')\n    );\n    sitemap += '&lt;/urlset&gt;';\n    return sitemap;\n}\n\nconst corsHeaders = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET, HEAD, POST, PUT, OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n};\n\nfunction handleOptions(request) {\n    if (request.headers.get('Origin') !== null &amp;&amp;\n        request.headers.get('Access-Control-Request-Method') !== null &amp;&amp;\n        request.headers.get('Access-Control-Request-Headers') !== null) {\n        // Handle CORS pre-flight request.\n        return new Response(null, {\n            headers: corsHeaders\n        });\n    } else {\n        // Handle standard OPTIONS request.\n        return new Response(null, {\n            headers: {\n                'Allow': 'GET, HEAD, POST, PUT, OPTIONS',\n            }\n        });\n    }\n}\n\nasync function fetchAndApply(request) {\n    if (request.method === 'OPTIONS') {\n        return handleOptions(request);\n    }\n    let url = new URL(request.url);\n    url.hostname = 'www.notion.so';\n    if (url.pathname === '/robots.txt') {\n        return new Response('Sitemap: https://' + MY_DOMAIN + '/sitemap.xml');\n    }\n    if (url.pathname === '/sitemap.xml') {\n        let response = new Response(generateSitemap());\n        response.headers.set('content-type', 'application/xml');\n        return response;\n    }\n    let response;\n    if (url.pathname.startsWith('/app') &amp;&amp; url.pathname.endsWith('js')) {\n        response = await fetch(url.toString());\n        let body = await response.text();\n        response = new Response(body.replace(/www.notion.so/g, MY_DOMAIN).replace(/notion.so/g, MY_DOMAIN), response);\n        response.headers.set('Content-Type', 'application/x-javascript');\n        return response;\n    } else if ((url.pathname.startsWith('/api'))) {\n        // Forward API\n        response = await fetch(url.toString(), {\n            body: url.pathname.startsWith('/api/v3/getPublicPageData') ? null : request.body,\n            headers: {\n                'content-type': 'application/json;charset=UTF-8',\n                'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36'\n            },\n            method: 'POST',\n        });\n        response = new Response(response.body, response);\n        response.headers.set('Access-Control-Allow-Origin', '*');\n        return response;\n    } else if (slugs.indexOf(url.pathname.slice(1)) &gt; -1) {\n        const pageId = SLUG_TO_PAGE[url.pathname.slice(1)];\n        return Response.redirect('https://' + MY_DOMAIN + '/' + pageId, 301);\n    } else {\n        response = await fetch(url.toString(), {\n            body: request.body,\n            headers: request.headers,\n            method: request.method,\n        });\n        response = new Response(response.body, response);\n        response.headers.delete('Content-Security-Policy');\n        response.headers.delete('X-Content-Security-Policy');\n    }\n\n    return appendJavascript(response, SLUG_TO_PAGE);\n}\n\nclass MetaRewriter {\n    element(element) {\n        if (PAGE_TITLE !== '') {\n            if (element.getAttribute('property') === 'og:title'\n                || element.getAttribute('name') === 'twitter:title') {\n                element.setAttribute('content', PAGE_TITLE);\n            }\n            if (element.tagName === 'title') {\n                element.setInnerContent(PAGE_TITLE);\n            }\n        }\n        if (PAGE_DESCRIPTION !== '') {\n            if (element.getAttribute('name') === 'description'\n                || element.getAttribute('property') === 'og:description'\n                || element.getAttribute('name') === 'twitter:description') {\n                element.setAttribute('content', PAGE_DESCRIPTION);\n            }\n        }\n        if (element.getAttribute('property') === 'og:url'\n            || element.getAttribute('name') === 'twitter:url') {\n            element.setAttribute('content', MY_DOMAIN);\n        }\n        if (element.getAttribute('name') === 'apple-itunes-app') {\n            element.remove();\n        }\n    }\n}\n\nclass HeadRewriter {\n    element(element) {\n        if (GOOGLE_FONT !== '') {\n            element.append(`&lt;link href=\"https://fonts.googleapis.com/css?family=${GOOGLE_FONT.replace(' ', '+')}:Regular,Bold,Italic&amp;display=swap\" rel=\"stylesheet\"&gt;\n        &lt;style&gt;* { font-family: \"${GOOGLE_FONT}\" !important; }&lt;/style&gt;`, {\n                html: true\n            });\n        }\n        element.append(`&lt;style&gt;\n      div.notion-topbar &gt; div &gt; div:nth-child(3) { display: none !important; }\n      div.notion-topbar &gt; div &gt; div:nth-child(4) { display: none !important; }\n      div.notion-topbar &gt; div &gt; div:nth-child(5) { display: none !important; }\n      div.notion-topbar &gt; div &gt; div:nth-child(6) { display: none !important; }\n      div.notion-topbar-mobile &gt; div:nth-child(3) { display: none !important; }\n      div.notion-topbar-mobile &gt; div:nth-child(4) { display: none !important; }\n      div.notion-topbar &gt; div &gt; div:nth-child(1n).toggle-mode { display: block !important; }\n      div.notion-topbar-mobile &gt; div:nth-child(1n).toggle-mode { display: block !important; }\n      &lt;/style&gt;`, {\n            html: true\n        })\n    }\n}\n\nclass BodyRewriter {\n    constructor(SLUG_TO_PAGE) {\n        this.SLUG_TO_PAGE = SLUG_TO_PAGE;\n    }\n\n    element(element) {\n        element.append(`&lt;div style=\"display:none\"&gt;Powered by &lt;a href=\"http://fruitionsite.com\"&gt;Fruition&lt;/a&gt;&lt;/div&gt;\n      &lt;script&gt;\n      window.CONFIG.domainBaseUrl = 'https://${MY_DOMAIN}';\n      const SLUG_TO_PAGE = ${JSON.stringify(this.SLUG_TO_PAGE)};\n      const PAGE_TO_SLUG = {};\n      const slugs = [];\n      const pages = [];\n      const el = document.createElement('div');\n      let redirected = false;\n      Object.keys(SLUG_TO_PAGE).forEach(slug =&gt; {\n        const page = SLUG_TO_PAGE[slug];\n        slugs.push(slug);\n        pages.push(page);\n        PAGE_TO_SLUG[page] = slug;\n      });\n      function getPage() {\n        return location.pathname.slice(-32);\n      }\n      function getSlug() {\n        return location.pathname.slice(1);\n      }\n      function updateSlug() {\n        const slug = PAGE_TO_SLUG[getPage()];\n        if (slug != null) {\n          history.replaceState(history.state, '', '/' + slug);\n        }\n      }\n      function onDark() {\n        el.innerHTML = '&lt;div title=\"Change to Light Mode\" style=\"margin-left: auto; margin-right: 14px; min-width: 0px;\"&gt;&lt;div role=\"button\" tabindex=\"0\" style=\"user-select: none; transition: background 120ms ease-in 0s; cursor: pointer; border-radius: 44px;\"&gt;&lt;div style=\"display: flex; flex-shrink: 0; height: 14px; width: 26px; border-radius: 44px; padding: 2px; box-sizing: content-box; background: rgb(46, 170, 220); transition: background 200ms ease 0s, box-shadow 200ms ease 0s;\"&gt;&lt;div style=\"width: 14px; height: 14px; border-radius: 44px; background: white; transition: transform 200ms ease-out 0s, background 200ms ease-out 0s; transform: translateX(12px) translateY(0px);\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;';\n        document.body.classList.add('dark');\n        __console.environment.ThemeStore.setState({ mode: 'dark' });\n      };\n      function onLight() {\n        el.innerHTML = '&lt;div title=\"Change to Dark Mode\" style=\"margin-left: auto; margin-right: 14px; min-width: 0px;\"&gt;&lt;div role=\"button\" tabindex=\"0\" style=\"user-select: none; transition: background 120ms ease-in 0s; cursor: pointer; border-radius: 44px;\"&gt;&lt;div style=\"display: flex; flex-shrink: 0; height: 14px; width: 26px; border-radius: 44px; padding: 2px; box-sizing: content-box; background: rgba(135, 131, 120, 0.3); transition: background 200ms ease 0s, box-shadow 200ms ease 0s;\"&gt;&lt;div style=\"width: 14px; height: 14px; border-radius: 44px; background: white; transition: transform 200ms ease-out 0s, background 200ms ease-out 0s; transform: translateX(0px) translateY(0px);\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;';\n        document.body.classList.remove('dark');\n        __console.environment.ThemeStore.setState({ mode: 'light' });\n      }\n      function toggle() {\n        if (document.body.classList.contains('dark')) {\n          onLight();\n        } else {\n          onDark();\n        }\n      }\n      function addDarkModeButton(device) {\n        const nav = device === 'web' ? document.querySelector('.notion-topbar').firstChild : document.querySelector('.notion-topbar-mobile');\n        el.className = 'toggle-mode';\n        el.addEventListener('click', toggle);\n        nav.appendChild(el);\n        onLight();\n      }\n      const observer = new MutationObserver(function() {\n        if (redirected) return;\n        const nav = document.querySelector('.notion-topbar');\n        const mobileNav = document.querySelector('.notion-topbar-mobile');\n        if (nav &amp;&amp; nav.firstChild &amp;&amp; nav.firstChild.firstChild\n          || mobileNav &amp;&amp; mobileNav.firstChild) {\n          redirected = true;\n          updateSlug();\n          addDarkModeButton(nav ? 'web' : 'mobile');\n          const onpopstate = window.onpopstate;\n          window.onpopstate = function() {\n            if (slugs.includes(getSlug())) {\n              const page = SLUG_TO_PAGE[getSlug()];\n              if (page) {\n                history.replaceState(history.state, 'bypass', '/' + page);\n              }\n            }\n            onpopstate.apply(this, [].slice.call(arguments));\n            updateSlug();\n          };\n        }\n      });\n      observer.observe(document.querySelector('#notion-app'), {\n        childList: true,\n        subtree: true,\n      });\n      const replaceState = window.history.replaceState;\n      window.history.replaceState = function(state) {\n        if (arguments[1] !== 'bypass' &amp;&amp; slugs.includes(getSlug())) return;\n        return replaceState.apply(window.history, arguments);\n      };\n      const pushState = window.history.pushState;\n      window.history.pushState = function(state) {\n        const dest = new URL(location.protocol + location.host + arguments[2]);\n        const id = dest.pathname.slice(-32);\n        if (pages.includes(id)) {\n          arguments[2] = '/' + PAGE_TO_SLUG[id];\n        }\n        return pushState.apply(window.history, arguments);\n      };\n      const open = window.XMLHttpRequest.prototype.open;\n      window.XMLHttpRequest.prototype.open = function() {\n        arguments[1] = arguments[1].replace('${MY_DOMAIN}', 'www.notion.so');\n        return open.apply(this, [].slice.call(arguments));\n      };\n    &lt;/script&gt;${CUSTOM_SCRIPT}`, {\n            html: true\n        });\n    }\n}\n\nasync function appendJavascript(res, SLUG_TO_PAGE) {\n    return new HTMLRewriter()\n        .on('title', new MetaRewriter())\n        .on('meta', new MetaRewriter())\n        .on('head', new HeadRewriter())\n        .on('body', new BodyRewriter(SLUG_TO_PAGE))\n        .transform(res);\n}\n</code></pre>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/8%EF%B8%8F%E2%83%A3%20Notion/A/#2","title":"2. \u6dfb\u52a0\u8def\u7531","text":"<p>\u8fdb\u5165\u57df\u540d\u8bbe\u7f6e\u2014\u2014Workers\u2014\u2014HTTP\u8def\u7531\u2014\u2014\u6dfb\u52a0\u8def\u7531\uff1a</p> <p>\u8def\u7531\uff1anotion.mastermao.cn/*\uff08\u4e5f\u53ef\u4ee5\u53bb\u6389notion\uff0c\u76f4\u63a5\u4f7f\u7528\u9876\u7ea7\u57df\u540d\uff09 \u670d\u52a1\uff1anotion\uff08\u521a\u5efa\u7acb\u7684\u670d\u52a1\uff09</p>"},{"location":"%F0%9F%8E%88%20%E5%89%8D%E7%AB%AF/8%EF%B8%8F%E2%83%A3%20Notion/A/#3-dns","title":"3. \u914d\u7f6eDNS","text":"<p>\u57df\u540d\u8bbe\u7f6e\u2014\u2014DNS\u2014\u2014\u6dfb\u52a0\u8bb0\u5f55</p> <p>\u7c7b\u578b\uff1aCNAME \u540d\u79f0\uff1anotion \u5185\u5bb9\uff1amastermao.notion.site\uff08\u5728notion\u4e2d\u81ea\u5b9a\u4e49\u7684\u57df\u540d\uff09</p>"},{"location":"%F0%9F%8F%85%20%E6%88%91%E7%9A%84%E8%84%9A%E6%9C%AC/","title":"\ud83c\udfc5 \u6211\u7684\u811a\u672c","text":"<ul> <li> <p>koko-learn</p> <p> Getting started</p> </li> <li> <p>koko-film</p> <p> Getting started</p> </li> <li> <p>\u56fe\u7247\u538b\u7f29</p> <p> Getting started</p> </li> <li> <p>\u56fe\u7247\u6c34\u5370</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8F%85%20%E6%88%91%E7%9A%84%E8%84%9A%E6%9C%AC/1%EF%B8%8F%E2%83%A3%20koko-learn/","title":"\ud83c\udfc5 \u6211\u7684\u811a\u672c/1\ufe0f\u20e3 koko-learn","text":""},{"location":"%F0%9F%8F%85%20%E6%88%91%E7%9A%84%E8%84%9A%E6%9C%AC/2%EF%B8%8F%E2%83%A3%20koko-film/","title":"\ud83c\udfc5 \u6211\u7684\u811a\u672c/2\ufe0f\u20e3 koko-film","text":""},{"location":"%F0%9F%8F%85%20%E6%88%91%E7%9A%84%E8%84%9A%E6%9C%AC/2%EF%B8%8F%E2%83%A3%EF%B8%8F%20%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9/","title":"\ud83c\udfc5 \u6211\u7684\u811a\u672c/2\ufe0f\u20e3\ufe0f \u56fe\u7247\u538b\u7f29","text":"<ul> <li> <p>\u56fe\u7247\u538b\u7f29</p> <p> Getting started</p> </li> <li> <p>\u56fe\u7247\u538b\u7f29(tinypng)</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8F%85%20%E6%88%91%E7%9A%84%E8%84%9A%E6%9C%AC/2%EF%B8%8F%E2%83%A3%EF%B8%8F%20%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9/A/","title":"\ud83c\udf83\ufe0f \u56fe\u7247\u538b\u7f29","text":"<pre><code># -*- coding: utf-8 -*-\n\"\"\"\n====================================\n@File Name \uff1acompress.py\n@Time \uff1a 2022/10/3 21:54\n@Program IDE \uff1aPyCharm\n@Create by Author \uff1a \u4e00\u4e00\u98ce\u548c\u6a58\n@Motto \uff1a'The trick, William Potter, is not minding that it hurts.'\n@About : \u5c06\u56fe\u7247\u538b\u7f29\u4e3awebp\u683c\u5f0f\n====================================\n\"\"\"\nimport glob\nimport os\nimport threading\n\nimport pandas as pd\nimport tqdm\nfrom PIL import Image\nfrom pillow_heif import register_heif_opener\n\nregister_heif_opener()\n\nAIM_WIDTH = 2560\nAIM_HEIGHT = 1280\nQUALITY_INIT = 100\nCOMPRESS_RATE = []\nFORMAT = 'webp'\nAIM_SIZE = 500\n\n\ndef create_image(file_path, save_path):\n    filename = os.path.split(file_path)[-1].split('.')[0]\n    old_size = os.path.getsize(file_path)\n    new_size = old_size\n    quality = QUALITY_INIT\n    img = Image.open(file_path)\n    w = img.size[0]\n    h = img.size[1]\n\n    height = int(AIM_WIDTH * h / w)\n    img = img.resize((AIM_WIDTH, height))\n    while new_size &gt; AIM_SIZE * 1024:\n        quality -= 5\n        img.save(f\"{save_path}/{filename}.{FORMAT}\", f\"{FORMAT}\", quality=quality)\n        new_size = os.path.getsize(f\"{save_path}/{filename}.{FORMAT}\")\n    COMPRESS_RATE.append([filename, old_size / 1024, new_size / 1024, new_size / old_size])\n\n\ndef start(root_path, save_path):\n    t_file_list = tqdm.tqdm(glob.glob(root_path + '/*.[jp][pn]g'))\n    for infile in t_file_list:\n        t = threading.Thread(target=create_image, args=(infile, save_path,))\n        t.start()\n        t.join()\n\n    t_file_list = tqdm.tqdm(glob.glob(root_path + '/*.HEIC'))\n    for infile in t_file_list:\n        t = threading.Thread(target=create_image, args=(infile, save_path,))\n        t.start()\n        t.join()\n\n\nif __name__ == \"__main__\":\n    init_path = './ImgInit'\n    webp_path = './ImgWebp'\n    if not os.path.exists(webp_path):\n        os.makedirs(webp_path)\n    start(init_path, webp_path)\n    print('\u8f6c\u6362\u5b8c\u6bd5\uff01')\n    rate = pd.DataFrame(COMPRESS_RATE)\n    rate.columns = ['\u6587\u4ef6\u540d', '\u539f\u59cb\u5927\u5c0f/kb', '\u538b\u7f29\u5927\u5c0f/kb', '\u538b\u7f29\u6bd4']\n    print(rate)\n    print(f'\u603b\u538b\u7f29\u6bd4\uff1a{rate[\"\u538b\u7f29\u6bd4\"].mean()}')\n</code></pre>"},{"location":"%F0%9F%8F%85%20%E6%88%91%E7%9A%84%E8%84%9A%E6%9C%AC/2%EF%B8%8F%E2%83%A3%EF%B8%8F%20%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9/B/","title":"\ud83c\udf83\ufe0f \u56fe\u7247\u538b\u7f29(tinypng)","text":"<p>\u4f7f\u7528<code>tinypng</code>\u538b\u7f29\u56fe\u7247\uff0c\u9700\u8981\u6ce8\u518c\u5e76\u66ff\u6362\u81ea\u5df1\u7684API Key</p> <pre><code># -*- coding: utf-8 -*-\n\"\"\"\n====================================\n@File Name: tinypng1.py\n@Time: 2023/7/29 1:42\n@Program IDE\uff1aPyCharm\n@Create by Author: \u4e00\u4e00\u98ce\u548c\u6a58\n@Motto: \"The trick, William Potter, is not minding that it hurts.\"\n@Description:\n- \n====================================\n\"\"\"\nimport os\nimport os.path\n\nimport click\nimport tinify\n\ntinify.key = \"xxxxx\"  # API KEY\nversion = \"1.0.1\"\n\n\ndef compress_core(in_file, out_file, img_width):\n    source = tinify.from_file(in_file)\n    if img_width != -1:\n        resized = source.resize(method=\"scale\", width=img_width)\n        resized.to_file(out_file)\n    else:\n        source.to_file(out_file)\n\n\n# \u538b\u7f29\u4e00\u4e2a\u6587\u4ef6\u5939\u4e0b\u7684\u56fe\u7247\ndef compress_path(path, width):\n    print(\"compress_path-------------------------------------\")\n    if not os.path.isdir(path):\n        print(\"\u8fd9\u4e0d\u662f\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u8bf7\u8f93\u5165\u6587\u4ef6\u5939\u7684\u6b63\u786e\u8def\u5f84!\")\n        return\n    else:\n        from_file_path = path\n        to_file_path = path + \"/tiny\"\n        print(\"fromFilePath=%s\" % from_file_path)\n        print(\"toFilePath=%s\" % to_file_path)\n\n        for root, dirs, files in os.walk(from_file_path):\n            print(\"root = %s\" % root)\n            print(\"dirs = %s\" % dirs)\n            print(\"files = %s\" % files)\n            for name in files:\n                filename, file_suffix = os.path.splitext(name)\n                if file_suffix == '.png' or file_suffix == '.jpg' or file_suffix == '.jpeg':\n                    to_full_path = to_file_path + root[len(from_file_path):]\n                    to_full_name = to_full_path + '/' + name\n                    if os.path.isdir(to_full_path):\n                        pass\n                    else:\n                        os.mkdir(to_full_path)\n                    compress_core(root + '/' + name, to_full_name, width)\n            break  # \u4ec5\u904d\u5386\u5f53\u524d\u76ee\u5f55\n\n\ndef compress_file(input_file, width):\n    print(\"compress_file-------------------------------------\")\n    if not os.path.isfile(input_file):\n        print(\"\u8fd9\u4e0d\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u8bf7\u8f93\u5165\u6587\u4ef6\u7684\u6b63\u786e\u8def\u5f84!\")\n        return\n    print(\"file = %s\" % input_file)\n    dirname = os.path.dirname(input_file)\n    basename = os.path.basename(input_file)\n    filename, file_suffix = os.path.splitext(basename)\n    if file_suffix == '.png' or file_suffix == '.jpg' or file_suffix == '.jpeg':\n        compress_core(input_file, dirname + \"/tiny_\" + basename, width)\n    else:\n        print(\"\u4e0d\u652f\u6301\u8be5\u6587\u4ef6\u7c7b\u578b!\")\n\n\n@click.command()\n@click.option('-f', \"--file\", type=str, default=None, help=\"\u5355\u4e2a\u6587\u4ef6\u538b\u7f29\")\n@click.option('-d', \"--dir\", type=str, default=None, help=\"\u88ab\u538b\u7f29\u7684\u6587\u4ef6\u5939\")\n@click.option('-w', \"--width\", type=int, default=-1, help=\"\u56fe\u7247\u5bbd\u5ea6\uff0c\u9ed8\u8ba4\u4e0d\u53d8\")\ndef run(file, _dir, width):\n    print(\"GcsSloop TinyPng V%s\" % version)\n    if file is not None:\n        compress_file(file, width)\n        pass\n    elif _dir is not None:\n        compress_path(_dir, width)\n        pass\n    else:\n        compress_path(os.getcwd(), width)\n    print(\"\u7ed3\u675f!\")\n\n\nif __name__ == \"__main__\":\n    run()\n</code></pre>"},{"location":"%F0%9F%8F%85%20%E6%88%91%E7%9A%84%E8%84%9A%E6%9C%AC/3%EF%B8%8F%E2%83%A3%EF%B8%8F%20%E5%9B%BE%E7%89%87%E6%B0%B4%E5%8D%B0/","title":"\ud83c\udfc5 \u6211\u7684\u811a\u672c/3\ufe0f\u20e3\ufe0f \u56fe\u7247\u6c34\u5370","text":"<ul> <li> <p>Python\u6dfb\u52a0\u56fe\u7247\u6c34\u5370</p> <p> Getting started</p> </li> <li> <p>Gradio\u6c34\u5370\u754c\u9762</p> <p> Getting started</p> </li> <li> <p>CSS\u5b9e\u73b0\u56fe\u7247\u6c34\u5370</p> <p> Getting started</p> </li> </ul>"},{"location":"%F0%9F%8F%85%20%E6%88%91%E7%9A%84%E8%84%9A%E6%9C%AC/3%EF%B8%8F%E2%83%A3%EF%B8%8F%20%E5%9B%BE%E7%89%87%E6%B0%B4%E5%8D%B0/A/","title":"\ud83e\udda9 Python\u6dfb\u52a0\u56fe\u7247\u6c34\u5370","text":"<p>\u5982\u56fe\u6240\u793a</p> <p></p>"},{"location":"%F0%9F%8F%85%20%E6%88%91%E7%9A%84%E8%84%9A%E6%9C%AC/3%EF%B8%8F%E2%83%A3%EF%B8%8F%20%E5%9B%BE%E7%89%87%E6%B0%B4%E5%8D%B0/A/#_1","title":"\u58f9\u4e28\u4efb\u52a1\u5206\u6790","text":"<p>\u6c34\u5370\u5185\u5bb9\u5305\u62ec\uff1a</p> <ul> <li>\u539f\u59cb\u56fe\u50cf</li> <li>\u5e95\u90e8\u5de6\u4fa7\u76f8\u673a\u578b\u53f7</li> <li>\u5e95\u90e8\u53f3\u4fa7\u76f8\u673a\u54c1\u724cLogo\u3001\u95f4\u9694\u7ad6\u7ebf\u3001\u7126\u8ddd\u3001\u5149\u5708\u3001\u5feb\u95e8\u901f\u5ea6\u3001\u611f\u5149\u5ea6\u3001\u955c\u5934\u4fe1\u606f</li> </ul> <p>\u6dfb\u52a0\u6c34\u5370\u7684\u601d\u8def\u4e3a\uff1a</p> <ol> <li>\u8bfb\u53d6\u539f\u59cb\u56fe\u50cfEXIF\u4fe1\u606f</li> <li>\u539f\u59cb\u56fe\u50cf\u57fa\u7840\u4e0a\u6dfb\u52a0\u767d\u8fb9</li> <li>\u5728\u767d\u8fb9\u4e0a\u6dfb\u52a0\u56fe\u50cf\u4fe1\u606f\u53caLogo</li> </ol>"},{"location":"%F0%9F%8F%85%20%E6%88%91%E7%9A%84%E8%84%9A%E6%9C%AC/3%EF%B8%8F%E2%83%A3%EF%B8%8F%20%E5%9B%BE%E7%89%87%E6%B0%B4%E5%8D%B0/A/#_2","title":"\u8d30\u4e28\u7f16\u7a0b\u73af\u5883\u53ca\u6269\u5c55\u5e93","text":""},{"location":"%F0%9F%8F%85%20%E6%88%91%E7%9A%84%E8%84%9A%E6%9C%AC/3%EF%B8%8F%E2%83%A3%EF%B8%8F%20%E5%9B%BE%E7%89%87%E6%B0%B4%E5%8D%B0/A/#1-exif","title":"1. \u8bfb\u53d6\u56fe\u50cfEXIF\u4fe1\u606f","text":"<p>\u4f7f\u7528<code>exifread</code>\u5e93\uff1a</p> <pre><code>pip install exifread\n</code></pre> <p>\u8bfb\u53d6\u64cd\u4f5c\uff1a</p> <pre><code>f = open(path, 'rb')\ntags = exifread.process_file(f)\n</code></pre> <p><code>tags</code>\u5b57\u5178\u53d8\u91cf\u4e2d\u5305\u542b\u56fe\u50cf\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u672c\u6587\u4f7f\u7528\u5230\u7684\u5173\u952e\u4fe1\u606f\u5305\u62ec\uff1a</p> <pre><code>\"\"\"\n\u76f8\u673a\u5382\u5546\uff1atags['Image Make']\n\u76f8\u673a\u578b\u53f7\uff1atags['Image Model']\n\u955c\u5934\u578b\u53f7\uff1atags['EXIF LensModel']\n\u62cd\u6444\u65f6\u95f4\uff1atags['Image DateTime']\n\u4f5c\u8005\uff1atags['Image Artist']\n\n\u7b49\u6548\u7126\u8ddd\uff1atags['EXIF FocalLengthIn35mmFilm']\n\u66dd\u5149\u65f6\u95f4\uff1atags['EXIF ExposureTime']\n\u5149\u5708\u5927\u5c0f\uff1atags['EXIF FNumber']\nISO\uff1atags['EXIF ISOSpeedRatings']\n\"\"\"\n</code></pre>"},{"location":"%F0%9F%8F%85%20%E6%88%91%E7%9A%84%E8%84%9A%E6%9C%AC/3%EF%B8%8F%E2%83%A3%EF%B8%8F%20%E5%9B%BE%E7%89%87%E6%B0%B4%E5%8D%B0/A/#2","title":"2. \u56fe\u50cf\u64cd\u4f5c","text":"<p>\u4f7f\u7528<code>pillow</code>\u5e93\uff1a</p> <pre><code>pip install pillow\n</code></pre> <p>\u4e3a\u56fe\u50cf\u5e95\u90e8\u6dfb\u52a0\u767d\u8fb9\uff1a</p> <pre><code>h += width\nimg_new = Image.new('RGBA', (w, h), color)\nimg_new.paste(img, (0, 0, w, h - width))\n</code></pre> <p>\u4e3a\u56fe\u50cf\u6dfb\u52a0\u6587\u5b57\uff1a</p> <pre><code>draw = ImageDraw.Draw(image_border)\nfont = ImageFont.FreeTypeFont(font=self.font, size=80)\ndraw.text(xy=(100, height + 50), text=str(tags['Image Model']), fill=(0, 0, 0), font=font)\n</code></pre> <p>\u4e3a\u56fe\u50cf\u6dfb\u52a0\u7ad6\u7ebf\uff1a</p> <pre><code>draw.line([(int(self.width * 0.5 + 430), int(height + 55)), (int(self.width * 0.5 + 430), int(height + 140))], width=3, fill='black')\n</code></pre> <p>\u56fe\u50cf\u8f6c\u6362\u4e3awebp\u683c\u5f0f\uff1a</p> <pre><code>image_border.save(file_path, \"WEBP\")\n</code></pre>"},{"location":"%F0%9F%8F%85%20%E6%88%91%E7%9A%84%E8%84%9A%E6%9C%AC/3%EF%B8%8F%E2%83%A3%EF%B8%8F%20%E5%9B%BE%E7%89%87%E6%B0%B4%E5%8D%B0/A/#3","title":"3. \u663e\u793a\u8fdb\u5ea6\u6761","text":"<p>\u4f7f\u7528<code>tqdm</code>\u5e93\uff1a</p> <pre><code>pip install tqdm\n</code></pre> <p>\u663e\u793a\u8fdb\u5ea6\u6761\u548c\u4fe1\u606f</p> <pre><code>all_image_path = tqdm.tqdm(glob.glob(f\"{self.init_path}/*.[jp][pn]g\"))\nfor file_path in all_image_path:\n    all_image_path.set_description(f'\u6b63\u5728\u8f6c\u6362{os.path.split(file_path)[-1]} \u7ebf\u7a0b\u6570{num_threads}')\n</code></pre>"},{"location":"%F0%9F%8F%85%20%E6%88%91%E7%9A%84%E8%84%9A%E6%9C%AC/3%EF%B8%8F%E2%83%A3%EF%B8%8F%20%E5%9B%BE%E7%89%87%E6%B0%B4%E5%8D%B0/A/#4","title":"4. \u591a\u7ebf\u7a0b\u5904\u7406","text":"<p>\u4f7f\u7528\u5185\u7f6e<code>threading</code>\u5e93\uff1a</p> <p>\u65b0\u5efa\u7ebf\u7a0b\u5e76\u653e\u5165\uff1a</p> <pre><code>all_image_path = tqdm.tqdm(glob.glob(f\"{self.init_path}/*.[jp][pn]g\"))\nthreads = []\nfor file_path in all_image_path:\n    thread_name = os.path.split(file_path)[-1]\n    t = threading.Thread(target=self.generate_image, args=(file_path,), name=thread_name)\n    threads.append(t)\n    all_image_path.set_description(f'\u6dfb\u52a0\u8fdb\u7a0b{thread_name}')\n    t.start()\nprint(f'\u5171\u6dfb\u52a0{threading.active_count()}\u4e2a\u7ebf\u7a0b')\n</code></pre> <p>\u7ebf\u7a0b\u540c\u6b65\uff1a</p> <pre><code>t_threads = tqdm.tqdm(threads)\nfor thread in t_threads:\n    thread.join()\n    num_threads = self.pool_sema.__dict__['_value']\n    t_threads.set_description(f'\u6b63\u5728\u8f6c\u6362{thread.name} \u7ebf\u7a0b\u6570\uff1a{8 - num_threads}')\n</code></pre> <p>\u9650\u5236\u540c\u65f6\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570\uff1a</p> <pre><code>self.max_threads_num = 8\nself.pool_sema = threading.BoundedSemaphore(value=self.max_threads_num)\n...\nself.pool_sema.acquire()\n...\nself.pool_sema.release()\n</code></pre> <p>\u5176\u4e2d\uff0c\u9650\u5236\u7ebf\u7a0b\u6570\u65f6\uff0c\u663e\u793a\u5269\u4f59\u53ef\u7528\u7ebf\u7a0b\u6570\uff08\u672a\u8003\u8bc1\uff09\uff1a</p> <pre><code>num_threads = self.pool_sema.__dict__['_value']\n</code></pre>"},{"location":"%F0%9F%8F%85%20%E6%88%91%E7%9A%84%E8%84%9A%E6%9C%AC/3%EF%B8%8F%E2%83%A3%EF%B8%8F%20%E5%9B%BE%E7%89%87%E6%B0%B4%E5%8D%B0/A/#_3","title":"\u53c1\u4e28\u6574\u4f53\u7a0b\u5e8f","text":"<pre><code># -*- coding: utf-8 -*-\n\"\"\"\n====================================\n@File Name \uff1aWaterMarkClass.py\n@Time \uff1a 2022/7/24 15:32\n@Program IDE \uff1aPyCharm\n@Create by Author \uff1a \u4e00\u4e00\u98ce\u548c\u6a58\n@Motto\uff1a\"The trick, William Potter, is not minding that it hurts.\"\n====================================\n\"\"\"\nimport glob\nimport os\nimport threading\n\nimport exifread\nimport tqdm\nfrom PIL import Image, ImageDraw, ImageFont\n\n\nclass WaterMarkClass:\n    def __init__(self, max_threads_num=8):\n        self.init_path = 'ImgInit/'\n        self.webp_path = 'ImgWebp'\n        self.border_width = 200\n        self.width = 2160\n        self.font = 'C:/Users/MasterMao/AppData/Local/Microsoft/Windows/Fonts/Lato Italic.ttf'\n        self.logo = './Logo/logo.png'\n        self.pool_sema = threading.BoundedSemaphore(value=max_threads_num)\n\n    def check(self):\n        if not os.path.exists(self.webp_path):\n            os.makedirs(self.webp_path)\n\n        if not os.path.exists(self.font):\n            print(f'{os.path.split(self.font)[-1]}\u5b57\u4f53\u4e0d\u5b58\u5728\uff01')\n            return 0\n        return 1\n\n    def run(self):\n        if not self.check():\n            return 0\n        all_image_path = tqdm.tqdm(glob.glob(f\"{self.init_path}/*.[jp][pn]g\"))\n        threads = []\n        for file_path in all_image_path:\n            thread_name = os.path.split(file_path)[-1]\n            t = threading.Thread(target=self.generate_image, args=(file_path,), name=thread_name)\n            threads.append(t)\n            all_image_path.set_description(f'\u6dfb\u52a0\u8fdb\u7a0b{thread_name}')\n            t.start()\n        print(f'\u5171\u6dfb\u52a0{threading.active_count()}\u4e2a\u7ebf\u7a0b')\n\n        t_threads = tqdm.tqdm(threads)\n        for thread in t_threads:\n            thread.join()\n            num_threads = self.pool_sema.__dict__['_value']\n            t_threads.set_description(f'\u6b63\u5728\u8f6c\u6362{thread.name} \u7ebf\u7a0b\u6570\uff1a{8 - num_threads}')\n\n    @staticmethod\n    def get_exif(path):\n        \"\"\"\u83b7\u53d6\u56fe\u7247\u7684EXIF\u4fe1\u606f\"\"\"\n        \"\"\"\n        \u76f8\u673a\u5382\u5546\uff1atags['Image Make']\n        \u76f8\u673a\u578b\u53f7\uff1atags['Image Model']\n        \u955c\u5934\u578b\u53f7\uff1atags['EXIF LensModel']\n        \u62cd\u6444\u65f6\u95f4\uff1atags['Image DateTime']\n        \u4f5c\u8005\uff1atags['Image Artist']\n\n        \u7b49\u6548\u7126\u8ddd\uff1atags['EXIF FocalLengthIn35mmFilm']\n        \u66dd\u5149\u65f6\u95f4\uff1atags['EXIF ExposureTime']\n        \u5149\u5708\u5927\u5c0f\uff1atags['EXIF FNumber']\n        ISO\uff1atags['EXIF ISOSpeedRatings']\n        \"\"\"\n        f = open(path, 'rb')\n        tags = exifread.process_file(f)\n        f.close()\n        return tags\n\n    @staticmethod\n    def generate_border(img, loc='b', width=100, color=(255, 255, 255)):\n        w = img.size[0]\n        h = img.size[1]\n\n        if loc in ['a', 'all']:\n            w += 2 * width\n            h += 2 * width\n            img_new = Image.new('RGB', (w, h), color)\n            img_new.paste(img, (width, width))\n        elif loc in ['t', 'top']:\n            h += width\n            img_new = Image.new('RGB', (w, h), color)\n            img_new.paste(img, (0, width, w, h))\n        elif loc in ['r', 'right']:\n            w += width\n            img_new = Image.new('RGB', (w, h), color)\n            img_new.paste(img, (0, 0, w - width, h))\n        elif loc in ['b', 'bottom']:\n            h += width\n            img_new = Image.new('RGBA', (w, h), color)\n            img_new.paste(img, (0, 0, w, h - width))\n        elif loc in ['l', 'left']:\n            w += width\n            img_new = Image.new('RGB', (w, h), color)\n            img_new.paste(img, (width, 0, w, h))\n        else:\n            img_new = img\n        return img_new\n\n    def generate_image(self, file_path):\n        self.pool_sema.acquire()\n        # \u6253\u5f00\u56fe\u7247\n        img = Image.open(file_path).convert('RGBA')\n        # \u83b7\u53d6\u56fe\u7247\u4fe1\u606f\n        tags = self.get_exif(file_path)\n        # \u8c03\u6574\u5927\u5c0f\n        height = int(self.width * img.size[1] / img.size[0])\n        img = img.resize((self.width, height))\n\n        # \u6dfb\u52a0\u767d\u8fb9\n        image_border = self.generate_border(img, width=self.border_width)\n\n        # \u6dfb\u52a0\u76f8\u673a\u578b\u53f7\u4fe1\u606f\n        draw = ImageDraw.Draw(image_border)\n        font = ImageFont.FreeTypeFont(font=self.font, size=80)\n        draw.text(xy=(100, height + 50), text=str(tags['Image Model']), fill=(0, 0, 0), font=font)\n\n        # \u6dfb\u52a0\u7ad6\u7ebf\n        draw.line([(int(self.width * 0.5 + 430), int(height + 55)), (int(self.width * 0.5 + 430), int(height + 140))],\n                  width=3, fill='black')\n\n        # \u6dfb\u52a0\u56fe\u7247\u4fe1\u606f\n        # \u7b49\u6548\u7126\u8ddd+\u5149\u5708\u6570+\u66dd\u5149\u65f6\u95f4+ISO\n        font = ImageFont.FreeTypeFont(font=self.font, size=45)\n        text = f'{tags[\"EXIF FocalLengthIn35mmFilm\"]}mm  ' \\\n               f'f/{tags[\"EXIF FNumber\"]}  ' \\\n               f'{tags[\"EXIF ExposureTime\"]}  ' \\\n               f'ISO{tags[\"EXIF ISOSpeedRatings\"]}'\n        draw.text(xy=(0.5 * self.width + 450, height + 45), text=text, fill=(0, 0, 0), font=font)\n\n        # \u6dfb\u52a0\u955c\u5934\u4fe1\u606f\n        font = ImageFont.FreeTypeFont(font=self.font, size=35)\n        text = f'{tags[\"EXIF LensMake\"]}  {tags[\"EXIF LensModel\"]}'\n        draw.text(xy=(0.5 * self.width + 450, height + 105), text=text, fill=(0, 0, 0), font=font)\n\n        # \u6dfb\u52a0\u76f8\u673a\u54c1\u724cLogo\n        logo = Image.open(self.logo).convert('RGBA').resize((452, 80))\n        image_border.paste(logo, (int(self.width * 0.5 - 40), int(height + 60)))\n\n        # \u4fdd\u5b58\u65b0\u56fe\u7247\u5e76\u8f6c\u4e3awebp\u683c\u5f0f\n        file_name = os.path.split(file_path)[-1] + '.webp'\n        file_path = os.path.join(self.webp_path, file_name)\n        # image_border = image_border.convert('RGB')\n        image_border.save(file_path, \"WEBP\")\n        self.pool_sema.release()\n\n\nif __name__ == '__main__':\n    my_watermarker = WaterMarkClass()\n    my_watermarker.run()\n</code></pre>"},{"location":"%F0%9F%8F%85%20%E6%88%91%E7%9A%84%E8%84%9A%E6%9C%AC/3%EF%B8%8F%E2%83%A3%EF%B8%8F%20%E5%9B%BE%E7%89%87%E6%B0%B4%E5%8D%B0/A/#_4","title":"\u8086\u4e28\u6837\u5f20","text":""},{"location":"%F0%9F%8F%85%20%E6%88%91%E7%9A%84%E8%84%9A%E6%9C%AC/3%EF%B8%8F%E2%83%A3%EF%B8%8F%20%E5%9B%BE%E7%89%87%E6%B0%B4%E5%8D%B0/B/","title":"\ud83e\udda9 Gradio\u6c34\u5370\u754c\u9762","text":""},{"location":"%F0%9F%8F%85%20%E6%88%91%E7%9A%84%E8%84%9A%E6%9C%AC/3%EF%B8%8F%E2%83%A3%EF%B8%8F%20%E5%9B%BE%E7%89%87%E6%B0%B4%E5%8D%B0/C/","title":"C","text":"<p>title: \ud83e\udda9 CSS\u5b9e\u73b0\u56fe\u7247\u6c34\u5370 comments: true</p>"},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/archive/2023/","title":"2023","text":""},{"location":"blog/archive/2022/","title":"2022","text":""},{"location":"blog/category/rye/","title":"Rye","text":""},{"location":"blog/category/python/","title":"Python","text":""},{"location":"blog/category/python%E8%87%AA%E5%8A%A8%E5%8C%96/","title":"Python\u81ea\u52a8\u5316","text":""},{"location":"blog/category/mkdocs/","title":"MkDocs","text":""},{"location":"blog/category/%E5%8D%9A%E5%AE%A2/","title":"\u535a\u5ba2","text":""},{"location":"blog/category/fujifilm/","title":"FujiFilm","text":""},{"location":"blog/category/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/","title":"\u673a\u5668\u5b66\u4e60","text":""},{"location":"blog/page/2/","title":"\u535a\u5ba2","text":""}]}